<Type Name="HttpClient" FullName="System.Net.Http.HttpClient">
  <TypeSignature Language="C#" Value="public class HttpClient : System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClient extends System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClient&#xA;Inherits HttpMessageInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClient : System::Net::Http::HttpMessageInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageInvoker</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2b6e4-101">Udostępnia klasę podstawową do wysyłania żądań HTTP i odbierania odpowiedzi HTTP z zasobu identyfikowanego przez identyfikator URI.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-101">Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-102"><xref:System.Net.Http.HttpClient> Wystąpienia klasy działa jako sesji do wysyłania żądań HTTP.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-102">The <xref:System.Net.Http.HttpClient> class instance acts as a session to send HTTP requests.</span></span> <span data-ttu-id="2b6e4-103"><xref:System.Net.Http.HttpClient> Wystąpienia jest kolekcją ustawienia stosowane do wszystkich żądań wykonywanych przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-103">An <xref:System.Net.Http.HttpClient> instance is a collection of settings applied to all requests executed by that instance.</span></span> <span data-ttu-id="2b6e4-104">Ponadto każdy <xref:System.Net.Http.HttpClient> wystąpienie korzysta z własnej puli połączeń, izolowanie żądań z żądań wykonywanych przez inne <xref:System.Net.Http.HttpClient> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-104">In addition, every <xref:System.Net.Http.HttpClient> instance uses its own connection pool, isolating its requests from requests executed by other <xref:System.Net.Http.HttpClient> instances.</span></span>  
  
 <span data-ttu-id="2b6e4-105"><xref:System.Net.Http.HttpClient> Działa również jako klasę podstawową dla bardziej konkretnych klientów HTTP.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-105">The <xref:System.Net.Http.HttpClient> also acts as a base class for more specific HTTP clients.</span></span> <span data-ttu-id="2b6e4-106">Przykładem może być FacebookHttpClient, zapewniając dodatkowe metody specyficzne dla usługi sieci web usługi Facebook (metoda GetFriends, na przykład).</span><span class="sxs-lookup"><span data-stu-id="2b6e4-106">An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</span></span> <span data-ttu-id="2b6e4-107">Klasy pochodne nie powinny przesłaniać metody wirtualne dla klasy.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-107">Derived classes should not override the virtual methods on the class.</span></span> <span data-ttu-id="2b6e4-108">Zamiast tego należy użyć przeładowania konstruktora, który akceptuje <xref:System.Net.Http.HttpMessageHandler> do konfigurowania żadnych przed lub po żądania przetwarzania zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-108">Instead, use a constructor overload that accepts <xref:System.Net.Http.HttpMessageHandler> to configure any pre- or post-request processing instead.</span></span>
  
 <span data-ttu-id="2b6e4-109">Domyślnie <xref:System.Net.HttpWebRequest> będzie służyć do wysyłania żądań do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-109">By default, <xref:System.Net.HttpWebRequest> will be used to send requests to the server.</span></span> <span data-ttu-id="2b6e4-110">To zachowanie można modyfikować, określając inny kanał w jednym z przeciążeń konstruktora biorąc <xref:System.Net.Http.HttpMessageHandler> wystąpienia jako parametr.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-110">This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> instance as parameter.</span></span> <span data-ttu-id="2b6e4-111">Jeśli są wymagane, funkcji, takich jak uwierzytelnianie czy buforowanie <xref:System.Net.Http.WebRequestHandler> może być używane do konfigurowania ustawień i będzie można instancji być przekazany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-111">If features like authentication or caching are required, <xref:System.Net.Http.WebRequestHandler> can be used to configure settings and the instance can be passed to the constructor.</span></span> <span data-ttu-id="2b6e4-112">Zwrócony obsługi mogą być przekazywane do jednego z przeciążeń konstruktora biorąc <xref:System.Net.Http.HttpMessageHandler> parametru.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-112">The returned handler can be passed to one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> parameter.</span></span>  
  
 <span data-ttu-id="2b6e4-113">Jeśli aplikacja używa <xref:System.Net.Http.HttpClient> i powiązanych klas w <xref:System.Net.Http> przestrzeni nazw zamierza pobrać dużych ilości danych (50 MB lub więcej), a następnie aplikacja powinna strumienia te pliki do pobrania i nie używać domyślnego buforowania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-113">If an app using <xref:System.Net.Http.HttpClient> and related classes in the  <xref:System.Net.Http> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="2b6e4-114">Jeśli używane jest domyślne buforowanie użycie pamięci klienta otrzyma bardzo duży, może spowodować znacznie zmniejszyć wydajność.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-114">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="2b6e4-115">Wielowątkowość są następujące metody:</span><span class="sxs-lookup"><span data-stu-id="2b6e4-115">The following methods are thread safe:</span></span>  
  
1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  
  
2.  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>  
  
3.  <xref:System.Net.Http.HttpClient.GetAsync%2A>  
  
4.  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  
  
5.  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  
  
6.  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>  
  
7.  <xref:System.Net.Http.HttpClient.PostAsync%2A>  
  
8.  <xref:System.Net.Http.HttpClient.PutAsync%2A>  
  
9. <xref:System.Net.Http.HttpClient.SendAsync%2A>  
  
 <span data-ttu-id="2b6e4-116"><xref:System.Net.Http.HttpClient> ma na celu można utworzyć wystąpienia raz i ponownego użycia w całym cyklu życia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-116"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="2b6e4-117">Utworzenie wystąpienia klasy HttpClient dla każdego żądania wyczerpie liczbę gniazd, które są dostępne pod dużym obciążeniem.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-117">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="2b6e4-118">Spowoduje to socketexception — błędy.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-118">This will result in SocketException errors.</span></span> <span data-ttu-id="2b6e4-119">Poniżej przedstawiono przykład poprawnie za pomocą elementu HttpClient.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-119">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
<span data-ttu-id="2b6e4-120"><xref:System.Net.Http.HttpClient> To ogólny interfejs API, który opakowuje niższego poziomu funkcji dostępnych na każdej platformie, w którym jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-120">The <xref:System.Net.Http.HttpClient> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</span></span>

<span data-ttu-id="2b6e4-121">Na każdej platformie <xref:System.Net.Http.HttpClient> próbuje użyć najlepiej transportu:</span><span class="sxs-lookup"><span data-stu-id="2b6e4-121">On each platform, <xref:System.Net.Http.HttpClient> tries to use the best available transport:</span></span>

| <span data-ttu-id="2b6e4-122">**Host/Runtime**</span><span class="sxs-lookup"><span data-stu-id="2b6e4-122">**Host/Runtime**</span></span>            | <span data-ttu-id="2b6e4-123">**wewnętrznej bazy danych**</span><span class="sxs-lookup"><span data-stu-id="2b6e4-123">**Backend**</span></span>                                                                               |
| --------------------------- | ----------------------------------------------------------------------------------------- |
| <span data-ttu-id="2b6e4-124">Windows/.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2b6e4-124">Windows/.NET Framework</span></span>      | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="2b6e4-125">Windows/Mono</span><span class="sxs-lookup"><span data-stu-id="2b6e4-125">Windows/Mono</span></span>                | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="2b6e4-126">Windows/UWP</span><span class="sxs-lookup"><span data-stu-id="2b6e4-126">Windows/UWP</span></span>                 | <span data-ttu-id="2b6e4-127">Windows native <xref:System.Net.Http.WinHttpHandler> (funkcją HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-127">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="2b6e4-128">Windows/.NET Core</span><span class="sxs-lookup"><span data-stu-id="2b6e4-128">Windows/.NET Core</span></span>           | <span data-ttu-id="2b6e4-129">Windows native <xref:System.Net.Http.WinHttpHandler> (funkcją HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-129">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="2b6e4-130">Android/Xamarin</span><span class="sxs-lookup"><span data-stu-id="2b6e4-130">Android/Xamarin</span></span>             | <span data-ttu-id="2b6e4-131">Wybrany podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-131">Selected at build-time.</span></span> <span data-ttu-id="2b6e4-132">Można albo użyj <xref:System.Net.HttpWebRequest> lub być skonfigurowana do używania natywne dla systemu Android [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-132">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Android's native [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span></span> |
| <span data-ttu-id="2b6e4-133">iOS, systemu tvOS, watchOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="2b6e4-133">iOS, tvOS, watchOS/Xamarin</span></span>  | <span data-ttu-id="2b6e4-134">Wybrany podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-134">Selected at build-time.</span></span> <span data-ttu-id="2b6e4-135">Można albo użyj <xref:System.Net.HttpWebRequest> lub być skonfigurowana do używania firmy Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (funkcją HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-135">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="2b6e4-136">macOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="2b6e4-136">macOS/Xamarin</span></span>               | <span data-ttu-id="2b6e4-137">Wybrany podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-137">Selected at build-time.</span></span> <span data-ttu-id="2b6e4-138">Można albo użyj <xref:System.Net.HttpWebRequest> lub być skonfigurowana do używania firmy Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (funkcją HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-138">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="2b6e4-139">macOS/Mono</span><span class="sxs-lookup"><span data-stu-id="2b6e4-139">macOS/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                                          |
| <span data-ttu-id="2b6e4-140">macOS/.NET Core</span><span class="sxs-lookup"><span data-stu-id="2b6e4-140">macOS/.NET Core</span></span>             | <span data-ttu-id="2b6e4-141">`libcurl`-na podstawie transportu HTTP (HTTP 2.0 funkcją)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-141">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |
| <span data-ttu-id="2b6e4-142">Linux/Mono</span><span class="sxs-lookup"><span data-stu-id="2b6e4-142">Linux/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="2b6e4-143">Linux/.NET Core</span><span class="sxs-lookup"><span data-stu-id="2b6e4-143">Linux/.NET Core</span></span>             | <span data-ttu-id="2b6e4-144">`libcurl`-na podstawie transportu HTTP (HTTP 2.0 funkcją)</span><span class="sxs-lookup"><span data-stu-id="2b6e4-144">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |

<span data-ttu-id="2b6e4-145">Użytkownicy mogą również skonfigurować określonego transportu dla <xref:System.Net.Http.HttpClient> wywołując <xref:System.Net.Http.HttpClient.%23ctor*> konstruktora przyjmującego <xref:System.Net.Http.HttpMessageHandler>.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-145">Users can also configure a specific transport for <xref:System.Net.Http.HttpClient> by invoking the <xref:System.Net.Http.HttpClient.%23ctor*> constructor that takes an <xref:System.Net.Http.HttpMessageHandler>.</span></span>
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClient#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclient/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-146">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-146">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-147"><xref:System.Net.Http.HttpClient> ma na celu można utworzyć wystąpienia raz i ponownego użycia w całym cyklu życia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-147"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="2b6e4-148">Utworzenie wystąpienia klasy HttpClient dla każdego żądania wyczerpie liczbę gniazd, które są dostępne pod dużym obciążeniem.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-148">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="2b6e4-149">Spowoduje to socketexception — błędy.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-149">This will result in SocketException errors.</span></span> <span data-ttu-id="2b6e4-150">Poniżej przedstawiono przykład poprawnie za pomocą elementu HttpClient.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-150">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b6e4-151">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-151">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="2b6e4-152">Stos programu obsługi HTTP używany do wysyłania żądań.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-152">The HTTP handler stack to use for sending requests.</span></span></param>
        <summary><span data-ttu-id="2b6e4-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" /> klasy z określonym programem obsługi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-153">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-154">`handler` zostaną usunięte przez wywołanie metody [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span><span class="sxs-lookup"><span data-stu-id="2b6e4-154">`handler` will be disposed of by calling [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-155"><paramref name="handler" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-155">The <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler, bool disposeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="2b6e4-156"><see cref="T:System.Net.Http.HttpMessageHandler" /> Odpowiedzialna za przetwarzanie komunikatów odpowiedzi HTTP.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-156">The <see cref="T:System.Net.Http.HttpMessageHandler" /> responsible for processing the HTTP response messages.</span></span></param>
        <param name="disposeHandler">
          <span data-ttu-id="2b6e4-157"><see langword="true" /> Jeśli wewnętrznym programem obsługi powinny być usuwane przez [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> Jeśli zamierzasz użyć ponownie wewnętrznym programem obsługi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-157"><see langword="true" /> if the inner handler should be disposed of by [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> if you intend to reuse the inner handler.</span></span></param>
        <summary><span data-ttu-id="2b6e4-158">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" /> klasy z określonym programem obsługi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-158">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-159"><paramref name="handler" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-159">The <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b6e4-160">Pobiera lub ustawia adres podstawowy z zasobów identyfikator URI (Uniform) zasobu internetowego używanego podczas wysyłania żądań.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-160">Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span></span></summary>
        <value><span data-ttu-id="2b6e4-161">Adres podstawowy z zasobów identyfikator URI (Uniform) zasobu internetowego używanego podczas wysyłania żądań.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-161">The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-162">Podczas wysyłania <xref:System.Net.Http.HttpRequestMessage> z względnym identyfikatorem Uri komunikat identyfikator Uri zostanie dodany do <xref:System.Net.Http.HttpClient.BaseAddress%2A> właściwość, aby utworzyć bezwzględnym identyfikatorem Uri.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-162">When sending a <xref:System.Net.Http.HttpRequestMessage> with a relative Uri, the message Uri will be added to the <xref:System.Net.Http.HttpClient.BaseAddress%2A> property to create an absolute Uri.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRequests">
      <MemberSignature Language="C#" Value="public void CancelPendingRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.CancelPendingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingRequests ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingRequests();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b6e4-163">Anuluje wszystkie oczekujące żądania dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-163">Cancel all pending requests on this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-164">Po wywołaniu tej metody <xref:System.Net.Http.HttpClient> wystąpienie może być nadal używane do wykonywania dodatkowych żądań.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-164">After calling this method, the <xref:System.Net.Http.HttpClient> instance can still be used to execute additional requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultRequestHeaders As HttpRequestHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpRequestHeaders ^ DefaultRequestHeaders { System::Net::Http::Headers::HttpRequestHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpRequestHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b6e4-165">Pobiera nagłówki, które mają być wysyłane z każdym żądaniem.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-165">Gets the headers which should be sent with each request.</span></span></summary>
        <value><span data-ttu-id="2b6e4-166">Nagłówki, które mają być wysyłane z każdym żądaniem.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-166">The headers which should be sent with each request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-167">Nagłówki, ustaw dla tej właściwości nie musi ponownie ustawić na komunikaty żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-167">Headers set on this property don't need to be set on request messages again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-168">Wyślij żądanie USUŃ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-168">Send a DELETE request to the specified Uri as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-169">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-169">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-170">Wyślij żądanie USUŃ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-170">Send a DELETE request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-171">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-171">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-172">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-172">This operation will not block.</span></span> <span data-ttu-id="2b6e4-173">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-173">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-174"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-174">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-175">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-175">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-176">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-176">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-177">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-177">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-178">Wyślij żądanie USUŃ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-178">Send a DELETE request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-179">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-179">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-180">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-180">This operation will not block.</span></span> <span data-ttu-id="2b6e4-181">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-181">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-182"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-182">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-183">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-183">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-184">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-184">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-185">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-185">The Uri the request is sent to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-186">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-186">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-187">Wyślij żądanie usunięcia do określonego identyfikatora Uri z tokenem anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-187">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-188">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-188">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-189">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-189">This operation will not block.</span></span> <span data-ttu-id="2b6e4-190">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-190">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-191"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-191">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-192">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-192">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-193">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-193">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-194">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-194">The Uri the request is sent to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-195">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-195">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-196">Wyślij żądanie usunięcia do określonego identyfikatora Uri z tokenem anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-196">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-197">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-197">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-198">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-198">This operation will not block.</span></span> <span data-ttu-id="2b6e4-199">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-199">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-200"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-200">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-201">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-201">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-202">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-202">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2b6e4-203"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> powoduje zwolnienie tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-203"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2b6e4-204">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Http.HttpClient" /> i opcjonalnie usuwa zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-204">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClient" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-205">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-205">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2b6e4-206">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-206">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2b6e4-207"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-207"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2b6e4-208">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Net.Http.HttpClient> odwołania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-208">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClient> references.</span></span> <span data-ttu-id="2b6e4-209">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-209">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="2b6e4-210">Gdy ta metoda jest wywoływana, <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> metoda jest wywoływana, aby przerwać wszystkie oczekujące żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-210">When this method is called, the <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> method is called to abort all pending requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-211">Wyślij żądanie POBIERZ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-211">Send a GET request to the specified Uri as an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-212">Operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-212">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-213">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-213">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-214">Wyślij żądanie POBIERZ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-214">Send a GET request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-215">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-215">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-216">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-216">This operation will not block.</span></span> <span data-ttu-id="2b6e4-217">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-217">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-218"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-218">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-219">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-219">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-220">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-220">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-221">Wyślij żądanie POBIERZ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-221">Send a GET request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-222">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-222">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-223">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-223">This operation will not block.</span></span> <span data-ttu-id="2b6e4-224">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-224">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-225"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-225">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-226">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-226">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-227">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-227">The Uri the request is sent to.</span></span></param>
        <param name="completionOption"><span data-ttu-id="2b6e4-228">Wartość opcji zakończenia aplikacji HTTP, która wskazuje, kiedy operację należy uznać za zakończoną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-228">An HTTP completion option value that indicates when the operation should be considered completed.</span></span></param>
        <summary><span data-ttu-id="2b6e4-229">Wyślij żądanie GET do określonego identyfikatora Uri z opcją zakończenia HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-229">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-230">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-230">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-231">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-231">This operation will not block.</span></span> <span data-ttu-id="2b6e4-232">Zwrócona <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończona, na podstawie `completionOption` parametru po części lub całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-232">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-233"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-233">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-234">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-234">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-235">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-235">The Uri the request is sent to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-236">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-236">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-237">Wyślij żądanie GET do określonego identyfikatora Uri z tokenem anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-237">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-238">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-238">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-239">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-239">This operation will not block.</span></span> <span data-ttu-id="2b6e4-240">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-240">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-241"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-241">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-242">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-242">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-243">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-243">The Uri the request is sent to.</span></span></param>
        <param name="completionOption"><span data-ttu-id="2b6e4-244">Wartość opcji zakończenia aplikacji HTTP, która wskazuje, kiedy operację należy uznać za zakończoną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-244">An HTTP completion option value that indicates when the operation should be considered completed.</span></span></param>
        <summary><span data-ttu-id="2b6e4-245">Wyślij żądanie GET do określonego identyfikatora Uri z opcją zakończenia HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-245">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-246">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-246">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-247">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-247">This operation will not block.</span></span> <span data-ttu-id="2b6e4-248">Zwrócona <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończona, na podstawie `completionOption` parametru po części lub całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-248">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-249"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-249">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-250">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-250">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-251">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-251">The Uri the request is sent to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-252">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-252">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-253">Wyślij żądanie GET do określonego identyfikatora Uri z tokenem anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-253">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-254">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-254">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-255">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-255">This operation will not block.</span></span> <span data-ttu-id="2b6e4-256">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-256">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-257"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-257">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-258">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-258">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-259">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-259">The Uri the request is sent to.</span></span></param>
        <param name="completionOption"><span data-ttu-id="2b6e4-260">Wartość opcji ukończenia HTTP, która wskazuje, po operacji należy traktować jako zakończone.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-260">An HTTP  completion option value that indicates when the operation should be considered completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-261">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-261">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-262">Wyślij żądanie GET do określonego identyfikatora Uri z opcją zakończenia HTTP i token anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-262">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-263">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-263">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-264">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-264">This operation will not block.</span></span> <span data-ttu-id="2b6e4-265">Zwrócona <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończona, na podstawie `completionOption` parametru po części lub całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-265">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-266"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-266">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-267">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-267">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-268">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-268">The Uri the request is sent to.</span></span></param>
        <param name="completionOption"><span data-ttu-id="2b6e4-269">Wartość opcji ukończenia HTTP, która wskazuje, po operacji należy traktować jako zakończone.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-269">An HTTP  completion option value that indicates when the operation should be considered completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-270">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-270">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-271">Wyślij żądanie GET do określonego identyfikatora Uri z opcją zakończenia HTTP i token anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-271">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-272">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-272">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-273">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-273">This operation will not block.</span></span> <span data-ttu-id="2b6e4-274">Zwrócona <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończona, na podstawie `completionOption` parametru po części lub całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-274">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-275"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-275">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-276">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-276">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteArrayAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-277">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako tablicę bajtów w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-277">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-278">Operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-278">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-279">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-279">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-280">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako tablicę bajtów w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-280">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-281">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-281">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-282">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-282">This operation will not block.</span></span> <span data-ttu-id="2b6e4-283">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po jest do odczytu treści całej odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-283">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-284"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-284">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-285">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-285">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-286">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-286">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-287">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako tablicę bajtów w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-287">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-288">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-288">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-289">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-289">This operation will not block.</span></span> <span data-ttu-id="2b6e4-290">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po jest do odczytu treści całej odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-290">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-291"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-291">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-292">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-292">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStreamAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-293">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako strumień w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-293">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-294">Operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-294">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-295">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-295">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-296">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako strumień w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-296">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-297">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-297">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-298">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-298">This operation will not block.</span></span> <span data-ttu-id="2b6e4-299">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po jest do odczytu treści całej odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-299">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="2b6e4-300">Ta metoda nie zapewnia buforowania strumienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-300">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-301"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-301">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-302">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-302">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-303">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-303">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-304">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako strumień w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-304">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-305">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-305">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-306">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-306">This operation will not block.</span></span> <span data-ttu-id="2b6e4-307">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po jest do odczytu treści całej odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-307">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="2b6e4-308">Ta metoda nie zapewnia buforowania strumienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-308">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-309"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-309">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-310">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-310">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStringAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-311">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako ciąg w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-311">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-312">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-312">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-313">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-313">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-314">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako ciąg w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-314">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-315">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-315">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-316">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-316">This operation will not block.</span></span> <span data-ttu-id="2b6e4-317">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po jest do odczytu treści całej odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-317">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-318"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-318">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-319">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-319">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-320">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-320">The Uri the request is sent to.</span></span></param>
        <summary><span data-ttu-id="2b6e4-321">Wyślij żądanie POBIERZ do określonego identyfikatora Uri i zwróć treść odpowiedzi jako ciąg w operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-321">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-322">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-322">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-323">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-323">This operation will not block.</span></span> <span data-ttu-id="2b6e4-324">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po jest do odczytu treści całej odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-324">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-325"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-325">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-326">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-326">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxResponseContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxResponseContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxResponseContentBufferSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b6e4-327">Pobiera lub ustawia maksymalną liczbę bajtów do zbuforowania podczas odczytywania zawartości odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-327">Gets or sets the maximum number of bytes to buffer when reading the response content.</span></span></summary>
        <value><span data-ttu-id="2b6e4-328">Maksymalna liczba bajtów do zbuforowania podczas odczytywania zawartości odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-328">The maximum number of bytes to buffer when reading the response content.</span></span> <span data-ttu-id="2b6e4-329">Wartość domyślna dla tej właściwości to 2 gigabajty.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-329">The default value for this property is 2 gigabytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-330">Aplikację można ustawić <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> właściwości niższą wartość, aby ograniczyć rozmiar odpowiedzi bufora podczas odczytywania odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-330">An app can set the <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property to a lower value to limit the size of the response to buffer when reading the response.</span></span> <span data-ttu-id="2b6e4-331">Jeśli rozmiar zawartości odpowiedzi jest większa niż <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> właściwości, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-331">If the size of the response content is greater than the  <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b6e4-332">Określony rozmiar jest mniejszy niż lub równy zero.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-332">The size specified is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-333">Operacja została już uruchomiona w bieżącym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-333">An operation has already been started on the current instance.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b6e4-334">Bieżące wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-334">The current instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-335">Wyślij żądanie WYŚLIJ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-335">Send a POST request to the specified Uri as an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-336">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-336">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-337">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-337">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-338">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-338">The HTTP request content sent to the server.</span></span></param>
        <summary><span data-ttu-id="2b6e4-339">Wyślij żądanie WYŚLIJ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-339">Send a POST request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-340">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-340">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-341">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-341">This operation will not block.</span></span> <span data-ttu-id="2b6e4-342">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-342">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-343"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-343">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-344">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-344">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-345">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-345">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-346">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-346">The HTTP request content sent to the server.</span></span></param>
        <summary><span data-ttu-id="2b6e4-347">Wyślij żądanie WYŚLIJ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-347">Send a POST request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-348">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-348">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-349">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-349">This operation will not block.</span></span> <span data-ttu-id="2b6e4-350">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-350">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-351"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-351">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-352">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-352">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-353">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-353">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-354">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-354">The HTTP request content sent to the server.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-355">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-355">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-356">Wysłanie żądania POST do tokena anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-356">Send a POST request with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-357">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-357">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-358">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-358">This operation will not block.</span></span> <span data-ttu-id="2b6e4-359">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-359">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-360"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-360">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-361">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-361">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-362">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-362">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-363">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-363">The HTTP request content sent to the server.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-364">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-364">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-365">Wysłanie żądania POST do tokena anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-365">Send a POST request with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-366">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-366">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-367">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-367">This operation will not block.</span></span> <span data-ttu-id="2b6e4-368">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-368">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-369"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-369">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-370">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-370">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PutAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-371">Wyślij żądanie UMIEŚĆ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-371">Send a PUT request to the specified Uri as an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-372">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-372">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-373">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-373">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-374">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-374">The HTTP request content sent to the server.</span></span></param>
        <summary><span data-ttu-id="2b6e4-375">Wyślij żądanie UMIEŚĆ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-375">Send a PUT request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-376">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-376">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-377">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-377">This operation will not block.</span></span> <span data-ttu-id="2b6e4-378">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-378">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-379"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-379">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-380">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-380">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-381">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-381">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-382">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-382">The HTTP request content sent to the server.</span></span></param>
        <summary><span data-ttu-id="2b6e4-383">Wyślij żądanie UMIEŚĆ do określonego identyfikatora Uri jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-383">Send a PUT request to the specified Uri as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-384">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-384">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-385">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-385">This operation will not block.</span></span> <span data-ttu-id="2b6e4-386">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-386">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-387"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-387">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-388">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-388">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-389">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-389">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-390">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-390">The HTTP request content sent to the server.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-391">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-391">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-392">Wyślij żądanie PUT z tokenem anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-392">Send a PUT request with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-393">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-393">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-394">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-394">This operation will not block.</span></span> <span data-ttu-id="2b6e4-395">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-395">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-396"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-396">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-397">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-397">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="2b6e4-398">Wysłano identyfikator Uri żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-398">The Uri the request is sent to.</span></span></param>
        <param name="content"><span data-ttu-id="2b6e4-399">Zawartość żądania HTTP wysyłana do serwera.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-399">The HTTP request content sent to the server.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-400">Token odwołania, używany przez inne obiekty lub wątki do otrzymania powiadomienia o anulowaniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-400">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-401">Wyślij żądanie PUT z tokenem anulowania jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-401">Send a PUT request with a cancellation token as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-402">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-402">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-403">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-403">This operation will not block.</span></span> <span data-ttu-id="2b6e4-404">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi (w tym zawartości) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-404">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-405"><paramref name="requestUri" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-405">The <paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-406">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-406">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b6e4-407">Wyślij żądanie HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-407">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-408">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-408">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="2b6e4-409">Komunikat żądania HTTP do wysłania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-409">The HTTP request message to send.</span></span></param>
        <summary><span data-ttu-id="2b6e4-410">Wyślij żądanie HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-410">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-411">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-411">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-412">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-412">This operation will not block.</span></span> <span data-ttu-id="2b6e4-413">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi, w tym do zawartości jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-413">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-414"><paramref name="request" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-414">The <paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-415">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-415">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-416">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-416">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="2b6e4-417">Komunikat żądania HTTP do wysłania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-417">The HTTP request message to send.</span></span></param>
        <param name="completionOption"><span data-ttu-id="2b6e4-418">Operacja powinna po zakończeniu (jak odpowiedzi jest dostępna lub po odczytaniu całej odpowiedzi zawartości).</span><span class="sxs-lookup"><span data-stu-id="2b6e4-418">When the operation should complete (as soon as a response is available or after reading the whole response content).</span></span></param>
        <summary><span data-ttu-id="2b6e4-419">Wyślij żądanie HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-419">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-420">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-420">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-421">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-421">This operation will not block.</span></span> <span data-ttu-id="2b6e4-422">W zależności od wartości `completionOption` parametr, zwracana <xref:System.Threading.Tasks.Task%601> obiektu zakończy się natychmiast odpowiedzi jest dostępna lub całej odpowiedzi, w tym do zawartości jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-422">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-423"><paramref name="request" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-423">The <paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-424">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-424">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-425">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-425">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="2b6e4-426">Komunikat żądania HTTP do wysłania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-426">The HTTP request message to send.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-427">Token anulowania do anulowania operacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-427">The cancellation token to cancel operation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-428">Wyślij żądanie HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-428">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-429">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-429">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-430">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-430">This operation will not block.</span></span> <span data-ttu-id="2b6e4-431">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po całej odpowiedzi, w tym do zawartości jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-431">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-432"><paramref name="request" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-432">The <paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-433">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-433">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-434">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-434">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="2b6e4-435">Komunikat żądania HTTP do wysłania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-435">The HTTP request message to send.</span></span></param>
        <param name="completionOption"><span data-ttu-id="2b6e4-436">Operacja powinna po zakończeniu (jak odpowiedzi jest dostępna lub po odczytaniu całej odpowiedzi zawartości).</span><span class="sxs-lookup"><span data-stu-id="2b6e4-436">When the operation should complete (as soon as a response is available or after reading the whole response content).</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="2b6e4-437">Token anulowania do anulowania operacji.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-437">The cancellation token to cancel operation.</span></span></param>
        <summary><span data-ttu-id="2b6e4-438">Wyślij żądanie HTTP jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-438">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2b6e4-439">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-439">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-440">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-440">This operation will not block.</span></span> <span data-ttu-id="2b6e4-441">W zależności od wartości `completionOption` parametr, zwracana <xref:System.Threading.Tasks.Task%601> obiektu zakończy się natychmiast odpowiedzi jest dostępna lub całej odpowiedzi, w tym do zawartości jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-441">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b6e4-442"><paramref name="request" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-442">The <paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-443">Komunikat żądania została już wysłana przez <see cref="T:System.Net.Http.HttpClient" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-443">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></exception>
        <exception cref="T:System.Net.Http.HttpRequestException"><span data-ttu-id="2b6e4-444">Żądanie nie powiodło się z powodu podstawowego problemu, takich jak łączność z siecią, błąd DNS, weryfikacji certyfikatu serwera lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-444">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b6e4-445">Pobiera lub ustawia zakres czasu oczekiwania zanim upłynie limit czasu żądania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-445">Gets or sets the timespan to wait before the request times out.</span></span></summary>
        <value><span data-ttu-id="2b6e4-446">Zakres czasu oczekiwania przed żądania upłynie limit czasu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-446">The timespan to wait before the request times out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b6e4-447">Wartość domyślna to 100 000 milisekund (100 sekund).</span><span class="sxs-lookup"><span data-stu-id="2b6e4-447">The default value is 100,000 milliseconds (100 seconds).</span></span>  
  
 <span data-ttu-id="2b6e4-448">Aby skonfigurować nieskończonego limitu czasu, należy ustawić wartość właściwości <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-448">To set an infinite timeout, set the property value to <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>  
  
 <span data-ttu-id="2b6e4-449">Zapytanie systemu nazw domen (DNS, Domain Name System) może potrwać do 15 sekund do zwrócenia lub upłynął limit czasu. Jeśli żądanie zawiera nazwę hosta, która wymaga rozpoznawania i ustawisz <xref:System.Net.Http.HttpClient.Timeout%2A> do wartości mniejszej niż 15 sekund może zająć 15 sekund lub więcej przed <xref:System.Net.WebException> jest generowany, aby wskazać limitu czasu na żądanie.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-449">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.Http.HttpClient.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
 <span data-ttu-id="2b6e4-450">Tym samym limitu czasu zostaną zastosowane dla wszystkich żądań za pomocą tej <xref:System.Net.Http.HttpClient> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-450">The same timeout will apply for all requests using this <xref:System.Net.Http.HttpClient> instance.</span></span>  <span data-ttu-id="2b6e4-451">Można również ustawić inny limitów czasu dla poszczególnych żądań przy użyciu <xref:System.Threading.CancellationTokenSource> dla zadania.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-451">You may also set different timeouts for individual requests using a <xref:System.Threading.CancellationTokenSource> on a task.</span></span> <span data-ttu-id="2b6e4-452">Należy pamiętać, że tylko krótszą przekroczeń dwóch będą stosowane.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-452">Note that only the shorter of the two timeouts will apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b6e4-453">Określony limit czasu jest mniejsza lub równa zero, a nie <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-453">The timeout specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b6e4-454">Operacja została już uruchomiona w bieżącym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-454">An operation has already been started on the current instance.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b6e4-455">Bieżące wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="2b6e4-455">The current instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>