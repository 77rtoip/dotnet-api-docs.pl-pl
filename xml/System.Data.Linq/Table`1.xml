<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Table`1.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58f2e2c57717f41b8415d2d08b9d484756b3b8509.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f2e2c57717f41b8415d2d08b9d484756b3b8509</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The type of the data in the table.</source>
          <target state="translated">Typ danych w tabeli.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Represents a table for a particular type in the underlying database.</source>
          <target state="translated">Reprezentuje tabelę dla określonego typu w bazie danych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>This class enables you to query over the table and add, remove, and attach objects.</source>
          <target state="translated">Ta klasa pozwala na zapytanie dotyczące tabeli i dodawania, usuwania i dołączyć obiektów.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>An application can access a <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance via <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> or by using a strongly typed property for the strongly typed <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Aplikacja może uzyskiwać dostęp do <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienie za pośrednictwem <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> lub przy użyciu właściwości jednoznacznie silnie typizowaną <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>That is, when the designer generates a DataContext object, it generates properties to represent each Table.</source>
          <target state="translated">Oznacza to gdy projektant generuje obiekt DataContext, generuje właściwości do reprezentowania każdej tabeli.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For this strongly typed DataContext, you can access the Users property to get <ph id="ph1">`Table&lt;User&gt;`</ph>.</source>
          <target state="translated">Dla tego jednoznacznie DataContext, można uzyskać dostępu do właściwości użytkowników, aby uzyskać <ph id="ph1">`Table&lt;User&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">Dołącza jednostce <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back (with the intention to perform an update or delete operation).</source>
          <target state="translated">Użyj <ph id="ph1">`Attach`</ph> metody z jednostkami, które zostały utworzone w jednym <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, do klienta i następnie deserializowany (z powrotem zamiar przeprowadzić aktualizację lub operacja usuwania).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">Nie należy próbować <ph id="ph1">`Attach`</ph> jednostki, która nie została odłączona, za pomocą serializacji.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Jednostki, które nie zostały serializacji zachować powiązania z opóźnieniem ładujących moduły, które mogą spowodować nieoczekiwane wyniki, jeśli jednostka staje się śledzone przez drugi kontekstu danych.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source><ph id="ph1">`Attach`</ph> attaches all entities in the object graph of the provided object.</source>
          <target state="translated"><ph id="ph1">`Attach`</ph> Dołącza wszystkie jednostki na wykresie obiektu podanego obiektu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example, the following C# code:</source>
          <target state="translated">Na przykład następujący kod C#:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The equivalent Visual Basic code is:</source>
          <target state="translated">Jest równoważne kod Visual Basic:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Calling <ph id="ph1">`Attach`</ph> on <ph id="ph2">`Employee`</ph> attaches employee, master, and child, because the <ph id="ph3">`Employee`</ph> has relationships to both master and child.</source>
          <target state="translated">Wywoływanie <ph id="ph1">`Attach`</ph> na <ph id="ph2">`Employee`</ph> dołącza pracownika, głównego i podrzędnego, ponieważ <ph id="ph3">`Employee`</ph> ma relacje do głównego i podrzędnego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>You must explicitly call <ph id="ph1">`InsertOnSubmit`</ph> to change the state from attached to inserted.</source>
          <target state="translated">Należy jawnie wywołać <ph id="ph1">`InsertOnSubmit`</ph> zmiany stanu z dołączony do wstawionego.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>The original values of the entity to be attached.</source>
          <target state="translated">Oryginalnych wartości jednostki jest dołączony.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Attaches a disconnected or "detached" entity to a new <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> when original values are required for optimistic concurrency checks.</source>
          <target state="translated">Dołącza jednostki rozłączony lub "odłączony" do nowej <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> gdy oryginalne wartości są wymagane przez sprawdzenie optymistycznej współbieżności.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back to perform an update or delete operation.</source>
          <target state="translated">Użyj <ph id="ph1">`Attach`</ph> metody z jednostkami, które zostały utworzone w jednym <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, do klienta i następnie deserializowany Wstecz, aby przeprowadzić aktualizację lub operacji usuwania.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Because the new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values.</source>
          <target state="translated">Ponieważ nowe <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> nie ma możliwości śledzenia oryginalnych wartości zostały odłączone jednostki, klient jest odpowiedzialny za dostarczanie tych wartości.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>In this version of <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, the entity is assumed to be in its original value state.</source>
          <target state="translated">W tej wersji programu <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, jednostka zakłada, że w jego oryginalnej wartości.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>After calling this method, you can then update its fields, for example with additional data sent from the client.</source>
          <target state="translated">Po wywołaniu tej metody, można zaktualizować jego pól, na przykład wraz z dodatkowymi danymi wysłanych z klienta.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">Nie należy próbować <ph id="ph1">`Attach`</ph> jednostki, która nie została odłączona, za pomocą serializacji.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Jednostki, które nie zostały serializacji zachować powiązania z opóźnieniem ładujących moduły, które mogą spowodować nieoczekiwane wyniki, jeśli jednostka staje się śledzone przez drugi kontekstu danych.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">Jednostka jest dołączony.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby dołączyć obiekt ze zmianami; <ph id="ph2">&lt;see langword="false" /&gt;</ph> można dołączyć jednostki jako nie mają być modyfikowane.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza jednostce <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>If attaching <bpt id="p1">*</bpt>as modified<ept id="p1">*</ept>, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Jeśli dołączanie <bpt id="p1">*</bpt>modyfikacja<ept id="p1">*</ept>, jednostki albo musi deklarować element członkowski wersji lub nie może uczestniczyć w Sprawdzanie konfliktu aktualizacji.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>The entity to be attached.</source>
          <target state="translated">Jednostka jest dołączony.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Wystąpienie typu jednostki z elementów członkowskich danych, które zawierają oryginalnych wartości.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Dołącza jednostce <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w obu stanie zmodyfikowany lub zmodyfikowane przez określenie zarówno jednostki i oryginalnego stanu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>In the following example, the <ph id="ph1">`Customer`</ph> object is already correctly configured.</source>
          <target state="translated">W poniższym przykładzie <ph id="ph1">`Customer`</ph> obiektu jest już skonfigurowana.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>You can call <ph id="ph1">`Attach`</ph> without having to replay the updates.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">`Attach`</ph> bez konieczności powtarzania aktualizacji.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Jeśli dołączanie zmodyfikowana, jednostki albo musi deklarować element członkowski wersji lub nie może uczestniczyć w Sprawdzanie konfliktu aktualizacji.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of entities to attach.</source>
          <target state="translated">Typ jednostki do dołączenia.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The collection of entities.</source>
          <target state="translated">Zestaw jednostek.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method attaches all entities of a collection to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Ta metoda dołącza wszystkie jednostki w kolekcji na nowy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The type of entities to attach.</source>
          <target state="translated">Typ jednostki do dołączenia.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The collection of entities.</source>
          <target state="translated">Zestaw jednostek.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has a timestamp or RowVersion member; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if original values are being used for the optimistic concurrency check.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli obiekt ma znacznika czasu lub elementu członkowskiego RowVersion; <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli oryginalne wartości są używane na sprawdzenie optymistycznej współbieżności.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This method attaches all entities of a collection to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> in either a <bpt id="p1">*</bpt>modified<ept id="p1">*</ept> or <bpt id="p2">*</bpt>unmodified<ept id="p2">*</ept> state.</source>
          <target state="translated">Ta metoda dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> albo <bpt id="p1">*</bpt>zmodyfikować<ept id="p1">*</ept> lub <bpt id="p2">*</bpt>niezmodyfikowanego<ept id="p2">*</ept> stanu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Jeśli dołączanie zmodyfikowana, jednostki albo musi deklarować element członkowski wersji lub nie może uczestniczyć w Sprawdzanie konfliktu aktualizacji.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as unmodified, the entity is assumed to represent the original value.</source>
          <target state="translated">Jeśli dołączanie jako zostały zmodyfikowane, jednostka zakłada się, że reprezentują oryginalnej wartości.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>After calling this method, the entity's fields can be modified with other information from the client before <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Po wywołaniu tej metody, można modyfikować pola jednostki z innymi informacjami z klienta przed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Po dołączeniu nowej jednostki odroczone ładowarki dla dowolnej kolekcji podrzędnych (na przykład <ph id="ph1">`EntitySet`</ph> kolekcje jednostek z skojarzone tabele) są zainicjowane.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest nazywany elementów członkowskich elementu podrzędnego kolekcje są umieszczane w <ph id="ph2">`Unmodified`</ph> stanu.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Aby zaktualizować elementów członkowskich kolekcji podrzędnych, należy jawnie wywołać <ph id="ph1">`Attach`</ph> i podaj jednostkę.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows how you can update an <ph id="ph1">`Order`</ph> object on a different <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób aktualizowania <ph id="ph1">`Order`</ph> obiektów na innych <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The example assumes that you have a connection to a database and have made a <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> file for it (in this case, the Northwind sample database).</source>
          <target state="translated">Przykładzie założono, że połączenie z bazą danych i dokonano <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> pliku (w tym przypadku przykładowej bazy danych Northwind).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>In the following example, an entity object to be attached has a foreign key relation with another object and is stored in the cache but not attached.</source>
          <target state="translated">W poniższym przykładzie do obiektu jednostki, jest dołączony ma relacji klucza obcego z innym obiektem i jest przechowywany w pamięci podręcznej, lecz nie jest dołączony.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, the <ph id="ph2">`ChangeProcessor`</ph> adds an <ph id="ph3">`Insert`</ph> operation for all the foreign key objects.</source>
          <target state="translated">Podczas wywoływania <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, <ph id="ph2">`ChangeProcessor`</ph> dodaje <ph id="ph3">`Insert`</ph> operację dla wszystkich obiektów klucza obcego.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This is a side-effect when an entity instance is re-used in a different <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">Jest to efektem ubocznym, gdy wystąpienie jednostki jest użyć ponownie w innej <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For this reason, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support re-use of objects.</source>
          <target state="translated">Z tego powodu <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> nie obsługuje ponownego użycia obiektów.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows a scenario in which Customer A has canceled all orders and Customer B has taken ownership of them.</source>
          <target state="translated">W poniższym przykładzie przedstawiono scenariusz, w którym anulował wszystkich zamówień klienta A i B klienta trwało na własność.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>You can attach all orders of Customer A at the same time.</source>
          <target state="translated">Możesz dołączyć wszystkich zamówień klienta A, w tym samym czasie.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.Context">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> that has been used to retrieve this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> który został użyty do pobrania to <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.Context">
          <source>The data context that has been used to retrieve this table.</source>
          <target state="translated">Kontekst danych używany do pobierania tej tabeli.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to delete.</source>
          <target state="translated">Typ elementów do usunięcia.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to delete.</source>
          <target state="translated">Jednostki do usunięcia.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Umieszcza wszystkie obiekty z kolekcji do <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> stanu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Entities that are put into the pending delete state with this method do not disappear from query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Jednostki, które są umieszczane w stanie Oczekujące usunięcie z tej metody nie są usuwane z wyników zapytania dopiero po <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Disconnected entities must be attached before they can be deleted.</source>
          <target state="translated">Musi być dołączony odłączonych jednostek, aby można było usunąć.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following C# snippet shows one use for this method:</source>
          <target state="translated">Poniższy fragment kodu C# zawiera jedno użycie tej metody:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>In Visual Basic:</source>
          <target state="translated">W języku Visual Basic:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The entity to be deleted.</source>
          <target state="translated">Jednostka do usunięcia.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Umieszcza jednostki z tej tabeli do <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> stanu.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The removed entity does not disappear from the query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Usunięto jednostki nie są usuwane z wyników zapytania dopiero po <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Disconnected entities must first be attached before they can be deleted.</source>
          <target state="translated">Aby można było usunąć najpierw należy dołączyć odłączonych jednostek.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> nie obsługuje ani nie rozpoznaje operacjami usuwania kaskadowego.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Jeśli chcesz usunąć wiersza w tabeli, która ma ograniczenia na nim, należy albo zestaw <ph id="ph1">`ON DELETE CASCADE`</ph> reguły w ograniczenie klucza obcego w bazie danych lub użyj własny kod, aby najpierw usunąć obiekty podrzędne, które zapobiec usunięciu obiektu nadrzędnego.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">W przeciwnym razie jest zgłaszany wyjątek.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>Gets an enumerator that iterates through the collection.</source>
          <target state="translated">Pobiera moduł wyliczający, który iteruje po kolekcji.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Moduł wyliczający, który może służyć do iterowania po kolekcji.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>The entity from which to get the array.</source>
          <target state="translated">Jednostka, z którego można pobrać tablicy.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Zwraca tablicę zmodyfikowane elementy członkowskie, które zawierają ich bieżących i oryginalnych wartości.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>An array of modified members that contain their current and original values.</source>
          <target state="translated">Tablica zmodyfikowane elementy członkowskie, które zawierają ich bieżących i oryginalnych wartości.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>Creates a new list for binding to a data source.</source>
          <target state="translated">Tworzy nową listę dla powiązania ze źródłem danych.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> for binding to a data source.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> dla powiązania ze źródłem danych.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.</source>
          <target state="translated">Zwracana lista obsługuje standardowe operacje, takie jak dodawania, usuwania, wstawienia i aktualizacje, ale zapisuje musi być jawnie zarządzane przez programistę.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The entity whose original state is to be returned.</source>
          <target state="translated">Jednostki, której wcześniejszy jest zwracana.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> wystąpienia, które zawiera pierwotnego stanu jednostki.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> wystąpienia, które zawiera pierwotnego stanu jednostki.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>This method returns the original state of an entity since it was either created or attached to the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Ta metoda zwraca pierwotnego stanu jednostki, ponieważ został on utworzony lub dołączony do bieżącego <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Oryginalny stan jednostki, która serializacji i deserializacji musi być udostępniane przez mechanizm śledzenia niezależne i dostarczana, gdy obiekt jest dołączony do nowej <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to insert.</source>
          <target state="translated">Typ elementów do wstawienia.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to add.</source>
          <target state="translated">Jednostki do dodania.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in a <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Dodaje wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> stanu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The added entities will not be in query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">Nie będzie dodane jednostki w wynikach zapytania dopiero po <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> została wywołana.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The entity to be added.</source>
          <target state="translated">Jednostka do dodania.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Dodaje jednostki w <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> stan to <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The added entity will not appear in query results from this table until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">Dodano jednostkę nie będą widoczne w wynikach zapytania z tej tabeli dopiero po <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> została wywołana.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source>Gets a value that indicates whether the type of the entities contained in this <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance has a primary key.</source>
          <target state="translated">Pobiera wartość wskazującą, czy typ jednostek zawarty w tym <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> wystąpienie ma klucz podstawowy.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the entity type does not have a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli typ jednostki nie ma klucza podstawowego; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Moduł wyliczający, który może służyć do iterowania po kolekcji.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Moduł wyliczający, który może służyć do iterowania po kolekcji.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>Gets a value that indicates whether the collection is a collection of <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects.</source>
          <target state="translated">Pobiera wartość wskazującą, czy kolekcja jest kolekcją <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli kolekcja jest kolekcją <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> obiekty; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> itself.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> który może być powiązana ze źródłem danych z obiektu, który nie implementuje <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> samej siebie.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Może być powiązana ze źródłem danych.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Allows deserialized entities to be associated with a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> so that they can be updated or deleted from the database.</source>
          <target state="translated">Umożliwia zdeserializowany jednostek ma zostać skojarzony z nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> tak, że mogą zostać zaktualizowane lub usunięte z bazy danych.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">Jednostka jest dołączony.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an unmodified state.</source>
          <target state="translated">Dołącza jednostce <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">Jednostka jest dołączony.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attached the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby dołączyć obiekt ze zmianami; <ph id="ph2">&lt;see langword="false" /&gt;</ph> dołączony jednostki jako nie mają być modyfikowane.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">Jednostka jest dołączony.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Wystąpienie typu jednostki z elementów członkowskich danych, które zawierają oryginalnych wartości.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Dołącza jednostce <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w obu stanie zmodyfikowany lub zmodyfikowane przez określenie zarówno jednostki i oryginalnego stanu.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>The collection of entities to be attached.</source>
          <target state="translated">Zbiór jednostek jest dołączony.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>The collection of entities to be attched.</source>
          <target state="translated">Zestaw jednostek jako podłączonym.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entities as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entities as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby dołączyć jednostek ze zmianami; <ph id="ph2">&lt;see langword="false" /&gt;</ph> do dołączania jednostek jako nie mają być modyfikowane.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Dołącza wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w stanie zmodyfikowany lub bez modyfikacji.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>The entities being removed.</source>
          <target state="translated">Jednostki zostaną usunięte.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Umieszcza wszystkie obiekty z kolekcji do <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> stanu.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>The entity to be removed.</source>
          <target state="translated">Jednostka, która ma zostać usunięty.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Umieszcza jednostki z tej tabeli do <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> stanu.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> nie obsługuje ani nie rozpoznaje operacjami usuwania kaskadowego.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Jeśli chcesz usunąć wiersza w tabeli, która ma ograniczenia na nim, należy albo zestaw <ph id="ph1">`ON DELETE CASCADE`</ph> reguły w ograniczenie klucza obcego w bazie danych lub użyj własny kod, aby najpierw usunąć obiekty podrzędne, które zapobiec usunięciu obiektu nadrzędnego.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">W przeciwnym razie jest zgłaszany wyjątek.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>The entity from which to obtain the modified members.</source>
          <target state="translated">Jednostka, z którego można uzyskać zmodyfikowane elementy członkowskie.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Zwraca tablicę zmodyfikowane elementy członkowskie, które zawierają ich bieżących i oryginalnych wartości.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>An array of modified members.</source>
          <target state="translated">Tablica zmodyfikowane elementy członkowskie.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>The entity whose original state is to be accessed.</source>
          <target state="translated">Jednostka, w których oryginalny stan ma być dostępny.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>Retrieves original values of a given entity.</source>
          <target state="translated">Pobiera oryginalnych wartości danej jednostki.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>A copy of the original entity.</source>
          <target state="translated">Kopia oryginalna jednostka.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>The collection of entities to be added.</source>
          <target state="translated">Zestaw jednostek, które ma zostać dodana.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Dodaje wszystkie jednostki w kolekcji do <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> w <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> stanu.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>The entity to add.</source>
          <target state="translated">Jednostka do dodania.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this table.</source>
          <target state="translated">Dodaje jednostki w <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> stanu do tej tabeli.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Pobiera typ elementów, z którego są zwracane, gdy jest wykonywana drzewa wyrażenia skojarzonego z tym obiektem.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>The type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Typ elementów, z którego są zwracane, gdy jest wykonywana drzewa wyrażenia skojarzonego z tym obiektem.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>Gets the expression tree that is associated with this instance of <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Pobiera drzewo wyrażeń, który jest skojarzony z tym wystąpieniem programu <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> that is associated with this instance of <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> Skojarzonego z tym wystąpieniem <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>Gets the query provider that is associated with this data source.</source>
          <target state="translated">Pobiera dostawcę zapytania, który jest skojarzony z tym źródłem danych.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> that is associated with this data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> Skojarzonego z tym źródłem danych.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">Wyrażenia zapytania, z którego jest wykonywane oceny.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Konstruuje <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> obiekt, który może służyć do oceny zapytania reprezentowanego przez określone wyrażenie drzewa.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> Który ocenić zapytania reprezentowanego przez określone wyrażenie drzewa.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">Typ danych w tabeli.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">Wyrażenia zapytania, z którego jest wykonywane oceny.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Konstruuje <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> obiekt, który może służyć do oceny zapytania reprezentowanego przez określone wyrażenie drzewa.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> Który ocenić zapytania reprezentowanego przez określone wyrażenie drzewa.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">Wyrażenia zapytania do wykonania.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>Executes the query represented by a specified expression tree.</source>
          <target state="translated">Wykonuje zapytanie reprezentowanego przez określone wyrażenie drzewa.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">Wartość, która jest wynikiem wykonania określonego zapytania.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">Typ danych w tabeli.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">Wyrażenia zapytania do wykonania.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>Executes the strongly-typed query represented by a specified expression tree.</source>
          <target state="translated">Wykonuje zapytanie jednoznacznie reprezentowanego przez określone wyrażenie drzewa.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">Wartość, która jest wynikiem wykonania określonego zapytania.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>Returns a string that represents the table.</source>
          <target state="translated">Zwraca ciąg reprezentujący tabeli.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>A string representation of the table.</source>
          <target state="translated">Reprezentacja ciągu tabeli.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>