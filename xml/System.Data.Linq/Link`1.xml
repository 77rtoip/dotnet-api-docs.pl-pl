<Type Name="Link&lt;T&gt;" FullName="System.Data.Linq.Link&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="939d0507dd7e67cd399b98c77a82a2bbbf8e2252" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69374289" /></Metadata><TypeSignature Language="C#" Value="public struct Link&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Link`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Link`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Link(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class Link" />
  <TypeSignature Language="F#" Value="type Link&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="659dd-101">Typ elementów w odroczonym źródle.</span><span class="sxs-lookup"><span data-stu-id="659dd-101">The type of the elements in the deferred source.</span></span></typeparam>
    <summary><span data-ttu-id="659dd-102">Służy do włączania odroczonego ładowania poszczególnych właściwości (podobnie jak w <see cref="T:System.Data.Linq.EntityRef`1" />przypadku).</span><span class="sxs-lookup"><span data-stu-id="659dd-102">Used to enable deferred loading of individual properties (similar to <see cref="T:System.Data.Linq.EntityRef`1" />).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659dd-103">Jeśli<xref:System.Collections.Generic.IEnumerable%601>przypiszesz odłożone źródło () do <xref:System.Data.Linq.Link%601>, program <xref:System.Data.Linq.Link%601> załaduje wartość przez <xref:System.Data.Linq.Link%601.Value%2A> Wyliczenie źródła podczas pierwszego dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="659dd-103">If you assign a deferred source (<xref:System.Collections.Generic.IEnumerable%601>) to <xref:System.Data.Linq.Link%601>, <xref:System.Data.Linq.Link%601> loads the value by enumerating the source the first time the <xref:System.Data.Linq.Link%601.Value%2A> property is accessed.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Linq.EntityRef`1" />
    <altmember cref="T:System.Data.Linq.EntitySet`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="659dd-104">Inicjuje nowe wystąpienie <see cref="T:System.Data.Linq.Link`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="659dd-104">Initializes a new instance of the <see cref="T:System.Data.Linq.Link`1" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (System.Collections.Generic.IEnumerable&lt;T&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Link`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.Link&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Data.Linq.Link&lt;'T&gt;" Usage="new System.Data.Linq.Link&lt;'T&gt; source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="659dd-105">Kolekcja źródłowa.</span><span class="sxs-lookup"><span data-stu-id="659dd-105">The source collection.</span></span></param>
        <summary><span data-ttu-id="659dd-106">Inicjuje nowe wystąpienie <see cref="T:System.Data.Linq.Link`1" /> struktury, odwołując się do źródła.</span><span class="sxs-lookup"><span data-stu-id="659dd-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Link`1" /> structure by referencing the source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659dd-107">Użyj tego konstruktora, <xref:System.Data.Linq.Link%601> aby zainicjować z odroczonym modułem ładującym wartości (Implements) <xref:System.Collections.Generic.IEnumerable%601></span><span class="sxs-lookup"><span data-stu-id="659dd-107">Use this constructor to initialize the <xref:System.Data.Linq.Link%601> with a deferred value loader (implements <xref:System.Collections.Generic.IEnumerable%601>)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (System.Data.Linq.Link&lt;T&gt; link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Data.Linq.Link`1&lt;!T&gt; link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Link`1.#ctor(System.Data.Linq.Link{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (link As Link(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(System::Data::Linq::Link&lt;T&gt; link);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.Link&lt;'T&gt; : System.Data.Linq.Link&lt;'T&gt; -&gt; System.Data.Linq.Link&lt;'T&gt;" Usage="new System.Data.Linq.Link&lt;'T&gt; link" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="link" Type="System.Data.Linq.Link&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="link"><span data-ttu-id="659dd-108"><see cref="T:System.Data.Linq.Link`1" /> Wystąpienie, z którego ma zostać skopiowane.</span><span class="sxs-lookup"><span data-stu-id="659dd-108">The <see cref="T:System.Data.Linq.Link`1" /> instance from which to copy.</span></span></param>
        <summary><span data-ttu-id="659dd-109">Inicjuje nowe wystąpienie <see cref="T:System.Data.Linq.Link`1" /> struktury przez skopiowanie stanu wewnętrznego z innego <see cref="T:System.Data.Linq.Link`1" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="659dd-109">Initializes a new instance of the <see cref="T:System.Data.Linq.Link`1" /> structure by copying the internal state from another <see cref="T:System.Data.Linq.Link`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Link`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(T value);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.Link&lt;'T&gt; : 'T -&gt; System.Data.Linq.Link&lt;'T&gt;" Usage="new System.Data.Linq.Link&lt;'T&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="659dd-110">Wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="659dd-110">The value for the property.</span></span></param>
        <summary><span data-ttu-id="659dd-111">Inicjuje nowe wystąpienie <see cref="T:System.Data.Linq.Link`1" /> struktury przez odwołanie do wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="659dd-111">Initializes a new instance of the <see cref="T:System.Data.Linq.Link`1" /> structure by referencing the value of the property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659dd-112">Użyj tego konstruktora, gdy wartość właściwości jest już znana.</span><span class="sxs-lookup"><span data-stu-id="659dd-112">Use this constructor when the value for the property is already known.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedOrAssignedValue">
      <MemberSignature Language="C#" Value="public bool HasLoadedOrAssignedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoadedOrAssignedValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Link`1.HasLoadedOrAssignedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLoadedOrAssignedValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLoadedOrAssignedValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLoadedOrAssignedValue : bool" Usage="System.Data.Linq.Link&lt;'T&gt;.HasLoadedOrAssignedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="659dd-113">Określa, <see cref="T:System.Data.Linq.Link`1" /> czy została załadowana lub przypisana wartość.</span><span class="sxs-lookup"><span data-stu-id="659dd-113">Specifies whether the <see cref="T:System.Data.Linq.Link`1" /> has loaded or assigned a value.</span></span></summary>
        <value><span data-ttu-id="659dd-114"><see langword="true" />Jeśli została załadowana lub przypisana wartość; <see langword="false" />w przeciwnym razie. <see cref="T:System.Data.Linq.Link`1" /></span><span class="sxs-lookup"><span data-stu-id="659dd-114"><see langword="true" /> if the <see cref="T:System.Data.Linq.Link`1" /> has either loaded or assigned a value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659dd-115">"Załadowany" oznacza, że dane zostały załadowane podczas materializację lub przy odroczonym załadowaniu.</span><span class="sxs-lookup"><span data-stu-id="659dd-115">"Loaded" means that the data was loaded during materialization or at deferred loading.</span></span> <span data-ttu-id="659dd-116">"Przypisany" oznacza, że dane są nadawane ręcznie przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="659dd-116">"Assigned" means that you have manually given the data a value.</span></span>  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="659dd-117">używa tej właściwości, aby upewnić się <xref:System.Data.Linq.Link%601> , że ma wartość, dzięki czemu uzyskanie dostępu do niej nie wywoła odroczonego ładowania.</span><span class="sxs-lookup"><span data-stu-id="659dd-117">uses this property to make sure that the <xref:System.Data.Linq.Link%601> has a value, so that accessing it will not trigger deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Link`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Data.Linq.Link&lt;'T&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="659dd-118">Pobiera wartość określającą, czy źródło ma wartość.</span><span class="sxs-lookup"><span data-stu-id="659dd-118">Gets a value that specifies whether the source has a value.</span></span></summary>
        <value><span data-ttu-id="659dd-119"><see langword="true" />Jeśli źródło ma przypisaną lub załadowana wartość (w tym wartość null); w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="659dd-119"><see langword="true" /> if the source has an assigned or loaded value (including null); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Link`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T with get, set" Usage="System.Data.Linq.Link&lt;'T&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="659dd-120">Pobiera lub ustawia wartość przypisaną do lub załadowana przez <see cref="T:System.Data.Linq.Link`1" />.</span><span class="sxs-lookup"><span data-stu-id="659dd-120">Gets or sets the value assigned to or loaded by the <see cref="T:System.Data.Linq.Link`1" />.</span></span></summary>
        <value><span data-ttu-id="659dd-121">Wartość tej właściwości odroczonej.</span><span class="sxs-lookup"><span data-stu-id="659dd-121">The value of this deferred property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
