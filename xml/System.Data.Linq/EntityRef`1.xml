<Type Name="EntityRef&lt;TEntity&gt;" FullName="System.Data.Linq.EntityRef&lt;TEntity&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f30f1e704f744d2482babb80e09d17fe29267332" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30445059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct EntityRef&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit EntityRef`1&lt;class TEntity&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.EntityRef`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure EntityRef(Of TEntity)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic value class EntityRef" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity">
      <span data-ttu-id="ffad3-101">Typ jednostki docelowej.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ffad3-101">The type of the target entity.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ffad3-102">Zapewnia odroczonego ładowania i relacji obsługi dla pojedynczego wystąpienia relacji jeden do wielu w składniku LINQ to SQL aplikacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ffad3-102">Provides for deferred loading and relationship maintenance for the singleton side of a one-to-many relationship in a LINQ to SQL application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffad3-103">Ta klasa jest używana w połączeniu z <xref:System.Data.Linq.EntitySet%601>.</span><span class="sxs-lookup"><span data-stu-id="ffad3-103">This class is used in combination with <xref:System.Data.Linq.EntitySet%601>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ffad3-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.EntityRef`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-104">Initializes a new instance of the <see cref="T:System.Data.Linq.EntityRef`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityRef (System.Collections.Generic.IEnumerable&lt;TEntity&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntityRef`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityRef(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="ffad3-105">Źródło odwołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-105">The reference source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffad3-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.EntityRef`1" /> klasy, określając źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-106">Initializes a new instance of the <see cref="T:System.Data.Linq.EntityRef`1" /> class by specifying the source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityRef (System.Data.Linq.EntityRef&lt;TEntity&gt; entityRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Data.Linq.EntityRef`1&lt;!TEntity&gt; entityRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntityRef`1.#ctor(System.Data.Linq.EntityRef{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityRef As EntityRef(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityRef(System::Data::Linq::EntityRef&lt;TEntity&gt; entityRef);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityRef" Type="System.Data.Linq.EntityRef&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entityRef">
          <span data-ttu-id="ffad3-107">Obiekt docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-107">The target entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffad3-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.EntityRef`1" /> klasy za pomocą odwołań do jednostki docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-108">Initializes a new instance of the <see cref="T:System.Data.Linq.EntityRef`1" /> class by referencing the target entity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityRef (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntityRef`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityRef(TEntity entity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="ffad3-109">Obiekt docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-109">The target entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffad3-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.EntityRef`1" /> klasy, określając jednostki docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-110">Initializes a new instance of the <see cref="T:System.Data.Linq.EntityRef`1" /> class by specifying the target entity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public TEntity Entity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Entity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntityRef`1.Entity" />
      <MemberSignature Language="VB.NET" Value="Public Property Entity As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Entity { TEntity get(); void set(TEntity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ffad3-111">Pobiera lub ustawia obiekt docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-111">Gets or sets the target entity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ffad3-112">Obiekt docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-112">The target entity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedOrAssignedValue">
      <MemberSignature Language="C#" Value="public bool HasLoadedOrAssignedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoadedOrAssignedValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntityRef`1.HasLoadedOrAssignedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLoadedOrAssignedValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLoadedOrAssignedValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ffad3-113">Pobiera wartość wskazującą, czy element docelowy został załadowany lub przypisane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-113">Gets a value that indicates whether the target has been loaded or assigned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ffad3-114">
            <see langword="True" /> Jeśli element docelowy został załadowany lub przypisane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffad3-114">
              <see langword="True" /> if the target has been loaded or assigned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffad3-115">`True` nawet wtedy, gdy ma wartość w celu `null`.</span><span class="sxs-lookup"><span data-stu-id="ffad3-115">`True` is returned even if the value in the target is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>