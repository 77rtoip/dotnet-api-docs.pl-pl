<Type Name="ObjectChangeConflict" FullName="System.Data.Linq.ObjectChangeConflict">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5186bdefdaee509f1b9c41e830169767c3f53bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30445323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ObjectChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectChangeConflict sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b84d5-101">Reprezentuje próba aktualizacji z co najmniej jeden konflikt optymistycznej współbieżności.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b84d5-101">Represents an update attempt with one or more optimistic concurrency conflicts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b84d5-102">Ten scenariusz jest jeden niepowodzenia próba aktualizacji ponieważ wartościami bazy danych zostały zaktualizowane od czasu ich odczytu ostatnio klienta.</span><span class="sxs-lookup"><span data-stu-id="b84d5-102">This scenario is one in which an attempted update fails because database values have been updated since the client last read them.</span></span>  
  
 <span data-ttu-id="b84d5-103">Poniższy przykład pokazuje, jak można pobrać informacji o obiektach w konflikcie.</span><span class="sxs-lookup"><span data-stu-id="b84d5-103">The following example shows how to retrieve information about objects in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDeleted">
      <MemberSignature Language="C#" Value="public bool IsDeleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleted" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.IsDeleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b84d5-104">Pobiera wartość wskazującą, czy obiekt w konflikcie został usunięty z bazy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-104">Gets a value that indicates whether the object in conflict has been deleted from the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b84d5-105">
            <see langword="True" /> Jeśli obiekt został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-105">
              <see langword="True" /> if the object has been deleted.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b84d5-106">Pobiera wartość wskazującą, czy już został rozwiązany konfliktów dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-106">Gets a value that indicates whether the conflicts for this object have already been resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b84d5-107">
            <see langword="True" /> Jeśli konflikty zostały rozwiązane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-107">
              <see langword="True" /> if the conflicts have been resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b84d5-108">Ta właściwość jest tylko do odczytu i zostanie automatycznie zaktualizowana, jak są rozwiązywane konflikty.</span><span class="sxs-lookup"><span data-stu-id="b84d5-108">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberConflicts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.MemberChangeConflict&gt; MemberConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.MemberChangeConflict&gt; MemberConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.MemberConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberConflicts As ReadOnlyCollection(Of MemberChangeConflict)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::MemberChangeConflict ^&gt; ^ MemberConflicts { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::MemberChangeConflict ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.MemberChangeConflict&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b84d5-109">Pobiera kolekcję wszystkich wystąpił konflikt elementu członkowskiego, które spowodowały Niepowodzenie aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-109">Gets a collection of all member conflicts that caused the update to fail.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b84d5-110">Kolekcja wystąpił konflikt elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-110">A collection of member conflicts.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b84d5-111">Pobiera obiekt w konflikcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-111">Gets the object in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b84d5-112">Obiekt, który powoduje konflikt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-112">The object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b84d5-113">Rozpoznaje wystąpił konflikt elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-113">Resolves member conflicts.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ObjectChangeConflict.Resolve" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b84d5-114">Rozpoznaje wystąpił konflikt elementu członkowskiego, pamiętając bieżące wartości i zresetowanie oryginalnych wartości bazowej odpowiadające nowszą wartościami bazy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-114">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode">
          <span data-ttu-id="b84d5-115">Odpowiednią opcję z <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-115">The appropriate option from <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b84d5-116">Usuwa wystąpił konflikt elementu członkowskiego przy użyciu określonego <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-116">Resolves member conflicts by using the specified <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b84d5-117">W poniższych przykładach pokazano, jakie wyniki są tworzone za pomocą różnych wartości <xref:System.Data.Linq.RefreshMode>.</span><span class="sxs-lookup"><span data-stu-id="b84d5-117">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b84d5-118">Poniższy przykład zastępuje bieżących wartości z wartościami z bazy danych.</span><span class="sxs-lookup"><span data-stu-id="b84d5-118">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="b84d5-119">Poniższy przykład pokazuje, jak można zamienić oryginalnej wartości z wartościami pobierane z dtabase.</span><span class="sxs-lookup"><span data-stu-id="b84d5-119">The following example shows how to swap the original value with the values retrieved from the dtabase.</span></span> <span data-ttu-id="b84d5-120">Nie bieżąca wartość jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="b84d5-120">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="b84d5-121">Poniższy przykład zachowuje bieżące wartości, które zostały zmienione, ale aktualizacji innych wartości z wartościami bazy danych.</span><span class="sxs-lookup"><span data-stu-id="b84d5-121">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode, bool autoResolveDeletes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode, bool autoResolveDeletes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode, bool autoResolveDeletes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="autoResolveDeletes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="refreshMode">
          <span data-ttu-id="b84d5-122">Odpowiednią opcję z <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-122">The appropriate option from <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </param>
        <param name="autoResolveDeletes">
          <span data-ttu-id="b84d5-123">Gdy <see langword="true" />, automatycznie rozwiązuje konflikty wynikające z zmodyfikowanego obiektu, który nie jest już w bazie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-123">When <see langword="true" />, automatically resolves conflicts resulting from a modified object that is no longer in the database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b84d5-124">Rozwiązywanie konfliktów elementu członkowskiego zachowuje bieżące wartości i zresetowanie oryginalnych wartości bazowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b84d5-124">Resolve member conflicts keeping current values and resetting the baseline original values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>