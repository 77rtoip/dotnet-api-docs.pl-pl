<Type Name="XmlSerializableServices" FullName="System.Runtime.Serialization.XmlSerializableServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dac01f9da67cfae8d31945554e3950ae70e4d19" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class XmlSerializableServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XmlSerializableServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlSerializableServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializableServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializableServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XmlSerializableServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody do odczytywania i zapisywania XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą usługi Windows Communication Foundation (WCF), można wygenerować typy CLR reprezentujący kontraktów danych schematów XML. W niektórych przypadkach, gdy w ten sposób schematów może nie być reprezentowany jako kontraktów danych. W takim przypadku można użyć <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> właściwość <xref:System.Runtime.Serialization.ImportOptions> klasy.  Ustawienie właściwości `true` Określa, że te typy są importowane, jak XML typy, które implementują <xref:System.Xml.Serialization.IXmlSerializable> interfejsu. W procesie wygenerowane typy może przechowywać żadnych czynności, ale są do odczytu i zapisane w formacie XML przez serializator.  
  
 <xref:System.Runtime.Serialization.XmlSerializableServices> Jest klasą pomocnika abstrakcyjna, która zawiera kod, który jest używany przez wygenerowane <xref:System.Xml.Serialization.IXmlSerializable> typów do odczytywania i zapisywania XML. Zawiera kod służący do generowania schematu dla wygenerowane typy. Należy pamiętać, nie są przechowywane szczegóły schematów. Tylko nazwa jest przechowywana w wygenerowanym typem. Ta klasa generuje domyślny schemat, który reprezentuje typ schematu XML `anyType` nazwą typu odpowiedniego schematu jako Nazwa kontraktu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDefaultSchema">
      <MemberSignature Language="C#" Value="public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDefaultSchema(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeQName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDefaultSchema (schemas As XmlSchemaSet, typeQName As XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDefaultSchema(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeQName);" />
      <MemberSignature Language="F#" Value="static member AddDefaultSchema : System.Xml.Schema.XmlSchemaSet * System.Xml.XmlQualifiedName -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema (schemas, typeQName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeQName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Do typu schematu wygenerowanego do dodania.</param>
        <param name="typeQName">
          <see cref="T:System.Xml.XmlQualifiedName" /> , Który określa nazwy typu można przypisać schemat.</param>
        <summary>Generuje typu schematu domyślną nazwę określonego typu i dodaje go do zestawu określony schemat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zawiera kod dotyczący generowania typu schematu dla typu kontraktu danych o określonej nazwy typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemas" /> Lub <paramref name="typeQName" /> argument jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNodes">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode[] ReadNodes(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::XmlNode ^&gt; ^ ReadNodes(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member ReadNodes : System.Xml.XmlReader -&gt; System.Xml.XmlNode[]" Usage="System.Runtime.Serialization.XmlSerializableServices.ReadNodes xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> Używany do odczytu.</param>
        <summary>Odczytuje zestaw węzłów XML z określonym czytnika i zwraca wynik.</summary>
        <returns>Tablica typu <see cref="T:System.Xml.XmlNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje XML wszystkich zawartych w węźle, który przy tym wywołaniu czytnik znajduje się na. Dzięki temu do odczytywania i zapisywania wszystkich XML jako tablicę <xref:System.Xml.XmlNode> obiektów. Jest używana przez typy, które implementują metodę Pomocnika <xref:System.Xml.Serialization.IXmlSerializable> i używające <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlReader" /> Argument jest <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Podczas odczytu, <see langword="null" /> napotkano węzła.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodes">
      <MemberSignature Language="C#" Value="public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteNodes(class System.Xml.XmlWriter xmlWriter, class System.Xml.XmlNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteNodes(System::Xml::XmlWriter ^ xmlWriter, cli::array &lt;System::Xml::XmlNode ^&gt; ^ nodes);" />
      <MemberSignature Language="F#" Value="static member WriteNodes : System.Xml.XmlWriter * System.Xml.XmlNode[] -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.WriteNodes (xmlWriter, nodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="nodes" Type="System.Xml.XmlNode[]" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> Używany do zapisu.</param>
        <param name="nodes">Tablica typu <see cref="T:System.Xml.XmlNode" /> do zapisu.</param>
        <summary>Zapisuje podany węzłów przy użyciu określonego składnika zapisywania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> Argument jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>