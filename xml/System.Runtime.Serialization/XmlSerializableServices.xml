<Type Name="XmlSerializableServices" FullName="System.Runtime.Serialization.XmlSerializableServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="727027d9cc6347d994810e7f8a628943fd0f8739" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37626684" /></Metadata><TypeSignature Language="C#" Value="public static class XmlSerializableServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XmlSerializableServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlSerializableServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializableServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializableServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XmlSerializableServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody do odczytywania i zapisywania XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą usług Windows Communication Foundation (WCF), można wygenerować typy CLR reprezentującą kontraktów danych od schematów XML. W niektórych przypadkach, gdy w ten sposób schematy może nie wszystkie można przedstawić w kontraktach danych. W takim przypadku można użyć <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> właściwość <xref:System.Runtime.Serialization.ImportOptions> klasy.  Ustawienie właściwości `true` Określa, że te typy są importowane jako XML typami, które implementują <xref:System.Xml.Serialization.IXmlSerializable> interfejsu. W procesie wygenerowane typy można przechowywać niczego, ale odczytu i zapisywane w formacie XML element serializujący.  
  
 <xref:System.Runtime.Serialization.XmlSerializableServices> Jest klasą abstrakcyjną pomocnika, która zawiera kod, który jest używany przez wygenerowany <xref:System.Xml.Serialization.IXmlSerializable> typów do odczytywania i zapisywania XML. Zawiera ona także kodu do generowania schematu wygenerowany typów. Należy pamiętać, że szczegółowe informacje o schematy nie są przechowywane. Tylko nazwa jest przechowywana w typie wygenerowanym. Ta klasa generuje domyślny schemat, który reprezentuje typ schematu XML `anyType` nazwą typu odpowiedniego schematu z nazwą kontraktu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDefaultSchema">
      <MemberSignature Language="C#" Value="public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDefaultSchema(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeQName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDefaultSchema (schemas As XmlSchemaSet, typeQName As XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDefaultSchema(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeQName);" />
      <MemberSignature Language="F#" Value="static member AddDefaultSchema : System.Xml.Schema.XmlSchemaSet * System.Xml.XmlQualifiedName -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema (schemas, typeQName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeQName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> Aby dodać typ wygenerowany schemat.</param>
        <param name="typeQName"><see cref="T:System.Xml.XmlQualifiedName" /> Określający nazwę typu do schematu w celu przypisania.</param>
        <summary>Generuje domyślny typ schematu, otrzymuje nazwę określonego typu i dodaje go do zestawu określonego schematu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zawiera kod dotyczący generowania typu schematu dla typu kontraktu danych za pomocą określonej nazwy typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schemas" /> Lub <paramref name="typeQName" /> argument jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNodes">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode[] ReadNodes(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::XmlNode ^&gt; ^ ReadNodes(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member ReadNodes : System.Xml.XmlReader -&gt; System.Xml.XmlNode[]" Usage="System.Runtime.Serialization.XmlSerializableServices.ReadNodes xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><see cref="T:System.Xml.XmlReader" /> Używany do odczytu.</param>
        <summary>Odczytuje zestaw węzłów XML z określonego czytnika i zwraca wynik.</summary>
        <returns>Tablica typu <see cref="T:System.Xml.XmlNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje wszystkie XML znajdujących się w węźle, który czytnik jest umieszczony na po tym wywołaniu. Dzięki temu może odczytywać i przechowywać wszystkie XML jako tablicę <xref:System.Xml.XmlNode> obiektów. Jest używana przez typy, które implementują metody pomocnika <xref:System.Xml.Serialization.IXmlSerializable> i które używają <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlReader" /> Argument jest <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Podczas odczytu, <see langword="null" /> napotkano węzła.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodes">
      <MemberSignature Language="C#" Value="public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteNodes(class System.Xml.XmlWriter xmlWriter, class System.Xml.XmlNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteNodes(System::Xml::XmlWriter ^ xmlWriter, cli::array &lt;System::Xml::XmlNode ^&gt; ^ nodes);" />
      <MemberSignature Language="F#" Value="static member WriteNodes : System.Xml.XmlWriter * System.Xml.XmlNode[] -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.WriteNodes (xmlWriter, nodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="nodes" Type="System.Xml.XmlNode[]" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><see cref="T:System.Xml.XmlWriter" /> Użycia do zapisania.</param>
        <param name="nodes">Tablica typu <see cref="T:System.Xml.XmlNode" /> do zapisania.</param>
        <summary>Zapisuje podane węzłów przy użyciu określonego składnika zapisywania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlWriter" /> Argument jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>