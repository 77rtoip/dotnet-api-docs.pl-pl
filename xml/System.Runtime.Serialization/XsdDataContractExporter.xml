<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XsdDataContractExporter.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac538915ee397917af85ed6f5dd243799613e38260a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38915ee397917af85ed6f5dd243799613e38260a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</source>
          <target state="translated">Umożliwia transformacja zestaw typów .NET Framework, które są używane w kontraktach danych do pliku schematu XML (XSD).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> klasy po utworzeniu usługi sieci Web, który zawiera dane reprezentowane przez typowych języka wspólnego (CLR) i kiedy należy wyeksportować schematów XML dla każdego typu być używane przez inne usługi sieci Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>That is, <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforms a set of CLR types into XML schemas.</source>
          <target state="translated">Oznacza to, że <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> przekształca zestaw typów CLR w schematów XML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>(For more information about the types that can be used, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</source>
          <target state="translated">(Aby uzyskać więcej informacji o typach, które mogą być używane, zobacz <bpt id="p1">[</bpt>typy obsługiwane przez serializator kontraktu danych<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.) Następnie można uwidocznić schematów za pomocą dokumentu Web Services Description Language (WSDL) w celu użycia przez innych użytkowników, którzy potrzebują na potrzeby współdziałania z usługą.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</source>
          <target state="translated">Z drugiej strony, jeśli tworzysz usługi sieci Web konieczna jest współpraca z istniejącej usługi sieci Web, użyj <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> przekształcenia schematów XML i tworzenia typów CLR, które zawierają dane w wybranym języku programowania.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> generates an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object that contains the collection of schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> Generuje <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> obiektu, który zawiera kolekcję schematów.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Access the set of schemas through the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Korzystać z zestawu schematów za pośrednictwem <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>.</source>
          <target state="translated">Aby szybko generować pliki definicji (XSD) schematów XML, które mogą korzystać z innych usług sieci Web, należy użyć <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Exporting Schemas Into an XmlSchemaSet</source>
          <target state="translated">Eksportowanie schematów w obiekcie XmlSchemaSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>To create an instance of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class that contains XML schema files, you should be aware of the following.</source>
          <target state="translated">Aby utworzyć wystąpienie <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> klasę, która zawiera pliki schematów XML, należy pamiętać o następujących.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>The set of types you are exporting are recorded as an internal set of data contracts.</source>
          <target state="translated">Zestaw typów, których dane są eksportowane są rejestrowane jako wewnętrzne zbiór kontraktów danych.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Thus, you can call the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</source>
          <target state="translated">W związku z tym można wywołać <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> metody kilka razy, aby dodać nowe typy do schematu bez zmniejszenie wydajności, ponieważ tylko nowe typy zostaną dodane do zestawu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>During the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> operation, the existing schemas are compared to the new schemas being added.</source>
          <target state="translated">Podczas <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> operacji nowych schematów dodawane są porównywane istniejących schematów.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>If there are conflicts, an exception will be thrown.</source>
          <target state="translated">Jeśli występują konflikty, zostanie zgłoszony wyjątek.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> instance.</source>
          <target state="translated">Jeśli dwa typy danych o tej samej kontraktu nazwę, ale różne kontrakty (inne elementy członkowskie) są eksportowane przez ten sam zwykle wykryty konflikt <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Using the Exporter</source>
          <target state="translated">Przy użyciu eksportera</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>A recommended way of using this class is as follows:</source>
          <target state="translated">Zalecany sposób używania tej klasy jest następujący:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Use one of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> overloads to determine whether the specified type or set of types can be exported.</source>
          <target state="translated">Użyj jednej z <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> przeciążenia, aby określić, czy określony typ lub zestaw typów mogą być eksportowane.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Use one of the overloads that is appropriate to your requirements.</source>
          <target state="translated">Użyj jednego z przeciążeń, które jest odpowiednie do własnych potrzeb.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Call the corresponding <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method.</source>
          <target state="translated">Wywołaj odpowiadającego <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Retrieve the schemas from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Pobrać schematów z <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład tworzy wystąpienie <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> i wywołuje <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to be exported.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> Zawierającego schematy do wyeksportowania.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> class with the specified set of schemas.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> klasy przy użyciu określonego zestawu schematów.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>Use this overload when you have an existing <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to which you want to add new schemas.</source>
          <target state="translated">Użyj tego przeciążenia, jeśli masz istniejącą <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> do której chcesz dodać nowych schematów.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>After you construct a <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> with this overload, call the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method to add new types to the existing set.</source>
          <target state="translated">Po utworzymy <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> o tego przeciążenia wywołań <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> metody w celu dodania nowych typów do istniejącego zestawu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</source>
          <target state="translated">Pobiera wartość wskazującą, czy można wyeksportować wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) typu (lub zestaw typów).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Not all CLR types can be used in data contracts.</source>
          <target state="translated">Nie wszystkie typy CLR można używać w kontraktach danych.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>For more information about what can be serialized, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji o to, co może być Zserializowany, zobacz <bpt id="p1">[</bpt>typy obsługiwane przez serializator kontraktu danych<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that contains the assemblies with the types to export.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> zawierający zestawy z typami do wyeksportowania.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</source>
          <target state="translated">Pobiera wartość wskazującą, czy zestaw typów .common języka wspólnego (CLR) zawartych w zestawie zestawy mogą być eksportowane.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the types can be exported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli można wyeksportować typy; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> that contains the specified types to export.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> zawierający określonych typów do wyeksportowania.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
          <source>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> can be exported.</source>
          <target state="translated">Pobiera wartość wskazującą, czy zestaw .common języka wspólnego (CLR) typów zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> mogą być eksportowane.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the types can be exported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli można wyeksportować typy; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to export.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Do wyeksportowania.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source>Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</source>
          <target state="translated">Pobiera wartość wskazującą, czy określony typ środowiska uruchomieniowego (języka wspólnego CLR) języka wspólnego mogą być eksportowane.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type can be exported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli typ można wyeksportować; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph> method.</source>
          <target state="translated">Następujące przykładowe wywołania <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29&gt;</ph> metoda przed wywołaniem <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</source>
          <target state="translated">Przekształca wspólnego typu języka wspólnego (CLR) lub zestaw typów, w zestawie schematów XML.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>As a recommended practice, use one of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> overloads to determine whether the specified type or set of types can be exported.</source>
          <target state="translated">Zalecanym rozwiązaniem, użyj jednej z <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> przeciążenia, aby określić, czy określony typ lub zestaw typów mogą być eksportowane.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>After calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method, retrieve the schemas from the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> metody, pobrać schematów z <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (of <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>) that contains the types to export.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (z <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>) zawiera typy do wyeksportowania.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>Transforms the types contained in the specified collection of assemblies.</source>
          <target state="translated">Przekształca typy zawarte w określonej kolekcji i zestawów.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>The <ph id="ph1">&lt;paramref name="assemblies" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblies" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> in the collection is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> w kolekcji jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>A  <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>) that contains the types to export.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>) zawiera typy do wyeksportowania.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>Transforms the types contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> passed to this method.</source>
          <target state="translated">Przekształca typów zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> przekazany do tej metody.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>The <ph id="ph1">&lt;paramref name="types" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>A type in the collection is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Typ w kolekcji jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to transform into an XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Do przekształcania schematu XML.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>Transforms the specified <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> type into an XML schema definition language (XSD) schema.</source>
          <target state="translated">Przekształca określony <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> typu do schematu XML schema definition language (XSD).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>Call the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> to determine whether the type can be exported.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> ustalenie, czy można wyeksportować typu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method, the schema can be retrieved through the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> metody schematu mogą zostać pobrane za pośrednictwem <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to query.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Do zapytania.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>Returns the top-level name and namespace for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Zwraca nazwę najwyższego poziomu i przestrzeń nazw dla <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the top-level name and namespace for this <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, which is written to the stream when writing this object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> Reprezentujący najwyższego poziomu nazwę i przestrzeń nazw dla tego <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, które są zapisywane do strumienia podczas pisania tego obiektu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The type to return a schema for.</source>
          <target state="translated">Typ do zwrócenia schemat.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>Returns the XML schema type for the specified type.</source>
          <target state="translated">Zwraca typ schematu XML dla określonego typu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> that contains the XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> Zawierający schematu XML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The main purpose of this method is to allow anonymous types in XML schema to be represented.</source>
          <target state="translated">Głównym celem tej metody jest umożliwienie typy anonimowe w schemacie XML do reprezentacji.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ typy anonimowe nie ma nazwy kontraktu i przestrzeni nazw, ich nie można przeszukiwać przy użyciu <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>This method returns the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph> definition for such types.</source>
          <target state="translated">Ta metoda zwraca <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph> definicji dla takich typów.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The types for which the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph> method returns a valid name, this method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Typy, dla którego <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph> metoda zwraca prawidłową nazwę, ta metoda zwraca <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that was exported.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Który został wyeksportowany.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>Returns the contract name and contract namespace for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Zwraca nazwę i kontraktu przestrzeń nazw kontraktu dla <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the contract name of the type and its namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> Reprezentujący nazwę kontraktu typu i jego przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> that contains options that can be set for the export operation.</source>
          <target state="translated">Pobiera lub ustawia <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> zawiera opcje, które można ustawić dla operacji eksportowania.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> that contains options used to customize how types are exported to schemas.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> Zawiera opcje używane w celu dostosowania sposobu typy są eksportowane do schematów.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
          <source>Gets the collection of exported XML schemas.</source>
          <target state="translated">Pobiera kolekcję schematów XML wyeksportowane.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <ph id="ph2">&lt;see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> Zawierającego schematy przekształcone z zestawu typowych języka wspólnego (CLR) po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /&gt;</ph> metody.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>