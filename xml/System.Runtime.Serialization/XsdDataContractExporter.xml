<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b10630be84113cc7ca50aaf4a6938af091054dba" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46689369" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6486e-101">Umożliwia przekształcenie zestaw typów programu .NET Framework, które są używane w kontraktach danych do pliku schematu XML (XSD).</span>
      <span class="sxs-lookup">
        <span data-stu-id="6486e-101">Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6486e-102">Użyj <xref:System.Runtime.Serialization.XsdDataContractExporter> klasy po utworzeniu usługi sieci Web, która zawiera dane reprezentowane przez typowych języka wspólnego (CLR) i kiedy należy wyeksportować schematów XML dla każdego typu do użycia przez inne usługi sieci Web.</span><span class="sxs-lookup"><span data-stu-id="6486e-102">Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</span></span> <span data-ttu-id="6486e-103">Oznacza to, że <xref:System.Runtime.Serialization.XsdDataContractExporter> przekształcający zestaw typów CLR schematów XML.</span><span class="sxs-lookup"><span data-stu-id="6486e-103">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas.</span></span> <span data-ttu-id="6486e-104">(Aby uzyskać więcej informacji na temat typów, których można użyć zobacz [typy obsługiwane przez serializator kontraktu danych](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) Schematy można następnie są dostępne za pośrednictwem dokumentu usługi sieci Web Services Description Language (WSDL) do użytku przez innych użytkowników, którzy muszą współpracować z Twoją usługą.</span><span class="sxs-lookup"><span data-stu-id="6486e-104">(For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</span></span>  
  
 <span data-ttu-id="6486e-105">Z drugiej strony, w przypadku tworzenia usługi sieci Web, które muszą współdziałać z istniejącą usługę sieci Web, użyj <xref:System.Runtime.Serialization.XsdDataContractImporter> do przekształcania schematów XML i tworzenia typów CLR, które reprezentują dane w wybranym języku programowania.</span><span class="sxs-lookup"><span data-stu-id="6486e-105">Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</span></span>  
  
 <span data-ttu-id="6486e-106"><xref:System.Runtime.Serialization.XsdDataContractExporter> Generuje <xref:System.Xml.Schema.XmlSchemaSet> obiektu, który zawiera kolekcję schematów.</span><span class="sxs-lookup"><span data-stu-id="6486e-106">The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas.</span></span> <span data-ttu-id="6486e-107">Dostęp do zestawu schematów za pośrednictwem <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6486e-107">Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6486e-108">Aby szybko wygenerować pliki (XSD) definicji schematu XML, które mogą wykorzystywać inne usługi sieci Web, należy użyć <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="6486e-108">To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a><span data-ttu-id="6486e-109">Eksportowanie schematów w zestawie XmlSchemaSet</span><span class="sxs-lookup"><span data-stu-id="6486e-109">Exporting Schemas Into an XmlSchemaSet</span></span>  
 <span data-ttu-id="6486e-110">Aby utworzyć wystąpienie <xref:System.Xml.Schema.XmlSchemaSet> klasę, która zawiera pliki schematów XML, należy pamiętać o następujących.</span><span class="sxs-lookup"><span data-stu-id="6486e-110">To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.</span></span>  
  
 <span data-ttu-id="6486e-111">Zestaw typów, których dane są eksportowane są rejestrowane jako wewnętrzny zbiór kontraktów danych.</span><span class="sxs-lookup"><span data-stu-id="6486e-111">The set of types you are exporting are recorded as an internal set of data contracts.</span></span> <span data-ttu-id="6486e-112">W związku z tym, można wywołać <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> metoda kilka razy, aby dodać nowe typy w schemacie bez zmniejszenie wydajności, ponieważ tylko nowych typów, które zostaną dodane do zestawu.</span><span class="sxs-lookup"><span data-stu-id="6486e-112">Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</span></span> <span data-ttu-id="6486e-113">Podczas <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operacji istniejących schematów są porównywane ze schematów nowe dodawane.</span><span class="sxs-lookup"><span data-stu-id="6486e-113">During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added.</span></span> <span data-ttu-id="6486e-114">Jeśli występują konflikty, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6486e-114">If there are conflicts, an exception will be thrown.</span></span> <span data-ttu-id="6486e-115">Jeśli dwa typy o tych samych danych kontraktu nazwę, ale różnych umów (inne elementy członkowskie) są eksportowane przez ten sam zwykle wykryty konflikt <xref:System.Runtime.Serialization.XsdDataContractExporter> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6486e-115">A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.</span></span>  
  
## <a name="using-the-exporter"></a><span data-ttu-id="6486e-116">Za pomocą eksporter</span><span class="sxs-lookup"><span data-stu-id="6486e-116">Using the Exporter</span></span>  
 <span data-ttu-id="6486e-117">Zalecany sposób użycia tej klasy jest następująca:</span><span class="sxs-lookup"><span data-stu-id="6486e-117">A recommended way of using this class is as follows:</span></span>  
  
1.  <span data-ttu-id="6486e-118">Użyj jednej z <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> przeciążenia, aby ustalić, czy można wyeksportować określonego typu lub zestaw typów.</span><span class="sxs-lookup"><span data-stu-id="6486e-118">Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span> <span data-ttu-id="6486e-119">Użyj jednego z przeciążeń, które jest odpowiednie do własnych potrzeb.</span><span class="sxs-lookup"><span data-stu-id="6486e-119">Use one of the overloads that is appropriate to your requirements.</span></span>  
  
2.  <span data-ttu-id="6486e-120">Wywołaj odpowiedni <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6486e-120">Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.</span></span>  
  
3.  <span data-ttu-id="6486e-121">Pobierz schematy z <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6486e-121">Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6486e-122">Poniższy przykład tworzy wystąpienie <xref:System.Runtime.Serialization.XsdDataContractExporter> i wywołuje <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> metody.</span><span class="sxs-lookup"><span data-stu-id="6486e-122">The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md">
      <span data-ttu-id="6486e-123">Typy obsługiwane przez serializator kontraktu danych</span>
      <span class="sxs-lookup">
        <span data-stu-id="6486e-123">Types Supported by the Data Contract Serializer</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md">
      <span data-ttu-id="6486e-124">Serializacja i deserializacja</span>
      <span class="sxs-lookup">
        <span data-stu-id="6486e-124">Serialization and Deserialization</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6486e-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6486e-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-126">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractExporter : System.Xml.Schema.XmlSchemaSet -&gt; System.Runtime.Serialization.XsdDataContractExporter" Usage="new System.Runtime.Serialization.XsdDataContractExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="6486e-127">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Zawiera schematy do wyeksportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-127">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> klasy przy użyciu określonego zestawu schematów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6486e-129">Użyj tego przeciążenia, jeśli masz istniejące <xref:System.Xml.Schema.XmlSchemaSet> do której należy dodać nowe schematy.</span><span class="sxs-lookup"><span data-stu-id="6486e-129">Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas.</span></span> <span data-ttu-id="6486e-130">Po konstruowania <xref:System.Runtime.Serialization.XsdDataContractExporter> przy użyciu tego przeciążenia, wywołaj <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> metody w celu dodania nowych typów do istniejącego zestawu.</span><span class="sxs-lookup"><span data-stu-id="6486e-130">After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6486e-131">Pobiera wartość wskazującą, czy można wyeksportować wspólnego języka wspólnego (CLR) typu (lub zestaw typów).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-131">Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6486e-132">Nie wszystkie typy CLR może służyć w kontraktach danych.</span><span class="sxs-lookup"><span data-stu-id="6486e-132">Not all CLR types can be used in data contracts.</span></span> <span data-ttu-id="6486e-133">Aby uzyskać więcej informacji na temat co może być Zserializowany, zobacz [typy obsługiwane przez serializator kontraktu danych](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="6486e-133">For more information about what can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies">
          <span data-ttu-id="6486e-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> z <see cref="T:System.Reflection.Assembly" /> zawierający zestawy z typami do wyeksportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-135">Pobiera wartość wskazującą, czy zestaw typów .common języka wspólnego (CLR) zawartych w zestawie zestawy można eksportować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-135">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6486e-136">
            <see langword="true" /> Jeśli można wyeksportować typy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-136">
              <see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="6486e-137">Element <see cref="T:System.Collections.Generic.ICollection`1" /> zawierający określonych typów do wyeksportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-137">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the specified types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-138">Pobiera wartość wskazującą, czy zestaw .common języka wspólnego (CLR) typów zawartych w <see cref="T:System.Collections.Generic.ICollection`1" /> można eksportować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-138">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6486e-139">
            <see langword="true" /> Jeśli można wyeksportować typy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-139">
              <see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CanExport : Type -&gt; bool" Usage="xsdDataContractExporter.CanExport type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6486e-140">
            <see cref="T:System.Type" /> Do wyeksportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-140">The <see cref="T:System.Type" /> to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-141">Pobiera wartość wskazującą, czy określony typ języka wspólnego środowiska uruchomieniowego (języka wspólnego CLR) można eksportować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-141">Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6486e-142">
            <see langword="true" /> Jeśli typ można wyeksportować; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-142">
              <see langword="true" /> if the type can be exported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6486e-143">Poniższy przykład wywołuje <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> metoda przed wywołaniem <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> metody.</span><span class="sxs-lookup"><span data-stu-id="6486e-143">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6486e-144">Przekształca wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) typu lub zestaw typów, do zestawu schematów XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-144">Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6486e-145">Zalecanym rozwiązaniem jest użycie jednej z <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> przeciążenia, aby ustalić, czy można wyeksportować określonego typu lub zestaw typów.</span><span class="sxs-lookup"><span data-stu-id="6486e-145">As a recommended practice, use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span>  
  
 <span data-ttu-id="6486e-146">Po wywołaniu <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> metody pobierania schematów z <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6486e-146">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; unit" Usage="xsdDataContractExporter.Export assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies">
          <span data-ttu-id="6486e-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (z <see cref="T:System.Reflection.Assembly" />) zawiera typy do wyeksportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-148">Przekształca typy zawarte w określonej kolekcji i zestawów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-148">Transforms the types contained in the specified collection of assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6486e-149">
            <paramref name="assemblies" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-149">The <paramref name="assemblies" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6486e-150">
            <see cref="T:System.Reflection.Assembly" /> w kolekcji jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-150">An <see cref="T:System.Reflection.Assembly" /> in the collection is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; unit" Usage="xsdDataContractExporter.Export types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="6486e-151">A <see cref="T:System.Collections.Generic.ICollection`1" /> (z <see cref="T:System.Type" />) zawiera typy do wyeksportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-151">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-152">Przekształca typów zawartych w <see cref="T:System.Collections.Generic.ICollection`1" /> przekazany do tej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-152">Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6486e-153">
            <paramref name="types" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-153">The <paramref name="types" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6486e-154">Typ w kolekcji jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-154">A type in the collection is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Export : Type -&gt; unit" Usage="xsdDataContractExporter.Export type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6486e-155">
            <see cref="T:System.Type" /> Do przekształcania schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-155">The <see cref="T:System.Type" /> to transform into an XML schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-156">Przekształca określony [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] typu do schematu języka (XSD) definicji schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-156">Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6486e-157">Wywołaj <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> do określenia, czy typ można eksportować.</span><span class="sxs-lookup"><span data-stu-id="6486e-157">Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported.</span></span> <span data-ttu-id="6486e-158">Po wywołaniu <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> metody schemat może zostać pobrany <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6486e-158">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6486e-159">
            <paramref name="type" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-159">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetRootElementName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetRootElementName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6486e-160">
            <see cref="T:System.Type" /> Do wykonywania zapytań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-160">The <see cref="T:System.Type" /> to query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-161">Zwraca nazwę najwyższego poziomu i przestrzeń nazw dla <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-161">Returns the top-level name and namespace for the <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6486e-162">
            <see cref="T:System.Xml.XmlQualifiedName" /> Reprezentujący nazwę najwyższego poziomu i przestrzeni nazw dla tego <see cref="T:System.Type" />, który jest zapisywany do strumienia podczas zapisywania tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-162">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6486e-163">
            <paramref name="type" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-163">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaType : Type -&gt; System.Xml.Schema.XmlSchemaType" Usage="xsdDataContractExporter.GetSchemaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6486e-164">Typ do zwrócenia schemat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-164">The type to return a schema for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-165">Zwraca typ schematu XML dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-165">Returns the XML schema type for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6486e-166">
            <see cref="T:System.Xml.Schema.XmlSchemaType" /> Zawierający schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-166">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6486e-167">Głównym celem tej metody jest do umożliwienia typów anonimowych w schemacie XML może być reprezentowana.</span><span class="sxs-lookup"><span data-stu-id="6486e-167">The main purpose of this method is to allow anonymous types in XML schema to be represented.</span></span> <span data-ttu-id="6486e-168">Ponieważ typy anonimowe nie ma nazwy kontraktu i przestrzeni nazw, ich nie można przeszukiwać za pomocą <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span><span class="sxs-lookup"><span data-stu-id="6486e-168">Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span></span> <span data-ttu-id="6486e-169">Ta metoda zwraca <xref:System.Xml.Schema.XmlSchemaType> definicji dla tych typów.</span><span class="sxs-lookup"><span data-stu-id="6486e-169">This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types.</span></span> <span data-ttu-id="6486e-170">Typy dla których <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> metoda zwraca prawidłową nazwę, Metoda ta zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="6486e-170">The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6486e-171">
            <paramref name="type" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-171">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaTypeName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetSchemaTypeName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6486e-172">
            <see cref="T:System.Type" /> Który został wyeksportowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-172">The <see cref="T:System.Type" /> that was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6486e-173">Zwraca nazwę i kontrakt przestrzeń nazw kontraktu dla <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-173">Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6486e-174">
            <see cref="T:System.Xml.XmlQualifiedName" /> Reprezentujący nazwę kontraktu typu i jego przestrzeń nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-174">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6486e-175">
            <paramref name="type" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-175">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ExportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6486e-176">Pobiera lub ustawia <see cref="T:System.Runtime.Serialization.ExportOptions" /> zawiera opcje, które można ustawić dla operacji eksportu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-176">Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6486e-177">
            <see cref="T:System.Runtime.Serialization.ExportOptions" /> Zawiera opcje używane do dostosowywania, jak typy są eksportowane do schematów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-177">An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet" Usage="System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6486e-178">Pobiera kolekcję schematów XML wyeksportowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-178">Gets the collection of exported XML schemas.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6486e-179">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Zawiera schematy przekształcone z zestawu typowych języka wspólnego (CLR) po wywołaniu <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6486e-179">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>