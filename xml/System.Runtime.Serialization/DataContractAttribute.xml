<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db3b27208fbee128c55a4f26504bee403a782e93" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39756038" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że typ definiuje lub implementuje kontraktu danych i jest możliwy do serializacji przez element serializujący, takich jak <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. Aby ułatwić ich typ możliwy do serializacji, autorzy typu należy zdefiniować dla swojego typu kontraktu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastosuj <xref:System.Runtime.Serialization.DataContractAttribute> atrybutu typy (klasy, struktury lub wyliczenia), które są używane podczas operacji serializacji i deserializacji za <xref:System.Runtime.Serialization.DataContractSerializer>. Jeśli wysyłanie lub odbieranie komunikatów za pomocą infrastruktury usług Windows Communication Foundation (WCF), należy również zastosować <xref:System.Runtime.Serialization.DataContractAttribute> do dowolnej klasy, które przechowywania i manipulowanie danymi wysłany w wiadomości. Aby uzyskać więcej informacji na temat kontraktów danych zobacz [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Należy również zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do dowolnego pola, właściwości lub zdarzenia, który przechowuje wartości chcesz serializacji. Stosując <xref:System.Runtime.Serialization.DataContractAttribute>, jawnie włączyć <xref:System.Runtime.Serialization.DataContractSerializer> do serializacji i deserializacji danych.  
  
> [!CAUTION]
>  Można zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do pól prywatnych. Należy pamiętać, że dane zwrócone przez pole (nawet jeśli jest to element prywatny) jest serializowana i przeprowadzona i dlatego można przeglądać lub przechwycony przez złośliwego użytkownika lub procesu.  
  
 Aby uzyskać więcej informacji na temat kontraktów danych, zobacz tematy wymienione w [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
## <a name="data-contracts"></a>Kontrakty danych  
 A *kontraktu danych* jest abstrakcyjny opis zestawu pól z nazwę i typ danych dla każdego pola. Kontrakt danych istnieje poza wszelkie pojedynczej implementacji do usług na różnych platformach pod kątem współdziałania. Tak długo, jak długo dane przekazywane między usługami spełnia te same kontrakty, wszystkich usług może przetwarzać dane. Tego przetwarzania jest także znana jako *luźno system*. Kontraktu danych również jest podobny do interfejsu, kontrakt Określa, jak dane muszą być dostarczone dzięki czemu mogą być przetwarzane przez aplikację. Na przykład kontraktu danych może wywołać dla typu danych o nazwie "Person", który ma dwa pola tekstowe, o nazwie "FirstName" i "LastName". Aby utworzyć kontrakt danych, zastosuj <xref:System.Runtime.Serialization.DataContractAttribute> do klasy i zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do dowolnego pola lub właściwości, które muszą być serializowane. Po serializacji, jest zgodny kontraktu danych, która jest niejawnie wbudowana w typ danych.  
  
> [!NOTE]
>  Kontrakt danych różni się znacząco od rzeczywistego interfejsu w jego zachowanie dziedziczenia. Interfejsy są dziedziczone przez wszystkie typy pochodne. Po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> do klasy bazowej, typy pochodne nie dziedziczą atrybutu lub zachowanie. Jednak jeśli typ pochodny ma kontraktu danych, dane członków klasy podstawowej są serializowane. Jednakże, należy najpierw zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do nowych członków w klasie pochodnej, aby były możliwe do serializacji.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>Narzędzia SvcUtil i dokumentów schematu XML  
 Jest wymiana danych z innych usług, należy opisać kontraktu danych. Aby uzyskać bieżącą wersję <xref:System.Runtime.Serialization.DataContractSerializer>, schematu XML może służyć do definiowania kontraktów danych. (Inne formy opis/metadanych można użyć w tym samym celu). Aby utworzyć schemat XML z aplikacji, użyj [narzędzia narzędzie metadanych elementu ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) z **/dconly** opcji wiersza polecenia. Gdy dane wejściowe to narzędzie jest zestawem, domyślnie, narzędzie wygeneruje zestaw schematów XML, które definiują wszystkie typy kontraktu danych, w tym zestawie. Z drugiej strony umożliwia także narzędzia Svcutil.exe do tworzenia definicji klasy Visual Basic lub C#, które są zgodne z wymaganiami schematów XML, które użyć konstrukcji, które mogą być wyrażone w kontraktach danych. W tym przypadku **/dconly** opcji wiersza polecenia nie jest wymagana.  
  
 Jeśli dane wejściowe do narzędzia Svcutil.exe schematu XML domyślnie to narzędzie tworzy zestaw klas. Podczas badania tych klas, zauważysz, że <xref:System.Runtime.Serialization.DataContractAttribute> zostały zastosowane. Można użyć tych klas, aby utworzyć nową aplikację do przetwarzania danych, które muszą być wymieniane z innymi usługami.  
  
 Można również uruchomić narzędzie względem punktu końcowego, który zwraca dokument usługi sieci Web Services Description Language (WSDL) w celu automatycznego generowania kodu i konfiguracji do tworzenia klienta usługi Windows Communication Foundation (WCF). Wygenerowany kod zawiera typy, które są oznaczone <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="reusing-existing-types"></a>Ponowne używanie istniejących typów  
 Kontrakt danych ma dwa podstawowe wymagania: nazwy stabilne i listy elementów członkowskich. Stabilna nazwa składa się z identyfikatora URI obszaru nazw (URI) i lokalna nazwa kontraktu. Domyślnie, po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> klasy, używa nazwy klasy jako nazwę lokalną i klasy w przestrzeni nazw (z prefiksem "http://schemas.datacontract.org/2004/07/") jako identyfikator URI przestrzeni nazw. Ustawienia domyślne można zmienić przez ustawienie <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> i <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> właściwości. Możesz również zmienić przestrzeni nazw, stosując <xref:System.Runtime.Serialization.ContractNamespaceAttribute> do przestrzeni nazw. Użyj tej funkcji, jeśli masz istniejący typ, który przetwarza dane dokładnie tak, jak wymagają, ale ma inny obszar nazw i nazwę klasy z kontraktu danych. Przez zastąpienie wartości domyślne, można ponownie użyć istniejącego typu oraz korzystać z serializowanych danych są zgodne z kontraktu danych.  
  
> [!NOTE]
>  W każdy kod, można użyć słowa `DataContract` zamiast dłuższe <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="versioning"></a>Przechowywanie wersji  
 Kontrakt danych również może obsłużyć nowsze wersje samego siebie. Oznacza to kiedy nowsza wersja kontraktu obejmuje dodatkowe dane, że dane są przechowywane i powrót do nadawcy w charakterze. Aby to zrobić, należy zaimplementować <xref:System.Runtime.Serialization.IExtensibleDataObject> interfejsu.  
  
 Aby uzyskać więcej informacji dotyczących wersjonowania, zobacz [przechowywanie wersji kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 W poniższym przykładzie serializuje i deserializuje klasy o nazwie `Person` do której <xref:System.Runtime.Serialization.DataContractAttribute> zostały zastosowane. Należy pamiętać, że <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> i <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> właściwości zostały ustawione na wartości, które zastępują ustawienia domyślne.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> została jawnie ustawiona.</summary>
        <value>Zwraca <see langword="true" /> Jeśli nazwa została jawnie ustawiona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> została jawnie ustawiona.</summary>
        <value>Zwraca <see langword="true" /> Jeśli przestrzeń nazw została jawnie ustawiona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy chcesz zachować dane odwołanie do obiektu.</summary>
        <value>
          <see langword="true" /> Aby zachować dane odwołanie do obiektu za pomocą standardowego języka XML; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj `IsReference` właściwości w celu poinstruowania <xref:System.Runtime.Serialization.DataContractSerializer> do wstawienia konstrukcji XML, które zachowują informacje referencyjne obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> została jawnie ustawiona.</summary>
        <value>
          <see langword="true" /> Jeśli jawnie ustawiono odwołania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kontraktu danych dla typu.</summary>
        <value>Lokalna nazwa kontraktu danych. Wartość domyślna to nazwa klasy, który jest stosowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> Właściwość jest używana do nadaj nazwę kontraktu danych, która jest nazwą typu schematu XML. Aby uzyskać więcej informacji, zobacz [nazwy kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 Domyślnie, Nazwa kontraktu danych jest nazwa typu, <xref:System.Runtime.Serialization.DataContractAttribute> jest stosowany do. Jednak może być powody, aby zmienić tę nazwę domyślną. Jedną z przyczyn jest umożliwienie istniejącego typu do przetwarzania danych, który musi być zgodna z istniejących kontraktu danych. Na przykład istnieje typ o nazwie `Person` , ale kontraktu danych, zawarte w schemacie XML wymaga, aby nazwa `Customer`. Kontrakt może być spełnione przez ustawienie wartości właściwości `Customer`.  
  
 Drugi przyczyna jest umożliwiające generowanie nazwy, które są nieprawidłowe jako nazwy typu. Na przykład jeśli zapotrzebowania na nazwę, która nie jest dozwolony jako nazwa typu kontraktu danych, należy ustawić wartość właściwości tej nazwy niedozwolonych. Na przykład ciąg "$value" jest niedozwolony jako nazwa typu, ale jest dozwolona jako <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> wartości właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar nazw dla kontraktu danych dla typu.</summary>
        <value>Przestrzeń nazw kontraktu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby określić określonej przestrzeni nazw, jeśli danego typu musi zwracać danych, która jest zgodna z kontraktem danych specyficznych dla.  
  
> [!TIP]
>  Aby pomyślnie przekazywane dane nazwę danych w kontraktu danych musi być taki sam zarówno klient, jak i serwera. Projekty języka Visual Basic, domyślnie, Dodaj prefiks do przestrzeni nazw, zdefiniowane w każdym pliku (nazywanego "głównej przestrzeni nazw," o nazwie po projektu). Dodanie tego prefiksu powoduje, że klient i serwer przestrzeni nazw ma być inna dla tego samego typu. Rozwiązanie to można ustawić <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> właściwość "", lub jawnie ustaw przestrzeń nazw kontraktu danych w tej właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>