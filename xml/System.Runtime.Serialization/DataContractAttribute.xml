<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fc29ffa8ec7e820a7a5e74c2c4d83b28b86bce1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69060287" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że typ definiuje lub implementuje kontrakt danych i jest możliwy do serializacji przez serializator, taki jak <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. Aby można było serializować typ, autorzy muszą definiować kontrakt danych dla ich typu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastosuj atrybut do typów (klasy, struktury lub wyliczenia), które są używane w operacjach serializacji i deserializacji <xref:System.Runtime.Serialization.DataContractSerializer>przez. <xref:System.Runtime.Serialization.DataContractAttribute> W przypadku wysyłania lub odbierania komunikatów przy użyciu infrastruktury Windows Communication Foundation (WCF) należy również zastosować <xref:System.Runtime.Serialization.DataContractAttribute> do wszystkich klas, które przechowują dane wysyłane w wiadomości i manipulowanie nimi. Aby uzyskać więcej informacji na temat kontraktów danych, zobacz [Korzystanie z kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Należy również zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do dowolnego pola, właściwości lub zdarzenia, które przechowuje wartości, które mają być serializowane. Stosując <xref:System.Runtime.Serialization.DataContractAttribute>, jawnie <xref:System.Runtime.Serialization.DataContractSerializer> Włącz, aby serializować i deserializować dane.  
  
> [!CAUTION]
>  Można zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do pól Private. Należy pamiętać, że dane zwracane przez pole (nawet jeśli są prywatne) są serializowane i deserializowane, a tym samym może być wyświetlana lub przechwycona przez złośliwego użytkownika lub proces.  
  
 Aby uzyskać więcej informacji na temat umów dotyczących danych, zobacz tematy wymienione w temacie [Using Data](~/docs/framework/wcf/feature-details/using-data-contracts.md)Contract.  
  
## <a name="data-contracts"></a>Kontrakty danych  
 *Kontrakt danych* to abstrakcyjny opis zestawu pól o nazwie i typie danych dla każdego pola. Kontrakt danych istnieje poza żadną pojedynczą implementacją, aby umożliwić współdziałanie usług na różnych platformach. Tak długo, jak dane przesyłane między usługami są zgodne z tym samym kontraktem, wszystkie usługi mogą przetwarzać dane. To przetwarzanie jest również znane jako *luźno połączony system*. Kontrakt danych jest również podobny do interfejsu, w którym kontrakt określa sposób dostarczania danych, tak aby mogły one być przetwarzane przez aplikację. Na przykład kontrakt danych może wywoływać typ danych o nazwie "Person", który ma dwa pola tekstowe o nazwie "FirstName" i "LastName". Aby utworzyć kontrakt danych, Zastosuj <xref:System.Runtime.Serialization.DataContractAttribute> do klasy i <xref:System.Runtime.Serialization.DataMemberAttribute> Zastosuj do wszystkich pól lub właściwości, które muszą być serializowane. Podczas serializacji dane są zgodne z kontraktem danych, który jest niejawnie wbudowany w typ.  
  
> [!NOTE]
>  Kontrakt danych różni się znacznie od rzeczywistego interfejsu w ramach zachowania dziedziczenia. Interfejsy są dziedziczone przez wszystkie typy pochodne. Po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> do klasy bazowej typy pochodne nie dziedziczą atrybutu ani zachowania. Jeśli jednak typ pochodny ma umowę danych, składowe danych klasy bazowej są serializowane. Należy jednak zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do nowych elementów członkowskich w klasie pochodnej, aby je serializować.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>Dokumenty schematu XML i narzędzie SvcUtil  
 W przypadku wymiany danych z innymi usługami należy opisać umowę dotyczącą danych. W przypadku bieżącej wersji <xref:System.Runtime.Serialization.DataContractSerializer>programu schemat XML może służyć do definiowania kontraktów danych. (W tym samym celu można użyć innych form metadanych/opisu). Aby utworzyć schemat XML z aplikacji, użyj [Narzędzia metadanych ServiceModel (Svcutil. exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) z opcją wiersza polecenia **/dconly** . Gdy dane wejściowe narzędzia są zestawem, narzędzie generuje zestaw schematów XML, które definiują wszystkie typy kontraktów danych, które znajdują się w tym zestawie. Z kolei można także użyć narzędzia Svcutil. exe, aby utworzyć definicje Visual Basic lub C# klasy, które są zgodne z wymaganiami schematów XML, które używają konstrukcji, które mogą być wyrażane przez Kontrakty danych. W takim przypadku opcja wiersza polecenia **/dconly** nie jest wymagana.  
  
 Jeśli dane wejściowe narzędzia Svcutil. exe są schematem XML, narzędzie tworzy zestaw klas. Jeśli przebadasz te klasy, zobaczysz, <xref:System.Runtime.Serialization.DataContractAttribute> że został on zastosowany. Za pomocą tych klas można utworzyć nową aplikację do przetwarzania danych, które muszą być wymieniane z innymi usługami.  
  
 Narzędzie można również uruchomić względem punktu końcowego, który zwraca dokument Web Services Description Language (WSDL), aby automatycznie wygenerować kod i konfigurację w celu utworzenia klienta Windows Communication Foundation (WCF). Wygenerowany kod zawiera typy, które są oznaczone symbolem <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="reusing-existing-types"></a>Używanie istniejących typów  
 Kontrakt danych ma dwa podstawowe wymagania: stabilną nazwę i listę członków. Stabilna nazwa składa się z identyfikatora URI (Uniform Resource Identifier) przestrzeni nazw i nazwy lokalnej kontraktu. Domyślnie, gdy stosujesz <xref:System.Runtime.Serialization.DataContractAttribute> do klasy, używa ona nazwy klasy jako nazwy lokalnej i przestrzeni nazw klasy ( `"http://schemas.datacontract.org/2004/07/"`poprzedzone prefiksem) jako identyfikator URI przestrzeni nazw. Można zastąpić ustawienia domyślne, ustawiając <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> właściwości i. <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> Możesz również zmienić przestrzeń nazw, stosując <xref:System.Runtime.Serialization.ContractNamespaceAttribute> do przestrzeni nazw. Użyj tej funkcji, jeśli masz istniejący typ, który przetwarza dane dokładnie tak, jak jest to wymagane, ale ma inną przestrzeń nazw i nazwę klasy z kontraktu danych. Zastępując wartości domyślne, można ponownie użyć istniejącego typu, aby serializować dane były zgodne z kontraktem danych.  
  
> [!NOTE]
>  W dowolnym kodzie można użyć wyrazu `DataContract` zamiast dłuższej. <xref:System.Runtime.Serialization.DataContractAttribute>  
  
## <a name="versioning"></a>Przechowywanie wersji  
 Umowę dotyczącą danych można również uwzględnić w nowszych wersjach. Oznacza to, że gdy nowsza wersja kontraktu zawiera dodatkowe dane, dane są przechowywane i zwracane do nadawcy nienaruszone. W tym celu Zaimplementuj <xref:System.Runtime.Serialization.IExtensibleDataObject> interfejs.  
  
 Aby uzyskać więcej informacji na temat przechowywania wersji, zobacz [przechowywanie wersji kontraktu danych](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 Poniższy przykład serializacji i deserializacji klasy o nazwie `Person` , do <xref:System.Runtime.Serialization.DataContractAttribute> której został zastosowany. Należy pamiętać, <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> że <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> właściwości i zostały ustawione na wartości, które zastępują ustawienia domyślne.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">Używanie kontraktów danych</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> czy został jawnie ustawiony.</summary>
        <value><see langword="true" />Jeśli nazwa została jawnie ustawiona; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> czy został jawnie ustawiony.</summary>
        <value><see langword="true" />Jeśli przestrzeń nazw została ustawiona jawnie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy mają być zachowywane dane referencyjne obiektu.</summary>
        <value><see langword="true" />Aby zachować dane referencyjne obiektu przy użyciu standardowego kodu XML; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby nakazać <xref:System.Runtime.Serialization.DataContractSerializer> Wstawianie konstrukcji XML, które zachowują informacje o odwołaniach do obiektu. `IsReference`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> czy został jawnie ustawiony.</summary>
        <value><see langword="true" />Jeśli odwołanie zostało jawnie ustawione; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kontraktu danych dla typu.</summary>
        <value>Nazwa lokalna kontraktu danych. Wartość domyślna to nazwa klasy, do której zastosowano atrybut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> Właściwość służy do nadawania nazwy do kontraktu danych, który jest nazwą typu w schemacie XML. Aby uzyskać więcej informacji, zobacz [nazwy kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 Domyślnie nazwą kontraktu danych jest nazwa typu, do którego <xref:System.Runtime.Serialization.DataContractAttribute> jest stosowana. Jednak mogą istnieć powody zmiany tej nazwy domyślnej. Jedną z przyczyn jest umożliwienie istniejącemu typowi przetwarzania danych, które muszą być zgodne z istniejącym kontraktem danych. Na przykład istnieje typ o nazwie `Person` , ale kontrakt danych zawarty w schemacie XML wymaga, aby nazwa była. `Customer` Umowę można spełnić, ustawiając wartość właściwości na `Customer`.  
  
 Drugim powodem jest umożliwienie generacji nazw, które są nieprawidłowe jako nazwy typów. Na przykład jeśli kontrakt danych wymaga nazwy, która nie jest dozwolona jako nazwa typu, ustaw wartość właściwości na tę niedozwoloną nazwę. Na przykład ciąg "$value" jest niedozwolony jako nazwa typu, ale jest dozwolony jako <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> wartość właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przestrzeń nazw dla kontraktu danych dla typu.</summary>
        <value>Przestrzeń nazw kontraktu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby określić konkretną przestrzeń nazw, jeśli typ musi zwracać dane, które są zgodne z określonym kontraktem danych.  
  
> [!TIP]
>  Aby dane zostały pomyślnie przesłane, nazwa danych w kontrakcie danych musi być taka sama zarówno w kliencie, jak i na serwerze. Visual Basic projekty domyślnie Dodaj prefiks do przestrzeni nazw zdefiniowanej w każdym pliku (nazywany "główną przestrzenią nazw" o nazwie po projekcie). Dodanie tego prefiksu powoduje, że przestrzenie nazw klienta i serwera mają być różne dla tego samego typu. Rozwiązanie polega na ustawieniu <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> właściwości na "" lub jawnie ustawić przestrzeń nazw kontraktu danych w tej właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
