<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="17be3-101">Określa, że typ definiuje lub implementuje kontraktu danych i jest możliwy do serializacji przez serializator, takich jak <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="17be3-101">Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="17be3-102">Aby ich typ możliwy do serializacji, autorzy typ musi definiować ich typu kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-102">To make their type serializable, type authors must define a data contract for their type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17be3-103">Zastosuj <xref:System.Runtime.Serialization.DataContractAttribute> do typów (klasy, struktury lub wyliczenia), które są używane podczas operacji serializacji i deserializacji przez atrybut <xref:System.Runtime.Serialization.DataContractSerializer>.</span><span class="sxs-lookup"><span data-stu-id="17be3-103">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="17be3-104">Czy można wysyłać ani odbierać wiadomości przy użyciu [!INCLUDE[indigo1](~/includes/indigo1-md.md)] infrastruktury, należy także zastosować <xref:System.Runtime.Serialization.DataContractAttribute> do dowolnej klasy, które przechowywania i manipulowania dane przesłane w wiadomości.</span><span class="sxs-lookup"><span data-stu-id="17be3-104">If you send or receive messages by using the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] infrastructure, you should also apply the <xref:System.Runtime.Serialization.DataContractAttribute> to any classes that hold and manipulate data sent in messages.</span></span> <span data-ttu-id="17be3-105">Aby uzyskać więcej informacji na temat kontraktów danych, zobacz [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="17be3-105">For more information about data contracts, see [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="17be3-106">Należy także zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do dowolnego pola, właściwości lub zdarzeń, który przechowuje wartości mają do serializacji.</span><span class="sxs-lookup"><span data-stu-id="17be3-106">You must also apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any field, property, or event that holds values you want to serialize.</span></span> <span data-ttu-id="17be3-107">Stosując <xref:System.Runtime.Serialization.DataContractAttribute>, jawnie włączyć <xref:System.Runtime.Serialization.DataContractSerializer> do serializowania i deserializowania danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-107">By applying the <xref:System.Runtime.Serialization.DataContractAttribute>, you explicitly enable the <xref:System.Runtime.Serialization.DataContractSerializer> to serialize and deserialize the data.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17be3-108">Możesz zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do pól prywatnych.</span><span class="sxs-lookup"><span data-stu-id="17be3-108">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to private fields.</span></span> <span data-ttu-id="17be3-109">Należy pamiętać, że jest serializowany danych zwróconych przez pole (nawet jeśli jest to element prywatny) i deserializacji i w związku z tym można wyświetlić lub przechwycony przez złośliwy użytkownik lub proces.</span><span class="sxs-lookup"><span data-stu-id="17be3-109">Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</span></span>  
  
 <span data-ttu-id="17be3-110">Aby uzyskać więcej informacji na temat kontraktów danych, zobacz tematy wymienione w [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="17be3-110">For more information about data contracts, see the topics listed in [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
## <a name="data-contracts"></a><span data-ttu-id="17be3-111">Kontrakty danych</span><span class="sxs-lookup"><span data-stu-id="17be3-111">Data Contracts</span></span>  
 <span data-ttu-id="17be3-112">A *kontraktu danych* jest abstrakcyjny opis zestawu pól z typem danych dla każdego pola.</span><span class="sxs-lookup"><span data-stu-id="17be3-112">A *data contract* is an abstract description of a set of fields with a name and data type for each field.</span></span> <span data-ttu-id="17be3-113">Kontrakt danych istnieje poza jednym implementacji do usług na różnych platformach współdziałanie.</span><span class="sxs-lookup"><span data-stu-id="17be3-113">The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</span></span> <span data-ttu-id="17be3-114">Jak długo dane przekazywane między usługami spełnia ten sam kontrakt, wszystkie usługi może przetwarzać danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-114">As long as the data passed between the services conforms to the same contract, all the services can process the data.</span></span> <span data-ttu-id="17be3-115">To przetwarzanie jest także znana jako *luźno systemu*.</span><span class="sxs-lookup"><span data-stu-id="17be3-115">This processing is also known as a *loosely coupled system*.</span></span> <span data-ttu-id="17be3-116">Kontrakt danych również jest podobny do interfejsu, w tym kontrakt Określa, jak dane muszą być dostarczone tak, aby mogą być przetwarzane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="17be3-116">A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</span></span> <span data-ttu-id="17be3-117">Na przykład kontraktu danych może wywołać dla typu danych o nazwie "Osoba", która ma dwa pola tekstowe, o nazwie "Imię" i "Nazwisko".</span><span class="sxs-lookup"><span data-stu-id="17be3-117">For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</span></span> <span data-ttu-id="17be3-118">Aby utworzyć kontrakt danych, należy zastosować <xref:System.Runtime.Serialization.DataContractAttribute> do klasy i zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> pola lub właściwości, które muszą być serializowane.</span><span class="sxs-lookup"><span data-stu-id="17be3-118">To create a data contract, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class and apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any fields or properties that must be serialized.</span></span> <span data-ttu-id="17be3-119">Podczas serializacji, danych jest zgodna z niejawnie wbudowany w typie kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-119">When serialized, the data conforms to the data contract that is implicitly built into the type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17be3-120">Kontrakt danych różni się znacząco od rzeczywistej interfejsu w jego zachowanie dziedziczenia.</span><span class="sxs-lookup"><span data-stu-id="17be3-120">A data contract differs significantly from an actual interface in its inheritance behavior.</span></span> <span data-ttu-id="17be3-121">Interfejsy są dziedziczone przez wszystkie typy pochodne.</span><span class="sxs-lookup"><span data-stu-id="17be3-121">Interfaces are inherited by any derived types.</span></span> <span data-ttu-id="17be3-122">Po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> do klasy podstawowej, typy pochodne dziedziczy atrybut lub zachowanie.</span><span class="sxs-lookup"><span data-stu-id="17be3-122">When you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a base class, the derived types do not inherit the attribute or the behavior.</span></span> <span data-ttu-id="17be3-123">Jednak jeśli typ pochodny ma kontraktu danych, elementy członkowskie danych klasy podstawowej są serializowane.</span><span class="sxs-lookup"><span data-stu-id="17be3-123">However, if a derived type has a data contract, the data members of the base class are serialized.</span></span> <span data-ttu-id="17be3-124">Jednak należy zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do nowych elementów członkowskich w klasie pochodnej aby je do serializacji.</span><span class="sxs-lookup"><span data-stu-id="17be3-124">However, you must apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to new members in a derived class to make them serializable.</span></span>  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a><span data-ttu-id="17be3-125">Narzędzia SvcUtil i dokumentach schematów XML.</span><span class="sxs-lookup"><span data-stu-id="17be3-125">XML Schema Documents and the SvcUtil Tool</span></span>  
 <span data-ttu-id="17be3-126">Jeśli są wymiana danych z innych usług, musi opisywać kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-126">If you are exchanging data with other services, you must describe the data contract.</span></span> <span data-ttu-id="17be3-127">Dla bieżącej wersji <xref:System.Runtime.Serialization.DataContractSerializer>, schemat XML może służyć do definiowania kontraktów danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-127">For the current version of the <xref:System.Runtime.Serialization.DataContractSerializer>, an XML schema can be used to define data contracts.</span></span> <span data-ttu-id="17be3-128">(Inne rodzaje metadanych/opis mogą służyć do tych samych celów.) Aby utworzyć schemat XML z aplikacji, użyj [narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) z **/dconly** opcji wiersza polecenia.</span><span class="sxs-lookup"><span data-stu-id="17be3-128">(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) with the **/dconly** command line option.</span></span> <span data-ttu-id="17be3-129">Gdy dane wejściowe do narzędzia jest zestawem, domyślnie narzędzie generuje zestaw schematów XML, które definiują wszystkie typy kontraktu danych, w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="17be3-129">When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</span></span> <span data-ttu-id="17be3-130">Z kolei umożliwia także z narzędzia Svcutil.exe do tworzenia definicji klasy Visual Basic lub C#, które odpowiadają wymaganiom schematów XML, korzystających z konstrukcji, których można wyrazić za kontraktów danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-130">Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</span></span> <span data-ttu-id="17be3-131">W takim przypadku **/dconly** opcji wiersza polecenia nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="17be3-131">In this case, the **/dconly** command line option is not required.</span></span>  
  
 <span data-ttu-id="17be3-132">Jeśli w danych wejściowych z narzędzia Svcutil.exe schematu XML Domyślnie narzędzie tworzy zestaw klas.</span><span class="sxs-lookup"><span data-stu-id="17be3-132">If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</span></span> <span data-ttu-id="17be3-133">Podczas badania tych klas, stwierdzisz, że <xref:System.Runtime.Serialization.DataContractAttribute> została zastosowana.</span><span class="sxs-lookup"><span data-stu-id="17be3-133">If you examine those classes, you find that the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="17be3-134">Te klasy można użyć do utworzenia nowej aplikacji do przetwarzania danych, które muszą być wymieniane z innymi usługami.</span><span class="sxs-lookup"><span data-stu-id="17be3-134">You can use those classes to create a new application to process data that must be exchanged with other services.</span></span>  
  
 <span data-ttu-id="17be3-135">Można również uruchomić narzędzie względem punktu końcowego, który zwraca dokumentu Web Services Description Language (WSDL) w celu automatycznego generowania kodu i konfigurację, aby utworzyć [!INCLUDE[indigo1](~/includes/indigo1-md.md)] klienta.</span><span class="sxs-lookup"><span data-stu-id="17be3-135">You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client.</span></span> <span data-ttu-id="17be3-136">Wygenerowany kod zawiera typy, które są oznaczone ikoną z <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="17be3-136">The generated code includes types that are marked with the <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="reusing-existing-types"></a><span data-ttu-id="17be3-137">Ponowne wykorzystywanie istniejących typów</span><span class="sxs-lookup"><span data-stu-id="17be3-137">Reusing Existing Types</span></span>  
 <span data-ttu-id="17be3-138">Kontrakt danych ma dwa podstawowe wymagania: nazwy stabilny i listy elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="17be3-138">A data contract has two basic requirements: a stable name and a list of members.</span></span> <span data-ttu-id="17be3-139">Stabilna nazwa składa się z identyfikator przestrzeni nazw uniform resource identifier (URI) i nazwa lokalna kontraktu.</span><span class="sxs-lookup"><span data-stu-id="17be3-139">The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</span></span> <span data-ttu-id="17be3-140">Domyślnie, po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> do klasy, używa nazwy klasy jako nazwę lokalną i przestrzeni nazw klasy (prefiksem "http://schemas.datacontract.org/2004/07/") jako identyfikator URI przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="17be3-140">By default, when you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a class, it uses the class name as the local name and the class's namespace (prefixed with "http://schemas.datacontract.org/2004/07/") as the namespace URI.</span></span> <span data-ttu-id="17be3-141">Można zastąpić wartości domyślne ustawienie <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> i <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="17be3-141">You can override the defaults by setting the <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> properties.</span></span> <span data-ttu-id="17be3-142">Możesz również zmienić przestrzeni nazw, stosując <xref:System.Runtime.Serialization.ContractNamespaceAttribute> do przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="17be3-142">You can also change the namespace by applying the <xref:System.Runtime.Serialization.ContractNamespaceAttribute> to the namespace.</span></span> <span data-ttu-id="17be3-143">Użyj tej funkcji, jeśli masz istniejący typ, który przetwarza dane, dokładnie tak, jak wymagają, ale ma inną przestrzeń nazw i nazwę klasy z kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-143">Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</span></span> <span data-ttu-id="17be3-144">Przez zastąpienie wartości domyślne, można użyć ponownie z istniejącym typem i dane serializowane są zgodne z kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-144">By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17be3-145">W każdy kod, można użyć słowa `DataContract` zamiast dłuższy <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="17be3-145">In any code, you can use the word `DataContract` instead of the longer <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="versioning"></a><span data-ttu-id="17be3-146">Przechowywanie wersji</span><span class="sxs-lookup"><span data-stu-id="17be3-146">Versioning</span></span>  
 <span data-ttu-id="17be3-147">Kontrakt danych również może obsłużyć nowszy siebie samego.</span><span class="sxs-lookup"><span data-stu-id="17be3-147">A data contract can also accommodate later versions of itself.</span></span> <span data-ttu-id="17be3-148">Oznacza to kiedy nowsza wersja kontraktu obejmuje dodatkowe dane, dane są przechowywane i zwrócony do nadawcy bez zmian.</span><span class="sxs-lookup"><span data-stu-id="17be3-148">That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</span></span> <span data-ttu-id="17be3-149">Aby to zrobić, należy zaimplementować <xref:System.Runtime.Serialization.IExtensibleDataObject> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="17be3-149">To do this, implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span>  
  
 <span data-ttu-id="17be3-150">Aby uzyskać więcej informacji o wersji, zobacz [przechowywanie wersji kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span><span class="sxs-lookup"><span data-stu-id="17be3-150">For more information about versioning, see [Data Contract Versioning](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17be3-151">W poniższym przykładzie serializuje i deserializuje klasy o nazwie `Person` do której <xref:System.Runtime.Serialization.DataContractAttribute> została zastosowana.</span><span class="sxs-lookup"><span data-stu-id="17be3-151">The following example serializes and deserializes a class named `Person` to which the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="17be3-152">Należy pamiętać, że <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> i <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> właściwości zostały ustawione na wartości, które zastępują ustawienia domyślne.</span><span class="sxs-lookup"><span data-stu-id="17be3-152">Note that the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> properties have been set to values that override the default settings.</span></span>  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17be3-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="17be3-153">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17be3-154">Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> została jawnie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="17be3-154">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="17be3-155">Zwraca <see langword="true" /> Jeśli nazwa została jawnie ustawione; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17be3-155">Returns <see langword="true" /> if the name has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17be3-156">Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> została jawnie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="17be3-156">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="17be3-157">Zwraca <see langword="true" /> Jeśli przestrzeń nazw została jawnie ustawione; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17be3-157">Returns <see langword="true" /> if the namespace has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17be3-158">Pobiera lub ustawia wartość wskazującą, czy chcesz zachować dane odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="17be3-158">Gets or sets a value that indicates whether to preserve object reference data.</span></span></summary>
        <value>
          <span data-ttu-id="17be3-159"><see langword="true" /> Aby zachować dane odwołanie do obiektu przy użyciu standardowych XML; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17be3-159"><see langword="true" /> to keep object reference data using standard XML; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="17be3-160">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17be3-160">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17be3-161">Użyj `IsReference` właściwości nakazać programowi <xref:System.Runtime.Serialization.DataContractSerializer> do wstawienia konstrukcje XML, które zachowują informacje o odwołaniu obiekt.</span><span class="sxs-lookup"><span data-stu-id="17be3-161">Use the `IsReference` property to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> to insert XML constructs that preserve object reference information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17be3-162">Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> została jawnie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="17be3-162">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> has been explicitly set.</span></span></summary>
        <value>
          <span data-ttu-id="17be3-163"><see langword="true" /> Jeśli odwołanie ma jawnie ustawionej; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17be3-163"><see langword="true" /> if the reference has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17be3-164">Pobiera lub ustawia nazwę kontraktu danych dla typu.</span><span class="sxs-lookup"><span data-stu-id="17be3-164">Gets or sets the name of the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="17be3-165">Lokalna nazwa kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-165">The local name of a data contract.</span></span> <span data-ttu-id="17be3-166">Wartością domyślną jest nazwa klasy, która dotyczy atrybut.</span><span class="sxs-lookup"><span data-stu-id="17be3-166">The default is the name of the class that the attribute is applied to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17be3-167"><xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> Właściwość jest używana do nadaj nazwę kontraktu danych, która jest nazwa typu w schemacie XML.</span><span class="sxs-lookup"><span data-stu-id="17be3-167">The <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property is used to give a name to a data contract, which is the name of the type in XML schema.</span></span> <span data-ttu-id="17be3-168">Aby uzyskać więcej informacji, zobacz [nazwy kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-names.md).</span><span class="sxs-lookup"><span data-stu-id="17be3-168">For more information, see [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).</span></span>  
  
 <span data-ttu-id="17be3-169">Domyślnie nazwa kontraktu danych jest nazwa typu który <xref:System.Runtime.Serialization.DataContractAttribute> jest stosowany do.</span><span class="sxs-lookup"><span data-stu-id="17be3-169">By default, the name of a data contract is the name of the type that the <xref:System.Runtime.Serialization.DataContractAttribute> is applied to.</span></span> <span data-ttu-id="17be3-170">Jednak może być powodów, aby zmienić tę nazwę domyślną.</span><span class="sxs-lookup"><span data-stu-id="17be3-170">However, there may be reasons to change this default name.</span></span> <span data-ttu-id="17be3-171">Jedną z przyczyn jest umożliwienie istniejącego typu do przetwarzania danych, która musi być zgodna z istniejącego kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-171">One reason is to allow an existing type to process data that must conform to an existing data contract.</span></span> <span data-ttu-id="17be3-172">Na przykład istnieje typu o nazwie `Person` , ale kontrakt danych zawartych w schemacie XML wymaga, aby nazwa `Customer`.</span><span class="sxs-lookup"><span data-stu-id="17be3-172">For example, there exists a type named `Person` but the data contract, embodied in an XML schema, requires that the name be `Customer`.</span></span> <span data-ttu-id="17be3-173">Kontrakt można spełnić przez ustawienie wartości właściwości `Customer`.</span><span class="sxs-lookup"><span data-stu-id="17be3-173">The contract can be satisfied by setting the property value to `Customer`.</span></span>  
  
 <span data-ttu-id="17be3-174">Drugi przyczyna jest umożliwienie generowania nazw, które nie są prawidłowe jako nazwy typu.</span><span class="sxs-lookup"><span data-stu-id="17be3-174">A second reason is to allow the generation of names that are invalid as type names.</span></span> <span data-ttu-id="17be3-175">Na przykład jeśli kontraktu danych wymaga nazwy, który nie jest dozwolony jako nazwę typu, należy ustawić wartość właściwości tej nazwy certyfikatów niedozwolonych.</span><span class="sxs-lookup"><span data-stu-id="17be3-175">For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</span></span> <span data-ttu-id="17be3-176">Na przykład ciąg "$value" jest niedozwolone jako nazwę typu, ale jest dozwolona jako <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="17be3-176">For instance, the string "$value" is disallowed as a type name but is allowed as a <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17be3-177">Pobiera lub ustawia przestrzeń nazw kontraktu danych dla typu.</span><span class="sxs-lookup"><span data-stu-id="17be3-177">Gets or sets the namespace for the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="17be3-178">Przestrzeń nazw kontraktu.</span><span class="sxs-lookup"><span data-stu-id="17be3-178">The namespace of the contract.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17be3-179">Ta właściwość umożliwia określenie określonego obszaru nazw, jeśli z danym typem musi zwracać danych, który jest zgodny z kontraktem określonych danych.</span><span class="sxs-lookup"><span data-stu-id="17be3-179">Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="17be3-180">Aby pomyślnie przesyłane dane Nazwa danych w kontraktu danych musi być takie same, zarówno klient, jak i serwera.</span><span class="sxs-lookup"><span data-stu-id="17be3-180">For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</span></span> <span data-ttu-id="17be3-181">Projekty Visual Basic, domyślnie, Dodaj prefiks do przestrzeń nazw zdefiniowana w każdym pliku (nazywanego "głównej przestrzeni nazw," o nazwie po projektu).</span><span class="sxs-lookup"><span data-stu-id="17be3-181">Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</span></span> <span data-ttu-id="17be3-182">Dodawanie tego prefiksu powoduje, że klient i serwer przestrzeni nazw maja być inne dla tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="17be3-182">Adding this prefix causes the client and server namespaces to be different for the same type.</span></span> <span data-ttu-id="17be3-183">Rozwiązanie to ustawić <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> dla właściwości "", lub jawnie ustaw przestrzeń nazw kontraktu danych w tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="17be3-183">The solution is to set the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> property to "", or to explicitly set the data contract namespace in this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>