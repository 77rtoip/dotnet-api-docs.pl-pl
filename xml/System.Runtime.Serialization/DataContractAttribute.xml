<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bac865fe111f37983d48f6a887d951dc62b45a60" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55416806" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b29a6-101">Określa, że typ definiuje lub implementuje kontraktu danych i jest możliwy do serializacji przez element serializujący, takich jak <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="b29a6-101">Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="b29a6-102">Aby ułatwić ich typ możliwy do serializacji, autorzy typu należy zdefiniować dla swojego typu kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-102">To make their type serializable, type authors must define a data contract for their type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29a6-103">Zastosuj <xref:System.Runtime.Serialization.DataContractAttribute> atrybutu typy (klasy, struktury lub wyliczenia), które są używane podczas operacji serializacji i deserializacji za <xref:System.Runtime.Serialization.DataContractSerializer>.</span><span class="sxs-lookup"><span data-stu-id="b29a6-103">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="b29a6-104">Jeśli wysyłanie lub odbieranie komunikatów za pomocą infrastruktury usług Windows Communication Foundation (WCF), należy również zastosować <xref:System.Runtime.Serialization.DataContractAttribute> do dowolnej klasy, które przechowywania i manipulowanie danymi wysłany w wiadomości.</span><span class="sxs-lookup"><span data-stu-id="b29a6-104">If you send or receive messages by using the Windows Communication Foundation (WCF) infrastructure, you should also apply the <xref:System.Runtime.Serialization.DataContractAttribute> to any classes that hold and manipulate data sent in messages.</span></span> <span data-ttu-id="b29a6-105">Aby uzyskać więcej informacji na temat kontraktów danych zobacz [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="b29a6-105">For more information about data contracts, see [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="b29a6-106">Należy również zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do dowolnego pola, właściwości lub zdarzenia, który przechowuje wartości chcesz serializacji.</span><span class="sxs-lookup"><span data-stu-id="b29a6-106">You must also apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any field, property, or event that holds values you want to serialize.</span></span> <span data-ttu-id="b29a6-107">Stosując <xref:System.Runtime.Serialization.DataContractAttribute>, jawnie włączyć <xref:System.Runtime.Serialization.DataContractSerializer> do serializacji i deserializacji danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-107">By applying the <xref:System.Runtime.Serialization.DataContractAttribute>, you explicitly enable the <xref:System.Runtime.Serialization.DataContractSerializer> to serialize and deserialize the data.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b29a6-108">Można zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do pól prywatnych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-108">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to private fields.</span></span> <span data-ttu-id="b29a6-109">Należy pamiętać, że dane zwrócone przez pole (nawet jeśli jest to element prywatny) jest serializowana i przeprowadzona i dlatego można przeglądać lub przechwycony przez złośliwego użytkownika lub procesu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-109">Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</span></span>  
  
 <span data-ttu-id="b29a6-110">Aby uzyskać więcej informacji na temat kontraktów danych, zobacz tematy wymienione w [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="b29a6-110">For more information about data contracts, see the topics listed in [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
## <a name="data-contracts"></a><span data-ttu-id="b29a6-111">Kontrakty danych</span><span class="sxs-lookup"><span data-stu-id="b29a6-111">Data Contracts</span></span>  
 <span data-ttu-id="b29a6-112">A *kontraktu danych* jest abstrakcyjny opis zestawu pól z nazwę i typ danych dla każdego pola.</span><span class="sxs-lookup"><span data-stu-id="b29a6-112">A *data contract* is an abstract description of a set of fields with a name and data type for each field.</span></span> <span data-ttu-id="b29a6-113">Kontrakt danych istnieje poza wszelkie pojedynczej implementacji do usług na różnych platformach pod kątem współdziałania.</span><span class="sxs-lookup"><span data-stu-id="b29a6-113">The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</span></span> <span data-ttu-id="b29a6-114">Tak długo, jak długo dane przekazywane między usługami spełnia te same kontrakty, wszystkich usług może przetwarzać dane.</span><span class="sxs-lookup"><span data-stu-id="b29a6-114">As long as the data passed between the services conforms to the same contract, all the services can process the data.</span></span> <span data-ttu-id="b29a6-115">Tego przetwarzania jest także znana jako *luźno system*.</span><span class="sxs-lookup"><span data-stu-id="b29a6-115">This processing is also known as a *loosely coupled system*.</span></span> <span data-ttu-id="b29a6-116">Kontraktu danych również jest podobny do interfejsu, kontrakt Określa, jak dane muszą być dostarczone dzięki czemu mogą być przetwarzane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="b29a6-116">A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</span></span> <span data-ttu-id="b29a6-117">Na przykład kontraktu danych może wywołać dla typu danych o nazwie "Person", który ma dwa pola tekstowe, o nazwie "FirstName" i "LastName".</span><span class="sxs-lookup"><span data-stu-id="b29a6-117">For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</span></span> <span data-ttu-id="b29a6-118">Aby utworzyć kontrakt danych, zastosuj <xref:System.Runtime.Serialization.DataContractAttribute> do klasy i zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do dowolnego pola lub właściwości, które muszą być serializowane.</span><span class="sxs-lookup"><span data-stu-id="b29a6-118">To create a data contract, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class and apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any fields or properties that must be serialized.</span></span> <span data-ttu-id="b29a6-119">Po serializacji, jest zgodny kontraktu danych, która jest niejawnie wbudowana w typ danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-119">When serialized, the data conforms to the data contract that is implicitly built into the type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b29a6-120">Kontrakt danych różni się znacząco od rzeczywistego interfejsu w jego zachowanie dziedziczenia.</span><span class="sxs-lookup"><span data-stu-id="b29a6-120">A data contract differs significantly from an actual interface in its inheritance behavior.</span></span> <span data-ttu-id="b29a6-121">Interfejsy są dziedziczone przez wszystkie typy pochodne.</span><span class="sxs-lookup"><span data-stu-id="b29a6-121">Interfaces are inherited by any derived types.</span></span> <span data-ttu-id="b29a6-122">Po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> do klasy bazowej, typy pochodne nie dziedziczą atrybutu lub zachowanie.</span><span class="sxs-lookup"><span data-stu-id="b29a6-122">When you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a base class, the derived types do not inherit the attribute or the behavior.</span></span> <span data-ttu-id="b29a6-123">Jednak jeśli typ pochodny ma kontraktu danych, dane członków klasy podstawowej są serializowane.</span><span class="sxs-lookup"><span data-stu-id="b29a6-123">However, if a derived type has a data contract, the data members of the base class are serialized.</span></span> <span data-ttu-id="b29a6-124">Jednakże, należy najpierw zastosować <xref:System.Runtime.Serialization.DataMemberAttribute> do nowych członków w klasie pochodnej, aby były możliwe do serializacji.</span><span class="sxs-lookup"><span data-stu-id="b29a6-124">However, you must apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to new members in a derived class to make them serializable.</span></span>  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a><span data-ttu-id="b29a6-125">Narzędzia SvcUtil i dokumentów schematu XML</span><span class="sxs-lookup"><span data-stu-id="b29a6-125">XML Schema Documents and the SvcUtil Tool</span></span>  
 <span data-ttu-id="b29a6-126">Jest wymiana danych z innych usług, należy opisać kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-126">If you are exchanging data with other services, you must describe the data contract.</span></span> <span data-ttu-id="b29a6-127">Aby uzyskać bieżącą wersję <xref:System.Runtime.Serialization.DataContractSerializer>, schematu XML może służyć do definiowania kontraktów danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-127">For the current version of the <xref:System.Runtime.Serialization.DataContractSerializer>, an XML schema can be used to define data contracts.</span></span> <span data-ttu-id="b29a6-128">(Inne formy opis/metadanych można użyć w tym samym celu). Aby utworzyć schemat XML z aplikacji, użyj [narzędzia narzędzie metadanych elementu ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) z **/dconly** opcji wiersza polecenia.</span><span class="sxs-lookup"><span data-stu-id="b29a6-128">(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) with the **/dconly** command line option.</span></span> <span data-ttu-id="b29a6-129">Gdy dane wejściowe to narzędzie jest zestawem, domyślnie, narzędzie wygeneruje zestaw schematów XML, które definiują wszystkie typy kontraktu danych, w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="b29a6-129">When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</span></span> <span data-ttu-id="b29a6-130">Z drugiej strony umożliwia także narzędzia Svcutil.exe do tworzenia definicji klasy Visual Basic lub C#, które są zgodne z wymaganiami schematów XML, które użyć konstrukcji, które mogą być wyrażone w kontraktach danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-130">Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</span></span> <span data-ttu-id="b29a6-131">W tym przypadku **/dconly** opcji wiersza polecenia nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="b29a6-131">In this case, the **/dconly** command line option is not required.</span></span>  
  
 <span data-ttu-id="b29a6-132">Jeśli dane wejściowe do narzędzia Svcutil.exe schematu XML domyślnie to narzędzie tworzy zestaw klas.</span><span class="sxs-lookup"><span data-stu-id="b29a6-132">If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</span></span> <span data-ttu-id="b29a6-133">Podczas badania tych klas, zauważysz, że <xref:System.Runtime.Serialization.DataContractAttribute> zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="b29a6-133">If you examine those classes, you find that the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="b29a6-134">Można użyć tych klas, aby utworzyć nową aplikację do przetwarzania danych, które muszą być wymieniane z innymi usługami.</span><span class="sxs-lookup"><span data-stu-id="b29a6-134">You can use those classes to create a new application to process data that must be exchanged with other services.</span></span>  
  
 <span data-ttu-id="b29a6-135">Można również uruchomić narzędzie względem punktu końcowego, który zwraca dokument usługi sieci Web Services Description Language (WSDL) w celu automatycznego generowania kodu i konfiguracji do tworzenia klienta usługi Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="b29a6-135">You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an Windows Communication Foundation (WCF) client.</span></span> <span data-ttu-id="b29a6-136">Wygenerowany kod zawiera typy, które są oznaczone <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b29a6-136">The generated code includes types that are marked with the <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="reusing-existing-types"></a><span data-ttu-id="b29a6-137">Ponowne używanie istniejących typów</span><span class="sxs-lookup"><span data-stu-id="b29a6-137">Reusing Existing Types</span></span>  
 <span data-ttu-id="b29a6-138">Kontrakt danych ma dwa podstawowe wymagania: nazwy stabilne i listy elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="b29a6-138">A data contract has two basic requirements: a stable name and a list of members.</span></span> <span data-ttu-id="b29a6-139">Stabilna nazwa składa się z identyfikatora URI obszaru nazw (URI) i lokalna nazwa kontraktu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-139">The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</span></span> <span data-ttu-id="b29a6-140">Domyślnie, po zastosowaniu <xref:System.Runtime.Serialization.DataContractAttribute> klasy, używa nazwy klasy jako nazwę lokalną i klasy w przestrzeni nazw (z prefiksem "http://schemas.datacontract.org/2004/07/") jako identyfikator URI przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="b29a6-140">By default, when you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a class, it uses the class name as the local name and the class's namespace (prefixed with "http://schemas.datacontract.org/2004/07/") as the namespace URI.</span></span> <span data-ttu-id="b29a6-141">Ustawienia domyślne można zmienić przez ustawienie <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> i <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="b29a6-141">You can override the defaults by setting the <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> properties.</span></span> <span data-ttu-id="b29a6-142">Możesz również zmienić przestrzeni nazw, stosując <xref:System.Runtime.Serialization.ContractNamespaceAttribute> do przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="b29a6-142">You can also change the namespace by applying the <xref:System.Runtime.Serialization.ContractNamespaceAttribute> to the namespace.</span></span> <span data-ttu-id="b29a6-143">Użyj tej funkcji, jeśli masz istniejący typ, który przetwarza dane dokładnie tak, jak wymagają, ale ma inny obszar nazw i nazwę klasy z kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-143">Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</span></span> <span data-ttu-id="b29a6-144">Przez zastąpienie wartości domyślne, można ponownie użyć istniejącego typu oraz korzystać z serializowanych danych są zgodne z kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-144">By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b29a6-145">W każdy kod, można użyć słowa `DataContract` zamiast dłuższe <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b29a6-145">In any code, you can use the word `DataContract` instead of the longer <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="versioning"></a><span data-ttu-id="b29a6-146">Obsługa wersji</span><span class="sxs-lookup"><span data-stu-id="b29a6-146">Versioning</span></span>  
 <span data-ttu-id="b29a6-147">Kontrakt danych również może obsłużyć nowsze wersje samego siebie.</span><span class="sxs-lookup"><span data-stu-id="b29a6-147">A data contract can also accommodate later versions of itself.</span></span> <span data-ttu-id="b29a6-148">Oznacza to kiedy nowsza wersja kontraktu obejmuje dodatkowe dane, że dane są przechowywane i powrót do nadawcy w charakterze.</span><span class="sxs-lookup"><span data-stu-id="b29a6-148">That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</span></span> <span data-ttu-id="b29a6-149">Aby to zrobić, należy zaimplementować <xref:System.Runtime.Serialization.IExtensibleDataObject> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-149">To do this, implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span>  
  
 <span data-ttu-id="b29a6-150">Aby uzyskać więcej informacji dotyczących wersjonowania, zobacz [przechowywanie wersji kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span><span class="sxs-lookup"><span data-stu-id="b29a6-150">For more information about versioning, see [Data Contract Versioning](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b29a6-151">W poniższym przykładzie serializuje i deserializuje klasy o nazwie `Person` do której <xref:System.Runtime.Serialization.DataContractAttribute> zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="b29a6-151">The following example serializes and deserializes a class named `Person` to which the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="b29a6-152">Należy pamiętać, że <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> i <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> właściwości zostały ustawione na wartości, które zastępują ustawienia domyślne.</span><span class="sxs-lookup"><span data-stu-id="b29a6-152">Note that the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> properties have been set to values that override the default settings.</span></span>  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md"><span data-ttu-id="b29a6-153">Używanie kontraktów danych</span><span class="sxs-lookup"><span data-stu-id="b29a6-153">Using Data Contracts</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b29a6-154">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b29a6-154">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b29a6-155">Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> została jawnie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="b29a6-155">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="b29a6-156"><see langword="true" /> Jeśli jawnie ustawiono nazwę; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b29a6-156"><see langword="true" /> if the name has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b29a6-157">Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> została jawnie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="b29a6-157">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="b29a6-158"><see langword="true" /> Jeśli przestrzeń nazw została jawnie ustawiona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b29a6-158"><see langword="true" /> if the namespace has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b29a6-159">Pobiera lub ustawia wartość wskazującą, czy chcesz zachować dane odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-159">Gets or sets a value that indicates whether to preserve object reference data.</span></span></summary>
        <value><span data-ttu-id="b29a6-160"><see langword="true" /> Aby zachować dane odwołanie do obiektu za pomocą standardowego języka XML; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b29a6-160"><see langword="true" /> to keep object reference data using standard XML; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b29a6-161">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b29a6-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29a6-162">Użyj `IsReference` właściwości w celu poinstruowania <xref:System.Runtime.Serialization.DataContractSerializer> do wstawienia konstrukcji XML, które zachowują informacje referencyjne obiektu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-162">Use the `IsReference` property to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> to insert XML constructs that preserve object reference information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b29a6-163">Pobiera czy <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> została jawnie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="b29a6-163">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="b29a6-164"><see langword="true" /> Jeśli jawnie ustawiono odwołania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b29a6-164"><see langword="true" /> if the reference has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b29a6-165">Pobiera lub ustawia nazwę kontraktu danych dla typu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-165">Gets or sets the name of the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="b29a6-166">Lokalna nazwa kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-166">The local name of a data contract.</span></span> <span data-ttu-id="b29a6-167">Wartość domyślna to nazwa klasy, który jest stosowany.</span><span class="sxs-lookup"><span data-stu-id="b29a6-167">The default is the name of the class that the attribute is applied to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29a6-168"><xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> Właściwość jest używana do nadaj nazwę kontraktu danych, która jest nazwą typu schematu XML.</span><span class="sxs-lookup"><span data-stu-id="b29a6-168">The <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property is used to give a name to a data contract, which is the name of the type in XML schema.</span></span> <span data-ttu-id="b29a6-169">Aby uzyskać więcej informacji, zobacz [nazwy kontraktów danych](~/docs/framework/wcf/feature-details/data-contract-names.md).</span><span class="sxs-lookup"><span data-stu-id="b29a6-169">For more information, see [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).</span></span>  
  
 <span data-ttu-id="b29a6-170">Domyślnie, Nazwa kontraktu danych jest nazwa typu, <xref:System.Runtime.Serialization.DataContractAttribute> jest stosowany do.</span><span class="sxs-lookup"><span data-stu-id="b29a6-170">By default, the name of a data contract is the name of the type that the <xref:System.Runtime.Serialization.DataContractAttribute> is applied to.</span></span> <span data-ttu-id="b29a6-171">Jednak może być powody, aby zmienić tę nazwę domyślną.</span><span class="sxs-lookup"><span data-stu-id="b29a6-171">However, there may be reasons to change this default name.</span></span> <span data-ttu-id="b29a6-172">Jedną z przyczyn jest umożliwienie istniejącego typu do przetwarzania danych, który musi być zgodna z istniejących kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-172">One reason is to allow an existing type to process data that must conform to an existing data contract.</span></span> <span data-ttu-id="b29a6-173">Na przykład istnieje typ o nazwie `Person` , ale kontraktu danych, zawarte w schemacie XML wymaga, aby nazwa `Customer`.</span><span class="sxs-lookup"><span data-stu-id="b29a6-173">For example, there exists a type named `Person` but the data contract, embodied in an XML schema, requires that the name be `Customer`.</span></span> <span data-ttu-id="b29a6-174">Kontrakt może być spełnione przez ustawienie wartości właściwości `Customer`.</span><span class="sxs-lookup"><span data-stu-id="b29a6-174">The contract can be satisfied by setting the property value to `Customer`.</span></span>  
  
 <span data-ttu-id="b29a6-175">Drugi przyczyna jest umożliwiające generowanie nazwy, które są nieprawidłowe jako nazwy typu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-175">A second reason is to allow the generation of names that are invalid as type names.</span></span> <span data-ttu-id="b29a6-176">Na przykład jeśli zapotrzebowania na nazwę, która nie jest dozwolony jako nazwa typu kontraktu danych, należy ustawić wartość właściwości tej nazwy niedozwolonych.</span><span class="sxs-lookup"><span data-stu-id="b29a6-176">For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</span></span> <span data-ttu-id="b29a6-177">Na przykład ciąg "$value" jest niedozwolony jako nazwa typu, ale jest dozwolona jako <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="b29a6-177">For instance, the string "$value" is disallowed as a type name but is allowed as a <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b29a6-178">Pobiera lub ustawia obszar nazw dla kontraktu danych dla typu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-178">Gets or sets the namespace for the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="b29a6-179">Przestrzeń nazw kontraktu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-179">The namespace of the contract.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29a6-180">Użyj tej właściwości, aby określić określonej przestrzeni nazw, jeśli danego typu musi zwracać danych, która jest zgodna z kontraktem danych specyficznych dla.</span><span class="sxs-lookup"><span data-stu-id="b29a6-180">Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="b29a6-181">Aby pomyślnie przekazywane dane nazwę danych w kontraktu danych musi być taki sam zarówno klient, jak i serwera.</span><span class="sxs-lookup"><span data-stu-id="b29a6-181">For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</span></span> <span data-ttu-id="b29a6-182">Projekty języka Visual Basic, domyślnie, Dodaj prefiks do przestrzeni nazw, zdefiniowane w każdym pliku (nazywanego "głównej przestrzeni nazw," o nazwie po projektu).</span><span class="sxs-lookup"><span data-stu-id="b29a6-182">Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</span></span> <span data-ttu-id="b29a6-183">Dodanie tego prefiksu powoduje, że klient i serwer przestrzeni nazw ma być inna dla tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="b29a6-183">Adding this prefix causes the client and server namespaces to be different for the same type.</span></span> <span data-ttu-id="b29a6-184">Rozwiązanie to można ustawić <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> właściwość "", lub jawnie ustaw przestrzeń nazw kontraktu danych w tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="b29a6-184">The solution is to set the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> property to "", or to explicitly set the data contract namespace in this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>