<Type Name="ISafeSerializationData" FullName="System.Runtime.Serialization.ISafeSerializationData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21b4cd5f46ee9eb6778d3ecbe94e9137aafaf5d0" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58741437" /></Metadata><TypeSignature Language="C#" Value="public interface ISafeSerializationData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISafeSerializationData" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISafeSerializationData" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISafeSerializationData" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISafeSerializationData" />
  <TypeSignature Language="F#" Value="type ISafeSerializationData = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Umożliwia serializacji danych niestandardowych wyjątku w kod o przezroczystym poziomie bezpieczeństwa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poprzednich wersjach to.NET Framework 4.0, serializacji danych niestandardowych użytkownika w przezroczysty kod zabezpieczeń było wykonywane przy użyciu <xref:System.Exception.GetObjectData%2A> metody. Począwszy od programu .NET Framework 4.0, że metoda jest oznaczona atrybutem <xref:System.Security.SecurityCriticalAttribute> atrybut, co uniemożliwia wykonanie w kod zabezpieczenia przejrzysty. Aby obejść ten problem, należy zaimplementować <xref:System.Runtime.Serialization.ISafeSerializationData> interfejs i dodać dane niestandardowe, jak pokazano w poniższym przykładzie.  
  
 <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> Metoda jest wywoływana po serializacji, a następnie używa <xref:System.Runtime.Serialization.SafeSerializationEventArgs> do przywrócenia danych niestandardowych.  
  
   
  
## Examples  
 Poniższy przykład zawiera implementację <xref:System.Runtime.Serialization.ISafeSerializationData> interfejs, który jest używany do przechowywania danych niestandardowych, które jest serializowana.  
  
 [!code-csharp[ISafeSerializationData#1](~/samples/snippets/csharp/VS_Snippets_CFX/isafeserializationdata/cs/source.cs#1)]
 [!code-vb[ISafeSerializationData#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/isafeserializationdata/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
  </Docs>
  <Members>
    <Member MemberName="CompleteDeserialization">
      <MemberSignature Language="C#" Value="public void CompleteDeserialization (object deserialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CompleteDeserialization(object deserialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteDeserialization (deserialized As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteDeserialization(System::Object ^ deserialized);" />
      <MemberSignature Language="F#" Value="abstract member CompleteDeserialization : obj -&gt; unit" Usage="iSafeSerializationData.CompleteDeserialization deserialized" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserialized" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserialized">Obiekt, który zawiera stan wystąpienia.</param>
        <summary>Ta metoda jest wywoływana, gdy wystąpienie jest przeprowadzona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt stanu jest przechowywany w zmiennej prywatnej zdefiniowane w implementacji <xref:System.Runtime.Serialization.ISafeSerializationData> klasy.  
  
   
  
## Examples  
 Poniższy przykład przywraca stan wyjątku po deserializacji.  
  
 [!code-csharp[ISafeSerializationData#2](~/samples/snippets/csharp/VS_Snippets_CFX/isafeserializationdata/cs/source.cs#2)]
 [!code-vb[ISafeSerializationData#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/isafeserializationdata/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>