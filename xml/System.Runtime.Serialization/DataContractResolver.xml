<Type Name="DataContractResolver" FullName="System.Runtime.Serialization.DataContractResolver">
  <TypeSignature Language="C#" Value="public abstract class DataContractResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataContractResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataContractResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52c14-101">Udostępnia mechanizm dynamicznie mapowania typów do i z <see langword="xsi:type" /> reprezentacje podczas serializacji i deserializacji.</span><span class="sxs-lookup"><span data-stu-id="52c14-101">Provides a mechanism for dynamically mapping types to and from <see langword="xsi:type" /> representations during serialization and deserialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52c14-102">Deweloperzy należy zachować ostrożność jakie dane są wysyłane przez sieć.</span><span class="sxs-lookup"><span data-stu-id="52c14-102">Developers should be careful about what data is being sent over the wire.</span></span> <span data-ttu-id="52c14-103">Aby zabezpieczyć te dane, można użyć zabezpieczeń transportu lub wiadomości.</span><span class="sxs-lookup"><span data-stu-id="52c14-103">You can use transport or message security to secure that data.</span></span> <span data-ttu-id="52c14-104">Aby uzyskać więcej informacji, zobacz zobacz [zabezpieczeń](~/docs/framework/wcf/samples/security-in-wcf.md).</span><span class="sxs-lookup"><span data-stu-id="52c14-104">For more information, see see [Security](~/docs/framework/wcf/samples/security-in-wcf.md).</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="52c14-105">Należy używać tylko <xref:System.Runtime.Serialization.DataContractResolver> , gdy całkowicie o informacjach jest serializowana.</span><span class="sxs-lookup"><span data-stu-id="52c14-105">Only use <xref:System.Runtime.Serialization.DataContractResolver> if you are completely sure of what information is being serialized.</span></span> <span data-ttu-id="52c14-106">Typy złośliwego może spowodować nieoczekiwane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="52c14-106">Malicious types can cause unexpected behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52c14-107">Poniższy przykład przedstawia sposób klasa wyprowadzona z <xref:System.Runtime.Serialization.DataContractResolver>.</span><span class="sxs-lookup"><span data-stu-id="52c14-107">The following example shows how to derive a class from <xref:System.Runtime.Serialization.DataContractResolver>.</span></span> <span data-ttu-id="52c14-108">Dla przykładu pracy, zobacz [DataContractResolver](~/docs/framework/wcf/samples/datacontractresolver.md).</span><span class="sxs-lookup"><span data-stu-id="52c14-108">For a working sample, see [DataContractResolver](~/docs/framework/wcf/samples/datacontractresolver.md).</span></span>  
  
 [!code-csharp[DataContractResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractresolver/cs/datacontractresolver.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataContractResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataContractResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52c14-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.DataContractResolver" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="52c14-109">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public abstract Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveName(string typeName, string typeNamespace, class System.Type declaredType, class System.Runtime.Serialization.DataContractResolver knownTypeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveName (typeName As String, typeNamespace As String, declaredType As Type, knownTypeResolver As DataContractResolver) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveName(System::String ^ typeName, System::String ^ typeNamespace, Type ^ declaredType, System::Runtime::Serialization::DataContractResolver ^ knownTypeResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="declaredType" Type="System.Type" />
        <Parameter Name="knownTypeResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="52c14-110"><see langword="xsi:type" /> Nazw do mapowania.</span><span class="sxs-lookup"><span data-stu-id="52c14-110">The <see langword="xsi:type" /> name to map.</span></span></param>
        <param name="typeNamespace"><span data-ttu-id="52c14-111"><see langword="xsi:type" /> Przestrzeni nazw do mapowania.</span><span class="sxs-lookup"><span data-stu-id="52c14-111">The <see langword="xsi:type" /> namespace to map.</span></span></param>
        <param name="declaredType"><span data-ttu-id="52c14-112">Typ zadeklarowany w kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="52c14-112">The type declared in the data contract.</span></span></param>
        <param name="knownTypeResolver"><span data-ttu-id="52c14-113">Mechanizm rozpoznawania znanego typu.</span><span class="sxs-lookup"><span data-stu-id="52c14-113">The known type resolver.</span></span></param>
        <summary><span data-ttu-id="52c14-114">Przesłonić tę metodę do mapowania określonego <see langword="xsi:type" /> nazwę i przestrzeń nazw dane typu kontraktu podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="52c14-114">Override this method to map the specified <see langword="xsi:type" /> name and namespace to a data contract type during deserialization.</span></span></summary>
        <returns><span data-ttu-id="52c14-115">Typ <see langword="xsi:type" /> nazwę i przestrzeń nazw jest zamapowana.</span><span class="sxs-lookup"><span data-stu-id="52c14-115">The type the <see langword="xsi:type" /> name and namespace is mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52c14-116">Jeśli chcesz użyć logiki rozpoznawania znanego typu wewnątrz implementacji, odwołanie do niej jest przekazywany jako `knownTypeResolver` parametru.</span><span class="sxs-lookup"><span data-stu-id="52c14-116">If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the `knownTypeResolver` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52c14-117">Poniższy przykład przedstawia implementację <xref:System.Runtime.Serialization.DataContractResolver.ResolveName%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="52c14-117">The following example shows an implementation of the <xref:System.Runtime.Serialization.DataContractResolver.ResolveName%2A> method.</span></span>  
  
 [!code-csharp[DataContractResolver#0](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractresolver/cs/datacontractresolver.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveType">
      <MemberSignature Language="C#" Value="public abstract bool TryResolveType (Type type, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveType(class System.Type type, class System.Type declaredType, class System.Runtime.Serialization.DataContractResolver knownTypeResolver, [out] class System.Xml.XmlDictionaryString&amp; typeName, [out] class System.Xml.XmlDictionaryString&amp; typeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryResolveType(Type ^ type, Type ^ declaredType, System::Runtime::Serialization::DataContractResolver ^ knownTypeResolver, [Runtime::InteropServices::Out] System::Xml::XmlDictionaryString ^ % typeName, [Runtime::InteropServices::Out] System::Xml::XmlDictionaryString ^ % typeNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="declaredType" Type="System.Type" />
        <Parameter Name="knownTypeResolver" Type="System.Runtime.Serialization.DataContractResolver" />
        <Parameter Name="typeName" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
        <Parameter Name="typeNamespace" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="52c14-118">Typ mapowania.</span><span class="sxs-lookup"><span data-stu-id="52c14-118">The type to map.</span></span></param>
        <param name="declaredType"><span data-ttu-id="52c14-119">Typ zadeklarowany w kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="52c14-119">The type declared in the data contract.</span></span></param>
        <param name="knownTypeResolver"><span data-ttu-id="52c14-120">Mechanizm rozpoznawania znanego typu.</span><span class="sxs-lookup"><span data-stu-id="52c14-120">The known type resolver.</span></span></param>
        <param name="typeName"><span data-ttu-id="52c14-121">Nazwa xsi: type.</span><span class="sxs-lookup"><span data-stu-id="52c14-121">The xsi:type name.</span></span></param>
        <param name="typeNamespace"><span data-ttu-id="52c14-122">Przestrzeń nazw xsi: type.</span><span class="sxs-lookup"><span data-stu-id="52c14-122">The xsi:type namespace.</span></span></param>
        <summary><span data-ttu-id="52c14-123">Przesłonić tę metodę do mapowania typu kontraktu danych do <see langword="xsi:type" /> nazwę i przestrzeń nazw podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="52c14-123">Override this method to map a data contract type to an <see langword="xsi:type" /> name and namespace during serialization.</span></span></summary>
        <returns>
          <span data-ttu-id="52c14-124"><see langword="true" /> Jeśli mapowanie zakończyło się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52c14-124"><see langword="true" /> if mapping succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52c14-125">Jeśli chcesz użyć logiki rozpoznawania znanego typu wewnątrz implementacji, odwołanie do niej jest przekazywany jako `knownTypeResolver` parametru.</span><span class="sxs-lookup"><span data-stu-id="52c14-125">If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the `knownTypeResolver` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52c14-126">Poniższy przykład przedstawia implementację <xref:System.Runtime.Serialization.DataContractResolver.TryResolveType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="52c14-126">The following example shows an implementation of the <xref:System.Runtime.Serialization.DataContractResolver.TryResolveType%2A> method.</span></span>  
  
 [!code-csharp[DataContractResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractresolver/cs/datacontractresolver.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>