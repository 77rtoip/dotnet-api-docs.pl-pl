<Type Name="IObjectReference" FullName="System.Runtime.Serialization.IObjectReference">
  <TypeSignature Language="C#" Value="public interface IObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectReference" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObjectReference" />
  <TypeSignature Language="C++ CLI" Value="public interface class IObjectReference" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3286d-101">Wskazuje, że bieżący implementujący interfejs jest odwołanie do innego obiektu.</span><span class="sxs-lookup"><span data-stu-id="3286d-101">Indicates that the current interface implementer is a reference to another object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="3286d-102">Implementuje ten interfejs obiektów odwołujących się do innego obiektu, którego nie można rozpoznać nazwy do momentu przywrócenia bieżący obiekt jest całkowicie.</span><span class="sxs-lookup"><span data-stu-id="3286d-102">Implement this interface on objects that are references to a different object, which cannot be resolved until the current object is completely restored.</span></span> <span data-ttu-id="3286d-103">Na etapie naprawy żadnego obiekt implementujący <see cref="T:System.Runtime.Serialization.IObjectReference" /> zostanie zapytany o jego rzeczywistego obiektu i obiektu są wstawiane do wykresu.</span><span class="sxs-lookup"><span data-stu-id="3286d-103">During the fixup stage, any object implementing <see cref="T:System.Runtime.Serialization.IObjectReference" /> is queried for its real object and that object is inserted into the graph.</span></span> <span data-ttu-id="3286d-104">Naprawy odwołuje się do procesu finalizowanie odwołania nie zakończono podczas deserializacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="3286d-104">Fixup refers to the process of finalizing references not already completed during the object deserialization process.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3286d-105"><see cref="T:System.Runtime.Serialization.StreamingContext" /> z którego deserializowany jest bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="3286d-105">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> from which the current object is deserialized.</span></span></param>
        <summary><span data-ttu-id="3286d-106">Zwraca obiekt prawdziwe, który należy zdeserializować zamiast obiekt, który określa strumieniu serializowanym.</span><span class="sxs-lookup"><span data-stu-id="3286d-106">Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</span></span></summary>
        <returns><span data-ttu-id="3286d-107">Zwraca obiekt rzeczywiste do wykresu.</span><span class="sxs-lookup"><span data-stu-id="3286d-107">Returns the actual object that is put into the graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3286d-108">Ta metoda jest przydatna w sytuacji usług zdalnych, gdzie serializacji obiektu proxy twórcą nie rzeczywistego obiektu.</span><span class="sxs-lookup"><span data-stu-id="3286d-108">This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.</span></span> <span data-ttu-id="3286d-109">Gdy deserializowany jest obiekt serwera proxy twórcą, deserializacji wywołań jego <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3286d-109">When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method.</span></span> <span data-ttu-id="3286d-110">W tym momencie obiektu proxy twórcą tworzy nowe wystąpienie obiektu serwera proxy, który odwołuje się do rzeczywistego obiektu na przykład na komputerze zdalnym.</span><span class="sxs-lookup"><span data-stu-id="3286d-110">At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.</span></span> <span data-ttu-id="3286d-111">Na koniec obiekt serwera proxy twórcą jest odrzucone i odzyskać później przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="3286d-111">Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.</span></span>  
  
 <span data-ttu-id="3286d-112">Rozważmy na przykład jak <xref:System.Type> obiekty są serializowane.</span><span class="sxs-lookup"><span data-stu-id="3286d-112">For example, consider how <xref:System.Type> objects are serialized.</span></span> <span data-ttu-id="3286d-113">Zamiast przesyłania danych z <xref:System.Type> obiektu, obiekt właściciela o nazwie typu obiektu i informacji na temat zestawu, w którym został znaleziony w implementacji obiektu przesyła systemu <xref:System.Runtime.Serialization.IObjectReference>.</span><span class="sxs-lookup"><span data-stu-id="3286d-113">Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>.</span></span> <span data-ttu-id="3286d-114">Gdy dostępnych zarówno nazwę typu, jak i nazwy zestawu infrastruktury deserializacji wywołuje <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> w obiekcie symbol zastępczy, która została przesłana.</span><span class="sxs-lookup"><span data-stu-id="3286d-114">When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted.</span></span> <span data-ttu-id="3286d-115">Zwraca to symbol zastępczy <xref:System.Type> obiekt, który jest wstawiany do wykresu.</span><span class="sxs-lookup"><span data-stu-id="3286d-115">This holder returns the <xref:System.Type> object that is inserted into the graph.</span></span>  
  
 <span data-ttu-id="3286d-116">Ta metoda jest chroniona przez <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> dla <xref:System.Security.Permissions.SecurityPermission> z <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> określony.</span><span class="sxs-lookup"><span data-stu-id="3286d-116">This method is protected by a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> specified.</span></span>  
  
   
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3286d-117">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="3286d-117">The caller does not have the required permission.</span></span> <span data-ttu-id="3286d-118">Połączenie nie będzie działać na Średnia zaufanych serwerów.</span><span class="sxs-lookup"><span data-stu-id="3286d-118">The call will not work on a medium trusted server.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>