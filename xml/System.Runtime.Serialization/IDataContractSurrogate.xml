<Type Name="IDataContractSurrogate" FullName="System.Runtime.Serialization.IDataContractSurrogate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="675d79cac00115c0afd97e8b2f4da4d6f32a10d4" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51927633" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataContractSurrogate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataContractSurrogate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IDataContractSurrogate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataContractSurrogate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataContractSurrogate" />
  <TypeSignature Language="F#" Value="type IDataContractSurrogate = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="de7ca-101">Udostępnia metody wymagane do zastąpienia jednego typu na inny przez <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> podczas serializacji, deserializacji i eksportowania i importowania dokumentów schematu XML (XSD).</span>
      <span class="sxs-lookup">
        <span data-stu-id="de7ca-101">Provides the methods needed to substitute one type for another by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> during serialization, deserialization, and export and import of XML schema documents (XSD).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de7ca-102">Użyj <xref:System.Runtime.Serialization.IDataContractSurrogate> przy użyciu <xref:System.Runtime.Serialization.DataContractSerializer> Jeśli trzeba wykonać jedną z następujących czynności: Zastąp jeden typ lub obiekt do innego lub do dynamicznego generowania zmian schematu.</span><span class="sxs-lookup"><span data-stu-id="de7ca-102">Use the <xref:System.Runtime.Serialization.IDataContractSurrogate> when using the <xref:System.Runtime.Serialization.DataContractSerializer> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.</span></span> <span data-ttu-id="de7ca-103">Dla przykładowej aplikacji, zobacz [DataContract — Surogat](~/docs/framework/wcf/samples/datacontract-surrogate.md).</span><span class="sxs-lookup"><span data-stu-id="de7ca-103">For a sample application, see [DataContract Surrogate](~/docs/framework/wcf/samples/datacontract-surrogate.md).</span></span> <span data-ttu-id="de7ca-104">Aby uzyskać więcej informacji na temat kontraktów danych zobacz [za pomocą kontraktów danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="de7ca-104">For more information about data contracts, see [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="de7ca-105">W czasie wykonywania, można znaleźć określonego <xref:System.Runtime.Serialization.DataContractSerializer> dla każdej operacji w usłudze przy użyciu <xref:System.ServiceModel.Description.OperationDescription> można znaleźć <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="de7ca-105">At run time, you can find the specific <xref:System.Runtime.Serialization.DataContractSerializer> for any operation in a service by using the <xref:System.ServiceModel.Description.OperationDescription> to find the <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> instance.</span></span> <span data-ttu-id="de7ca-106">Aby uzyskać więcej informacji na temat implementowania interfejsu do utworzenia zastępczy zobacz [surogaty kontraktu danych](~/docs/framework/wcf/extending/data-contract-surrogates.md).</span><span class="sxs-lookup"><span data-stu-id="de7ca-106">For more information about implementing the interface to create a surrogate, see [Data Contract Surrogates](~/docs/framework/wcf/extending/data-contract-surrogates.md).</span></span>  
  
 <span data-ttu-id="de7ca-107">Można również użyć <xref:System.Runtime.Serialization.IDataContractSurrogate> wpływa na importowanie i eksportowanie schematów XML, gdy używana jest <xref:System.Runtime.Serialization.XsdDataContractExporter> i <xref:System.Runtime.Serialization.XsdDataContractImporter> klasy.</span><span class="sxs-lookup"><span data-stu-id="de7ca-107">You can also use the <xref:System.Runtime.Serialization.IDataContractSurrogate> to affect the import and export of XML schemas when you are using the <xref:System.Runtime.Serialization.XsdDataContractExporter> and <xref:System.Runtime.Serialization.XsdDataContractImporter> classes.</span></span> <span data-ttu-id="de7ca-108">Możesz to zrobić, przypisując <xref:System.Runtime.Serialization.IDataContractSurrogate> do <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> właściwość <xref:System.Runtime.Serialization.ExportOptions> klasy lub <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> właściwość <xref:System.Runtime.Serialization.ImportOptions> klasy.</span><span class="sxs-lookup"><span data-stu-id="de7ca-108">You can do so by assigning the <xref:System.Runtime.Serialization.IDataContractSurrogate> to the <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ExportOptions> class, or to the <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.</span></span>  <span data-ttu-id="de7ca-109">Aby uzyskać więcej informacji, zobacz [importowanie i eksportowanie schematu](~/docs/framework/wcf/feature-details/schema-import-and-export.md).</span><span class="sxs-lookup"><span data-stu-id="de7ca-109">For more information, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de7ca-110">W poniższym przykładzie pokazano implementację <xref:System.Runtime.Serialization.IDataContractSurrogate> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="de7ca-110">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface.</span></span> <span data-ttu-id="de7ca-111">Ten kod zastępuje serializacji `Person` wpisz `PersonSurrogated` klasy.</span><span class="sxs-lookup"><span data-stu-id="de7ca-111">The code substitutes the serialization of the `Person` type for a `PersonSurrogated` class.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#0](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#0)]
 [!code-vb[IDataContractSurrogate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="https://msdn.microsoft.com/library/b0188f3c-00a9-4cf0-a887-a2284c8fb014">
      <span data-ttu-id="de7ca-112">Przykładowe DataContract — Surogat</span>
      <span class="sxs-lookup">
        <span data-stu-id="de7ca-112">DataContract Surrogate Sample</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/8c31134c-46c5-4ed7-94af-bab0ac0dfce5">
      <span data-ttu-id="de7ca-113">Surogaty kontraktu danych</span>
      <span class="sxs-lookup">
        <span data-stu-id="de7ca-113">Data Contract Surrogates</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">
      <span data-ttu-id="de7ca-114">Używanie kontraktów danych</span>
      <span class="sxs-lookup">
        <span data-stu-id="de7ca-114">Using Data Contracts</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCustomDataToExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de7ca-115">Podczas wykonywania operacji eksportu schematu wstawia adnotacje do schematu dla innych niż null wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-115">During schema export operations, inserts annotations into the schema for non-null return values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomDataToExport">
      <MemberSignature Language="C#" Value="public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomDataToExport(class System.Reflection.MemberInfo memberInfo, class System.Type dataContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomDataToExport(System::Reflection::MemberInfo ^ memberInfo, Type ^ dataContractType);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomDataToExport : System.Reflection.MemberInfo * Type -&gt; obj" Usage="iDataContractSurrogate.GetCustomDataToExport (memberInfo, dataContractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="dataContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="de7ca-116">Element <see cref="T:System.Reflection.MemberInfo" /> elementu członkowskiego, który opisuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-116">A <see cref="T:System.Reflection.MemberInfo" /> that describes the member.</span>
          </span>
        </param>
        <param name="dataContractType">
          <span data-ttu-id="de7ca-117">A <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-117">A <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-118">Podczas wykonywania operacji eksportu schematu wstawia adnotacje do schematu dla innych niż null wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-118">During schema export operations, inserts annotations into the schema for non-null return values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-119">Obiekt, który reprezentuje adnotację do wstawienia do definicji schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-119">An object that represents the annotation to be inserted into the XML schema definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomDataToExport">
      <MemberSignature Language="C#" Value="public object GetCustomDataToExport (Type clrType, Type dataContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomDataToExport(class System.Type clrType, class System.Type dataContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomDataToExport (clrType As Type, dataContractType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomDataToExport(Type ^ clrType, Type ^ dataContractType);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomDataToExport : Type * Type -&gt; obj" Usage="iDataContractSurrogate.GetCustomDataToExport (clrType, dataContractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
        <Parameter Name="dataContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType">
          <span data-ttu-id="de7ca-120">Typ CLR, która ma zostać zastąpione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-120">The CLR type to be replaced.</span>
          </span>
        </param>
        <param name="dataContractType">
          <span data-ttu-id="de7ca-121">Aby mieć adnotacji typu kontraktu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-121">The data contract type to be annotated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-122">Podczas wykonywania operacji eksportu schematu wstawia adnotacje do schematu dla innych niż null wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-122">During schema export operations, inserts annotations into the schema for non-null return values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-123">Obiekt, który reprezentuje adnotację do wstawienia do definicji schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-123">An object that represents the annotation to be inserted into the XML schema definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataContractType">
      <MemberSignature Language="C#" Value="public Type GetDataContractType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDataContractType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDataContractType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetDataContractType : Type -&gt; Type" Usage="iDataContractSurrogate.GetDataContractType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="de7ca-124">Typ CLR <see cref="T:System.Type" /> do zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-124">The CLR type <see cref="T:System.Type" /> to substitute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-125">Podczas serializacji, deserializacji i importowanie i eksportowanie schematu zwraca wartość typu kontraktu danych, która zastępuje określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-125">During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-126">
            <see cref="T:System.Type" /> Do podstawienia w <paramref name="type" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-126">The <see cref="T:System.Type" /> to substitute for the <paramref name="type" /> value.</span>
          </span>
          <span data-ttu-id="de7ca-127">Ten typ musi być możliwy do serializacji, <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-127">This type must be serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
          <span data-ttu-id="de7ca-128">Na przykład, muszą być oznaczone za pomocą <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atrybutu lub innych mechanizmów, które rozpoznaje serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-128">For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="de7ca-129">W poniższym przykładzie pokazano implementację <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="de7ca-129">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#1](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#1)]
 [!code-vb[IDataContractSurrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeserializedObject">
      <MemberSignature Language="C#" Value="public object GetDeserializedObject (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDeserializedObject(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeserializedObject (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDeserializedObject(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetDeserializedObject : obj * Type -&gt; obj" Usage="iDataContractSurrogate.GetDeserializedObject (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="de7ca-130">Zdeserializowany obiekt do zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-130">The deserialized object to be substituted.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="de7ca-131">
            <see cref="T:System.Type" /> , Podstawione obiekt powinien zostać przypisany do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-131">The <see cref="T:System.Type" /> that the substituted object should be assigned to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-132">Podczas deserializacji zwraca obiekt, który zastępuje określony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-132">During deserialization, returns an object that is a substitute for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-133">Podstawione obiektu po deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-133">The substituted deserialized object.</span>
          </span>
          <span data-ttu-id="de7ca-134">Ten obiekt musi być typu, który jest możliwy do serializacji, <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-134">This object must be of a type that is serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
          <span data-ttu-id="de7ca-135">Na przykład, muszą być oznaczone za pomocą <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atrybutu lub innych mechanizmów, które rozpoznaje serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-135">For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de7ca-136">W prostych implementacji, użyj if... then... else kontrolowanie struktury, aby przetestować czy `obj` wartość jest typu surrogated.</span><span class="sxs-lookup"><span data-stu-id="de7ca-136">In a simple implementation, use an if…then…else control structure to test whether the `obj` value is of the surrogated type.</span></span> <span data-ttu-id="de7ca-137">Jeśli tak, przekształć je jako niezbędne i zwracają podstawione obiekt.</span><span class="sxs-lookup"><span data-stu-id="de7ca-137">If so, transform it as necessary and return the substituted object.</span></span> <span data-ttu-id="de7ca-138">Podstawione obiekt może być nowe wystąpienie lub taka sama `obj` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="de7ca-138">The substituted object can be a new instance or the same `obj` instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de7ca-139">W poniższym przykładzie pokazano implementację <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="de7ca-139">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#3](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#3)]
 [!code-vb[IDataContractSurrogate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownCustomDataTypes">
      <MemberSignature Language="C#" Value="public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection&lt;Type&gt; customDataTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetKnownCustomDataTypes(class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; customDataTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetKnownCustomDataTypes (customDataTypes As Collection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetKnownCustomDataTypes(System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ customDataTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetKnownCustomDataTypes : System.Collections.ObjectModel.Collection&lt;Type&gt; -&gt; unit" Usage="iDataContractSurrogate.GetKnownCustomDataTypes customDataTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDataTypes" Type="System.Collections.ObjectModel.Collection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="customDataTypes">
          <span data-ttu-id="de7ca-140">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> z <see cref="T:System.Type" /> znanych typów, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-140">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of <see cref="T:System.Type" /> to add known types to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-141">Określa, kolekcji znanych typów do użycia do serializacji i deserializacji obiektów danych niestandardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-141">Sets the collection of known types to use for serialization and deserialization of the custom data objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de7ca-142">Ta metoda jest wymagany podczas schematu eksportowanie lub Importowanie schematów tylko wtedy, gdy adnotacje są wstawiane do przy użyciu schematu <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="de7ca-142">This method is required during schema export or schema import only if annotations are inserted into the schema using the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectToSerialize">
      <MemberSignature Language="C#" Value="public object GetObjectToSerialize (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObjectToSerialize(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectToSerialize (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectToSerialize(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectToSerialize : obj * Type -&gt; obj" Usage="iDataContractSurrogate.GetObjectToSerialize (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="de7ca-143">Obiekt do zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-143">The object to substitute.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="de7ca-144">
            <see cref="T:System.Type" /> , Podstawione obiekt powinien zostać przypisany do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-144">The <see cref="T:System.Type" /> that the substituted object should be assigned to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-145">Podczas serializacji zwraca obiekt, który zastępuje określony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-145">During serialization, returns an object that substitutes the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-146">Podstawione obiekt, który będzie serializowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-146">The substituted object that will be serialized.</span>
          </span>
          <span data-ttu-id="de7ca-147">Obiekt musi być możliwy do serializacji, <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-147">The object must be serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
          <span data-ttu-id="de7ca-148">Na przykład, muszą być oznaczone za pomocą <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atrybutu lub innych mechanizmów, które rozpoznaje serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-148">For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de7ca-149">Ta metoda nie może zwracać `null` ponieważ przy deserializacji danych będzie można rzutować na typ <xref:System.Object> i <xref:System.InvalidCastException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="de7ca-149">This method must not return `null` because on deserialization the data will be cast to type <xref:System.Object> and an <xref:System.InvalidCastException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de7ca-150">W poniższym przykładzie pokazano implementację <xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="de7ca-150">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#2](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#2)]
 [!code-vb[IDataContractSurrogate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedTypeOnImport">
      <MemberSignature Language="C#" Value="public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReferencedTypeOnImport(string typeName, string typeNamespace, object customData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedTypeOnImport (typeName As String, typeNamespace As String, customData As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReferencedTypeOnImport(System::String ^ typeName, System::String ^ typeNamespace, System::Object ^ customData);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedTypeOnImport : string * string * obj -&gt; Type" Usage="iDataContractSurrogate.GetReferencedTypeOnImport (typeName, typeNamespace, customData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="customData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="de7ca-151">Nazwa typu w schemacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-151">The name of the type in schema.</span>
          </span>
        </param>
        <param name="typeNamespace">
          <span data-ttu-id="de7ca-152">Przestrzeń nazw typu w schemacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-152">The namespace of the type in schema.</span>
          </span>
        </param>
        <param name="customData">
          <span data-ttu-id="de7ca-153">Obiekt, który reprezentuje adnotacji wstawione do definicji schematu XML, które to dane, które mogą służyć do znajdowania typu odwołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-153">The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-154">Podczas importowania schematu zwraca typ odwołania w schemacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-154">During schema import, returns the type referenced by the schema.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-155">
            <see cref="T:System.Type" /> Do użycia w przypadku typu odwołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-155">The <see cref="T:System.Type" /> to use for the referenced type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de7ca-156">`Null` powinna być zwrócona, jeśli typ CLR nie istnieje dla reprezentujący typ schematu.</span><span class="sxs-lookup"><span data-stu-id="de7ca-156">`Null` should be returned if a CLR type does not exist for representing the schema type.</span></span> <span data-ttu-id="de7ca-157">Spowoduje to nowy typ do wygenerowania podczas importowania schematu.</span><span class="sxs-lookup"><span data-stu-id="de7ca-157">This will cause a new type to be generated during schema import.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de7ca-158">W poniższym przykładzie pokazano implementację <xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="de7ca-158">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#4](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#4)]
 [!code-vb[IDataContractSurrogate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessImportedType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration ProcessImportedType(class System.CodeDom.CodeTypeDeclaration typeDeclaration, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessImportedType (typeDeclaration As CodeTypeDeclaration, compileUnit As CodeCompileUnit) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeDeclaration ^ ProcessImportedType(System::CodeDom::CodeTypeDeclaration ^ typeDeclaration, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="abstract member ProcessImportedType : System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeCompileUnit -&gt; System.CodeDom.CodeTypeDeclaration" Usage="iDataContractSurrogate.ProcessImportedType (typeDeclaration, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDeclaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="typeDeclaration">
          <span data-ttu-id="de7ca-159">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> do procesu, który reprezentuje deklaracji typu wygenerowanych podczas importowania schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-159">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to process that represents the type declaration generated during schema import.</span>
          </span>
        </param>
        <param name="compileUnit">
          <span data-ttu-id="de7ca-160">
            <see cref="T:System.CodeDom.CodeCompileUnit" /> Zawierający kod, generowane podczas importowania schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-160">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains the other code generated during schema import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de7ca-161">Przetwarza typ, który został wygenerowany z zaimportowanego schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-161">Processes the type that has been generated from the imported schema.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de7ca-162">Element <see cref="T:System.CodeDom.CodeTypeDeclaration" /> zawierający typ przetwarzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de7ca-162">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that contains the processed type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de7ca-163">Dane wejściowe <xref:System.CodeDom.CodeTypeDeclaration> i inne informacje w <xref:System.CodeDom.CodeCompileUnit> może być modyfikowana przez użytkownika w przypadku tej metody.</span><span class="sxs-lookup"><span data-stu-id="de7ca-163">The input <xref:System.CodeDom.CodeTypeDeclaration> or other information in the <xref:System.CodeDom.CodeCompileUnit> can be modified by the user in this method.</span></span> <span data-ttu-id="de7ca-164">Jeśli `null` ma zostać zwrócona, spowoduje to, że typ nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="de7ca-164">If `null` is returned, it will cause the type to not be generated.</span></span> <span data-ttu-id="de7ca-165">Jeśli nowy <xref:System.CodeDom.CodeTypeDeclaration> ma zostać zwrócona, spowoduje zastąpienie oryginalnego typu wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="de7ca-165">If a new <xref:System.CodeDom.CodeTypeDeclaration> is returned, it will replace the original type generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>