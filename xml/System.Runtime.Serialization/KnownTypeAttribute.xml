<Type Name="KnownTypeAttribute" FullName="System.Runtime.Serialization.KnownTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9146f6f05e0121134177d589dfe5d7a5ee4fb524" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56383586" /></Metadata><TypeSignature Language="C#" Value="public sealed class KnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.KnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class KnownTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type KnownTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1fc40-101">Określa typy, które powinien był zostać rozpoznany przez <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> podczas serializacji lub deserializacji danego typu.</span><span class="sxs-lookup"><span data-stu-id="1fc40-101">Specifies types that should be recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> when serializing or deserializing a given type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc40-102">Zastosuj <xref:System.Runtime.Serialization.KnownTypeAttribute> atrybutu typu do wskazania <xref:System.Runtime.Serialization.DataContractSerializer> typy, które powinien był zostać rozpoznany po serializacji lub deserializacji wystąpienia typu, do którego zastosowano atrybut.</span><span class="sxs-lookup"><span data-stu-id="1fc40-102">Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.</span></span> <span data-ttu-id="1fc40-103">Ten atrybut również może być rozpoznawane przez inne serializatory, które zrozumieć kontraktów danych.</span><span class="sxs-lookup"><span data-stu-id="1fc40-103">This attribute could also be recognized by other serializers that understand data contracts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc40-104">W kodzie, można użyć słowa `KnownType` zamiast dłuższe `KnownTypeAttribute`.</span><span class="sxs-lookup"><span data-stu-id="1fc40-104">In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.</span></span>  
  
 <span data-ttu-id="1fc40-105">Można zastosować dokładnie jeden <xref:System.Runtime.Serialization.KnownTypeAttribute> wystąpienia z <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> zestaw właściwości, jeden lub więcej <xref:System.Runtime.Serialization.KnownTypeAttribute> wystąpień z <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> zestawu właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fc40-105">You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc40-106">W poniższym przykładzie pokazano typu o nazwie `Person` i typ o nazwie `IDInformation` powinien był zostać rozpoznany po serializacji lub deserializacji `Person` typu.</span><span class="sxs-lookup"><span data-stu-id="1fc40-106">The following example shows a type named `Person` and a type named `IDInformation` that should be recognized when serializing or deserializing the `Person` type.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/1a0baea1-27b7-470d-9136-5bbad86c4337"><span data-ttu-id="1fc40-107">Znane typy kontraktów danych</span><span class="sxs-lookup"><span data-stu-id="1fc40-107">Data Contract Known Types</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fc40-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1fc40-108">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.KnownTypeAttribute : string -&gt; System.Runtime.Serialization.KnownTypeAttribute" Usage="new System.Runtime.Serialization.KnownTypeAttribute methodName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="1fc40-109">Nazwa metody, która zwraca <see cref="T:System.Collections.IEnumerable" /> typy używane podczas serializacji lub deserializacji danych.</span><span class="sxs-lookup"><span data-stu-id="1fc40-109">The name of the method that returns an <see cref="T:System.Collections.IEnumerable" /> of types used when serializing or deserializing data.</span></span></param>
        <summary><span data-ttu-id="1fc40-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> klasy o nazwie metody, która zwraca <see cref="T:System.Collections.IEnumerable" /> znanych typów.</span><span class="sxs-lookup"><span data-stu-id="1fc40-110">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the name of a method that returns an <see cref="T:System.Collections.IEnumerable" /> of known types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc40-111">Ten konstruktor korzysta z nazwy metody, która pasuje do metody klasy.</span><span class="sxs-lookup"><span data-stu-id="1fc40-111">This constructor uses a method name that matches a method of the class.</span></span>  <span data-ttu-id="1fc40-112">Metoda ta zwraca <xref:System.Collections.Generic.IEnumerable%601> z <xref:System.Type> obiektów.</span><span class="sxs-lookup"><span data-stu-id="1fc40-112">The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects.</span></span> <span data-ttu-id="1fc40-113">Podczas serializacji lub deserializacji typów znalezionych w kolekcji może służyć w ramach typu głównego, do którego zastosowano atrybut.</span><span class="sxs-lookup"><span data-stu-id="1fc40-113">During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc40-114">W poniższym przykładzie użyto `methodName` parametru do identyfikacji metoda w typie, który zawiera tablicę <xref:System.Type> obiektów.</span><span class="sxs-lookup"><span data-stu-id="1fc40-114">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.KnownTypeAttribute : Type -&gt; System.Runtime.Serialization.KnownTypeAttribute" Usage="new System.Runtime.Serialization.KnownTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1fc40-115"><see cref="T:System.Type" /> Jest dołączony jako znany typ podczas serializacji lub deserializacji danych.</span><span class="sxs-lookup"><span data-stu-id="1fc40-115">The <see cref="T:System.Type" /> that is included as a known type when serializing or deserializing data.</span></span></param>
        <summary><span data-ttu-id="1fc40-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> klasy z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="1fc40-116">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fc40-117">W poniższym przykładzie pokazano typu o nazwie `Person` i typ o nazwie `IDInformation` które mają zostać uwzględnione podczas lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="1fc40-117">The following example shows a type named `Person` and a type named `IDInformation` that should be included when or deserializing.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fc40-118">Pobiera nazwę metody, która spowoduje to zwrócenie listy typów, które powinien był zostać rozpoznany podczas serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="1fc40-118">Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="1fc40-119">A <see cref="T:System.String" /> zawierający nazwę metody na typ zdefiniowany przez <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1fc40-119">A <see cref="T:System.String" /> that contains the name of the method on the type defined by the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc40-120">Metoda musi istnieje w klasie lub struktury, która <xref:System.Runtime.Serialization.KnownTypeAttribute> jest stosowany do, muszą być statyczne, należy zaakceptować żadnych parametrów i musi zwrócić wystąpienie dowolnego typu, który implementuje ogólnego <xref:System.Collections.Generic.IEnumerable%601> interfejsu, takich jak <xref:System.Collections.ObjectModel.Collection%601> klasy, lub Tablica <xref:System.Type> obiektów.</span><span class="sxs-lookup"><span data-stu-id="1fc40-120">The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="1fc40-121">Metoda jest wywoływana jeden raz dla domeny aplikacji po załadowaniu kontraktu danych dla typu.</span><span class="sxs-lookup"><span data-stu-id="1fc40-121">The method is called once per application domain when the data contract is loaded for the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc40-122">W poniższym przykładzie użyto `methodName` parametru do identyfikacji metoda w typie, który zawiera tablicę <xref:System.Type> obiektów.</span><span class="sxs-lookup"><span data-stu-id="1fc40-122">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fc40-123">Pobiera typ, który powinien był zostać rozpoznany podczas serializacji lub deserializacji przez <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="1fc40-123">Gets the type that should be recognized during serialization or deserialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span></summary>
        <value><span data-ttu-id="1fc40-124"><see cref="T:System.Type" /> Używany podczas serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="1fc40-124">The <see cref="T:System.Type" /> that is used during serialization or deserialization.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>