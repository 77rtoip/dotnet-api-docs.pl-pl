<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1fd41d9e593734bdc8b19ab1ec3fd635393ac8e" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46625667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <TypeSignature Language="F#" Value="type ImportOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e6507-101">Reprezentuje opcje, które mogą być ustawione na <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6507-101">Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6507-102"><xref:System.Runtime.Serialization.XsdDataContractImporter> Służy do generowania kodu z XML przy użyciu schematu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="e6507-102">The <xref:System.Runtime.Serialization.XsdDataContractImporter> is used to generate code from XML schema using the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span></span> <span data-ttu-id="e6507-103">Aby wygenerować schemat XML z zestawu, należy użyć <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="e6507-103">To generate an XML schema from an assembly, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
 <span data-ttu-id="e6507-104">Aby uzyskać więcej informacji o importowaniu i eksportowaniu schematów, zobacz [importowanie i eksportowanie schematu](~/docs/framework/wcf/feature-details/schema-import-and-export.md) i [Importowanie schematu do generowania klasy](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span><span class="sxs-lookup"><span data-stu-id="e6507-104">For more information about importing and exporting schemas, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md) and [Importing Schema to Generate Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6507-105">Poniższy przykład tworzy wystąpienie <xref:System.Runtime.Serialization.ImportOptions> klasy i zestawy <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> i <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6507-105">The following example creates an instance of the <xref:System.Runtime.Serialization.ImportOptions> class and sets the <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> and <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> properties.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
    <related type="Article" href="http://msdn.microsoft.com/library/0da32b50-ccd9-463a-844c-7fe803d3bf44">
      <span data-ttu-id="e6507-106">Importowanie i eksportowanie schematu</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6507-106">Schema Import and Export</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/b9170583-8c34-43bd-97bb-6c0c8dddeee0">
      <span data-ttu-id="e6507-107">Importowanie schematu w celu generowania klas</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6507-107">Importing Schema To Generate Classes</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6507-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.ImportOptions" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-108">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeProvider : System.CodeDom.Compiler.CodeDomProvider with get, set" Usage="System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-109">Pobiera lub ustawia <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> wystąpienie, które udostępnia środki, aby sprawdzić, czy określonej opcji dla języka docelowego są obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-109">Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-110">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> zapewniający oznacza, że aby sprawdzić, czy określonej opcji dla języka docelowego są obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-110">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6507-111">Aby umożliwić lepsze generowanie kodu w różnych językach, dowiedzieć się, jakie operacje są obsługiwane przez język docelowy należy przekazać do importera schematów.</span><span class="sxs-lookup"><span data-stu-id="e6507-111">To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</span></span> <span data-ttu-id="e6507-112">Jest to realizowane przez przekazanie wystąpienia <xref:System.CodeDom.Compiler.CodeDomProvider> klasy, która dostarcza <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> metodę, aby sprawdzić, czy obsługuje określonego <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span><span class="sxs-lookup"><span data-stu-id="e6507-112">This is done by passing an instance of the <xref:System.CodeDom.Compiler.CodeDomProvider> class, which provides a <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> method to check whether it supports particular <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContractSurrogate : System.Runtime.Serialization.IDataContractSurrogate with get, set" Usage="System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-113">Pobiera lub ustawia zastępczy kontraktu danych, który może służyć do modyfikowania kodu wygenerowanego podczas operacji importowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-113">Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-114">Implementacja <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interfejsu, który obsługuje importowanie schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-114">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDataBinding : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-115">Pobiera lub ustawia wartość określającą, czy typy w wygenerowanym kodzie powinny implementować <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-115">Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-116">
            <see langword="true" /> Jeśli wygenerowany kod powinien implementować <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interfejs; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-116">
              <see langword="true" /> if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6507-117">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-117">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6507-118">Ten interfejs jest wykorzystywany przez [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] składników, takich jak formularze Windows lub Windows Presentation Foundation, do przechwytywania zmian danych dla aktualizacje interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="e6507-118">This interface is used by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</span></span> <span data-ttu-id="e6507-119">Wygenerowane właściwości wywołaj zdarzenie zmiany właściwości po zmianie wartości, umożliwiając interfejsu użytkownika przechwytuje się podejmowanie odpowiednich działań.</span><span class="sxs-lookup"><span data-stu-id="e6507-119">The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateInternal : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-120">Pobiera lub ustawia wartość określającą, czy wewnętrzny lub publiczny zostaną oznaczone wygenerowanego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-120">Gets or sets a value that specifies whether generated code will be marked internal or public.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-121">
            <see langword="true" /> Jeśli kod zostanie oznaczona <see langword="internal" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-121">
              <see langword="true" /> if the code will be marked <see langword="internal" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6507-122">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-122">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateSerializable : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-123">Pobiera lub ustawia wartość określającą, czy klasy kontraktu wygenerowanych danych będą oznaczone znakiem <see cref="T:System.SerializableAttribute" /> atrybutu oprócz <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-123">Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-124">
            <see langword="true" /> można wygenerować klas z <see cref="T:System.SerializableAttribute" /> zastosowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-124">
              <see langword="true" /> to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6507-125">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImportXmlType : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-126">Pobiera lub ustawia wartość określającą, czy wszystkie typy schematu XML, nawet te, które nie są zgodne ze schematem kontraktu danych, zostaną zaimportowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-126">Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-127">
            <see langword="true" /> Aby zaimportować wszystkie typy schematu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-127">
              <see langword="true" /> to import all schema types; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6507-128">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-128">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6507-129">Normalnie importowanie typu, który nie jest zgodny ze schematem kontraktu prawidłowych danych zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="e6507-129">Normally, importing a type that does not conform to a valid data contract schema will fail.</span></span> <span data-ttu-id="e6507-130">Jednakże, jeśli ta właściwość jest równa `true`, zostaną zaimportowane wszystkie takie typy jako typy, które implementują <xref:System.Xml.Serialization.IXmlSerializable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e6507-130">However, when this property is set to `true`, all such types will be imported as types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-131">Pobiera słownik, który zawiera mapowania do przestrzeni nazw CLR, który musi być używany do generowania kodu podczas operacji importowania, przestrzeni nazw kontraktu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-131">Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-132">Element <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera mapowania przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-132">A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedCollectionTypes : System.Collections.Generic.ICollection&lt;Type&gt;" Usage="System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-133">Pobiera kolekcję typów, która reprezentuje kolekcje kontraktu danych, które powinny istnieć odwołania podczas generowania kodu dla kolekcji, takie jak listy lub słowników elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-133">Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-134">
            <see cref="T:System.Collections.Generic.ICollection`1" /> Zawierający wskazanych typów kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-134">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6507-135">Domyślnie tablica zostanie wygenerowany podczas importowania schematu kolekcji (chyba że schemat zawiera specjalne adnotacji, który wymienia innego typu).</span><span class="sxs-lookup"><span data-stu-id="e6507-135">By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</span></span> <span data-ttu-id="e6507-136">Jednak w przypadku o pasującym typie w <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> kolekcji, zostanie użyty typ.</span><span class="sxs-lookup"><span data-stu-id="e6507-136">However, if there is a matching type in the <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> collection, that type will be used.</span></span> <span data-ttu-id="e6507-137">Na przykład podczas importowania schematu, który zawiera listę liczb całkowitych, tablicy liczb całkowitych zazwyczaj zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="e6507-137">For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</span></span> <span data-ttu-id="e6507-138">Jednakże jeśli kolekcja zawiera <xref:System.Collections.Generic.LinkedList%601> typu Integer, że typ będą używane zamiast tablicy.</span><span class="sxs-lookup"><span data-stu-id="e6507-138">However, if the collection contains the <xref:System.Collections.Generic.LinkedList%601> of type integer, that type will be used instead of the array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedTypes : System.Collections.Generic.ICollection&lt;Type&gt;" Usage="System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6507-139">Pobiera <see cref="T:System.Collections.Generic.IList`1" /> zawierający typy, do którego odwołuje się wygenerowanego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-139">Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6507-140">Element <see cref="T:System.Collections.Generic.IList`1" /> zawierający wskazanych typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6507-140">A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>