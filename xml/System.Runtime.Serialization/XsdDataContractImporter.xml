<Type Name="XsdDataContractImporter" FullName="System.Runtime.Serialization.XsdDataContractImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1e9a9c7ca5420f198e5489d5848a82e872d5211" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsdDataContractImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4f3df-101">Umożliwia przekształcania zestawu plików schematów XML (XSD) do wspólnego języka typów środowiska uruchomieniowego (języka wspólnego CLR).</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f3df-101">Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-102">Użyj <xref:System.Runtime.Serialization.XsdDataContractImporter> Jeśli tworzysz usługi sieci Web konieczna jest współpraca z istniejącej usługi sieci Web, lub aby utworzyć kontrakt danych typów z schematów XML.</span><span class="sxs-lookup"><span data-stu-id="4f3df-102">Use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.</span></span> <span data-ttu-id="4f3df-103"><xref:System.Runtime.Serialization.XsdDataContractImporter> spowoduje przekształcenie zestaw schematów XML i utworzenie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Zwiń typy reprezentujące dane w wybranym języku programowania.</span><span class="sxs-lookup"><span data-stu-id="4f3df-103"><xref:System.Runtime.Serialization.XsdDataContractImporter> will transform a set of XML schemas and create the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types that represent the data contract in a selected programming language.</span></span> <span data-ttu-id="4f3df-104">Aby utworzyć kod, należy użyć klasy w <xref:System.CodeDom> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="4f3df-104">To create the code, use the classes in the <xref:System.CodeDom> namespace.</span></span>  
  
 <span data-ttu-id="4f3df-105">Z drugiej strony, użyj <xref:System.Runtime.Serialization.XsdDataContractExporter> klasy po utworzeniu usługi sieci Web, który zawiera dane reprezentowane przez typy CLR i kiedy należy wyeksportować schematów XML dla każdego typu danych do użycia przez inne usługi sieci Web.</span><span class="sxs-lookup"><span data-stu-id="4f3df-105">Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.</span></span> <span data-ttu-id="4f3df-106">Oznacza to, że <xref:System.Runtime.Serialization.XsdDataContractExporter> przekształca Zestaw CLR typów na zestaw schematów XML.</span><span class="sxs-lookup"><span data-stu-id="4f3df-106">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3df-107">Aby wygenerować typy CLR z schematów XML w czasie projektowania, należy użyć [narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span><span class="sxs-lookup"><span data-stu-id="4f3df-107">To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="4f3df-108">Wygenerowany kod z pliki XSD, użyj `/dataContractOnly` przełącznika narzędzia.</span><span class="sxs-lookup"><span data-stu-id="4f3df-108">To generated code from XSD files, use the `/dataContractOnly` switch of the tool.</span></span> <span data-ttu-id="4f3df-109">Można również użyć <xref:System.Runtime.Serialization.XsdDataContractImporter> wymagają więcej kontroli nad procesem lub trzeba przeprowadzić programowo.</span><span class="sxs-lookup"><span data-stu-id="4f3df-109">You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f3df-110">Poniższy przykład tworzy <xref:System.Xml.Schema.XmlSchemaSet> i wywołuje <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> metodę w celu utworzenia <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="4f3df-110">The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="4f3df-111"><xref:System.CodeDom.CodeCompileUnit> Jest następnie używany do tworzenia plików kodu zarówno Visual C# i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4f3df-111">The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#0)]
 [!code-vb[XsdDataContractImporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-112">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-113">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractImporter(System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">
          <span data-ttu-id="4f3df-114">
            <see cref="T:System.CodeDom.CodeCompileUnit" /> Który będzie używany do przechowywania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-114">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that will be used to store the code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> klasy z <see cref="T:System.CodeDom.CodeCompileUnit" /> który będzie używany do generowania kodu CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-115">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> class with the <see cref="T:System.CodeDom.CodeCompileUnit" /> that will be used to generate CLR code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-116">Użyj tego konstruktora, aby dodać więcej kodu do <xref:System.CodeDom.CodeCompileUnit> który już został wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="4f3df-116">Use this constructor to add more code into a <xref:System.CodeDom.CodeCompileUnit> that has already been generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f3df-117">Poniższy przykład tworzy <xref:System.Xml.Schema.XmlSchemaSet> i wywołuje <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> metodę w celu utworzenia <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="4f3df-117">The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="4f3df-118"><xref:System.CodeDom.CodeCompileUnit> Jest następnie używany do tworzenia plików kodu zarówno Visual C# i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4f3df-118">The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#1)]
 [!code-vb[XsdDataContractImporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanImport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-119">Pobiera wartość wskazującą, czy schematów może zostać zamieniony na <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-119">Gets a value that indicates whether the schemas can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-120">Aby uzyskać więcej informacji na temat typów, które można importować, zobacz [typy obsługiwane przez serializator kontraktu danych](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="4f3df-120">For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-121">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierającego schematy do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-121">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-122">Pobiera wartość wskazującą, czy schematów zawartych w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> może zostać zamieniony na <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-122">Gets a value that indicates whether the schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-123">
            <see langword="true" /> Jeśli schematów może służyć do typów kontraktu danych. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-123">
              <see langword="true" /> if the schemas can be transformed to data contract types; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4f3df-124">Następujące przykładowe wywołania <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> metodę, aby określić, czy <xref:System.CodeDom.CodeCompileUnit> mogą być generowane.</span><span class="sxs-lookup"><span data-stu-id="4f3df-124">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#2](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#2)]
 [!code-vb[XsdDataContractImporter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-125">
            <paramref name="schemas" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-125">The <paramref name="schemas" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="4f3df-126">Kontrakt danych objętego importu jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-126">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; typeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlQualifiedName&gt; typeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet, typeNames As ICollection(Of XmlQualifiedName)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlQualifiedName ^&gt; ^ typeNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeNames" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt;" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-127">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierającego schematy do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-127">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</span>
          </span>
        </param>
        <param name="typeNames">
          <span data-ttu-id="4f3df-128">
            <see cref="T:System.Collections.Generic.ICollection`1" /> z <see cref="T:System.Xml.XmlQualifiedName" /> reprezentujący zestaw typów schematu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-128">An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Xml.XmlQualifiedName" /> that represents the set of schema types to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-129">Pobiera wartość wskazującą, czy określony zestaw typów zawartych w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> może służyć do generowania typów CLR <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-129">Gets a value that indicates whether the specified set of types contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into CLR types generated into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-130">
            <see langword="true" /> Jeśli można je przekształcać schematów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-130">
              <see langword="true" /> if the schemas can be transformed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-131">
            <paramref name="schemas" /> Lub <paramref name="typeNames" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-131">The <paramref name="schemas" /> or <paramref name="typeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="4f3df-132">Kontrakt danych objętego importu jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-132">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.XmlSchemaElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet, element As XmlSchemaElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::Schema::XmlSchemaElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="element" Type="System.Xml.Schema.XmlSchemaElement" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-133">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-133">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to import.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="4f3df-134">Określony <see cref="T:System.Xml.Schema.XmlSchemaElement" /> w zestawie schematów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-134">A specific <see cref="T:System.Xml.Schema.XmlSchemaElement" /> to check in the set of schemas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-135">Pobiera wartość wskazującą, czy element schematu zawarte w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> możliwym do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-135">Gets a value that indicates whether a specific schema element contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be imported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-136">
            <see langword="true" /> Jeśli element może być importowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-136">
              <see langword="true" /> if the element can be imported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-137">Ta metoda sprawdza typ i wszystkie typy schemat przywoływany z niego.</span><span class="sxs-lookup"><span data-stu-id="4f3df-137">This method checks the type and all schema types referenced from it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-138">
            <paramref name="schemas" /> Lub <paramref name="element" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-138">The <paramref name="schemas" /> or <paramref name="element" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="4f3df-139">Kontrakt danych objętego importu jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-139">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanImport">
      <MemberSignature Language="C#" Value="public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanImport(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanImport (schemas As XmlSchemaSet, typeName As XmlQualifiedName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanImport(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-140">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierający reprezentacje schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-140">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="4f3df-141">
            <see cref="T:System.Collections.IList" /> z <see cref="T:System.Xml.XmlQualifiedName" /> , który określa nazwy typów schematów, które muszą zostać zaimportowane z <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-141">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the names of the schema types that need to be imported from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-142">Pobiera wartość wskazującą, czy schematów zawartych w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> może zostać zamieniony na <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-142">Gets a value that indicates whether the schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> can be transformed into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-143">
            <see langword="true" /> Jeśli schematów może służyć do typów kontraktu danych. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-143">
              <see langword="true" /> if the schemas can be transformed to data contract types; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-144">Aby uzyskać więcej informacji na temat typów, które można importować, zobacz [typy obsługiwane przez serializator kontraktu danych](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="4f3df-144">For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-145">
            <paramref name="schemas" /> Lub <paramref name="typeName" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-145">The <paramref name="schemas" /> or <paramref name="typeName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="4f3df-146">Kontrakt danych objętego importu jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-146">A data contract involved in the import is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeCompileUnit CodeCompileUnit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeCompileUnit As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeCompileUnit ^ CodeCompileUnit { System::CodeDom::CodeCompileUnit ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-147">Pobiera <see cref="T:System.CodeDom.CodeCompileUnit" /> używany do przechowywania typów CLR wygenerowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-147">Gets a <see cref="T:System.CodeDom.CodeCompileUnit" /> used for storing the CLR types generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f3df-148">A <see cref="T:System.CodeDom.CodeCompileUnit" /> używany do przechowywania wygenerowane typy CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-148">A <see cref="T:System.CodeDom.CodeCompileUnit" /> used to store the CLR types generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-149">Wywołanie tej właściwości po zaimportowaniu schematów przy użyciu <xref:System.Runtime.Serialization.XsdDataContractImporter> dostępu <xref:System.CodeDom.CodeCompileUnit> wszystkie wygenerowany kod jest przechowywany.</span><span class="sxs-lookup"><span data-stu-id="4f3df-149">Call this property after importing schemas using the <xref:System.Runtime.Serialization.XsdDataContractImporter> to access the <xref:System.CodeDom.CodeCompileUnit> in which all the generated code is stored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f3df-150">Tworzy następujące zastosowania przykład <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="4f3df-150">The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="4f3df-151"><xref:System.CodeDom.CodeCompileUnit> Jest następnie używany do tworzenia pliku kodu zarówno Visual C# i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4f3df-151">The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#1)]
 [!code-vb[XsdDataContractImporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCodeTypeReference">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-152">Zwraca <see cref="T:System.CodeDom.CodeTypeReference" /> dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-152">Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> for the specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCodeTypeReference">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeTypeReference GetCodeTypeReference(class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCodeTypeReference (typeName As XmlQualifiedName) As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeReference ^ GetCodeTypeReference(System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="4f3df-153">
            <see cref="T:System.Xml.XmlQualifiedName" /> , Który określa typ schematu do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-153">The <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the schema type to look up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-154">Zwraca <see cref="T:System.CodeDom.CodeTypeReference" /> na typ CLR wygenerowany dla typu schematu z określonym <see cref="T:System.Xml.XmlQualifiedName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-154">Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> to the CLR type generated for the schema type with the specified <see cref="T:System.Xml.XmlQualifiedName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-155">A <see cref="T:System.CodeDom.CodeTypeReference" /> odwołania do typu CLR dla typu schematu o generowane <paramref name="typeName" /> określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-155">A <see cref="T:System.CodeDom.CodeTypeReference" /> reference to the CLR type generated for the schema type with the <paramref name="typeName" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-156">Ta metoda umożliwia wyszukiwanie odwołanie do wygenerowanego typu środowiska CLR po wywołaniu <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4f3df-156">Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method.</span></span> <span data-ttu-id="4f3df-157"><xref:System.CodeDom.CodeTypeReference> Zawiera nazwę wygenerowanego typu i może służyć do odszukania odpowiadającego <xref:System.CodeDom.CodeTypeDeclaration> w <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="4f3df-157">The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCodeTypeReference">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeTypeReference GetCodeTypeReference(class System.Xml.XmlQualifiedName typeName, class System.Xml.Schema.XmlSchemaElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCodeTypeReference (typeName As XmlQualifiedName, element As XmlSchemaElement) As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeReference ^ GetCodeTypeReference(System::Xml::XmlQualifiedName ^ typeName, System::Xml::Schema::XmlSchemaElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="element" Type="System.Xml.Schema.XmlSchemaElement" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="4f3df-158">
            <see cref="T:System.Xml.XmlQualifiedName" /> , Który określa nazwy kwalifikowanej XML typu schematu do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-158">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the XML qualified name of the schema type to look up.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="4f3df-159">
            <see cref="T:System.Xml.Schema.XmlSchemaElement" /> Określająca element w schemacie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-159">An <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that specifies an element in an XML schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-160">Zwraca <see cref="T:System.CodeDom.CodeTypeReference" /> dla określonego pliku XML kwalifikowana elementu i elemencie schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-160">Returns a <see cref="T:System.CodeDom.CodeTypeReference" /> for the specified XML qualified element and schema element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-161">A <see cref="T:System.CodeDom.CodeTypeReference" /> reprezentujący typ, który został wygenerowany dla typu określonego schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-161">A <see cref="T:System.CodeDom.CodeTypeReference" /> that represents the type that was generated for the specified schema type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-162">Element schematu jest potrzebne dane dotyczące typu, który jest określony w zakresie elementu.</span><span class="sxs-lookup"><span data-stu-id="4f3df-162">The schema element is needed for data about the type that is specified at the element scope.</span></span> <span data-ttu-id="4f3df-163">Najlepszym przykładem tego jest atrybutu XSD `nillable`.</span><span class="sxs-lookup"><span data-stu-id="4f3df-163">The main example of this is the XSD attribute `nillable`.</span></span> <span data-ttu-id="4f3df-164">W schemacie ustawienie `nillable` do `true` jest określony w elemencie zawierający schemat, pojęcie wartość null jest wyrażone w typie CLR <xref:System.Nullable%601>.</span><span class="sxs-lookup"><span data-stu-id="4f3df-164">In schema, setting `nillable` to `true` is specified on the containing schema element whereas the concept of null is expressed in the CLR type <xref:System.Nullable%601>.</span></span> <span data-ttu-id="4f3df-165">Element jest przekazywana, aby ten importer można odszukać informacje na poziomie elementu i odpowiednio zwraca odwołanie do nieprawidłowego typu.</span><span class="sxs-lookup"><span data-stu-id="4f3df-165">The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.</span></span>  
  
 <span data-ttu-id="4f3df-166">Podczas importu WSDL, każdy parametr jest importowany oddzielnie i w związku z tym należy oddzielnie przekazano elementów parametrów.</span><span class="sxs-lookup"><span data-stu-id="4f3df-166">When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypeReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.CodeDom.CodeTypeReference&gt; GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.CodeDom.CodeTypeReference&gt; GetKnownTypeReferences(class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKnownTypeReferences (typeName As XmlQualifiedName) As ICollection(Of CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::CodeDom::CodeTypeReference ^&gt; ^ GetKnownTypeReferences(System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.CodeDom.CodeTypeReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="4f3df-167">
            <see cref="T:System.Xml.XmlQualifiedName" /> Reprezentujący typ schematu do odszukania znanych typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-167">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the schema type to look up known types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-168">Zwraca listę <see cref="T:System.CodeDom.CodeTypeReference" /> obiektów, które reprezentuje znane typy, które są generowane podczas generowania kodu dla typu określonego schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-168">Returns a list of <see cref="T:System.CodeDom.CodeTypeReference" /> objects that represents the known types generated when generating code for the specified schema type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-169">A <see cref="T:System.Collections.Generic.IList`1" /> typu <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-169">A <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-170">Podczas generowania typów CLR dla typów schematów, znane typy są także generowane dla wszystkich typów pochodnych, które znajdują się w schemacie.</span><span class="sxs-lookup"><span data-stu-id="4f3df-170">When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.</span></span> <span data-ttu-id="4f3df-171">W wielu przypadkach te znane typy są dodawane przy użyciu atrybutów w wygenerowanym kodzie.</span><span class="sxs-lookup"><span data-stu-id="4f3df-171">In many cases, these known types are added using attributes to the generated code.</span></span> <span data-ttu-id="4f3df-172">(Na przykład, zobacz <xref:System.Runtime.Serialization.KnownTypeAttribute> klasy.</span><span class="sxs-lookup"><span data-stu-id="4f3df-172">(For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class.</span></span> <span data-ttu-id="4f3df-173">) Jednak dla tego typu najwyższego poziomu, musi istnieć sposób zwrócenia zbiór znane typy wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="4f3df-173">) However, for the top-level type, there needs to be a way to return the set of known types generated.</span></span> <span data-ttu-id="4f3df-174">Ta metoda zwraca <xref:System.CodeDom.CodeTypeReference> znanych typów, które zostały wygenerowane dla typu schematu.</span><span class="sxs-lookup"><span data-stu-id="4f3df-174">This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type.</span></span>  
  
 <span data-ttu-id="4f3df-175">Aby uzyskać więcej informacji, zobacz [znane typy kontraktu danych](~/docs/framework/wcf/feature-details/data-contract-known-types.md).</span><span class="sxs-lookup"><span data-stu-id="4f3df-175">For more information, see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-176">Przekształca zestaw schematów XML do <see cref="T:System.CodeDom.CodeCompileUnit" /> używane do generowania kodu CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-176">Transforms a set of XML schemas into a <see cref="T:System.CodeDom.CodeCompileUnit" /> used to generate CLR code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-177">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierający reprezentacje schematu do generowania typów CLR dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-177">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations to generate CLR types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-178">Przekształca określony zestaw schematów XML zawartych w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> do <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-178">Transforms the specified set of XML schemas contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4f3df-179">W poniższym przykładzie użyto <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> metody, aby sprawdzić, czy zestaw schematów można zaimportować.</span><span class="sxs-lookup"><span data-stu-id="4f3df-179">The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported.</span></span> <span data-ttu-id="4f3df-180">Jeśli <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> metoda zwraca `true`, kod wywołuje <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4f3df-180">If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#2](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#2)]
 [!code-vb[XsdDataContractImporter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-181">
            <paramref name="schemas" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-181">The <paramref name="schemas" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; typeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(class System.Xml.Schema.XmlSchemaSet schemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlQualifiedName&gt; typeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (schemas As XmlSchemaSet, typeNames As ICollection(Of XmlQualifiedName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlQualifiedName ^&gt; ^ typeNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeNames" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt;" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-182">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierający reprezentacje schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-182">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</span>
          </span>
        </param>
        <param name="typeNames">
          <span data-ttu-id="4f3df-183">A <see cref="T:System.Collections.Generic.ICollection`1" /> (z <see cref="T:System.Xml.XmlQualifiedName" />) reprezentujący zestaw typów schematu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-183">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Xml.XmlQualifiedName" />) that represents the set of schema types to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-184">Przekształca określony zbiór typów schematów zawartych w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> na typy CLR do generowania <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-184">Transforms the specified set of schema types contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into CLR types generated into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName Import(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.XmlSchemaElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (schemas As XmlSchemaSet, element As XmlSchemaElement) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ Import(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::Schema::XmlSchemaElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="element" Type="System.Xml.Schema.XmlSchemaElement" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-185">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Zawierającego schematy do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-185">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to transform.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="4f3df-186">
            <see cref="T:System.Xml.Schema.XmlSchemaElement" /> Reprezentujący element określonego schematu do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-186">An <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that represents the specific schema element to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-187">Przekształca element określony schemat w zestawie określonego schematów XML do <see cref="T:System.CodeDom.CodeCompileUnit" /> i zwraca <see cref="T:System.Xml.XmlQualifiedName" /> reprezentujący nazwę kontraktu danych dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-187">Transforms the specified schema element in the set of specified XML schemas into a <see cref="T:System.CodeDom.CodeCompileUnit" /> and returns an <see cref="T:System.Xml.XmlQualifiedName" /> that represents the data contract name for the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f3df-188">
            <see cref="T:System.Xml.XmlQualifiedName" /> Reprezentujący określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-188">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the specified element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-189">
            <paramref name="schemas" /> Lub <paramref name="element" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-189">The <paramref name="schemas" /> or <paramref name="element" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (schemas As XmlSchemaSet, typeName As XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="4f3df-190">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierający reprezentacje schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-190">A <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema representations.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="4f3df-191">A <see cref="T:System.Xml.XmlQualifiedName" /> reprezentujący typ określonego schematu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-191">A <see cref="T:System.Xml.XmlQualifiedName" /> that represents a specific schema type to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f3df-192">Przekształca określony typ schematu XML zawartych w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> do <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-192">Transforms the specified XML schema type contained in an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f3df-193">
            <paramref name="schemas" /> Lub <paramref name="typeName" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-193">The <paramref name="schemas" /> or <paramref name="typeName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ImportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ImportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractImporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ImportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ImportOptions ^ Options { System::Runtime::Serialization::ImportOptions ^ get(); void set(System::Runtime::Serialization::ImportOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ImportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f3df-194">Pobiera lub ustawia <see cref="T:System.Runtime.Serialization.ImportOptions" /> zawiera opcje można ustawić dla operacji importowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-194">Gets or sets an <see cref="T:System.Runtime.Serialization.ImportOptions" /> that contains settable options for the import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f3df-195">A <see cref="T:System.Runtime.Serialization.ImportOptions" /> zawiera opcje można ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f3df-195">A <see cref="T:System.Runtime.Serialization.ImportOptions" /> that contains settable options.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3df-196">Użyj <xref:System.Runtime.Serialization.ImportOptions> klasę, aby dostosować jak typów CLR są generowane podczas importowania schematu.</span><span class="sxs-lookup"><span data-stu-id="4f3df-196">Use the <xref:System.Runtime.Serialization.ImportOptions> class to customize how the CLR types are generated during schema import.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
        <altmember cref="T:System.Runtime.Serialization.ImportOptions" />
      </Docs>
    </Member>
  </Members>
</Type>