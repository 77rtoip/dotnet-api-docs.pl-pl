<Type Name="SerializerWriter" FullName="System.Windows.Documents.Serialization.SerializerWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8d3cead74afd9c46cd3a3102528fe7557723653" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30700757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializerWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializerWriter abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody abstrakcyjne i zdarzenia, które są wymagane do zaimplementowania serializator danych wyjściowych wtyczki dokumentu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 [!code-csharp[DocumentSerialize#DocSerializeFileFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializefilefilter)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializerWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienia <xref:System.Windows.Documents.Serialization.SerializerWriter> powinny być tworzone przy użyciu <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> metody <xref:System.Windows.Documents.Serialization.SerializerProvider> obiektu nie <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> metody <xref:System.Windows.Documents.Serialization.ISerializerFactory> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Documents.Serialization.SerializerWriter> przy użyciu <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> Metoda.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, anuluje operację asynchronicznego zapisu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> czy sortowane zapisy <see cref="T:System.Windows.Media.Visual" /> elementów do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> metody.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator () As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> czy sortowane zapisy <see cref="T:System.Windows.Media.Visual" /> elementów.</summary>
        <returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> czy sortowane zapisy <see cref="T:System.Windows.Media.Visual" /> elementów w dokumencie output serializacji <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> metody.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> należy zwrócić <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> zapisuje serializacji tego samego <see cref="T:System.IO.Stream" /> jako <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> używany do jej utworzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePT, class System.Printing.PrintTicket documentPT) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator (documentSequencePT As PrintTicket, documentPT As PrintTicket) As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator(System::Printing::PrintTicket ^ documentSequencePT, System::Printing::PrintTicket ^ documentPT);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePT" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPT" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePT">Domyślnie drukowanie preferencje dotyczące <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> zawartości.</param>
        <param name="documentPT">Domyślnie drukowanie preferencje dotyczące <see cref="T:System.Windows.Documents.FixedDocument" /> zawartości.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> czy sortowane zapisy <see cref="T:System.Windows.Media.Visual" /> elementów wraz z danym biletów wydruku.</summary>
        <returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> czy sortowane zapisy <see cref="T:System.Windows.Media.Visual" /> elementów w dokumencie output serializacji <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `documentSequencePT` lub `documentPT` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego biletów wydruku dla danego <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> metody.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> należy zwrócić <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> zapisuje serializacji tego samego <see cref="T:System.IO.Stream" /> jako <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> tworzy go.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje zawartość do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Paginator dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument można zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Documents.FixedDocument" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencji dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strony, aby zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Documents.FixedPage" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Element do zapisu do serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Media.Visual" /> elementu do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Paginator dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>documentPaginator</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje podzielony na strony zawartość wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument można zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedDocument</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Documents.FixedDocument" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencji dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedDocumentSequence</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strony, aby zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedPage</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Documents.FixedPage" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Element do zapisu do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>visual</c> elementu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <see cref="T:System.Windows.Media.Visual" /> element wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji przepływu dokumentu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Paginator dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument można zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocument" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencji dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strony, aby zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedPage" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Element do zapisu do serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Media.Visual" /> elementu do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Paginator dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Paginator dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>documentPaginator</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument można zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocument" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument można zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedDocument</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocument" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencji dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencji dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedDocumentSequence</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strony, aby zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedPage" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strony, aby zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedPage</c> zawartości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedPage" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Element do zapisu do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Media.Visual" /> elementu do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Element do zapisu do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>visual</c> elementu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Media.Visual" /> element wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Paginator dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>documentPaginator</c> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje podzielony na strony zawartość wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument można zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedDocument</c> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocument" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencji dokumentu, który definiuje zawartość do zapisania serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedDocumentSequence</c> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strony, aby zapisać do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>fixedPage</c> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Documents.FixedPage" /> wraz z skojarzony <see cref="T:System.Printing.PrintTicket" /> do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Element do zapisu do serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślnie drukowanie preferencje dotyczące <c>visual</c> elementu.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <see cref="T:System.Windows.Media.Visual" /> elementu oraz skojarzone <see cref="T:System.Printing.PrintTicket" /> i identyfikator do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.  
  
 Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket> która jest prawidłowa dla danego drukarki.  
  
 `userState` jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> zdarzenie.  
  
 Dane wyjściowe <xref:System.IO.Stream> zapisu operacji zwykle jest określony jako parametr do konstruktora klasy pochodnej, która implementuje <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCancelled As WritingCancelledEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCancelledEventHandler ^ WritingCancelled;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje w przypadku przesłonięcia w klasie pochodnej, gdy <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> operacja została wykonana.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCompleted As WritingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCompletedEventHandler ^ WritingCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, występuje po zakończeniu operacji zapisu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingPrintTicketRequired As WritingPrintTicketRequiredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingPrintTicketRequiredEventHandler ^ WritingPrintTicketRequired;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, występuje tuż przed <see cref="T:System.Printing.PrintTicket" /> jest dodawany do strumienia przez <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> lub <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired> Zdarzeń umożliwia obsługi zdarzeń zastąpić nową <xref:System.Printing.PrintTicket> dla określonej w <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> lub <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> wywołania metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingProgressChanged As WritingProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingProgressChangedEventHandler ^ WritingProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje w przypadku przesłonięcia w klasie pochodnej, gdy <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> postęp aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład <xref:System.Windows.Documents.Serialization.SerializerWriter> można zaktualizować postęp po każdej stronie lub operacja zapisu każdy dokument w wielu dokumentów.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>