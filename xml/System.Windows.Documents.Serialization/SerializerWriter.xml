<Type Name="SerializerWriter" FullName="System.Windows.Documents.Serialization.SerializerWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2577e857e604deb60df731a55f9de1dbfb68288f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69209525" /></Metadata><TypeSignature Language="C#" Value="public abstract class SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializerWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializerWriter abstract" />
  <TypeSignature Language="F#" Value="type SerializerWriter = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody abstrakcyjne i zdarzenia, które są wymagane do zaimplementowania serializatora danych wyjściowych dokumentu wtyczki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 [!code-csharp[DocumentSerialize#DocSerializeFileFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializefilefilter)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializerWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienia elementu <xref:System.Windows.Documents.Serialization.SerializerWriter> powinny być tworzone przy <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> użyciu metody obiektu, <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> a <xref:System.Windows.Documents.Serialization.SerializerProvider> nie metody <xref:System.Windows.Documents.Serialization.ISerializerFactory> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Documents.Serialization.SerializerWriter> <xref:System.Windows.Documents.Serialization.SerializerProvider>jak utworzyć przy użyciu.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> Method.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelAsync();" />
      <MemberSignature Language="F#" Value="abstract member CancelAsync : unit -&gt; unit" Usage="serializerWriter.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, anuluje asynchroniczne operacje zapisu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> , że zapisuje <see cref="T:System.Windows.Media.Visual" /> posortowane elementy do <see cref="T:System.IO.Stream" />serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> sposób użycia metody.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator () As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator();" />
      <MemberSignature Language="F#" Value="abstract member CreateVisualsCollator : unit -&gt; System.Windows.Documents.Serialization.SerializerWriterCollator" Usage="serializerWriter.CreateVisualsCollator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> element, który <see cref="T:System.Windows.Media.Visual" /> porównuje elementy.</summary>
        <returns>, Który zapisuje <see cref="T:System.Windows.Media.Visual" /> posortowane elementy do serializacji <see cref="T:System.IO.Stream" />danych wyjściowych dokumentu. <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> sposób użycia metody.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />powinien zwrócić <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> zapisy, które są zapisywane w tej <see cref="T:System.IO.Stream" /> samej serializacji <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> co ta, która jest używana do tworzenia.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePT, class System.Printing.PrintTicket documentPT) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator (documentSequencePT As PrintTicket, documentPT As PrintTicket) As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator(System::Printing::PrintTicket ^ documentSequencePT, System::Printing::PrintTicket ^ documentPT);" />
      <MemberSignature Language="F#" Value="abstract member CreateVisualsCollator : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Windows.Documents.Serialization.SerializerWriterCollator" Usage="serializerWriter.CreateVisualsCollator (documentSequencePT, documentPT)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePT" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPT" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePT">Domyślne preferencje <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> drukowania zawartości.</param>
        <param name="documentPT">Domyślne preferencje <see cref="T:System.Windows.Documents.FixedDocument" /> drukowania zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> , że zapisuje <see cref="T:System.Windows.Media.Visual" /> posortowane elementy razem z podaną bilety drukowania.</summary>
        <returns>, Który zapisuje <see cref="T:System.Windows.Media.Visual" /> posortowane elementy do serializacji <see cref="T:System.IO.Stream" />danych wyjściowych dokumentu. <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `documentSequencePT`lub `documentPT`Jeśliniema preferowanychustawieńdrukowania.`null`  
  
 Ta metoda nie sprawdza poprawności ani nie modyfikuje określonych biletów drukowania dla danego <xref:System.Printing.PrintQueue>elementu.  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> sposób użycia metody.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />powinien zwrócić <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> zapis w tej samej serializacji <see cref="T:System.IO.Stream" /> co <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> program, który ją tworzy.</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje zawartość do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.DocumentPaginator -&gt; unit" Usage="serializerWriter.Write documentPaginator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Dokument Paginator, który definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> elementu do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocument -&gt; unit" Usage="serializerWriter.Write fixedDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dane <see cref="T:System.Windows.Documents.FixedDocument" /> do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocumentSequence -&gt; unit" Usage="serializerWriter.Write fixedDocumentSequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencja dokumentu, która definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dane <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedPage -&gt; unit" Usage="serializerWriter.Write fixedPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strona do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dane <see cref="T:System.Windows.Documents.FixedPage" /> do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriter.Write visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Element do zapisu w serializacji <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Media.Visual" /></param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dany <see cref="T:System.Windows.Media.Visual" /> element do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (documentPaginator, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Dokument Paginator, który definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="documentPaginator" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje zawartość stronicowaną razem ze skojarzoną <see cref="T:System.Printing.PrintTicket" /> z serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedDocument, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedDocument" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dane <see cref="T:System.Windows.Documents.FixedDocument" /> łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedDocumentSequence, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencja dokumentu, która definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedDocumentSequence" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dane <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedPage * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedPage, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strona do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedPage" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dane <see cref="T:System.Windows.Documents.FixedPage" /> łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">Element do zapisu w serializacji <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Media.Visual" /></param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="visual" /> elementu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, synchronicznie zapisuje dany <see cref="T:System.Windows.Media.Visual" /> element razem ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> metody do serializacji dokumentu przepływu do pliku wyjściowego.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje zawartość do <see cref="T:System.IO.Stream" />serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator -&gt; unit" Usage="serializerWriter.WriteAsync documentPaginator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Dokument Paginator, który definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> elementu do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument -&gt; unit" Usage="serializerWriter.WriteAsync fixedDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocument" /> dane do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence -&gt; unit" Usage="serializerWriter.WriteAsync fixedDocumentSequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencja dokumentu, która definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> dane do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage -&gt; unit" Usage="serializerWriter.WriteAsync fixedPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strona do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedPage" /> dane do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriter.WriteAsync visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Element do zapisu w serializacji <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Media.Visual" /></param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Media.Visual" /> dany element do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * obj -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Dokument Paginator, który definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> elementu do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Dokument Paginator, który definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="documentPaginator" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje zawartość danego <see cref="T:System.Windows.Documents.DocumentPaginator" /> elementu do serializacji. <see cref="T:System.IO.Stream" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocument" /> dane do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedDocument" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocument" /> dane łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencja dokumentu, która definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> dane do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencja dokumentu, która definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedDocumentSequence" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> dane łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strona do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedPage" /> dane do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strona do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedPage" /> zawartości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedPage" /> dane łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * obj -&gt; unit" Usage="serializerWriter.WriteAsync (visual, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">Element do zapisu w serializacji <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Media.Visual" /></param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Media.Visual" /> dany element do serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">Element do zapisu w serializacji <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Media.Visual" /></param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="visual" /> elementu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Media.Visual" /> dany element razem ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Dokument Paginator, który definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="documentPaginator" /> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje zawartość stronicowaną razem ze <see cref="T:System.Printing.PrintTicket" /> skojarzoną z <see cref="T:System.IO.Stream" />serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Dokument do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedDocument" /> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocument" /> dane łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Sekwencja dokumentu, która definiuje zawartość do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedDocumentSequence" /> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> dane łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Strona do zapisu w serializacji <see cref="T:System.IO.Stream" />.</param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="fixedPage" /> zawartości.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Documents.FixedPage" /> dane łącznie ze skojarzonym <see cref="T:System.Printing.PrintTicket" /> z serializacji <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (visual, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">Element do zapisu w serializacji <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Media.Visual" /></param>
        <param name="printTicket">Domyślne preferencje drukowania dla <paramref name="visual" /> elementu.</param>
        <param name="userState">Obiekt określony przez obiekt wywołujący do identyfikowania asynchronicznej operacji zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, asynchronicznie zapisuje <see cref="T:System.Windows.Media.Visual" /> dany element wraz z identyfikatorem skojarzonym <see cref="T:System.Printing.PrintTicket" /> i dla <see cref="T:System.IO.Stream" />serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`może mieć `null` brak preferowanych ustawień drukowania.  
  
 Ta metoda nie weryfikuje ani nie modyfikuje podanego `printTicket` elementu. <xref:System.Printing.PrintQueue>  W razie potrzeby użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> metody, aby <xref:System.Printing.PrintQueue>utworzyć specyficzną <xref:System.Printing.PrintTicket> dla danej drukarki, która jest prawidłowa.  
  
 `userState`jest przenoszona do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> momentu wystąpienia zdarzenia.  
  
 Dane wyjściowe <xref:System.IO.Stream> operacji zapisu są zwykle określane jako parametr do konstruktora klasy pochodnej implementującej <xref:System.Windows.Documents.Serialization.SerializerWriter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCancelled As WritingCancelledEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCancelledEventHandler ^ WritingCancelled;" />
      <MemberSignature Language="F#" Value="member this.WritingCancelled : System.Windows.Documents.Serialization.WritingCancelledEventHandler " Usage="member this.WritingCancelled : System.Windows.Documents.Serialization.WritingCancelledEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, występuje, <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> gdy operacja jest wykonywana.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCompleted As WritingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCompletedEventHandler ^ WritingCompleted;" />
      <MemberSignature Language="F#" Value="member this.WritingCompleted : System.Windows.Documents.Serialization.WritingCompletedEventHandler " Usage="member this.WritingCompleted : System.Windows.Documents.Serialization.WritingCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, występuje po zakończeniu operacji zapisu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingPrintTicketRequired As WritingPrintTicketRequiredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingPrintTicketRequiredEventHandler ^ WritingPrintTicketRequired;" />
      <MemberSignature Language="F#" Value="member this.WritingPrintTicketRequired : System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler " Usage="member this.WritingPrintTicketRequired : System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy <see cref="T:System.Printing.PrintTicket" /> jest zastępowany w klasie pochodnej, występuje tuż przed dodaniem do strumienia <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> za pomocą metody lub <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie umożliwia programowi obsługi zdarzeń podstawianie nowego <xref:System.Printing.PrintTicket> dla <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> tego elementu określonego w wywołaniu metody <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A>lub. <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingProgressChanged As WritingProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingProgressChangedEventHandler ^ WritingProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.WritingProgressChanged : System.Windows.Documents.Serialization.WritingProgressChangedEventHandler " Usage="member this.WritingProgressChanged : System.Windows.Documents.Serialization.WritingProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> zastępowany w klasie pochodnej, występuje po aktualizacji postępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład <xref:System.Windows.Documents.Serialization.SerializerWriter> można zaktualizować postęp po każdej stronie lub po każdym dokumencie w operacji zapisu Wielodokumentowego.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
