<Type Name="IJSVsaEngine" FullName="Microsoft.JScript.Vsa.IJSVsaEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1716d81332f3b1b2adc57874a8239015f8f0c04" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36732402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IJSVsaEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IJSVsaEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Vsa.IJSVsaEngine" />
  <TypeSignature Language="VB.NET" Value="Public Interface IJSVsaEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IJSVsaEngine" />
  <TypeSignature Language="F#" Value="type IJSVsaEngine = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8FA2C97B-47E4-4A31-A7F5-FF39D1195CD9")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eb81d-101">Definiuje metody i właściwości, czy aparat skryptu musi obsługiwać i zapewnia dostęp programistyczny do aparatu skryptów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb81d-101">Defines the methods and properties that a script engine must support and provides programmatic access to the script engine.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-102">Pobiera odwołanie do zestawu uruchomionych generowany przez metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-102">Gets a reference to the running assembly generated by Run method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-103">Odwołanie do zestawu aktualnie uruchomione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-103">Reference to the currently running assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iJSVsaEngine.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-104">Zamyka aparat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-104">Closes the engine.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iJSVsaEngine.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-105">Powoduje, że aparat skompilować istniejący stan źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-105">Causes the engine to compile the existing source state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb81d-106">
            <see langword="true" /> na pomyślne kompilacji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-106">
              <see langword="true" /> on successful compilation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-107">Udostępnia dowód wyłącznie w celu weryfikowania tożsamości bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-107">Provides evidence for the purpose of validating the current object's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-108">Zwraca odwołanie do obiektu dowód.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-108">Returns a reference to an Evidence object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDebugInfo">
      <MemberSignature Language="C#" Value="public bool GenerateDebugInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateDebugInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.GenerateDebugInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateDebugInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateDebugInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateDebugInfo : bool with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.GenerateDebugInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-109">Ustawia lub pobiera wartość logiczna, która wskazuje, czy aparat skryptu tworzy informacji o debugowaniu, gdy wywoływana jest metoda kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-109">Sets or gets a Boolean value that signifies whether the script engine produces debug information when the Compile method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-110">
            <see langword="true" /> Aby wygenerować informacje debugowania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-110">
              <see langword="true" /> to produce debug information; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public object GetOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOption : string -&gt; obj" Usage="iJSVsaEngine.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="eb81d-111">Nazwa opcji do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-111">The name of the option to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb81d-112">Pobiera opcje konkretnej implementacji dla aparatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-112">Gets implementation-specific options for the engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb81d-113">Wartość opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-113">The value of the option.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitNew">
      <MemberSignature Language="C#" Value="public void InitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitNew();" />
      <MemberSignature Language="F#" Value="abstract member InitNew : unit -&gt; unit" Usage="iJSVsaEngine.InitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-114">Zapewnia powiadomienie o ukończeniu faza inicjowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-114">Provides a notification that the initialization phase is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-115">Pobiera lub ustawia wartość wskazującą, czy źródło jest kompilowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-115">Gets or sets a value that indicates whether the source is compiled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-116">
            <see langword="true" /> Jeśli źródło jest skompilowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-116">
              <see langword="true" /> if the source is compiled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-117">Pobiera lub ustawia wartość wskazującą, czy bieżący reprezentacji w pamięci elementu różni się od reprezentacji utrwalonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-117">Gets or sets a value that indicates whether the current in-memory representation of the item differs from the persisted representation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-118">
            <see langword="true" /> Jeśli reprezentacji w pamięci różni się od trwałego reprezentacja; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-118">
              <see langword="true" /> if the in-memory representation differs from the persisted representation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-119">Pobiera wartość logiczna, która informuje, czy aparat skryptu jest obecnie w trybie uruchamiania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-119">Gets a Boolean value that reports whether the script engine is currently in run mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-120">
            <see langword="true" /> Jeśli aparat jest w trybie uruchamiania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-120">
              <see langword="true" /> if the engine is in run mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public bool IsValidIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidIdentifier (identifier As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidIdentifier(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="iJSVsaEngine.IsValidIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <span data-ttu-id="eb81d-121">Wartość ciągu podana jako identyfikator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-121">A string value provided as identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb81d-122">Sprawdza, czy podany identyfikator jest nieprawidłowy dla aparatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-122">Checks whether the supplied identifier is valid for the engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb81d-123">
            <see langword="true" /> Jeśli identyfikator jest nieprawidłowy; w przeciwnym razie zwraca <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-123">
              <see langword="true" /> if the identifier is valid; otherwise, it returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaItems Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.JScript.Vsa.IJSVsaItems Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IJSVsaItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::JScript::Vsa::IJSVsaItems ^ Items { Microsoft::JScript::Vsa::IJSVsaItems ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : Microsoft.JScript.Vsa.IJSVsaItems" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-124">Pobiera kolekcję obiektów IJSVsaItem, które zawierają wszystkie elementy dodane do aparatu skryptów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-124">Gets the collection of IJSVsaItem objects, which represent all items added to the script engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-125">Kolekcja elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-125">The collection of items.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-126">Pobiera nazwę języka programowania, obsługiwane przez aparat skryptów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-126">Gets the name of the programming language supported by the script engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-127">Nazwa języka programowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-127">The name of the programming language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-128">Pobiera lub ustawia geograficzne ustawienia regionalne i językowe w którym komunikaty o wyjątkach raportu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-128">Gets or sets the geographical locale and language in which to report exception messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-129">Wartość całkowitą reprezentującą ustawień regionalnych, w którym wyjątek wiadomości są podawane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-129">An integer value representing the locale in which exception messages are to be reported.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSourceState">
      <MemberSignature Language="C#" Value="public void LoadSourceState (Microsoft.JScript.Vsa.IJSVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSourceState(class Microsoft.JScript.Vsa.IJSVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadSourceState (site As IJSVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadSourceState(Microsoft::JScript::Vsa::IJSVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member LoadSourceState : Microsoft.JScript.Vsa.IJSVsaPersistSite -&gt; unit" Usage="iJSVsaEngine.LoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site">
          <span data-ttu-id="eb81d-130">Lokacja, z którego ładowany jest elementów określonego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-130">The site from which the specified source items is loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb81d-131">Określa, że aparat załadować elementów źródła z ich punktu trwałości, określonych przez obiekt dostarczony do hosta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-131">Directs the engine to load source items from their point of persistence, as specified by the host-provided object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-132">Ustawia lub pobiera nazwę wyświetlaną aparatu skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-132">Sets or gets the display name of the script engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-133">Nazwa aparatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-133">The name of the engine.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iJSVsaEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-134">Usuwa aparat skryptu z uruchomiona i rozłącza obsługi automatycznie powiązanych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-134">Removes the script engine from the running state and disconnects automatically bound event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeCache">
      <MemberSignature Language="C#" Value="public void RevokeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.RevokeCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeCache();" />
      <MemberSignature Language="F#" Value="abstract member RevokeCache : unit -&gt; unit" Usage="iJSVsaEngine.RevokeCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-135">Unieważnia pamięci podręcznej zestawu aparatu, określony przez jego moniker głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-135">Invalidates the cached assembly for the engine, as specified by its root moniker.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMoniker">
      <MemberSignature Language="C#" Value="public string RootMoniker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootMoniker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker" />
      <MemberSignature Language="VB.NET" Value="Public Property RootMoniker As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootMoniker { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootMoniker : string with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-136">Ustawia lub pobiera moniker głównego aparatu skryptów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-136">Sets or gets a script engine's root moniker.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-137">Moniker głównego aparatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-137">The root moniker of the engine.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-138">Ustawia lub pobiera głównej przestrzeni nazw używany przez aparat skryptów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-138">Sets or gets the root namespace used by the script engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-139">Przestrzeń nazw aparatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-139">The namespace of the engine.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="abstract member Run : unit -&gt; unit" Usage="iJSVsaEngine.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-140">Inicjuje wykonywanie kodu skompilowanego aparat skryptów i wiąże wszystkich procedur obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-140">Initiates execution of compiled code in the script engine and binds all event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompiledState">
      <MemberSignature Language="C#" Value="public void SaveCompiledState (out byte[] pe, out byte[] pdb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; pdb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCompiledState (ByRef pe As Byte(), ByRef pdb As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pdb);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompiledState :  *  -&gt; unit" Usage="iJSVsaEngine.SaveCompiledState (pe, pdb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]&amp;" RefType="out" />
        <Parameter Name="pdb" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe">
          <span data-ttu-id="eb81d-141">Skompilowanej aparat skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-141">The compiled state of the script engine.</span>
          </span>
        </param>
        <param name="pdb">
          <span data-ttu-id="eb81d-142">Określa informacje o debugowaniu zawarte w. Plik PDB odpowiadający PE (przenośny plik wykonywalny).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-142">Specifies debugging information contained in the .PDB file corresponding to the PE (portable executable).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb81d-143">Zapisuje skompilowanej aparatu skryptu; opcjonalnie zapisuje informacje o debugowaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-143">Saves the compiled state of the script engine; optionally, it also saves debugging information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSourceState">
      <MemberSignature Language="C#" Value="public void SaveSourceState (Microsoft.JScript.Vsa.IJSVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSourceState(class Microsoft.JScript.Vsa.IJSVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.SaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSourceState (site As IJSVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveSourceState(Microsoft::JScript::Vsa::IJSVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member SaveSourceState : Microsoft.JScript.Vsa.IJSVsaPersistSite -&gt; unit" Usage="iJSVsaEngine.SaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site">
          <span data-ttu-id="eb81d-144">Witryna, którego źródłem jest zapisany stan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-144">The site to which source state is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb81d-145">Określa, że aparat skryptu, aby utrwalić stanu źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-145">Directs the script engine to persist its source state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public void SetOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOption : string * obj -&gt; unit" Usage="iJSVsaEngine.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="eb81d-146">Nazwa opcji, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-146">The name of the option to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb81d-147">Wartość opcji ustawiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-147">The value for the option being set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb81d-148">Ustawia opcje konkretnej implementacji dla aparatu skryptów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-148">Sets implementation-specific options for a script engine.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaSite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.JScript.Vsa.IJSVsaSite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As IJSVsaSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::JScript::Vsa::IJSVsaSite ^ Site { Microsoft::JScript::Vsa::IJSVsaSite ^ get(); void set(Microsoft::JScript::Vsa::IJSVsaSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : Microsoft.JScript.Vsa.IJSVsaSite with get, set" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-149">Ustawia lub pobiera obiekt IJSVsaSite zaimplementowana hosta jest używana przez aparat skryptów do komunikowania się z hostem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-149">Sets or gets the host-implemented IJSVsaSite object that is used by the script engine to communicate with the host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-150">Obiekt zaimplementowana przez hosta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-150">The host-implemented object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.IJSVsaEngine.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="Microsoft.JScript.Vsa.IJSVsaEngine.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb81d-151">Pobiera bieżącą wersję kompilatora języka obsługiwane przez aparat skryptów w formie <c>Major.Minor.Revision.Build</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-151">Gets the current version of the language compiler supported by the script engine, in the form <c>Major.Minor.Revision.Build</c>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb81d-152">Aktualna wersja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb81d-152">The current version.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>