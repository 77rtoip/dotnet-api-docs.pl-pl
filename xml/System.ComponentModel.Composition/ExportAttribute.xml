<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb65ecc34fd071ed7aa5819528dd504ad1418a58" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52912549" /></Metadata><TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7672d-101">Określa, że typów, właściwości, pola lub metody zapewnia określonego eksportu.</span><span class="sxs-lookup"><span data-stu-id="7672d-101">Specifies that a type, property, field, or method provides a particular export.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7672d-102">W opartego na atrybutach programowania modelu <xref:System.ComponentModel.Composition.ExportAttribute> deklaruje, że część eksportuje, lub dostarcza do kontenera kompozycji, obiekt, który spełnia określonej umowy.</span><span class="sxs-lookup"><span data-stu-id="7672d-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ExportAttribute> declares that a part exports, or provides to the composition container, an object that fulfills a particular contract.</span></span> <span data-ttu-id="7672d-103">Podczas tworzenia części za pomocą importów, które pasują do Umowy mają te zależności, uzupełnione przez eksportowanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="7672d-103">During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.</span></span>  
  
 <span data-ttu-id="7672d-104"><xref:System.ComponentModel.Composition.ExportAttribute> Można dekoracji całej klasy lub właściwością, polem ani metodą klasy.</span><span class="sxs-lookup"><span data-stu-id="7672d-104">The <xref:System.ComponentModel.Composition.ExportAttribute> can decorate either an entire class, or a property, field, or method of a class.</span></span> <span data-ttu-id="7672d-105">Jeśli cała klasa jest urządzony, wystąpienie tej klasy jest eksportowanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="7672d-105">If the entire class is decorated, an instance of the class is the exported object.</span></span> <span data-ttu-id="7672d-106">Jeśli zostanie nadany składowej klasy, eksportowanego obiektu będzie wartość ozdobione elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="7672d-106">If a member of a class is decorated, the exported object will be the value of the decorated member.</span></span>  
  
 <span data-ttu-id="7672d-107">Określa, czy kontrakt odpowiada wynika przede wszystkim Nazwa kontraktu i typ umowy.</span><span class="sxs-lookup"><span data-stu-id="7672d-107">Whether or not a contract matches is determined primarily by the contract name and the contract type.</span></span> <span data-ttu-id="7672d-108">Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Composition.ImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7672d-108">For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7672d-109">W poniższym przykładzie przedstawiono trzy klasy ozdobione <xref:System.ComponentModel.Composition.ExportAttribute>i trzy Importy, odpowiadające im.</span><span class="sxs-lookup"><span data-stu-id="7672d-109">The following example shows three classes decorated with the <xref:System.ComponentModel.Composition.ExportAttribute>, and three imports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde"><span data-ttu-id="7672d-110">Omówienie modelu programowania opartego na atrybutach</span><span class="sxs-lookup"><span data-stu-id="7672d-110">Attributed Programming Model Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7672d-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7672d-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7672d-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasa, eksportowanie typu lub elementu członkowskiego oznaczona przy użyciu tego atrybutu w obszarze domyślna nazwa kontraktu.</span><span class="sxs-lookup"><span data-stu-id="7672d-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7672d-113">Domyślna nazwa kontraktu jest wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody typu właściwości lub pola lub typ, który jest oznaczony za pomocą tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7672d-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="7672d-114">Metody oznaczone za pomocą tego atrybutu, należy określić nazwę kontraktu lub typ przy użyciu <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> lub <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="7672d-114">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="7672d-115">Nazwa kontraktu jest porównywana za pomocą <xref:System.StringComparer.Ordinal%2A> właściwość, aby wykonać porównanie niejęzykowe, wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="7672d-115">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="7672d-116">Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem lub <see langword="null" /> ani być pustym ciągiem ("") można używać domyślnej nazwy kontraktu.</span><span class="sxs-lookup"><span data-stu-id="7672d-116">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="7672d-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasa, eksportowanie typu lub elementu członkowskiego oznaczona przy użyciu tego atrybutu w obszarze nazwy określonej umowy.</span><span class="sxs-lookup"><span data-stu-id="7672d-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7672d-118">Domyślna nazwa kontraktu jest wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody typu właściwości lub pola lub typ, to jest oznaczony za pomocą tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7672d-118">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="7672d-119">Metody oznaczone za pomocą tego atrybutu, należy określić nazwę kontraktu lub typ przy użyciu <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> lub <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="7672d-119">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="7672d-120">Nazwa kontraktu jest porównywana za pomocą <xref:System.StringComparer.Ordinal%2A> właściwość, aby wykonać porównanie niejęzykowe, wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="7672d-120">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="7672d-121">Typ, z którego pochodzi z nazwą kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem lub <see langword="null" /> do Użyj domyślnej nazwy kontraktu.</span><span class="sxs-lookup"><span data-stu-id="7672d-121">A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="7672d-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasa, eksportowanie typu lub elementu członkowskiego oznaczona przy użyciu tego atrybutu w obszarze nazwy kontraktu, pochodzi z określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7672d-122">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under a contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7672d-123">Nazwa kontraktu jest wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody `contractType`.</span><span class="sxs-lookup"><span data-stu-id="7672d-123">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="7672d-124">Domyślna nazwa kontraktu jest wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody typu właściwości lub pola lub typ, który jest oznaczony za pomocą tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7672d-124">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="7672d-125">Metody oznaczone za pomocą tego atrybutu, należy określić nazwę kontraktu lub typ przy użyciu <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> lub <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="7672d-125">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="7672d-126">Nazwa kontraktu jest porównywana za pomocą <xref:System.StringComparer.Ordinal%2A> właściwość, aby wykonać porównanie niejęzykowe, wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="7672d-126">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="7672d-127">Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem lub <see langword="null" /> ani być pustym ciągiem ("") można używać domyślnej nazwy kontraktu.</span><span class="sxs-lookup"><span data-stu-id="7672d-127">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="7672d-128">Typ do wyeksportowania.</span><span class="sxs-lookup"><span data-stu-id="7672d-128">The type to export.</span></span></param>
        <summary><span data-ttu-id="7672d-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportowanie określonego typu, w obszarze nazwy określonej umowy.</span><span class="sxs-lookup"><span data-stu-id="7672d-129">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the specified type under the specified contract name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7672d-130">Pobiera nazwę kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem.</span><span class="sxs-lookup"><span data-stu-id="7672d-130">Gets the contract name that is used to export the type or member marked with this attribute.</span></span></summary>
        <value><span data-ttu-id="7672d-131">Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem.</span><span class="sxs-lookup"><span data-stu-id="7672d-131">The contract name that is used to export the type or member marked with this attribute.</span></span> <span data-ttu-id="7672d-132">Wartością domyślną jest ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="7672d-132">The default value is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7672d-133">Pobiera typ kontraktu, który został wyeksportowany przez element członkowski, który ten atrybut jest dołączany do.</span><span class="sxs-lookup"><span data-stu-id="7672d-133">Gets the contract type that is exported by the member that this attribute is attached to.</span></span></summary>
        <value><span data-ttu-id="7672d-134">Typ eksportu, które jest dostarczane.</span><span class="sxs-lookup"><span data-stu-id="7672d-134">The type of export that is be provided.</span></span> <span data-ttu-id="7672d-135">Wartość domyślna to <see langword="null" />, co oznacza, że typ będzie można uzyskać, analizując typ elementu członkowskiego, który tego eksportu jest dołączony do.</span><span class="sxs-lookup"><span data-stu-id="7672d-135">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this export is attached to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>