<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1b6a515860c8bbd6ada9ca0536436e21610cdaf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30439662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że typ, właściwości, pole lub metoda zawiera konkretnego eksportu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypisanych programowania modelu <xref:System.ComponentModel.Composition.ExportAttribute> deklaruje, że eksportuje części, lub udostępnia do kontenera kompozycji, obiektu spełniającego określonej umowy. Podczas tworzenia części z Importy, które pasują do kontrakty mają tych zależności wypełnił eksportowanego obiektu.  
  
 <xref:System.ComponentModel.Composition.ExportAttribute> Można dekoracji całej klasy lub właściwości, pole lub metoda klasy. Jeśli ma przypisany całej klasy, wystąpienia klasy jest eksportowanego obiektu. Jeśli ma przypisany element członkowski klasy, eksportowanego obiektu będzie wartość ozdobione elementu członkowskiego.  
  
 Określa, czy kontrakt jest zgodna zależy przede wszystkim Nazwa kontraktu i typ kontraktu. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Composition.ImportAttribute>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono trzy klasy ozdobione <xref:System.ComponentModel.Composition.ExportAttribute>i trzy Importy, zgodne z nich.  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportowanie typu lub elementu członkowskiego oznaczonych tego atrybutu w obszarze domyślną nazwę kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna nazwa kontraktu to wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody na typ właściwości lub pola lub na typ, który jest oznaczony atrybutem tego.  
  
 Metody oznaczonej przez atrybut ten należy określić nazwę kontraktu lub typ przy użyciu <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> lub <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 Nazwa kontraktu jest porównywany przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do przeprowadzenia porównania z uwzględnieniem wielkości liter, językowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem lub <see langword="null" /> lub ciąg pusty ("") Aby użyć domyślnej nazwy kontraktu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportowanie typu lub elementu członkowskiego oznaczonych tego atrybutu o nazwie określonej kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna nazwa kontraktu to wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> — metoda, właściwość lub pole typu lub to jest oznaczony atrybutem tego typu.  
  
 Metody oznaczonej przez atrybut ten należy określić nazwę kontraktu lub typ przy użyciu <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> lub <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 Nazwa kontraktu jest porównywany przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do przeprowadzenia porównania z uwzględnieniem wielkości liter, językowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">Typ, z którego pochodzi nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem lub <see langword="null" /> do używania domyślnej nazwy kontraktu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasa, eksportowanie typu lub elementu członkowskiego oznaczona z tym atrybutem pod nazwą kontraktu pochodzących z określonego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kontraktu jest wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metoda `contractType`.  
  
 Domyślna nazwa kontraktu to wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody na typ właściwości lub pola lub na typ, który jest oznaczony atrybutem tego.  
  
 Metody oznaczonej przez atrybut ten należy określić nazwę kontraktu lub typ przy użyciu <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> lub <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 Nazwa kontraktu jest porównywany przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do przeprowadzenia porównania z uwzględnieniem wielkości liter, językowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem lub <see langword="null" /> lub ciąg pusty ("") Aby użyć domyślnej nazwy kontraktu.</param>
        <param name="contractType">Typ do wyeksportowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy eksportowanie określonego typu o nazwie określonej kontraktu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem.</summary>
        <value>Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego, z tym atrybutem. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kontraktu, który został wyeksportowany przez element członkowski, który jest powiązany ten atrybut.</summary>
        <value>Typ eksportu, który został dostarczony. Wartość domyślna to <see langword="null" />, co oznacza, że typ będą uzyskiwane od spojrzenie na typ elementu członkowskiego, podłączonego do tego eksportu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>