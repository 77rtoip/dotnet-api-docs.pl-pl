<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9af753a3553acf8f9f79e3d1c75f7f1c493dc3e7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69351349" /></Metadata><TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że typ, właściwość, pole lub metoda zapewnia określony eksport.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W modelu <xref:System.ComponentModel.Composition.ExportAttribute> programowania z atrybutami deklaruje, że część eksportuje lub dostarcza do kontenera kompozycji, obiekt, który spełnia określony kontrakt. W trakcie kompozycji części z importami, którzy mają pasujące kontrakty, będą miały takie zależności, które zostały wypełnione przez wyeksportowany obiekt.  
  
 <xref:System.ComponentModel.Composition.ExportAttribute> Może dekorować całej klasy lub właściwości, pola lub metody klasy. Jeśli cała klasa jest dekoracyjna, wystąpienie klasy jest wyeksportowanym obiektem. Jeśli element członkowski klasy jest dekoracyjny, wyeksportowany obiekt będzie wartością składowej dekoracyjnej.  
  
 Czy dopasowanie kontraktu jest określane głównie nazwą kontraktu i typem kontraktu. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Composition.ImportAttribute>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia trzy klasy z <xref:System.ComponentModel.Composition.ExportAttribute>i trzy Importy, które je spełniają.  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde">Omówienie modelu programowania opartego na atrybutach</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportując typ lub element członkowski oznaczony przy użyciu tego atrybutu pod nazwą domyślnej kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kontraktu domyślnego jest wynikiem wywołania <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody dla właściwości lub typu pola lub typu, który jest oznaczony za pomocą tego atrybutu.  
  
 Metody oznaczone atrybutem this muszą określać nazwę kontraktu lub typ za pomocą albo <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>. <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>  
  
 Nazwa kontraktu jest porównywana przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do wykonania porównania bez uwzględniania wielkości liter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">Nazwa kontraktu, która jest używana do eksportowania typu lub elementu członkowskiego oznaczonego za pomocą tego <see langword="null" /> atrybutu lub lub pustym ciągiem (""), aby użyć domyślnej nazwy kontraktu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportując typ lub element członkowski oznaczony przy użyciu tego atrybutu pod określoną nazwą kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kontraktu domyślnego jest wynikiem wywołania <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody dla właściwości lub typu pola lub typu, który jest oznaczony za pomocą tego atrybutu.  
  
 Metody oznaczone atrybutem this muszą określać nazwę kontraktu lub typ za pomocą albo <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>. <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>  
  
 Nazwa kontraktu jest porównywana przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do wykonania porównania bez uwzględniania wielkości liter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">Typ, z którego ma pochodzić Nazwa kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego oznaczonego za pomocą tego <see langword="null" /> atrybutu, lub do użycia domyślnej nazwy kontraktu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportując typ lub składową oznaczoną z tym atrybutem w nazwie kontraktu pochodzącego od określonego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kontraktu jest wynikiem wywołania <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `contractType`metody.  
  
 Nazwa kontraktu domyślnego jest wynikiem wywołania <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody dla właściwości lub typu pola lub typu, który jest oznaczony za pomocą tego atrybutu.  
  
 Metody oznaczone atrybutem this muszą określać nazwę kontraktu lub typ za pomocą albo <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>. <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>  
  
 Nazwa kontraktu jest porównywana przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do wykonania porównania bez uwzględniania wielkości liter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">Nazwa kontraktu, która jest używana do eksportowania typu lub elementu członkowskiego oznaczonego za pomocą tego <see langword="null" /> atrybutu lub lub pustym ciągiem (""), aby użyć domyślnej nazwy kontraktu.</param>
        <param name="contractType">Typ do wyeksportowania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> klasy, eksportując określony typ pod określoną nazwą kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

Nazwa kontraktu domyślnego jest wynikiem wywołania <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)?displayProperty=nameWithType> właściwości lub typu pola lub samego typu, który jest oznaczony za pomocą tego atrybutu. 
                
Nazwa kontraktu jest porównywana przy użyciu uwzględniania wielkości liter, a nie za pomocą <xref:System.StringComparer.Ordinal?displayProperty=nameWithType>porównania przy użyciu.
                    
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kontraktu, który jest używany do eksportowania typu lub elementu członkowskiego oznaczonego za pomocą tego atrybutu.</summary>
        <value>Nazwa kontraktu, która jest używana do eksportowania typu lub elementu członkowskiego oznaczonego za pomocą tego atrybutu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kontraktu, który jest eksportowany przez element członkowski, do którego jest dołączony ten atrybut.</summary>
        <value>Typ eksportu, który ma zostać udostępniony. Wartość domyślna to <see langword="null" />, co oznacza, że typ zostanie uzyskany, przeglądając typ elementu członkowskiego, do którego jest dołączony ten eksport.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
