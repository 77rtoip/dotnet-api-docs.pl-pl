<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fd342b12b95b30ace25637548d85e95df490be4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30439977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8446d-101">Określa, czy wartość właściwości, pole lub parametr powinny być dostarczone przez <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span>
      <span class="sxs-lookup">
        <span data-stu-id="8446d-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8446d-102">W przypisanych programowania modelu <xref:System.ComponentModel.Composition.ImportAttribute> służy do deklarowania importów lub zależności danej części.</span><span class="sxs-lookup"><span data-stu-id="8446d-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="8446d-103">Można go dekoracji właściwością, polem lub metody.</span><span class="sxs-lookup"><span data-stu-id="8446d-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="8446d-104">Podczas tworzenia, importowania części zostaną wypełnione przez <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> obiektu, do którego należy ta część, przy użyciu eksportu podane w tym <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8446d-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="8446d-105">Czy import odpowiada danym eksportu zależy przede wszystkim na podstawie porównania Nazwa kontraktu i typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="8446d-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="8446d-106">Zwykle jest konieczne określanie ich, używając atrybutu importu w kodzie i będzie można automatycznie wywnioskować na podstawie typu ozdobione elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="8446d-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="8446d-107">Jeśli importu musi odpowiadać eksportu innego typu (na przykład podklasą typu ozdobione elementu członkowskiego lub interfejsu implementowanego przez ten element członkowski), następnie typ kontraktu musi być jawnie określona.</span><span class="sxs-lookup"><span data-stu-id="8446d-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="8446d-108">Nazwa kontraktu można również jawnie określić, na przykład w celu rozróżnienia wielu umów tego samego typu, ale lepiej w tym metadanych.</span><span class="sxs-lookup"><span data-stu-id="8446d-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="8446d-109">Aby uzyskać więcej informacji o metadanych, zobacz <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8446d-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8446d-110">Poniższy przykład przedstawia trzy klasy z elementy członkowskie oznaczone <xref:System.ComponentModel.Composition.ImportAttribute>i dopasować je trzy eksportu.</span><span class="sxs-lookup"><span data-stu-id="8446d-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8446d-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> klasy importowanie eksportu z domyślną nazwą kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8446d-113">Domyślna nazwa kontraktu to wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody to jest oznaczony atrybutem tego typu właściwości, pole lub parametr.</span><span class="sxs-lookup"><span data-stu-id="8446d-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="8446d-114">Nazwa kontraktu jest porównywany przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do przeprowadzenia porównania z uwzględnieniem wielkości liter, językowe.</span><span class="sxs-lookup"><span data-stu-id="8446d-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="8446d-115">Nazwa kontraktu eksportu do zaimportowania, lub <see langword="null" /> lub ciąg pusty ("") Aby użyć domyślnej nazwy kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-115">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8446d-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> klasy importowanie eksportu o nazwie określonej kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8446d-117">Domyślna nazwa kontraktu to wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody na typ właściwości, pole lub parametr, który jest oznaczony atrybutem tego.</span><span class="sxs-lookup"><span data-stu-id="8446d-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="8446d-118">Nazwa kontraktu jest porównywany przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do przeprowadzenia porównania z uwzględnieniem wielkości liter, językowe.</span><span class="sxs-lookup"><span data-stu-id="8446d-118">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="8446d-119">Typ wyprowadzenia nazwę kontraktu eksportu, lub <see langword="null" /> do używania domyślnej nazwy kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-119">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8446d-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> klasy importowanie eksportu o nazwie kontraktu pochodzi od określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8446d-121">Nazwa kontraktu jest wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metoda `contractType`.</span><span class="sxs-lookup"><span data-stu-id="8446d-121">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="8446d-122">Domyślna nazwa kontraktu to wyniku wywołania metody <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> metody na typ właściwości, pole lub parametr, który jest oznaczony atrybutem tego.</span><span class="sxs-lookup"><span data-stu-id="8446d-122">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="8446d-123">Nazwa kontraktu jest porównywany przy użyciu <xref:System.StringComparer.Ordinal%2A> właściwości do przeprowadzenia porównania z uwzględnieniem wielkości liter, językowe.</span><span class="sxs-lookup"><span data-stu-id="8446d-123">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="8446d-124">Nazwa kontraktu eksportu do zaimportowania, lub <see langword="null" /> lub ciąg pusty ("") Aby użyć domyślnej nazwy kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-124">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="8446d-125">Typ eksportu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-125">The type of the export to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8446d-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> klasy importowanie eksportu o nazwie kontraktu określony i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-127">Pobiera lub ustawia wartość wskazującą, czy właściwość, pole lub parametr zostanie ustawiona wartość domyślna jej typ podczas eksportowania z nazwą kontraktu nie znajduje się w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-127">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8446d-128">
            <see langword="true" /> Jeśli właściwość, pole lub parametr zostanie ustawiona wartość domyślna jej typ po nie eksportu ze <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> w <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-128">
              <see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8446d-129">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-129">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8446d-130">Wartość domyślna typu właściwości, pole lub parametr to `null` dla typów referencyjnych i zero dla typów wartości liczbowych.</span><span class="sxs-lookup"><span data-stu-id="8446d-130">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="8446d-131">Dla innych typów wartości, wartością domyślną będzie każdego pola typu wartości zainicjowana na zero, jeśli pole jest typem wartości lub `null` Jeśli pole jest typem referencyjnym.</span><span class="sxs-lookup"><span data-stu-id="8446d-131">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-132">Pobiera lub ustawia wartość wskazującą, czy właściwość lub pole będzie można ponownie złożyć podczas eksportu z kontraktem pasującego zostały zmienione w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-132">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8446d-133">
            <see langword="true" /> Jeśli właściwość lub pole umożliwia recomposition podczas eksportuje odpowiadającą jej instrukcją <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> są dodawane lub usuwane z <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-133">
              <see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8446d-134">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-135">Pobiera nazwę kontraktu eksportu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-135">Gets the contract name of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8446d-136">Nazwa kontraktu eksportu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-136">The contract name of the export to import.</span>
          </span>
          <span data-ttu-id="8446d-137">Wartością domyślną jest ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-137">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-138">Pobiera typ eksportu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-138">Gets the type of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8446d-139">Typ eksportu do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-139">The type of the export to import.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-140">Pobiera lub ustawia wartość wskazującą, czy importer wymaga określonej <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> przypadku eksportu użyć w celu spełnienia tego importu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-140">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8446d-141">Jedna z następujących wartości:</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-141">One of the following values:</span>
          </span>
          <span data-ttu-id="8446d-142">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, jeśli importer nie wymaga określonej <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-142">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          </span>
          <span data-ttu-id="8446d-143">Domyślnie włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-143">This is the default.</span>
          </span>
          <span data-ttu-id="8446d-144">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> Aby wymagać, że wszystkie używane eksportuje być współużytkowane przez wszystkie elementy w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-144">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span>
          </span>
          <span data-ttu-id="8446d-145">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> aby wymagał wszystkich używanych eksportuje nieudostępnione w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-145">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span>
          </span>
          <span data-ttu-id="8446d-146">W przypadku każdej części odbiera własne wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-146">In this case, each part receives their own instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8446d-147">Pobiera lub ustawia wartość, która określa zakresy, z których może spełnić tego importu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-147">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8446d-148">Wartość, która określa zakresy, z których może spełnić tego importu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8446d-148">A value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>