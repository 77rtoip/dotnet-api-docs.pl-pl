<Type Name="AttributedModelServices" FullName="System.ComponentModel.Composition.AttributedModelServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4552436d5fd229109d89ee4a52268b28297fe90" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440448" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AttributedModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttributedModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.AttributedModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Module AttributedModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributedModelServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a5ef-101">Zawiera metody pomocnicze dla za pomocą modelu programowania oparte na atrybutach MEF z kompozycji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a5ef-101">Contains helper methods for using the MEF attributed programming model with composition.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-102">Tworzy element z określonym elementem value i dodaje go do partii kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-102">Creates a part from a specified value and adds it to a composition batch.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-103">Typ części nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-103">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="batch">
          <span data-ttu-id="0a5ef-104">Aby dodać do partii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-104">The batch to add to.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="0a5ef-105">Wartość do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-105">The value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-106">Tworzy element z określonej wartości i dodaje go do określonej partii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-106">Creates a part from the specified value and adds it to the specified batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-107">Nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-107">The new part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, contractName As String, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::String ^ contractName, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-108">Typ części nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-108">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="batch">
          <span data-ttu-id="0a5ef-109">Aby dodać do partii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-109">The batch to add to.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="0a5ef-110">Nazwa kontraktu eksportu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-110">The contract name of the export.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="0a5ef-111">Wartość do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-111">The value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-112">Tworzy element z określonej wartości i dodaje go do określonej partii o nazwie określonej kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-112">Creates a part from the specified value and adds it to the specified batch with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-113">Nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-113">The new part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddPart(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPart (batch As CompositionBatch, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddPart(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="batch">
          <span data-ttu-id="0a5ef-114">Aby dodać do partii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-114">The batch to add to.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="0a5ef-115">Obiekt do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-115">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-116">Tworzy wszechstronnej części od określonego obiektu atrybutami i dodaje go do partii określonej kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-116">Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-117">Nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-117">The new part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComposeExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-118">Tworzy element z określonego obiektu i Redaguj go z określony kontener kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-118">Creates a part from a specified object and composes it with a specified composition container.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-119">Typ części nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-119">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="container">
          <span data-ttu-id="0a5ef-120">Kontener kompozycji do utworzenia w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-120">The composition container to perform composition in.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="0a5ef-121">Wartość, która została utworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-121">The value to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-122">Tworzy element z określonej wartości i Redaguj go w określony kontener kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-122">Creates a part from the specified value and composes it in the specified composition container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, contractName As String, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, System::String ^ contractName, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-123">Typ części nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-123">The type of the new part.</span>
          </span>
        </typeparam>
        <param name="container">
          <span data-ttu-id="0a5ef-124">Kontener kompozycji do utworzenia w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-124">The composition container to perform composition in.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="0a5ef-125">Nazwa kontraktu, aby wyeksportować część w obszarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-125">The contract name to export the part under.</span>
          </span>
        </param>
        <param name="exportedValue">
          <span data-ttu-id="0a5ef-126">Wartość, która została utworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-126">The value to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-127">Tworzy element od określonego obiektu o nazwie określonej kontraktu i Redaguj go w określony kontener kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-127">Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeParts">
      <MemberSignature Language="C#" Value="public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, params object[] attributedParts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeParts(class System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeParts (container As CompositionContainer, ParamArray attributedParts As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeParts(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, ... cli::array &lt;System::Object ^&gt; ^ attributedParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="attributedParts" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="0a5ef-128">Kontener kompozycji do utworzenia w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-128">The composition container to perform composition in.</span>
          </span>
        </param>
        <param name="attributedParts">
          <span data-ttu-id="0a5ef-129">Tablica obiektów oparte na atrybutach została utworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-129">An array of attributed objects to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-130">Tworzy części zezwala na składanie z tablicę obiektów atrybutami i Redaguj je w określony kontener kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-130">Creates composable parts from an array of attributed objects and composes them in the specified composition container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-131">Tworzy wszechstronnej części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-131">Creates a composable part.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attributedPart">
          <span data-ttu-id="0a5ef-132">Obiekt oparte na atrybutach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-132">The attributed object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-133">Tworzy wszechstronnej części od określonego obiektu oparte na atrybutach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-133">Creates a composable part from the specified attributed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-134">Część utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-134">The created part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partDefinition As ComposablePartDefinition, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="0a5ef-135">Definicja części nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-135">The definition of the new part.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="0a5ef-136">Obiekt oparte na atrybutach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-136">The attributed object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-137">Tworzy wszechstronnej części od określonego obiektu atrybutami, przy użyciu definicji określonej części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-137">Creates a composable part from the specified attributed object, using the specified part definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-138">Część utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-138">The created part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="attributedPart">
          <span data-ttu-id="0a5ef-139">Obiekt oparte na atrybutach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-139">The attributed object.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="0a5ef-140">Kontekst odbicia dla części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-140">The reflection context for the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-141">Tworzy wszechstronnej części od określonego obiektu atrybutami, przy użyciu odbicia określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-141">Creates a composable part from the specified attributed object, using the specified reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-142">Część utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-142">The created part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a5ef-143">
            <paramref name="reflectionContext" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-143">
              <paramref name="reflectionContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-144">Tworzy definicję części z określonym typem i pochodzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-144">Creates a part definition with the specified type and origin.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a5ef-145">Typ definicji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-145">The type of the definition.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="0a5ef-146">Pochodzenie definicji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-146">The origin of the definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-147">Tworzy definicję części z określonym typem i pochodzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-147">Creates a part definition with the specified type and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-148">Nowa definicja części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-148">The new part definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin, bool ensureIsDiscoverable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
        <Parameter Name="ensureIsDiscoverable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a5ef-149">Typ definicji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-149">The type of the definition.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="0a5ef-150">Pochodzenie definicji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-150">The origin of the definition.</span>
          </span>
        </param>
        <param name="ensureIsDiscoverable">
          <span data-ttu-id="0a5ef-151">Wartość wskazująca, czy nowa definicja powinna być wykrywalny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-151">A value indicating whether or not the new definition should be discoverable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-152">Tworzy definicję części z określonym typem i pochodzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-152">Creates a part definition with the specified type and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-153">Nowa definicja części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-153">The new part definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="0a5ef-154">Element do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-154">The part to search.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="0a5ef-155">Typ kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-155">The contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-156">Zwraca wartość wskazującą, czy określona część zawiera eksportu zgodnego z typem określonym kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-156">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-157">
            <see langword="true" /> Jeśli <paramref name="part" /> zawiera definicję Eksport zgodny <paramref name="contractType" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-157">
              <see langword="true" /> if <paramref name="part" /> contains an export definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-158">Typ kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-158">The contract type.</span>
          </span>
        </typeparam>
        <param name="part">
          <span data-ttu-id="0a5ef-159">Element do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-159">The part to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-160">Zwraca wartość wskazującą, czy określona część zawiera eksportu zgodnego z typem określonym kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-160">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-161">
            <see langword="true" /> Jeśli <paramref name="part" /> zawiera definicję eksportu typu <paramref name="T" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-161">
              <see langword="true" /> if <paramref name="part" /> contains an export definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContractName">
      <MemberSignature Language="C#" Value="public static string GetContractName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetContractName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetContractName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a5ef-162">Typ do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-162">The type to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-163">Pobiera nazwę kanoniczną kontraktu dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-163">Gets a canonical contract name for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-164">Nazwa kontraktu, utworzone na podstawie określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-164">A contract name created from the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataView&lt;TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public static TMetadataView GetMetadataView&lt;TMetadataView&gt; (System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TMetadataView GetMetadataView&lt;TMetadataView&gt;(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataView(Of TMetadataView) (metadata As IDictionary(Of String, Object)) As TMetadataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadataView&gt;&#xA; static TMetadataView GetMetadataView(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMetadataView">
          <span data-ttu-id="0a5ef-165">Typ obiektu widoku metadanych do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-165">The type of the metadata view object to get.</span>
          </span>
        </typeparam>
        <param name="metadata">
          <span data-ttu-id="0a5ef-166">Kolekcja utracić metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-166">A collection of loose metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-167">Pobiera obiekt widoku metadanych ze słownika utracić metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-167">Gets a metadata view object from a dictionary of loose metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-168">Widok metadane zawierające określonych metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-168">A metadata view containing the specified metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-169">Pobiera unikatowy identyfikator dla metody lub typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-169">Gets the unique identifier for a method or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeIdentity (method As MethodInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="0a5ef-170">Metoda do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-170">The method to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-171">Pobiera unikatowy identyfikator dla określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-171">Gets the unique identifier for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-172">Unikatowy identyfikator dla metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-172">The unique identifier for the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a5ef-173">Typ do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-173">The type to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-174">Pobiera unikatowy identyfikator dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-174">Gets the unique identifier for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-175">Unikatowy identyfikator dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-175">The unique identifier for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-176">Zwraca wartość wskazującą, czy określona część zawiera portu podczerwieni odpowiadający określonym kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-176">Returns a value that indicates whether a specified part contains an inport that matches a specified contract.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="0a5ef-177">Element do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-177">The part to search.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="0a5ef-178">Typ kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-178">The contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-179">Zwraca wartość wskazującą, czy określona część zawiera importu, który jest zgodny z typem określonym kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-179">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-180">
            <see langword="true" /> Jeśli <paramref name="part" /> zawiera definicję importu odpowiadający <paramref name="contractType" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-180">
              <see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="0a5ef-181">Element do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-181">The part to search.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="0a5ef-182">Typ kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-182">The contract type.</span>
          </span>
        </param>
        <param name="importCardinality">
          <span data-ttu-id="0a5ef-183">Kardynalność importu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-183">The import cardinality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-184">Zwraca wartość wskazującą, czy określona część zawiera importu, który jest zgodny z określonym kontraktem wpisz i zaimportować kardynalności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-184">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-185">
            <see langword="true" /> Jeśli <paramref name="part" /> zawiera definicję importu odpowiadający <paramref name="contractType" /> i <paramref name="importCardinality" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-185">
              <see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" /> and <paramref name="importCardinality" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-186">Typ kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-186">The contract type.</span>
          </span>
        </typeparam>
        <param name="part">
          <span data-ttu-id="0a5ef-187">Element do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-187">The part to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-188">Zwraca wartość wskazującą, czy określona część zawiera importu, który jest zgodny z typem określonym kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-188">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-189">
            <see langword="true" /> Jeśli <paramref name="part" /> zawiera importowania definicji typu <paramref name="T" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-189">
              <see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0a5ef-190">Typ kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-190">The contract type.</span>
          </span>
        </typeparam>
        <param name="part">
          <span data-ttu-id="0a5ef-191">Element do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-191">The part to search.</span>
          </span>
        </param>
        <param name="importCardinality">
          <span data-ttu-id="0a5ef-192">Kardynalność importu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-192">The import cardinality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-193">Zwraca wartość wskazującą, czy określona część zawiera importu, który jest zgodny z określonym kontraktem wpisz i zaimportować kardynalności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-193">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-194">
            <see langword="true" /> Jeśli <paramref name="part" /> zawiera importowania definicji typu <paramref name="T" /> ma Kardynalność określonego importu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-194">
              <see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" /> that has the specified import cardinality; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SatisfyImportsOnce">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5ef-195">Redaguj określonej części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-195">Composes a specified part.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SatisfyImportsOnce (compositionService As ICompositionService, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compositionService">
          <span data-ttu-id="0a5ef-196">Usługa kompozycji do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-196">The composition service to use.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="0a5ef-197">Część została utworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-197">The part to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-198">Redaguj określona część za pomocą usługi określonego kompozycji recomposition wyłączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-198">Composes the specified part by using the specified composition service, with recomposition disabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-199">Część złożony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-199">The composed part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5ef-200">W odróżnieniu od zwykłego kompozycji części składa się z tą metodą nie ma gwarancji ważność Jeśli katalogu za`compositionService` zmiany.</span><span class="sxs-lookup"><span data-stu-id="0a5ef-200">Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="compositionService">
          <span data-ttu-id="0a5ef-201">Usługa kompozycji do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-201">The composition service to use.</span>
          </span>
        </param>
        <param name="attributedPart">
          <span data-ttu-id="0a5ef-202">Część została utworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-202">The part to compose.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="0a5ef-203">Kontekst odbicia dla części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-203">The reflection context for the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ef-204">Redaguj określona część przy użyciu usługi określonego kompozycji z wyłączonymi recomposition i odbicie określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-204">Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ef-205">Część złożony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-205">The composed part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a5ef-206">
            <paramref name="reflectionContext" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ef-206">
              <paramref name="reflectionContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>