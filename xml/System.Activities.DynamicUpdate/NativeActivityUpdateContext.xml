<Type Name="NativeActivityUpdateContext" FullName="System.Activities.DynamicUpdate.NativeActivityUpdateContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f32ea629ccd35fccc24aef105b70ce02220ac699" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69309784" /></Metadata><TypeSignature Language="C#" Value="public class NativeActivityUpdateContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NativeActivityUpdateContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeActivityUpdateContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivityUpdateContext" />
  <TypeSignature Language="F#" Value="type NativeActivityUpdateContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kontekst natywnej aktualizacji aktywności.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa obsługuje funkcję obsługi wersji i aktualizacji dynamicznej Windows Workflow Foundation. Więcej informacji o wersji przepływu pracy, tożsamości przepływu pracy i aktualizacji dynamicznej znajduje się w następujących tematach.  
  
 [Wersja przepływu pracy](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Opisuje funkcje obsługi wersji przepływu pracy wprowadzone w [!INCLUDE[net_v45](~/includes/net-v45-md.md)]programie.  
  
 [Aktualizacja dynamiczna](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Opisuje sposób aktualizowania definicji przepływu pracy utrwalonego wystąpienia przepływu pracy przy użyciu aktualizacji dynamicznej.  
  
 [Korzystanie z funkcji WorkflowApplication Identity and Versioning](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Opisuje, jak używać <xref:System.Activities.WorkflowIdentity> do hostowania wielu wersji przepływu pracy obok siebie.  
  
 [Równoległe przechowywanie wersji w klasie WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Opisuje sposób hostowania wielu wersji przepływu pracy w jednym punkcie końcowym.  
  
 [Instrukcje: Hostowanie wielu wersji przepływu pracy obok siebie](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Ten krok w [samouczku wprowadzenie](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) pokazuje, jak aktualizować definicję przepływu pracy i hostować przepływy pracy przy użyciu starej i nowej definicji w tym samym czasie.  
  
 [Instrukcje: Aktualizowanie definicji uruchomionego wystąpienia przepływu pracy](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 W tym kroku w [samouczku wprowadzenie](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) pokazano, jak zaktualizować wystąpienia utrwalonego przepływu pracy, aby użyć nowej definicji przepływu pracy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityInstanceId">
      <MemberSignature Language="C#" Value="public string ActivityInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivityInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivityInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivityInstanceId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityInstanceId : string" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator aktualnie wykonywanego wystąpienia działania.</summary>
        <value>Unikatowy identyfikator aktualnie wykonywanego wystąpienia działania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy punkt, w którym natywne może oczekiwać na wznowienie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark () As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark();" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : unit -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy punkt, w którym natywne może oczekiwać na wznowienie.</summary>
        <returns>Zakładka.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda, która ma być wywoływana, gdy powiadomienia sygnalizują wznowienie natywnego działania.</param>
        <summary>Tworzy punkt, w którym natywna operacja może oczekiwać na odczekanie na wznowienie i planuje wykonanie określonej metody, gdy powiadomienie o ukończeniu operacji wznawiania.</summary>
        <returns>Metoda wywołania zwrotnego</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <summary>Tworzy punkt o podanej nazwie, w którym natywne może oczekiwać na wznowienie.</summary>
        <returns>Zakładka, która zawiera nazwę zakładki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda, która ma być wywoływana, gdy powiadomienia sygnalizują wznowienie natywnego działania.</param>
        <param name="options">Ustawienie wyliczane, które reguluje sposób, w jaki zakładka działa w odniesieniu do innych wątków podczas wykonywania bieżącej natywnej.</param>
        <summary>Tworzy punkt, w którym natywna operacja może oczekiwać na wznowienie, przy użyciu określonej metody do wykonania, gdy powiadomienie o ukończeniu operacji wznawiania i z określoną opcją, która reguluje sposób użycia zakładki podczas wykonywania bieżące natywne.</summary>
        <returns>Zakładka, która zawiera metodę wywołania zwrotnego i opcję wykonywania zakładki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <param name="callback">Metoda, która ma być wywoływana, gdy powiadomienia sygnalizują wznowienie natywnego działania.</param>
        <summary>Tworzy punkt, w którym natywna operacja może odczekać na wznowienie z określoną nazwą i z określoną metodą, która ma zostać wykonana po zakończeniu powiadamiania o operacji wznawiania.</summary>
        <returns>Zakładka, która zawiera nazwę zakładki i metody wywołania zwrotnego.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <param name="callback">Metoda, która ma być wywoływana, gdy powiadomienia sygnalizują wznowienie natywnego działania.</param>
        <param name="options">Opcje zakładki, które określają, jak zakładka jest używana podczas wykonywania bieżącej natywnej.</param>
        <summary>Tworzy punkt, w którym natywna operacja może odczekać na wznowienie z określoną nazwą, określoną metodę, która ma zostać wykonana po zakończeniu powiadamiania o operacji wznawiania, i określonej opcji, która reguluje sposób używania zakładki w trakcie wykonywanie bieżącego natywnego działania.</summary>
        <returns>Zakładka, która zawiera nazwę zakładki, metodę wywołania zwrotnego i opcję wykonywania zakładki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <param name="callback">Metoda, która ma być wywoływana, gdy powiadomienia sygnalizują wznowienie natywnego działania.</param>
        <param name="scope">Identyfikator stosowany do grupy zakładek, które działają w ramach tego samego protokołu w czasie wykonywania przepływu pracy.</param>
        <summary>Tworzy punkt, w którym natywna operacja może odczekać na wznowienie z określoną nazwą, określoną metodę do wykonania, gdy powiadomienie o ukończeniu operacji wznawiania i określony zakres zakładki.</summary>
        <returns>Zakładka, która zawiera nazwę zakładki, metodę wywołania zwrotnego i zakres zakładki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, scope, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <param name="callback">Metoda, która ma być wywoływana, gdy powiadomienia sygnalizują wznowienie natywnego działania.</param>
        <param name="scope">Identyfikator stosowany do grupy zakładek, które działają w ramach tego samego protokołu w czasie wykonywania przepływu pracy.</param>
        <param name="options">Opcje zakładki, które określają, jak zakładka jest używana podczas wykonywania bieżącej natywnej.</param>
        <summary>Tworzy punkt, w którym natywne działanie może oczekiwać na wznowienie przy użyciu określonej nazwy, określonej metody do wykonania, gdy powiadomienie o ukończeniu operacji wznawiania i określony zakres zakładki i określonej opcji, która reguluje sposób Zakładka jest używana podczas wykonywania bieżącej natywnej.</summary>
        <returns>Zakładka, która zawiera nazwę zakładki, metodę wywołania zwrotnego, zakres zakładki i opcję wykonywania zakładki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBookmarkScope">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkScope DefaultBookmarkScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.BookmarkScope DefaultBookmarkScope" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultBookmarkScope As BookmarkScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::BookmarkScope ^ DefaultBookmarkScope { System::Activities::BookmarkScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBookmarkScope : System.Activities.BookmarkScope" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zakres zakładek skojarzony z elementem głównym przepływu pracy.</summary>
        <value>Zakres zakładek skojarzony z elementem głównym przepływu pracy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowUpdate">
      <MemberSignature Language="C#" Value="public void DisallowUpdate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisallowUpdate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DisallowUpdate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisallowUpdate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisallowUpdate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.DisallowUpdate : string -&gt; unit" Usage="nativeActivityUpdateContext.DisallowUpdate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">Przyczyna niezezwalania na kontekst.</param>
        <summary>Nie zezwala na aktualizowanie <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindExecutionProperty">
      <MemberSignature Language="C#" Value="public object FindExecutionProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindExecutionProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.FindExecutionProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindExecutionProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindExecutionProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FindExecutionProperty : string -&gt; obj" Usage="nativeActivityUpdateContext.FindExecutionProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości wykonywania przepływu pracy.</param>
        <summary>Znajduje Właściwość wykonywania przepływu pracy o określonej nazwie.</summary>
        <returns>Właściwość wykonania przepływu pracy o określonej nazwie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocation&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.Location&lt;T&gt; GetLocation&lt;T&gt; (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Location`1&lt;!!T&gt; GetLocation&lt;T&gt;(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetLocation``1(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Activities::Location&lt;T&gt; ^ GetLocation(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetLocation : System.Activities.Variable -&gt; System.Activities.Location&lt;'T&gt;" Usage="nativeActivityUpdateContext.GetLocation variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ lokalizacji, która ma zostać zwrócona.</typeparam>
        <param name="variable">Zmienna z lokalizacji.</param>
        <summary>Zwraca lokalizację wpisaną dla określonej lokalizacji, do której istnieje odwołanie.</summary>
        <returns>Wpisana lokalizacja dla określonej lokalizacji, do której istnieje odwołanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSavedOriginalValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje obiekt, w którym ma zostać zapisana oryginalna wartość bieżącego działania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSavedOriginalValue">
      <MemberSignature Language="C#" Value="public object GetSavedOriginalValue (System.Activities.Activity childActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSavedOriginalValue(class System.Activities.Activity childActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSavedOriginalValue (childActivity As Activity) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSavedOriginalValue(System::Activities::Activity ^ childActivity);" />
      <MemberSignature Language="F#" Value="member this.GetSavedOriginalValue : System.Activities.Activity -&gt; obj" Usage="nativeActivityUpdateContext.GetSavedOriginalValue childActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="childActivity">Działanie podrzędne.</param>
        <summary>Wskazuje obiekt, w którym ma zostać zapisana oryginalna wartość bieżącego działania.</summary>
        <returns>Obiekt, w którym ma zostać zapisana oryginalna wartość bieżącego działania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedOriginalValue">
      <MemberSignature Language="C#" Value="public object GetSavedOriginalValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSavedOriginalValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSavedOriginalValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSavedOriginalValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetSavedOriginalValue : string -&gt; obj" Usage="nativeActivityUpdateContext.GetSavedOriginalValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości.</param>
        <summary>Wskazuje obiekt, w którym ma zostać zapisana oryginalna wartość bieżącego działania.</summary>
        <returns>Obiekt, w którym ma zostać zapisana oryginalna wartość bieżącego działania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość określonego obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Argument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Argument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Argument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Argument -&gt; obj" Usage="nativeActivityUpdateContext.GetValue argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.Argument" />
      </Parameters>
      <Docs>
        <param name="argument">Argument do sprawdzenia.</param>
        <summary>Pobiera wartość określonego argumentu.</summary>
        <returns>Wartość określonego argumentu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.RuntimeArgument runtimeArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.RuntimeArgument runtimeArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::RuntimeArgument ^ runtimeArgument);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.RuntimeArgument -&gt; obj" Usage="nativeActivityUpdateContext.GetValue runtimeArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtimeArgument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="runtimeArgument">Argument do sprawdzenia.</param>
        <summary>Pobiera wartość określonego obiektu RuntimeArgument.</summary>
        <returns>wartość określonego obiektu RuntimeArgument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Variable -&gt; obj" Usage="nativeActivityUpdateContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">Zmienna, której wartość jest pobierana podczas wykonywania bieżącego wystąpienia natywnego.</param>
        <summary>Pobiera wartość określonej zmiennej w bieżącym wystąpieniu natywnego.</summary>
        <returns>Wartość określonej zmiennej w bieżącym wystąpieniu natywnego.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue``1(System.Activities.Variable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of T) (variable As Variable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValue(System::Activities::Variable&lt;T&gt; ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Variable&lt;'T&gt; -&gt; 'T" Usage="nativeActivityUpdateContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ zmiennej, której wartość jest pobierana.</typeparam>
        <param name="variable">Zmienna ogólna, której wartość jest pobierana podczas wykonywania bieżącego wystąpienia natywnego.</param>
        <summary>Zwraca wartość określonej zmiennej ogólnej w bieżącym wystąpieniu natywnego.</summary>
        <returns>Wartość określonej zmiennej ogólnej w bieżącym wystąpieniu natywnego.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCancellationRequested : bool" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy aktualnie wykonywane wystąpienie natywne ma być anulowane.</summary>
        <value><see langword="true" />Jeśli bieżące wystąpienie natywne ma zostać anulowane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewlyAdded">
      <MemberSignature Language="C#" Value="public bool IsNewlyAdded (System.Activities.Activity childActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNewlyAdded(class System.Activities.Activity childActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsNewlyAdded(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNewlyAdded (childActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNewlyAdded(System::Activities::Activity ^ childActivity);" />
      <MemberSignature Language="F#" Value="member this.IsNewlyAdded : System.Activities.Activity -&gt; bool" Usage="nativeActivityUpdateContext.IsNewlyAdded childActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="childActivity">Działanie podrzędne.</param>
        <summary>Inicjuje, <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /> czy jest nowo dodany.</summary>
        <returns><see langword="true" />Jeśli jest nowo dodany; <see langword="false" />w przeciwnym razie. <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllBookmarks">
      <MemberSignature Language="C#" Value="public void RemoveAllBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveAllBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllBookmarks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllBookmarks();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllBookmarks : unit -&gt; unit" Usage="nativeActivityUpdateContext.RemoveAllBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie zakładki skojarzone z aktualnie wykonywanym wystąpieniem operacji macierzystego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa określoną zakładkę.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.Activities.Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::Activities::Bookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : System.Activities.Bookmark -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark bookmark" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">Punkt, w którym wystąpienie natywne może oczekiwać na wznowienie.</param>
        <summary>Usuwa określoną zakładkę z aktualnie wykonywanego wystąpienia modułu macierzystego.</summary>
        <returns><see langword="true" />Jeśli określona zakładka z aktualnie wykonywanego wystąpienia natywnego została usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <summary>Usuwa zakładkę o określonej nazwie.</summary>
        <returns><see langword="true" />Jeśli zakładka o podanej nazwie została usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String, scope As BookmarkScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string * System.Activities.BookmarkScope -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark (name, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zakładki.</param>
        <param name="scope">Unikatowy identyfikator identyfikatora GUID dla grupy obiektów zakładki, które są klasyfikowane jako działające w ramach tego samego protokołu.</param>
        <summary>Usuwa zakładkę z określoną nazwą i określonym zakresem zakładek.</summary>
        <returns><see langword="true" />Jeśli usunięto zakładkę z określoną nazwą i określonym zakresem zakładek; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction">
      <MemberSignature Language="C#" Value="public void ScheduleAction (System.Activities.ActivityAction activityAction, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction(class System.Activities.ActivityAction activityAction, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityAction.</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction.</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction, które nie mają parametrów i zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T&gt; (System.Activities.ActivityAction&lt;T&gt; activityAction, T argument, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T&gt;(class System.Activities.ActivityAction`1&lt;!!T&gt; activityAction, !!T argument, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T) (activityAction As ActivityAction(Of T), argument As T, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T&gt; * 'T * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityAction&lt;T.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T.&gt;</param>
        <summary>Harmonogramy wykonywania określony ActivityAction&lt;T&gt; , który ma jeden parametr dla argumentu in i zakładki w określonych lokalizacjach wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu&lt;ActivityAction T &gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2&gt; (System.Activities.ActivityAction&lt;T1,T2&gt; activityAction, T1 argument1, T2 argument2, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2&gt;(class System.Activities.ActivityAction`2&lt;!!T1, !!T2&gt; activityAction, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2) (activityAction As ActivityAction(Of T1, T2), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2.&gt;</param>
        <summary>Harmonogramy do wykonania określony ActivityAction&lt;T1, T2&gt; , który ma dwa parametry w argumentach i zakładuje określone lokalizacje wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt; T1, T2&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3&gt; (System.Activities.ActivityAction&lt;T1,T2,T3&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3&gt;(class System.Activities.ActivityAction`3&lt;!!T1, !!T2, !!T3&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3) (activityAction As ActivityAction(Of T1, T2, T3), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3&gt; , które mają trzy parametry w argumentach i umieszczają zakładki w określonych lokalizacjach wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction T1, T2, T3&gt;. &lt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4&gt;(class System.Activities.ActivityAction`4&lt;!!T1, !!T2, !!T3, !!T4&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4) (activityAction As ActivityAction(Of T1, T2, T3, T4), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3 i T4.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3 i T4.&gt;</param>
        <summary>Harmonogramy wykonywania określonego ActivityAction&lt;T1, T2, T3, T4&gt; , który ma cztery parametry w argumentach i zakładuje określone lokalizacje wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction T1, T2, T3, T4&gt;. &lt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5&gt;(class System.Activities.ActivityAction`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli błąd spowoduje zakończenie ActivityAction&lt;T1, T2, T3, T4, T5.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5&gt; , które mają pięć parametrów w argumentach i są zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Activities.ActivityAction`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli błąd spowoduje zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; , które mają sześć parametrów w argumentach i są zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Activities.ActivityAction`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; , które mają siedem parametrów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Activities.ActivityAction`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; , które mają osiem parametrów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Activities.ActivityAction`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; , które mają dziewięć parametrów w argumentach i umieszczają zakładki w określonych lokalizacjach wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Activities.ActivityAction`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; , które mają dziesięć parametrów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Activities.ActivityAction`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; , które mają jedenaście parametrów dla argumentów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Activities.ActivityAction`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; , które mają 12 parametrów dla argumentów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony ukończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Activities.ActivityAction`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; , które mają wartość trzynaście parametrów dla argumentów oraz zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny wznawia działanie po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Activities.ActivityAction`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T14">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="argument14">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; , które mają czternaście parametrów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny wznawia działanie po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Activities.ActivityAction`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T14">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T15">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="argument14">Argument, który przenosi dane do działania.</param>
        <param name="argument15">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; , które mają 15 parametrów dla argumentów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, w których nadrzędny procesy są wznawiane po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Activities.ActivityAction`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T14">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T15">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T16">Dane, które są przenoszone do działania.</typeparam>
        <param name="activityAction">Akcja, która jest wykonywana po wystąpieniu określonego zdarzenia w działaniu nadrzędnym.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="argument14">Argument, który przenosi dane do działania.</param>
        <param name="argument15">Argument, który przenosi dane do działania.</param>
        <param name="argument16">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; , które mają szesnaste parametry w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, w których element nadrzędny procesy są wznawiane po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScheduleActivity">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Planuje określoną wartość natywną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Działanie podrzędne, które jest wyzwalane przez zdarzenie, które występuje w trakcie wykonywania nadrzędnego elementu macierzystego.</param>
        <summary>Planuje wykonywanie określonego działania elementu podrzędnego w trybie macierzystym.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Działanie podrzędne, które jest wyzwalane przez zdarzenie, które występuje w trakcie wykonywania nadrzędnego elementu macierzystego.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityAction.</param>
        <summary>Planuje określone działanie elementu podrzędnego w trybie macierzystym do wykonania przy użyciu określonej lokalizacji wywołania zwrotnego ukończenia, w której proces nadrzędny zostanie wznowiony po zakończeniu działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Działanie podrzędne, które jest wyzwalane przez zdarzenie, które występuje w trakcie wykonywania nadrzędnego elementu macierzystego.</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie wykonywanie operacji natywnych jest wznawiane, jeśli wystąpi błąd powodujący zakończenie ActivityAction.</param>
        <summary>Planuje wykonywanie określonego działania elementu podrzędnego w trybie macierzystym przy użyciu określonej lokalizacji wywołania zwrotnego błędów, w której proces nadrzędny zostanie wznowiony, gdy działanie przejdzie do stanu błędu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Działanie podrzędne, które jest wyzwalane przez zdarzenie, które występuje w trakcie wykonywania nadrzędnego elementu macierzystego.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityAction.</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie wykonywanie operacji natywnych jest wznawiane, jeśli wystąpi błąd powodujący zakończenie ActivityAction.</param>
        <summary>Planuje wykonywanie określonego działania elementu podrzędnego w trybie macierzystym przy użyciu określonej lokalizacji wywołania zwrotnego błędów, w której proces nadrzędny zostanie wznowiony, gdy działanie przejdzie do stanu błędu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleActivity&lt;TResult&gt; (System.Activities.Activity&lt;TResult&gt; activity, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity&lt;TResult&gt;(class System.Activities.Activity`1&lt;!!TResult&gt; activity, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity(Of TResult) (activity As Activity(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activity">Działanie podrzędne, które jest wyzwalane przez zdarzenie, które występuje w trakcie wykonywania nadrzędnego elementu macierzystego.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie operacji natywnych zostanie wznowione po zakończeniu ActivityAction&lt;T.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie wykonywanie operacji natywnych jest wznawiane, jeśli wystąpi błąd powodujący zakończenie ActivityAction.</param>
        <summary>Planuje wykonywanie określonego działania potomnego elementu macierzystego, z jednym parametrem argumentu w i zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDelegate">
      <MemberSignature Language="C#" Value="public void ScheduleDelegate (System.Activities.ActivityDelegate activityDelegate, System.Collections.Generic.IDictionary&lt;string,object&gt; inputParameters, System.Activities.DelegateCompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleDelegate(class System.Activities.ActivityDelegate activityDelegate, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputParameters, class System.Activities.DelegateCompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="F#" Value="member this.ScheduleDelegate : System.Activities.ActivityDelegate * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.DelegateCompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleDelegate (activityDelegate, inputParameters, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="inputParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.DelegateCompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">Metoda wywołania zwrotnego, do której działanie wraca po zakończeniu określonej akcji działania.</param>
        <param name="inputParameters">Lista słowników nazw argumentów działań i wartości.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityAction.</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityAction.</param>
        <summary>Wypychanie metody wywołania zwrotnego dla działania do puli elementów roboczych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;TResult&gt; (System.Activities.ActivityFunc&lt;TResult&gt; activityFunc, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;TResult&gt;(class System.Activities.ActivityFunc`1&lt;!!TResult&gt; activityFunc, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of TResult) (activityFunc As ActivityFunc(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityFunc&lt;TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;TResult.&gt;</param>
        <summary>Harmonogramy do wykonania określony ActivityFunc&lt;TResult&gt; z jednym parametrem, który przechowuje wartość zwracaną i zakładki określone lokalizacje wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityFunc&lt;TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T,TResult&gt; (System.Activities.ActivityFunc&lt;T,TResult&gt; activityFunc, T argument, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T, TResult&gt;(class System.Activities.ActivityFunc`2&lt;!!T, !!TResult&gt; activityFunc, !!T argument, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T, TResult) (activityFunc As ActivityFunc(Of T, TResult), argument As T, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T, 'Result&gt; * 'T * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T,TResult&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityFunc&lt;T, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określone ActivityFunc&lt;T, TResult&gt; , które mają dwa parametry dla wartości zwracanej i argumentu in, oraz umieszczają zakładki w określonych lokalizacjach wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony po zakończeniu ActivityFunc&lt;T, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,TResult&gt; activityFunc, T1 argument1, T2 argument2, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, TResult&gt;(class System.Activities.ActivityFunc`3&lt;!!T1, !!T2, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, TResult) (activityFunc As ActivityFunc(Of T1, T2, TResult), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'Result&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, TResult&gt; , które mają trzy parametry dla wartości zwracanej i w argumentach i są zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony po zakończeniu ActivityFunc&lt;T1, T2, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, TResult&gt;(class System.Activities.ActivityFunc`4&lt;!!T1, !!T2, !!T3, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, TResult), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'Result&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli błąd spowoduje zakończenie ActivityFunc&lt;T1, T2, T3, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, TResult&gt; , które mają cztery parametry dla wartości zwracanej i argumentu w argumentach, i które zakładią, że w przypadku kończenia procesu nadrzędnego proces nadrzędny zostanie wznowiony ActivityFunc&lt;T1, T2, T3, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, TResult&gt;(class System.Activities.ActivityFunc`5&lt;!!T1, !!T2, !!T3, !!T4, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli błąd spowoduje zakończenie ActivityFunc&lt;T1, T2, T3, T4, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; , które mają pięć parametrów dla wartości zwracanej i w argumentach i są zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony Kończenie ActivityFunc&lt;T1, T2, T3, T4, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, TResult&gt;(class System.Activities.ActivityFunc`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli błąd spowoduje zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; , które mają sześć parametrów dla wartości zwracanej i argumentów i są zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;(class System.Activities.ActivityFunc`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; , które mają siedem parametrów w argumentach i zakładek określonych lokalizacji wywołania zwrotnego, gdy proces nadrzędny zostanie wznowiony po zakończeniu ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;(class System.Activities.ActivityFunc`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; , które mają osiem parametrów dla wartości zwracanej i argumentów, i które zakładią wybrane lokalizacje wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony Po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;(class System.Activities.ActivityFunc`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; , które mają dziewięć parametrów dla wartości zwracanej i w argumentach i które zakładią określone lokalizacje wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony Po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;(class System.Activities.ActivityFunc`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; , które mają dziesięć parametrów dla wartości zwracanej i w argumentach i zakładki określone lokalizacje wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony Po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;(class System.Activities.ActivityFunc`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; , które mają jedenaście parametrów dla wartości zwracanej i argumentów, oraz zakładek określonych lokalizacji wywołania zwrotnego, w których proces nadrzędny wznawia działanie po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;(class System.Activities.ActivityFunc`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; , które mają dwanaście parametrów dla wartości zwracanej i argumentów oraz umieszczają zakładki określone lokalizacje wywołania zwrotnego, w których nadrzędny procesy są wznawiane po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;(class System.Activities.ActivityFunc`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; , które mają trzynaście parametrów dla wartości zwracanej i w argumentach i zakładki określone lokalizacje wywołania zwrotnego, w których proces nadrzędny zostanie wznowiony po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;(class System.Activities.ActivityFunc`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie wykonywanie działania nadrzędnego jest wznawiane po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; , które mają czternaście parametrów dla wartości zwracanej i w argumentach i są zakładek określonych lokalizacji wywołania zwrotnego, gdzie proces nadrzędny zostaje wznowiony po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;(class System.Activities.ActivityFunc`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T14">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="argument14">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; , które mają 15 parametrów dla wartości zwracanej i argumentów i są zakładek określonych lokalizacji wywołania zwrotnego gdzie proces nadrzędny zostaje wznowiony po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult.&gt;</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;(class System.Activities.ActivityFunc`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T14">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T15">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="argument14">Argument, który przenosi dane do działania.</param>
        <param name="argument15">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli wystąpi błąd powodujący zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; , które mają szesnaste parametry wartości zwracanej i argumentów oraz umieszczają zakładki określonego wywołania zwrotnego lokalizacje, w których proces nadrzędny jest wznawiany po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;(class System.Activities.ActivityFunc`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T2">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T3">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T4">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T5">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T6">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T7">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T8">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T9">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T10">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T11">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T12">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T13">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T14">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T15">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="T16">Dane, które są przenoszone do działania.</typeparam>
        <typeparam name="TResult">Typ macierzystego argumentu działania podrzędnego.</typeparam>
        <param name="activityFunc">Działanie podrzędne, które jest uruchamiane po wystąpieniu określonego zdarzenia w działaniu nadrzędnym i zwraca wartość.</param>
        <param name="argument1">Argument, który przenosi dane do działania.</param>
        <param name="argument2">Argument, który przenosi dane do działania.</param>
        <param name="argument3">Argument, który przenosi dane do działania.</param>
        <param name="argument4">Argument, który przenosi dane do działania.</param>
        <param name="argument5">Argument, który przenosi dane do działania.</param>
        <param name="argument6">Argument, który przenosi dane do działania.</param>
        <param name="argument7">Argument, który przenosi dane do działania.</param>
        <param name="argument8">Argument, który przenosi dane do działania.</param>
        <param name="argument9">Argument, który przenosi dane do działania.</param>
        <param name="argument10">Argument, który przenosi dane do działania.</param>
        <param name="argument11">Argument, który przenosi dane do działania.</param>
        <param name="argument12">Argument, który przenosi dane do działania.</param>
        <param name="argument13">Argument, który przenosi dane do działania.</param>
        <param name="argument14">Argument, który przenosi dane do działania.</param>
        <param name="argument15">Argument, który przenosi dane do działania.</param>
        <param name="argument16">Argument, który przenosi dane do działania.</param>
        <param name="onCompleted">Zakładka wskazująca, gdzie zostanie wznowione wykonywanie działania nadrzędnego po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult.&gt;</param>
        <param name="onFaulted">Zakładka wskazująca, gdzie zostanie wznowione działanie nadrzędne, jeśli błąd spowoduje zakończenie ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult.&gt;</param>
        <summary>Harmonogramy wykonywania określonych ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; , które mają siedemnastu parametry dla wartości zwracanej i w argumentach i które zakładią określone wywołanie zwrotne lokalizacje, w których proces nadrzędny jest wznawiany po zakończeniu ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przypisuje wartość do określonego obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Argument argument, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Argument argument, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Argument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Argument ^ argument, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Argument * obj -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (argument, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.Argument" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument">Argument do odebrania nowej wartości.</param>
        <param name="value">Nowa wartość argumentu.</param>
        <summary>Przypisuje wartość do określonego argumentu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Variable variable, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Variable variable, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Variable ^ variable, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Variable * obj -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable">Obiekt zmiennej bez określonego typu, który może być przypisany do obiektu wartości.</param>
        <param name="value">Obiekt bez określonego typu, który można przypisać do obiektu zmiennej.</param>
        <summary>Przypisuje określony obiekt wartości do określonego obiektu zmiennej.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue``1(System.Activities.Variable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue(Of T) (variable As Variable(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void SetValue(System::Activities::Variable&lt;T&gt; ^ variable, T value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Variable&lt;'T&gt; * 'T -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ zmiennej.</typeparam>
        <param name="variable">Obiekt zmiennej o określonym typie, który może być przypisany do obiektu wartości.</param>
        <param name="value">Obiekt z określonym typem, który można przypisać do obiektu zmiennej.</param>
        <summary>Przypisuje określony obiekt wartości ogólnej do obiektu zmiennej ogólnej.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
