<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FirstChanceExceptionEventArgs.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55b82b33fd434c2b4d5434a6080b2c61d46168149.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b82b33fd434c2b4d5434a6080b2c61d46168149</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Provides data for the notification event that is raised when a managed exception first occurs, before the common language runtime begins searching for event handlers.</source>
          <target state="translated">Udostępnia dane dla zdarzenia powiadomień, które jest wywoływane, gdy najpierw wystąpi wyjątek zarządzanych, przed rozpoczęciem środowisko uruchomieniowe języka wspólnego wyszukiwanie programów obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>This class provides the exception handler for the <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> event with access to the exception.</source>
          <target state="translated">Ta klasa udostępnia program obsługi wyjątku dla <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> zdarzeń z dostępem do wyjątku.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>The following example creates a series of application domains named <ph id="ph1">`Child_0`</ph> through <ph id="ph2">`Child_3`</ph>, with a <ph id="ph3">`Worker`</ph> object in each application domain.</source>
          <target state="translated">Poniższy przykład tworzy serię domen aplikacji o nazwie <ph id="ph1">`Child_0`</ph> za pośrednictwem <ph id="ph2">`Child_3`</ph>, z <ph id="ph3">`Worker`</ph> obiektów w każdej domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Each <ph id="ph1">`Worker`</ph> object has a reference to the <ph id="ph2">`Worker`</ph> object in the next application domain, except for the <ph id="ph3">`Worker`</ph> in the last application domain.</source>
          <target state="translated">Każdy <ph id="ph1">`Worker`</ph> obiekt odwołuje się do <ph id="ph2">`Worker`</ph> obiektu w następnej domeny aplikacji, z wyjątkiem <ph id="ph3">`Worker`</ph> w ostatnim domeny aplikacji.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> event is handled in all application domains except <ph id="ph2">`Child_1`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> Zdarzenie jest obsługiwane we wszystkich domenach aplikacji z wyjątkiem <ph id="ph2">`Child_1`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>When the application domains have been created, the default application domain calls the <ph id="ph1">`TestException`</ph> method for the first child application domain.</source>
          <target state="translated">Podczas tworzenia domeny aplikacji domyślnej domeny aplikacji wywołuje <ph id="ph1">`TestException`</ph> metody pierwszy podrzędny domeny aplikacji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Each <ph id="ph1">`Worker`</ph> object calls the <ph id="ph2">`TestException`</ph> method for the next, until the last <ph id="ph3">`Worker`</ph> throws an exception that is either handled or unhandled.</source>
          <target state="translated">Każdy <ph id="ph1">`Worker`</ph> obiektu wywołania <ph id="ph2">`TestException`</ph> metodę dalej, aż do ostatniego <ph id="ph3">`Worker`</ph> zgłasza wyjątek, który jest obsługiwany lub nieobsługiwany.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Thus, the current thread passes through all the application domains, and <ph id="ph1">`TestException`</ph> is added to the stack in each application domain.</source>
          <target state="translated">W związku z tym bieżący wątek przechodzi przez wszystkie domeny aplikacji i <ph id="ph1">`TestException`</ph> zostanie dodany do stosu w każdej domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>When the last <ph id="ph1">`Worker`</ph> object handles the exception, the <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> event is raised only in the last application domain.</source>
          <target state="translated">Podczas ostatniego <ph id="ph1">`Worker`</ph> obiektu obsługuje wyjątek, <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> zdarzenie jest wywoływane tylko w ostatnim domeny aplikacji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>The other application domains never get a chance to handle the exception, so the event is not raised.</source>
          <target state="translated">Domeny aplikacji nigdy nie uzyskać możliwość obsługi wyjątku, aby zdarzenie nie jest wywoływane.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>When the last <ph id="ph1">`Worker`</ph> object does not handle the exception, the <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> event is raised in each application domain that has an event handler.</source>
          <target state="translated">Podczas ostatniego <ph id="ph1">`Worker`</ph> obiekt nie obsługuje wyjątek, <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> zdarzenie jest zgłaszane w każdej domenie aplikacji, która ma obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</source>
          <target state="translated">Po zakończeniu każdej obsługi zdarzeń stosu w dalszym ciągu unwind dopóki wyjątek zostanie przechwycony przez domyślnej domeny aplikacji.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>To see how the stack display grows as the event is raised closer and closer to the default application domain, change <ph id="ph1">`e.Exception.Message`</ph> to <ph id="ph2">`e.Exception`</ph> in the <ph id="ph3">`FirstChanceHandler`</ph> event handlers.</source>
          <target state="translated">Aby zobaczyć sposób wyświetlania stosu zwiększa się w miarę zdarzenie jest wywoływane bliżej i bliżej domyślnej domeny aplikacji, należy zmienić <ph id="ph1">`e.Exception.Message`</ph> do <ph id="ph2">`e.Exception`</ph> w <ph id="ph3">`FirstChanceHandler`</ph> procedury obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Notice that when <ph id="ph1">`TestException`</ph> is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</source>
          <target state="translated">Zwróć uwagę, że w przypadku <ph id="ph1">`TestException`</ph> jest wywoływana przez granice domeny aplikacji, zostanie wyświetlone dwa razy: raz dla serwera proxy i raz dla elementu zastępczego.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)">
          <source>The exception that was just thrown by managed code, and that will be examined by the <ph id="ph1">&lt;see cref="E:System.AppDomain.UnhandledException" /&gt;</ph> event.</source>
          <target state="translated">Wyjątek, który właśnie został zgłoszony przez kod zarządzany, i który będzie rozpatrywane przez <ph id="ph1">&lt;see cref="E:System.AppDomain.UnhandledException" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /&gt;</ph> class with a specified exception.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /&gt;</ph> z określonym wyjątkiem.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)">
          <source>This constructor is called by the common language runtime, not by application code.</source>
          <target state="translated">Ten konstruktor jest wywoływana przez środowisko uruchomieniowe języka wspólnego, nie przez kod aplikacji.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>The managed exception object that corresponds to the exception thrown in managed code.</source>
          <target state="translated">Obiekt zarządzanym wyjątku, który odpowiada wyjątek w kodzie zarządzanym.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>The newly thrown exception.</source>
          <target state="translated">Nowo zwrócony wyjątek.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>The method that handles the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> event can examine the exception and perform appropriate logging or other notification services.</source>
          <target state="translated">Metoda obsługująca <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> zdarzeń można zbadać wyjątek i wykonać odpowiednie rejestrowania lub innych usług powiadomień.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>For example code, see <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt;</ph>.</source>
          <target state="translated">Na przykład kodu, zobacz <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>