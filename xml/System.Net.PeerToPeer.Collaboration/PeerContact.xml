<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata><Meta Name="ms.openlocfilehash" Value="952714c30ff1533578434b3c37273b778c6cbc29" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69073234" /></Metadata><TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerContact = class&#xA;    inherit Peer&#xA;    interface IEquatable&lt;PeerContact&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje element równorzędny, dla którego Użytkownik pobrał rozszerzone informacje.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontakt reprezentuje zaufany element równorzędny. Obiekt musi zostać utworzony dla zdalnego elementu równorzędnego lub <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> dla użytkownika w celu współpracy ze zdalnym elementem równorzędnym, gdy znajduje się poza zakresem "osoby w pobliżu". <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.PeerContact> Obiekt może istnieć jako aplikacja uruchomiona na komputerze zdalnym lub użytkownik komputera zdalnego. Wystąpienie tej klasy można dodać do <xref:System.Net.PeerToPeer.Collaboration.ContactManager> magazynu, w którym przechowywane są informacje kontaktowe w sposób trwały.  
  
 Zaproszenie aplikacji z programu <xref:System.Net.PeerToPeer.Collaboration.PeerContact> jest uwierzytelniane i szyfrowane. Okno dialogowe interfejsu użytkownika umożliwiające zaakceptowanie lub odrzucenie zaproszenia z kontaktu równorzędnego wskazuje również, że zapraszaa jest zaufana.  
  
 Subskrybowanie <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektu oznacza, że zdalny element równorzędny może zobaczyć zarejestrowane aplikacje, obiekty i informacje o obecności. Aby subskrybować element <xref:System.Net.PeerToPeer.Collaboration.PeerContact>, obiekt wywołujący musi być zalogowany do infrastruktury współpracy równorzędnej za <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> pośrednictwem interfejsu użytkownika systemu Windows lub z niego zalogowany.  Wszystkie inne operacje nie wymagają logowania.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerContact : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="new System.Net.PeerToPeer.Collaboration.PeerContact (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Skojarzona<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />z. <see cref="T:System.Runtime.Serialization.SerializationInfo" /></param>
        <param name="streamingContext">Miejsce docelowe serializacji skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Nie zdefiniowano konstruktora publicznego dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienie tego obiektu można pobrać z <xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A> metod lub <xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie jest wywoływane za każdym razem, <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> gdy aplikacja skojarzona z programem została zmieniona.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość certyfikatu x509 (klucz publiczny) dla elementu równorzędnego identyfikowanego przez to <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpienie.</summary>
        <value>Certyfikatu x509 (klucz publiczny) dla elementu równorzędnego identyfikowanego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> przez to wystąpienie. Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg reprezentujący nazwę <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />wyświetlaną.</summary>
        <value><see cref="T:System.String" />reprezentuje nazwę <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />wyświetlaną. O ile nie określono jawnie, wartością domyślną dla wszystkich właściwości <see langword="null" /> jest typ referencyjny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa wyświetlana może być używana do rozróżnienia kontaktów w <xref:System.Net.PeerToPeer.Collaboration.ContactManager> wystąpieniach, w <xref:System.Net.PeerToPeer.Collaboration.PeerContact> których może znajdować się wiele adresów e-mail, lub jeśli istnieje wiele elementów równorzędnych o takiej samej nazwie wyświetlanej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="peerContact.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia zasoby niezarządzane i opcjonalnie zwalnia zarządzane zasoby używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> Gdy opuszcza sesję współpracy, niektóre obiekty nie są już wymagane.  Jeśli ten kontakt był w trakcie współpracy z innymi punktami końcowymi, które nie są bezpośrednio zarejestrowane przy użyciu hosta równorzędnego, a host oczekuje na dalsze współdziałanie z nimi, host musi zarejestrować te punkty końcowe w aplikacji lub <xref:System.Net.PeerToPeer.Collaboration.ContactManager> przed Usuwanie tego <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmailAddress : System.Net.Mail.MailAddress with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres e-mail skojarzony z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see cref="T:System.Net.Mail.MailAddress" />Obiekt, który zawiera adres e-mail skojarzony z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailAddress> Obiekt jest używany do reprezentowania adresu pocztowego.  Menedżer kontaktów zezwala na wiele adresów e-mail w ramach jednego wystąpienia. Wartość domyślna tej właściwości to `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt jest odpowiednikiem nazwy innego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca `true` wartość, jeśli <xref:System.Object> określona wartość jest <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> taka sama jak w bieżącym wystąpieniu `false`, w przeciwnym razie. Ta metoda zwraca również `false` wartość, jeśli spełnione `null`są parametry.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; bool" Usage="peerContact.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">Wystąpienie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> , które ma zostać przetestowane pod kątem równości.</param>
        <summary>Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> do określonego wystąpienia. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></summary>
        <returns><see langword="true" />Jeśli podane <see langword="false" />wystąpienie ma pasujące dane; w przeciwnym razie. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalizacja nie występuje w ciągach przed porównaniem.  Cała normalizacja powinna zostać zakończona podczas konstruowania <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektów lub przed nią.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerContact.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpienie z określonym obiektem.</param>
        <summary>Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpienie z określonym obiektem.</summary>
        <returns><see langword="true" />Jeśli podane <see langword="false" />wystąpienie ma pasujące dane; w przeciwnym razie. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Ta metoda zwraca również <see langword="false" /> wartość, jeśli przeszedł <see langword="null" />parametr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inne obiekty, które mogą być porównane z <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektami, obejmują nazwy hostów równorzędnych, względne nazwy równorzędne i nazwy, które zostały odhermetyzowane z innych <xref:System.Net.PeerToPeer> obiektów.  
  
 Normalizacja nie występuje w ciągach przed porównaniem.  Cała normalizacja powinna zostać zakończona podczas konstruowania <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektów lub przed nią.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">Pierwszy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> do porównania.</param>
        <param name="objB">Sekunda <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> do porównania.</param>
        <summary>Określa, czy określone <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpienia są uważane za równe.</summary>
        <returns><see langword="true" />Jeśli podane <see langword="false" />wystąpienia mają pasujące dane; w przeciwnym razie. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może to służyć do określenia, czy <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> jest używane jednocześnie przez dwa różne zdalne elementy równorzędne.  
  
 Inne obiekty, które mogą być porównane z <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektami, obejmują nazwy hostów równorzędnych, względne nazwy równorzędne i nazwy, które zostały odhermetyzowane z innych <xref:System.Net.PeerToPeer> obiektów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberSignature Language="F#" Value="static member FromXml : string -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.FromXml peerContactXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">Kodowanie XML używane do odtworzenia <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Tworzy wystąpienie na podstawie dostarczonych danych XML.</summary>
        <returns>Ciąg reprezentujący model obiektów XML służący do kodowania <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg, który ma zostać <xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>przekazany jako parametr.  
  
 Ta klasa jest przeznaczona do lekkiej implementacji prostego modelu obiektów XML do użycia w ramach infrastruktury współpracy, a nie do użycia jako ogólny model obiektów XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być<see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> operacji 
-Parametr nie jest prawidłowym <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> obiektem.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Pobiera obiekty zarejestrowane przez zdalny element równorzędny do lokalnej pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta funkcja jest udostępniana tylko w <xref:System.Net.PeerToPeer.Collaboration.PeerContact> klasie.  Ta funkcja nie jest ujawniana na żadnym innym typie elementu równorzędnego ze względów bezpieczeństwa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberSignature Language="F#" Value="member this.GetApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Pobiera obiekty zarejestrowane przez zdalny element równorzędny do lokalnej pamięci podręcznej.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> Z lokalnej pamięci podręcznej. Jeśli skojarzone aplikacje nie zostaną znalezione dla <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do skojarzonego z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> określoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> metodą, musi zostać wywołana przed wywołaniem tej metody.  
  
 Gdy obiekt wywołujący nie jest wymagany do zalogowania się do infrastruktury współpracy dla tej metody, ukończenie wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> lub jednej <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> z metod musi zostać zakończone, gdy obiekt wywołujący był wcześniej zalogowany.  
  
 Ta funkcja jest udostępniana tylko w <xref:System.Net.PeerToPeer.Collaboration.PeerContact> klasie.  Ta funkcja nie jest ujawniana na żadnym innym typie elementu równorzędnego ze względów bezpieczeństwa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-Wywołujący element równorzędny nie jest subskrybowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-Wywołujący element równorzędny nie nazywał <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> jeszcze metody.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operacji.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications applicationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId"><see cref="T:System.Guid" /> Aplikacja równorzędna do pobrania.</param>
        <summary>Pobiera kolekcję <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiektów z określonym <see cref="T:System.Guid" /> z lokalnej pamięci podręcznej.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> Z lokalnej pamięci podręcznej. Jeśli nie zostaną znalezione żadne aplikacje z określonym <paramref name="applicationId" />, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do skojarzonego z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> określoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> metodą, musi zostać wywołana przed wywołaniem tej metody.  
  
 Gdy obiekt wywołujący nie jest wymagany do zalogowania się do infrastruktury współpracy dla tej metody, ukończenie wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> lub jednej <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> z metod musi zostać zakończone, gdy obiekt wywołujący był wcześniej zalogowany.  
  
 Ta funkcja jest udostępniana tylko w <xref:System.Net.PeerToPeer.Collaboration.PeerContact> klasie.  Ta funkcja nie jest ujawniana na żadnym innym typie elementu równorzędnego ze względów bezpieczeństwa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-Wywołujący element równorzędny nie jest subskrybowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-Wywołujący element równorzędny nie nazywał <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> jeszcze metody.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operacji.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Zawiera informacje o punkcie końcowym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />skojarzonym z.</param>
        <summary>Pobiera skojarzenie skojarzone z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /></summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> Skojarzonego z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. Jeśli aplikacje nie są skojarzone z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do skojarzonego z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> określoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> metodą, musi zostać wywołana przed wywołaniem tej metody.  
  
 Gdy obiekt wywołujący nie jest wymagany do zalogowania się do infrastruktury współpracy dla tej metody, ukończenie wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> lub jednej <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> z metod musi zostać zakończone, gdy obiekt wywołujący był wcześniej zalogowany.  
  
 Ta funkcja jest udostępniana tylko w <xref:System.Net.PeerToPeer.Collaboration.PeerContact> klasie.  Ta funkcja nie jest ujawniana na żadnym innym typie elementu równorzędnego ze względów bezpieczeństwa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.InvalidOperationException">-Wywołujący element równorzędny nie jest subskrybowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-Wywołujący element równorzędny nie nazywał <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> jeszcze metody.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operacji.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications (peerEndPoint, applicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy skojarzony z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />.</param>
        <param name="applicationId">Zawiera informacje o aplikacji skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Pobiera skojarzenie skojarzone z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /></summary>
        <returns>Kolekcja <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiektów skojarzonych <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />z.  
  
Jeśli aplikacje identyfikowane przez identyfikator nie zostaną znalezione dla <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />lub jeśli identyfikator punktu końcowego jest <see langword="null" /> lub nieprawidłowy, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do skojarzonego z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> określoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> metodą, musi zostać wywołana przed wywołaniem tej metody.  
  
 Gdy obiekt wywołujący nie jest wymagany do zalogowania się do infrastruktury współpracy dla tej metody, ukończenie wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> lub jednej <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> z metod musi zostać zakończone, gdy obiekt wywołujący był wcześniej zalogowany.  
  
 Ta funkcja jest udostępniana tylko w <xref:System.Net.PeerToPeer.Collaboration.PeerContact> klasie.  Ta funkcja nie jest ujawniana na żadnym innym typie elementu równorzędnego ze względów bezpieczeństwa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.InvalidOperationException">-Wywołujący element równorzędny nie jest subskrybowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-Wywołujący element równorzędny nie nazywał <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> jeszcze metody.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operacji.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerContact.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> skrótu wystąpienia.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość kodu skrótu służy do programistycznego porównywania wystąpień tego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Obiekt został usunięty.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerContact.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje zserializowane dane skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiektem.</param>
        <param name="context">Zawiera miejsce docelowe dla serializowanego strumienia skojarzonego z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiektem.</param>
        <summary>Wypełnia obiekt danymi wymaganymi do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />serializacji. <see cref="T:System.Runtime.Serialization.SerializationInfo" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ pochodny musi wywoływać <xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A> metodę typu podstawowego.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję obiektów równorzędnych z lokalnej pamięci podręcznej.</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy, z którego mają zostać pobrane obiekty.</param>
        <summary>Pobiera zarejestrowane przez określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> i przechowywany w lokalnej pamięci podręcznej. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /></summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> Skojarzonego z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. Jeśli żadne aplikacje nie są skojarzone z punktem końcowym, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do skojarzonego z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> określoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> metodą, musi zostać wywołana przed wywołaniem tej metody.  
  
 Gdy obiekt wywołujący nie jest wymagany do zalogowania się do infrastruktury współpracy dla tej metody, ukończenie wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> lub jednej <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> z metod musi zostać zakończone, gdy obiekt wywołujący był wcześniej zalogowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.InvalidOperationException">-Wywołujący element równorzędny nie jest subskrybowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> do skojarzonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />z.  
  
-Wywołujący element równorzędny nie nazywał <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> jeszcze metody.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> operacji.</exception>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects (peerEndPoint, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy, z którego mają zostać pobrane obiekty.</param>
        <param name="objectId">Wartość <see cref="T:System.Guid" />dopobrania. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /></param>
        <summary>Pobiera kolekcję obiektów równorzędnych zarejestrowanych przez określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> i zarejestrowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> w określonym przez określony <see cref="T:System.Guid" />element.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> Skojarzonego z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. Jeśli żadne aplikacje nie są skojarzone z punktem końcowym, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do skojarzonego z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> określoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> metodą, musi zostać wywołana przed wywołaniem tej metody.  
  
 Gdy obiekt wywołujący nie jest wymagany do zalogowania się do infrastruktury współpracy dla tej metody, ukończenie wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> lub jednej <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> z metod musi zostać zakończone, gdy obiekt wywołujący był wcześniej zalogowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.InvalidOperationException">-Wywołujący element równorzędny nie jest subskrybowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-Wywołujący element równorzędny nie nazywał <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> jeszcze metody.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> operacji.</exception>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła zaproszenie do dołączenia do działania współpracy równorzędnej sponsorowane przez nadawcę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="override this.Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła zaproszenie do dołączenia do współpracy równorzędnej sponsorowanej przez nadawcę.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> Od elementu równorzędnego, który otrzymał zaproszenie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> Dla bieżącej aplikacji nie istnieje.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy do odbierania zaproszenia.</param>
        <summary>Wysyła zaproszenie do określonego punktu końcowego w celu dołączenia do współpracy równorzędnej z nadawcą zaproszenia.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> Z punktu końcowego elementu równorzędnego, który otrzymał zaproszenie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> operacji.  
  
— Aktualnie wykonywana aplikacja nie jest zarejestrowana w infrastrukturze współpracy równorzędnej.  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" />określony przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiekt jest nieprawidłowy.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Dla którego zostanie wysłane zaproszenie.</param>
        <param name="message">Komunikat do wysłania do zdalnego elementu równorzędnego wraz z zaproszeniem do aplikacji.</param>
        <param name="invitationData">Zdefiniowany przez użytkownika obiekt BLOB do skojarzenia z zaproszeniem.  Jego rozmiar nie może być większy niż 16 384 bajtów.</param>
        <summary>Wysyła określone zaproszenie do dołączenia do określonej <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsorowanej przez nadawcę.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> Od elementu równorzędnego, który otrzymał zaproszenie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> Dla bieżącej aplikacji nie istnieje lub jest ona pusta.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint * System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (peerEndPoint, applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy lub zdalny element równorzędny, do którego ma zostać wysłane zaproszenie.</param>
        <param name="applicationToInvite">Aplikacja, dla której jest wysyłane zaproszenie.</param>
        <param name="message">Komunikat do wysłania do zdalnego elementu równorzędnego wraz z zaproszeniem do aplikacji.  Wiadomość nie może być dłuższa niż 255 znaków Unicode.</param>
        <param name="invitationData">Zdefiniowany przez użytkownika obiekt BLOB do skojarzenia z zaproszeniem.  Jego rozmiar nie może być większy niż 16 384 bajtów.</param>
        <summary>Wysyła określone zaproszenie do określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> celu przyłączenia do określonej <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> aplikacji sponsorowanej przez nadawcę.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> Od elementu równorzędnego, który otrzymał zaproszenie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Punkt końcowy <paramref name="PeerEndPoint" /> w programie <see langword="null" />nie może być.</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />Obiekt nie może być pusty.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />obiekty <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> i nie mogą <see langword="null" />być.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> Dla bieżącej aplikacji nie istnieje lub jest ona pusta.</exception>
        <block subset="none" type="usage"><para>Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna asynchroniczne operacje zaproszenia dla punktu końcowego w celu dołączenia <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> do aplikacji sponsorowanej przez nadawcę zaproszenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : obj -&gt; unit" Usage="peerContact.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika do przekazania do wywołania zwrotnego operacji asynchronicznej. Służy również do identyfikowania operacji asynchronicznej do anulowania. Ten parametr musi być określony i jest unikatowy dla wszystkich asynchronicznych operacji zapraszania.</param>
        <summary>Rozpoczyna asynchroniczne operacje zaproszenia dla punktu końcowego w celu dołączenia <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> do aplikacji sponsorowanej przez nadawcę zaproszenia. Zaproszenie jest identyfikowane przy użyciu określonego <see cref="T:System.Object" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="UserToken" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> -Dla bieżącej aplikacji nie istnieje lub jest pusta.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />nie może być<see langword="null." /></exception>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy lub zdalny element równorzędny, do którego ma zostać wysłane zaproszenie.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika do przekazania do wywołania zwrotnego operacji asynchronicznej. Służy również do identyfikowania operacji asynchronicznej do anulowania. Ten parametr musi być określony i jest unikatowy dla wszystkich asynchronicznych operacji zapraszania.</param>
        <summary>Rozpoczyna asynchroniczne operacje zaproszenia dla określonego punktu końcowego równorzędnego w celu dołączenia <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> do aplikacji sponsorowanej przez nadawcę zaproszenia. Zaproszenie jest identyfikowane przy użyciu określonego <see cref="T:System.Object" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" />nie może być<see langword="null." />  
  
-Punkt końcowy <paramref name="peerEndPoint" /> w programie <see langword="null" />nie może być.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerEndPoint" />Obiekt nie może być<see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="T:System.Guid" /> Dla bieżącej aplikacji nie istnieje lub jest ona pusta.</exception>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peerContact.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">Aplikacja, dla której jest wysyłane zaproszenie.</param>
        <param name="message">Komunikat do wysłania do zdalnego elementu równorzędnego wraz z zaproszeniem do aplikacji.  Wiadomość nie może być dłuższa niż 255 znaków Unicode.</param>
        <param name="invitationData">Zdefiniowany przez użytkownika obiekt BLOB do skojarzenia z zaproszeniem.  Jego rozmiar nie może być większy niż 16 384 bajtów.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika do przekazania do wywołania zwrotnego operacji asynchronicznej. Służy również do identyfikowania operacji asynchronicznej do anulowania. Ten parametr musi być określony i jest unikatowy dla wszystkich asynchronicznych operacji zapraszania.</param>
        <summary>Rozpoczyna asynchroniczne operacje zaproszenia dla określonych punktów końcowych elementów równorzędnych w celu dołączenia do określonej współpracy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsorowanej przez nadawcę zaproszenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="UserToken" />nie może <see langword="null" />być.</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />Obiekt nie może być<see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="T:System.Guid" /> -Dla bieżącej aplikacji nie istnieje lub jest pusta.  
  
-Kolekcja punktów końcowych jest pusta lub<see langword="null." /></exception>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * string * byte[] * System.Net.PeerToPeer.Collaboration.PeerApplication * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, message, invitationData, applicationToInvite, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Punkt końcowy lub zdalny element równorzędny, do którego ma zostać wysłane zaproszenie.</param>
        <param name="message">Komunikat do wysłania do zdalnego elementu równorzędnego wraz z zaproszeniem do aplikacji.  Wiadomość nie może być dłuższa niż 255 znaków Unicode.</param>
        <param name="invitationData">Zdefiniowany przez użytkownika obiekt BLOB danych do skojarzenia z zaproszeniem.  Jego rozmiar nie może być większy niż 16 384 bajtów.</param>
        <param name="applicationToInvite">Aplikacja, dla której jest wysyłane zaproszenie.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika do przekazania do wywołania zwrotnego operacji asynchronicznej. Służy również do identyfikowania operacji asynchronicznej do anulowania. Ten parametr musi być określony i jest unikatowy dla wszystkich asynchronicznych operacji zapraszania.</param>
        <summary>Rozpoczyna asynchroniczne operacje zaproszenia dla określonego <paramref name="peerEndPoint" /> celu dołączenia do określonej współpracy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsorowanej przez nadawcę zaproszenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący nie musi zalogować się do infrastruktury, <xref:System.Net.PeerToPeer.Collaboration> aby ta metoda została pomyślnie ukończona. <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Od zaproszenia nie jest taka sama jak zaproszenie zaakceptowane przez zaproszenie do współpracy. W przypadku wysłania zaproszenia do zdalnego elementu równorzędnego, który nie zainstalował aplikacji, zaproszenie jest automatycznie odrzucane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" />nie może mieć wartości null.  
  
-Punkt końcowy określony <paramref name="peerEndPoint" /> przez nie <see langword="null" />może być.</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiekty nie mogą być<see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> Dla bieżącej aplikacji nie istnieje lub jest ona pusta.</exception>
        <block subset="none" type="usage"><para>Dodatkowe przeciążenia są zdefiniowane w <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> klasie zamiast <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> podklas i <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Wywołanie tej metody wymaga <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSubscribed : bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy bieżący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> element jest subskrybowany lub niesubskrybowany do punktu końcowego. Alternatywnie, ta właściwość pobiera lub ustawia wartość określającą, czy bieżące hosty równorzędne lub aplikacja hostingu subskrybują lub anulują subskrypcję <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see langword="true" />Jeśli ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> punkt końcowy jest subskrybowany, <see langword="false" /> Jeśli kontakt nie subskrybuje się lub nie ma subskrypcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W wielu przypadkach element <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> nie jest taki sam jak Host równorzędny. Host równorzędny ma wystąpienie w ramach <xref:System.Net.PeerToPeer.Collaboration.ContactManager> zdalnego elementu równorzędnego, a relacja polega na tym, że zaprosiła element równorzędny do współpracy.  Punkt końcowy ma wystąpienie "Me" w ramach własnego menedżera kontaktów i hosta równorzędnego, ale nie określono relacji.  
  
 Jeśli host równorzędny znajduje się w <xref:System.Net.PeerToPeer.Collaboration.ContactManager>, a kontakt równorzędny wybierze opcję nie <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>do, <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType> może mieć zablokowaną wartość, a nie usunięcie jej wpisu z Menedżera kontaktów hosta.  
  
 Istnieje relacja wiele-do-wielu między lokalnymi elementami równorzędnymi, zdalnymi elementami równorzędnymi, hostami równorzędnymi i subskrypcjami.  Subskrypcje są dla poszczególnych użytkowników, a nie dla poszczególnych procesów, na aplikacje lub na domenę. W związku z tym subskrypcje skojarzone z <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektem to lista kontaktów, dla których została zasubskrybowana i od których oczekuje aktualizacje.  Te kontakty mają zaktualizowane informacje dotyczące aplikacji, obiektów i informacji o obecności lub zawierają zaktualizowane informacje dotyczące kontaktów w programie <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
 Ta właściwość zawsze zwraca `true` wartość, jeśli obiekt <xref:System.Net.PeerToPeer.Collaboration.PeerContact> jest, który reprezentuje kontakt lokalny lub "Me", ponieważ kontakt jest zawsze subskrybowany do samego siebie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Nickname : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje wartość <paramref name="Nickname" />. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></summary>
        <value><see cref="T:System.String" />reprezentujący pseudonim <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pseudonim może być używany dla <xref:System.Net.PeerToPeer.Collaboration.PeerContact> obiektu w przypadku, gdy istnieje wiele elementów równorzędnych o takiej samej nazwie wyświetlanej.  Sesja współpracy może również używać pseudonimu do wyznaczania zdalnych elementów równorzędnych często używanych w większych działaniach związanych ze współpracą.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie jest sygnalizowane przy każdej <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> zmianie skojarzonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> z.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerContact.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">Obiekt, który ma zostać przesłany do delegatów <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> skojarzonych ze zdarzeniem. <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /></param>
        <summary><see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany aplikacji są wykonywane, gdy aplikacja jest uruchamiana, rejestrowana lub wyrejestrowana z infrastruktury współpracy.  Występują one również wtedy, gdy elementy równorzędne dołączą lub opuszczają sesję współpracy albo zmieniają lokalizacje punktów końcowych sieci.  Zmiany zakresu elementów równorzędnych mogą również skutkować zmianą aplikacji.  
  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w przypadku wystąpienia zdarzenia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W klasie pochodnej należy wywołać implementację klasy bazowej tej metody, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit&#xA;override this.OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit" Usage="peerContact.OnObjectChanged objChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">Typ zmiany obiektu określony przez <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
        <summary>Podnosi zdarzenie, gdy element <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> zostanie dodany, zaktualizowany lub usunięty przez zdalny element równorzędny. <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit&#xA;override this.OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit" Usage="peerContact.OnPresenceChanged presenceChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">Obiekt, który ma zostać przesłany do delegatów <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> skojarzonych ze zdarzeniem. <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /></param>
        <summary><see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> Podnosi zdarzenie<see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> po zmianie elementu równorzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany w obecności występują, gdy element równorzędny wyloguje się z aplikacji, aplikacja jest zarejestrowana lub wyrejestrowana z infrastruktury współpracy lub element równorzędny anuluje <xref:System.Net.PeerToPeer.Collaboration.PeerContact> subskrypcję z lub <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSubscribeCompleted : System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs -&gt; unit" Usage="peerContact.OnSubscribeCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Obiekt <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> lub <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> skojarzony ze<see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> zdarzeniem.</param>
        <summary><see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> przypadku wystąpienia zdarzenia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klasa pochodna musi wywoływać implementację klasy bazowej tej metody, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera skojarzoną z tym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />elementem. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /></summary>
        <value>Kolekcja skojarzona z tym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />elementem. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niezależnie od tego, czy <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> <xref:System.Net.PeerToPeer.Collaboration.ContactManager>jest to lokalny element równorzędny, zdalny element równorzędny, czy element równorzędny hosta dla kontaktu równorzędnego reprezentowanego przez to wystąpienie, nie dotyczy obecności w punkcie końcowym lub. <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje odpowiednie użycie <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A> właściwości:  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Net.PeerToPeer.PeerName" /> skojarzenie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />z.</summary>
        <value><see cref="T:System.String" />Reprezentuje <see cref="T:System.Net.PeerToPeer.PeerName" /> .<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> O ile nie określono jawnie, wartością domyślną dla wszystkich właściwości <see langword="null" /> jest typ referencyjny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa kontakty w książce adresowej nie mogą być takie same <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie jest zgłaszane po <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> zmianie stanu obecności.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : unit -&gt; unit&#xA;override this.Subscribe : unit -&gt; unit" Usage="peerContact.Subscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Subskrybuje wywołujący element równorzędny <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, a w związku z tym element równorzędny otrzyma wszystkie przyszłe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> zdarzenia skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>aktualizacje są wykonywane asynchronicznie <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> po pomyślnym zakończeniu metody. W związku <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> z tym można dodać do kolekcji a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> przed podaną skojarzoną <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A> .  
  
 Aby monitorować te zmiany, zaleca się, aby użytkownik zasubskrybował odpowiednie zdarzenia. na przykład <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywołujący element równorzędny nie jest zalogowany do osób w pobliżu.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> operacji. Niepowodzenie może być spowodowane brakiem możliwości nawiązania połączenia TCP z elementem równorzędnym.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberSignature Language="F#" Value="member this.SubscribeAllowed : System.Net.PeerToPeer.Collaboration.SubscriptionType with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> ma być narażony na zdarzenia współpracy skojarzone z elementem równorzędnym lub aplikacją, która ma własność, <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> w której <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> znajduje się ten obiekt.</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />wartość wyliczenia określająca, czy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> jest ona narażona na zdarzenia współpracy należące do hosta równorzędnego lub aplikacji hostingowej. O ile nie określono jawnie, wartością domyślną dla wszystkich właściwości <see langword="null" /> jest typ referencyjny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed> właściwości oznacza, że zdalny element równorzędny określony <xref:System.Net.PeerToPeer.Collaboration.PeerContact> przez ten program może zobaczyć zarejestrowane aplikacje, obiekty i informacje o obecności dla użytkownika <xref:System.Net.PeerToPeer.Collaboration.ContactManager> lub aplikacji, których właścicielem jest <xref:System.Net.PeerToPeer.Collaboration.PeerContact> ten obiekt. znajduje się.  
  
 Ta właściwość nie ma wpływu na <xref:System.Net.PeerToPeer.Collaboration.PeerContact> wystąpienie, które reprezentuje kontakt lokalny lub "Me", ponieważ kontakt jest zawsze subskrybowany do samego siebie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ta<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  
  
Obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member SubscribeAsync : obj -&gt; unit&#xA;override this.SubscribeAsync : obj -&gt; unit" Usage="peerContact.SubscribeAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Zdefiniowany <see cref="T:System.Object" /> przez użytkownika, który zawiera informacje <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> o operacji.</param>
        <summary>Asynchronicznie subskrybuje wywołujący element równorzędny <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, a w związku z tym element równorzędny otrzyma wszelkie przyszłe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> zdarzenia skojarzone <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />z.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> Zdarzenie jest zgłaszane po zakończeniu tej operacji. Jeśli działania współpracy nie muszą być asynchroniczne, <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> zamiast tego należy użyć metody.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="UserToken" />nie może być<see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">Wywołujący element równorzędny nie jest zalogowany do osób w pobliżu.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Zduplikowany <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> identyfikator.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberSignature Language="F#" Value="member this.SubscribeCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " Usage="member this.SubscribeCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany, gdy operacja subskrypcji została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po podniesieniu <xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs> tego zdarzenia Właściwość Error obiektu powinna zostać sprawdzona w celu ustalenia, <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A> czy proces został ukończony pomyślnie.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje zserializowane dane skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiektem.</param>
        <param name="context">Zawiera miejsce docelowe dla serializowanego strumienia skojarzonego z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiektem.</param>
        <summary>Implementuje interfejs i zwraca dane, które są konieczne do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> serializacji wystąpienia. <see cref="T:System.Runtime.Serialization.ISerializable" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerContact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> skojarzonego z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. <see cref="T:System.String" /></summary>
        <returns><see cref="T:System.String" />Reprezentacja <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="peerContact.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Serializować do ciągu XML dla trwałego magazynu lub transferu sieciowego.</summary>
        <returns>Kodowanie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> operacji.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit&#xA;override this.Unsubscribe : unit -&gt; unit" Usage="peerContact.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa subskrypcję programu <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> i w efekcie wywołujący element równorzędny nie odbiera <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> już zdarzeń skojarzonych z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujący element równorzędny nie jest subskrybowany <xref:System.Net.PeerToPeer.Collaboration.PeerContact> przez określony wynik to no-op. Element równorzędny wywołujący może sprawdzić, <xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A> czy subskrybuje zdarzenia dla elementu równorzędnego identyfikowanego przez to wystąpienie z właściwością.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>
