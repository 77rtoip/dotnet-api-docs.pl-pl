<Type Name="PeerApplication" FullName="System.Net.PeerToPeer.Collaboration.PeerApplication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16a79431b08a45ff2ef133e8da9a28d76add6893" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69092012" /></Metadata><TypeSignature Language="C#" Value="public class PeerApplication : IDisposable, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerApplication extends System.Object implements class System.IDisposable, class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerApplication&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerApplication&#xA;Implements IDisposable, IEquatable(Of PeerApplication), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerApplication : IDisposable, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerApplication ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerApplication = class&#xA;    interface IDisposable&#xA;    interface IEquatable&lt;PeerApplication&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje aplikację, która jest dostępna do użycia z infrastrukturą współpracy równorzędnej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja to zestaw funkcji oprogramowania lub oprogramowania dostępnych dla elementu równorzędnego z punktu końcowego. Często dotyczy to pakietów oprogramowania z obsługą sieci, takich jak gry lub inne aplikacje do współpracy. Definiuje zestaw aplikacji lub składników oprogramowania dostępnych do użycia <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> w sieci. <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> Ta sieć umożliwia uczestnikom infrastruktury inicjowanie użycia tej aplikacji. Mogą inicjować sesję współpracy przy użyciu aplikacji identyfikowanej przez tę klasę.  
  
 Po skonstruowaniu wystąpienia tej klasy i ustawieniu odpowiednich właściwości ten obiekt może być używany w <xref:System.Net.PeerToPeer> sesjach współpracy.  Jego użycie jest realizowane przez przekazanie go do współpracy <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication%2A> równorzędnej i <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication%2A> metod, które spowodują włączenie lub wyłączenie.  
  
 Aby można było pomyślnie <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A> zarejestrować <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> aplikację, należy ustawić globalnie unikatową i właściwości tego wystąpienia.  
  
 Po zarejestrowaniu aplikacji za pomocą infrastruktury współpracy równorzędnej informacje o rejestracji będą przechowywane w rejestrze.  Dzięki temu aplikacja jest dostępna do współpracy z aplikacjami nawet po zamknięciu programu, który zarejestrował aplikację.  
  
 Zmiana właściwości wystąpienia aplikacji po jego zarejestrowaniu nie ma wpływu na rejestrację. Aby zaktualizować rejestrację, należy wyrejestrować aplikację, a następnie zarejestrować ją ponownie przy użyciu nowych informacji.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> wystąpienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było pomyślnie <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A> zarejestrować <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> aplikację, należy ustawić globalnie unikatową i właściwości tego wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerApplication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> domyślne typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było pomyślnie <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A> zarejestrować <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> aplikację, należy ustawić globalnie unikatową i właściwości tego wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerApplication (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerApplication(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerApplication : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerApplication" Usage="new System.Net.PeerToPeer.Collaboration.PeerApplication (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Skojarzona<see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />z. <see cref="T:System.Runtime.Serialization.SerializationInfo" /></param>
        <param name="streamingContext">Miejsce docelowe serializacji skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> typu z danymi wymaganymi do serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca obiekt, którego nazwa jest w pełni kwalifikowana <xref:System.Net.PeerToPeer.PeerName> przez obiekt w tym obiekcie. <xref:System.Net.PeerToPeer.Collaboration.PeerApplication>  
  
 Aby można było pomyślnie <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A> zarejestrować <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> aplikację, należy ustawić globalnie unikatową i właściwości tego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerApplication (Guid id, string description, byte[] data, string path, string commandLineArgs, System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id, string description, unsigned int8[] data, string path, string commandLineArgs, valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerApplication(Guid id, System::String ^ description, cli::array &lt;System::Byte&gt; ^ data, System::String ^ path, System::String ^ commandLineArgs, System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerApplication : Guid * string * byte[] * string * string * System.Net.PeerToPeer.Collaboration.PeerScope -&gt; System.Net.PeerToPeer.Collaboration.PeerApplication" Usage="new System.Net.PeerToPeer.Collaboration.PeerApplication (id, description, data, path, commandLineArgs, peerScope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="commandLineArgs" Type="System.String" />
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="id">Określony <see cref="T:System.Guid" /> przez użytkownika, używany do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />identyfikacji.</param>
        <param name="description"><see cref="T:System.String" /> Opis aplikacji równorzędnej.</param>
        <param name="data">Obiekt danych binarnych do skojarzenia z aplikacją równorzędną, taki jak mały obraz.</param>
        <param name="path">Lokalna ścieżka systemu plików do aplikacji równorzędnej.</param>
        <param name="commandLineArgs">Argumenty wiersza polecenia do uruchamiania aplikacji równorzędnej.</param>
        <param name="peerScope">Zakres, w którym aplikacja zostanie zarejestrowana na potrzeby współpracy równorzędnej.</param>
        <summary>Inicjuje nowe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> wystąpienie przy użyciu podanego identyfikatora aplikacji, opisu, zakresu i elementów danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było pomyślnie <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A> zarejestrować <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> aplikację, należy ustawić globalnie unikatową i właściwości tego wystąpienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-Długość obiektu danych binarnych nie może być mniejsza niż jeden lub większy niż 16 KB.  
  
-   <paramref name="id" />jest ustawiony na <see langword="null" />.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs" />
        <altmember cref="N:System.Runtime" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie jest wywoływane za każdym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> razem, gdy zostanie dodany, zaktualizowany lub usunięty przez zdalny element równorzędny w subskrybowanym punkcie końcowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użycie tego zdarzenia wymaga wartości <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.Permissions.PermissionState> w <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> obiekcie, który został utworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandLineArgs">
      <MemberSignature Language="C#" Value="public string CommandLineArgs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandLineArgs" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandLineArgs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandLineArgs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandLineArgs : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia parametry wiersza polecenia do użycia podczas inicjowania elementu <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <value><see cref="T:System.String" />reprezentuje parametry wiersza polecenia specyficzne dla aplikacji, które mają być używane podczas inicjacji <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dane skojarzone z bieżącym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> wystąpieniem.</summary>
        <value><see cref="T:System.Byte" /> Tablica danych, która zawiera obiekt binarny do skojarzenia z aplikacją równorzędną. Jest to często mały obiekt BLOB obrazu lub XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te dane są bezpłatne i udostępniane przez elementy równorzędne hostingu. Maksymalna ilość danych, które można podać, to 4 096 bajtów. Te dane nie są częścią <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> zaproszenia, ale umożliwiają skojarzenie dodatkowych danych z aplikacją w lokalnym elemencie równorzędnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Rozmiar tego obiektu danych binarnych jest mniejszy niż 0 lub większy niż 4 096 bajtów.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Unicode <see cref="T:System.String" /> , który <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />opisuje.</summary>
        <value><see cref="T:System.String" />wartość opisująca aplikację. O ile nie zostanie określona, wartość domyślna tej właściwości <see langword="null" />to.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te dane nie są częścią <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> zaproszenia. Jednak jest on wyświetlany w interfejsie użytkownika po <xref:System.Net.PeerToPeer.Collaboration.Peer> odebraniu zaproszenia dla aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekt.</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerApplication.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekt.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerApplication.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> Ustaw, aby zwolnić zarówno zasoby zarządzane, jak i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekt i opcjonalnie zwalnia zarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> do określonego obiektu.</summary>
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerApplication other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerApplication other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerApplication) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerApplication ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerApplication -&gt; bool" Usage="peerApplication.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
      </Parameters>
      <Docs>
        <param name="other">Wystąpienie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> , które ma zostać przetestowane pod kątem równości.</param>
        <summary>Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> do określonego wystąpienia. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /></summary>
        <returns><see langword="true" />Jeśli podane <see langword="false" />wystąpienie ma pasujące dane; w przeciwnym razie. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Ta metoda zwraca również <see langword="false" /> wartość <paramref name="other" /> <see langword="null" />IF.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żadne normalizacji nie są wykonywane na ciągach przed porównaniem.  Wszystkie normalizacji powinny zostać wykonane w czasie lub przed konstruowaniem obiektów PeerApplication.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerApplication.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> Aby sprawdzić równość.</param>
        <summary><see cref="T:System.Object" />Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> do określonego.</summary>
        <returns><see langword="true" />Jeśli jest równa określonemu wystąpieniu obiektu; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Object" /> Został usunięty.</exception>
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">Pierwszy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> do porównania.</param>
        <param name="objB">Sekunda <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> do porównania.</param>
        <summary>Określa, czy określone <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekty są uważane za równe.</summary>
        <returns><see langword="true" />Jeśli określone obiekty mają tę samą globalnie unikatową aplikację <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> i <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />; w przeciwnym <see langword="false" />razie,.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerApplication.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> skrótu wystąpienia.</summary>
        <returns>32-bitowy kod skrótu ze znakiem, używany do porównywania wystąpień tego typu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerApplication.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełnienia danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Wypełnia dane, które są konieczne do serializacji obiektu docelowego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />. <see cref="T:System.Runtime.Serialization.SerializationInfo" /></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zdefiniowane <see cref="T:System.Guid" /> przez użytkownika skojarzenie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />z.</summary>
        <value><see cref="T:System.Guid" />skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> wystąpieniem. O ile nie zostanie określona, wartość domyślna tej właściwości <see langword="null" />to.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Null`elementy są niedozwolone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerApplication.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">Obiekt, który zawiera dane, które mają zostać przesłane do delegatów <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> dla zdarzenia. <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /></param>
        <summary><see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłonić tego delegata, aby wykonywały dodatkowe zadania w przypadku wystąpienia zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę wskazującą lokalizację <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> pliku wykonywalnego w lokalnym systemie plików.</summary>
        <value><see cref="T:System.String" />reprezentuje ścieżkę pliku. O ile nie określono jawnie, wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Null`lub <xref:System.String.Empty> wartości są niedozwolone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs" />
      </Docs>
    </Member>
    <Member MemberName="PeerScope">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerScope PeerScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.PeerScope PeerScope" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerScope As PeerScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::PeerScope PeerScope { System::Net::PeerToPeer::Collaboration::PeerScope get(); void set(System::Net::PeerToPeer::Collaboration::PeerScope value); };" />
      <MemberSignature Language="F#" Value="member this.PeerScope : System.Net.PeerToPeer.Collaboration.PeerScope with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zakres, w którym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> jest zarejestrowany do współpracy.</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />Obiekt, który określa zakres, w którym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> będzie współpracować.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpScope" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy ta wartość właściwości jest ustawiona, wszystkie zdarzenia niewyzwalane w wyniku operacji asynchronicznej będą miały skojarzone programy obsługi zdarzeń o nazwie z powrotem w wątku, który utworzył określony <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
        <value>Obiekt, który implementuje <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interfejs i jest używany przez wystąpienia tego typu do synchronizacji programu obsługi zdarzeń w wątku, który go utworzył.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ustawiona wartość tej właściwości `null`wskazuje, że wszystkie programy obsługi zdarzeń są wywoływane w wątku puli wątków systemowych.  
  
 Ta właściwość jest zwykle ustawiona na element interfejsu użytkownika, taki jak <xref:System.Windows.Forms.Form> wystąpienie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt wywołujący został usunięty.</exception>
        <altmember cref="N:System.Windows.Forms" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiekt do wypełnienia danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Implementuje interfejs i zwraca dane wymagane do serializacji obiektu docelowego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />. <see cref="T:System.Runtime.Serialization.ISerializable" /></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerApplication.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg, który zawiera <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> i <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" /> <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> wystąpienia.</summary>
        <returns>Ciąg, który zawiera <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> i <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" /> <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> wystąpienia, rozdzielonych spacją.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dziedziczy domyślną sygnaturę i zachowanie z <xref:System.Object>programu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Obiekt został usunięty.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
