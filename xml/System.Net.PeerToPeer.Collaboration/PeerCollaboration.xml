<Type Name="PeerCollaboration" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaboration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52b467c64553a3e3a4978d44948baab52941e0d5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69092841" /></Metadata><TypeSignature Language="C#" Value="public static class PeerCollaboration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PeerCollaboration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerCollaboration" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaboration abstract sealed" />
  <TypeSignature Language="F#" Value="type PeerCollaboration = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Współdziała z infrastrukturą współpracy równorzędnej. Wiele podstawowych scenariuszy współpracy zaczyna się od tej klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest klasą statyczną — jest zapieczętowana, abstrakcyjna i nie ma konstruktora publicznego. Służy do przechowywania informacji o aplikacji, obiektach i obecności dla elementów równorzędnych, które zaakceptowały zaproszenia do sesji współpracy, oraz zarządzania nimi. W odniesieniu do elementów równorzędnych, obiektów i aplikacji Klasa PeerCollaboration udostępnia trzy metody dostępu, po jednym dla każdej kolekcji, jako interfejs lub punkt łączności dla dowolnego innego komputera.  Tej klasy nie można dziedziczyć; Jeśli Klasa zapieczętowana zostanie określona jako klasa bazowa, wystąpi błąd w czasie kompilacji.  
  
 Metody i właściwości w tej klasie mogą służyć do:  
  
-   Uruchamianie aplikacji współpracujących i zarządzanie nimi  
  
-   Rejestrowanie i usuwanie aplikacji oraz obiektów współpracy (takich jak certyfikaty, obrazy, awatary i opisy tekstu)  
  
-   Zapraszanie elementów równorzędnych do sesji współpracy, w tym takich jak zakres i obiekty, które identyfikują je za pośrednictwem Internetu  
  
-   Zezwalaj na używanie elementów <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> równorzędnych z <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A> infrastrukturą współpracy, zarządzanie listami kontaktów lub publikowanie ich obecności na siebie  
  
-   Korzystaj <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A> z właściwości i zdarzeń w celu koordynowania komunikacji między aplikacjami asynchronicznymi, szczególnie w przypadku zmian nazw, obecności, aplikacji lub innych obiektów.  
  
 "Połączenie z chmurą lokalną", "podsieć wywołującego elementu równorzędnego" i "zakres NearMe" są synonimami. "Zakres Internetu" i "obecność bezserwerowa" są synonimami. Lokalna <xref:System.Net.PeerToPeer.PnrpScope> lokacja nie ma odpowiednika w przestrzeni nazw współpracy.  
  
 Użycie każdej metody lub właściwości w tej klasie wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po rozpoczęciu sesji współpracy równorzędnej.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationLaunchInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationLaunchInfo As PeerApplicationLaunchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ ApplicationLaunchInfo { System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationLaunchInfo : System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> Pobiera obiekt, który zawiera informacje, które są konieczne, gdy aplikacja zostanie uruchomiona z powodu żądania współpracy ze zdalnego elementu równorzędnego.</summary>
        <value>Jeśli aplikacja została uruchomiona z powodu zaproszenia, <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> obiekt, który zawiera oba informacje o elemencie równorzędnym, który wysłał zaproszenie do aplikacji i jest zwracany przez samo zaproszenie; <see langword="null" /> w przeciwnym razie zwraca.  Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma być używana przez wystąpienie z obsługą <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> współpracy po jego rozpoczęciu w celu ustalenia, czy zostało uruchomione z powodu żądania współpracy ze zdalnego elementu równorzędnego.  Aplikacja wywołująca powinna sprawdzić <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A> właściwości i <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A> , aby uzyskać więcej informacji na temat żądania zaproszenia.  
  
 Dostęp do tej właściwości wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="ContactManager">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.ContactManager ContactManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.ContactManager ContactManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContactManager As ContactManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::ContactManager ^ ContactManager { System::Net::PeerToPeer::Collaboration::ContactManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContactManager : System.Net.PeerToPeer.Collaboration.ContactManager" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.ContactManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera trwały magazyn zawierający wszystkie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekty zdalnych elementów równorzędnych.</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />Obiekt, który zawiera wszystkie obiekty kontaktów elementów równorzędnych dla zdalnych elementów równorzędnych. Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public static void DeleteObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberSignature Language="F#" Value="static member DeleteObject : System.Net.PeerToPeer.Collaboration.PeerObject -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject peerObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> Do wyrejestrowania.</param>
        <summary>Wyrejestrowuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> skojarzenie skojarzone z wywołującym elementem równorzędnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekty równorzędne są automatycznie wyrejestrowani (usuwane) ze infrastruktury współpracy równorzędnej, gdy odwołanie do obiektu nie jest już prawidłowe.  Jeśli obiekt wywołujący nie utrzymuje odwołania do obiektu, zostanie wyrejestrowany z infrastruktury współpracy równorzędnej.  Alternatywnie, można ręcznie wyrejestrować obiekt za pomocą tej metody.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="peerObject" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> operacji.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalRegisteredApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiektów, które są zarejestrowane na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący musi zalogować się do infrastruktury współpracy równorzędnej za <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> pomocą metody lub przed użyciem tej metody.  
  
 Dostęp do tej właściwości wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
   
  
## Examples  
 Poniższy przykładowy kod ilustruje sposób pobierania kolekcji aplikacji zarejestrowanych w ramach infrastruktury współpracy:  
  
 [!code-csharp[NCLPNRPContacts#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications();" />
      <MemberSignature Language="F#" Value="static member GetLocalRegisteredApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wszystkie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiekty, które są zarejestrowane na komputerze lokalnym.</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> , który zawiera wszystkie aplikacje zarejestrowane na komputerze lokalnym. Jeśli aplikacja nie zostanie znaleziona, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący jest wymagany do zalogowania się do infrastruktury współpracy równorzędnej za <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> pośrednictwem metody przed użyciem tej metody.  
  
 Dostęp do tej właściwości wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Podczas próby wyliczenia aplikacji zarejestrowanej dla tego elementu równorzędnego została zwrócona nieprawidłową wartość. Upewnij się, że wszystkie aplikacje mają prawidłowe wartości rejestru.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications (System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications(valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications (type As PeerApplicationRegistrationType) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications(System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member GetLocalRegisteredApplications : System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />do zwrócenia dla określonej aplikacji.</param>
        <summary>Pobiera kolekcję wszystkich <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiektów, które są zarejestrowane na komputerze lokalnym dla określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />.</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> , który zawiera wszystkie aplikacje określone <paramref name="type" /> , które są zarejestrowane na komputerze lokalnym. Jeśli aplikacja nie zostanie znaleziona, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący jest wymagany do zalogowania się do infrastruktury współpracy równorzędnej za <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> pośrednictwem metody przed użyciem tej metody.  
  
 Dostęp do tej metody wymaga <xref:System.Security.Permissions.PermissionState>. <xref:System.Security.Permissions.PermissionState.Unrestricted> Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr nie jest ustawiony na znaną wartość <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> w wyliczeniu. <paramref name="type" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Podczas próby wyliczenia aplikacji zarejestrowanej dla tego elementu równorzędnego została zwrócona nieprawidłową wartość. Upewnij się, że wszystkie aplikacje mają prawidłowe wartości rejestru.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalSetObjects">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalSetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetLocalSetObjects();" />
      <MemberSignature Language="F#" Value="static member GetLocalSetObjects : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uzyskuje wszystkie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> wystąpienia zarejestrowane przez wywołujący element równorzędny <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> z infrastrukturą na tym komputerze.</summary>
        <returns>, Który zawiera <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> wszystkie wystąpienia zarejestrowane przez wywołujący element równorzędny z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> infrastrukturą na komputerze lokalnym. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />  
  
Jeśli na <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> komputerze lokalnym nie zostaną odnalezione zarejestrowane wystąpienia, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do tej właściwości wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Podczas próby wyliczenia wszystkich dostępnych <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> wystąpień została zwrócona nieprawidłowa wartość.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetPeersNearMe">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPeersNearMe () As PeerNearMeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerNearMeCollection ^ GetPeersNearMe();" />
      <MemberSignature Language="F#" Value="static member GetPeersNearMe : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerNearMeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję wszystkich punktów końcowych <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> , które są obecnie zalogowane w podsieci sieciowej wywołującego elementu równorzędnego.</summary>
        <returns>Zawiera wszystkie punkty końcowe, <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> któresąobecniezalogowanedozakresu"NearMe".<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" />  
  
Jeśli nie odnaleziono elementów równorzędnych w podsieci, zwracana jest kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powrót w pełni wypełniony <xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection> za pośrednictwem tej metody może wymagać nieokreślonego czasu po zalogowaniu się w zależności od topologii sieci i opóźnienia.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób pobierania PeersNearMe jako PeerNearMeCollection:  
  
 [!code-csharp[NCLPNRPContacts#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Element równorzędny nie jest zalogowany do zakresu "Near Me".</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Zwrócono nieprawidłową wartość, gdy ta metoda próbuje wyliczyć wszystkie znane osoby blisko mnie punkty końcowe.</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalApplicationChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ LocalApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.LocalApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany, <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> gdy w elemencie dla lokalnego elementu równorzędnego na hoście lokalnym zmieniono wartość.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPointName">
      <MemberSignature Language="C#" Value="public static string LocalEndPointName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string LocalEndPointName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalEndPointName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LocalEndPointName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPointName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> skojarzoną z wywołującym elementem równorzędnym.</summary>
        <value><see cref="T:System.String" />zawiera nazwę skojarzoną z punktem końcowym wywołującego elementu równorzędnego (zapewnianym jako <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> Właściwość). Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do tej właściwości wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ustawić <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="LocalNameChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalNameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ LocalNameChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalNameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.LocalNameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany, gdy nazwa <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> na hoście lokalnym dla lokalnego elementu równorzędnego została zmieniona.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalObjectChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ LocalObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.LocalObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> A<see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> w elemencie dla lokalnego elementu równorzędnego na hoście lokalnym uległy zmianie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalPresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ LocalPresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalPresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.LocalPresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> Zmieniono lokalny element równorzędny na hoście lokalnym.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalPresenceInfo As PeerPresenceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ LocalPresenceInfo { System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ get(); void set(System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalPresenceInfo : System.Net.PeerToPeer.Collaboration.PeerPresenceInfo with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obecność dla elementu równorzędnego wywołującego w <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> ramach infrastruktury.</summary>
        <value>Zawiera informacje o obecności dla elementu równorzędnego wywołującego, który został zarejestrowany <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> dla sesji. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />nie można określić<see langword="null" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />jest w trybie offline 
-Nie można ustawić<see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RegisterApplication">
      <MemberSignature Language="C#" Value="public static void RegisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member RegisterApplication : System.Net.PeerToPeer.Collaboration.PeerApplication * System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication (application, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Dla którego ma zostać zarejestrowany element równorzędny wywołujący w skojarzonym zakresie (globalnym, lokalnym i połączonym lokalnie).</param>
        <param name="type">Typ rejestracji do wykonania.  Aplikacja może zostać zarejestrowana tylko dla elementu równorzędnego wywołującego lub dla wszystkich elementów równorzędnych korzystających z komputera.</param>
        <summary>Rejestruje określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> dla sesji współpracy z wywołującym elementem równorzędnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołujący element równorzędny jest wymagany do zalogowania się do infrastruktury współpracy równorzędnej przy użyciu <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> metody przed wywołaniem tej metody.  
  
 Dostęp do tej metody wymaga <xref:System.Security.Permissions.PermissionState>. <xref:System.Security.Permissions.PermissionState.Unrestricted> Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób rejestrowania aplikacji w infrastrukturze współpracy:  
  
 [!code-csharp[NCLPNRPContacts#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> -Właściwość <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> obiektu przeniesiona do <paramref name="application" /> jest<see langword="null." />  
  
-Udostępnione wystąpienie aplikacji równorzędnej ma taką samą globalnie unikatową <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> , jak aplikacja, która jest już zarejestrowana.  Istniejąca Rejestracja musi zostać wyrejestrowana, aby można było zarejestrować nową aplikację przy użyciu podanego identyfikatora.</exception>
        <exception cref="T:System.ArgumentNullException">Parametry <paramref name="application" /> <see langword="null" />i <paramref name="type" /> nie mogą być.  Należy określić oba parametry.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr typu nie jest ustawiony na znaną wartość w <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> wyliczeniu.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć operacji, dopóki obiekt wywołujący nie zaloguje się do infrastruktury. <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /></exception>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public static void SetObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberSignature Language="F#" Value="static member SetObject : System.Net.PeerToPeer.Collaboration.PeerObject -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject peerObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> Do rejestracji.</param>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> Rejestruje skojarzone z wywołującym elementem równorzędnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia odszukanie obiektu przez zdalne elementy równorzędne należące do zakresu, w którym obiekt został zarejestrowany. Jeśli obiekt był wcześniej zarejestrowany, ta metoda aktualizuje jego rejestrację. Jeśli zarejestrowany obiekt znajduje się poza zakresem, można go pobrać za pomocą <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A> metody.  
  
 Rozmiar części <xref:System.Net.PeerToPeer.Collaboration.PeerObject> danych musi być mniejszy lub równy 16 384 bajtów.  
  
 Dostęp do tej metody wymaga <xref:System.Security.Permissions.PermissionState>. <xref:System.Security.Permissions.PermissionState.Unrestricted> Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Obiekt jest już zarejestrowany</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />nie może być<see langword="null." />  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" />nie może być<see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć operacji. <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /></exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public static void SignIn (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignIn(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignIn(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="static member SignIn : System.Net.PeerToPeer.Collaboration.PeerScope -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn peerScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">Zakres używany przez element równorzędny do przyłączenia <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> do działania.</param>
        <summary>Podpisuje element równorzędny do infrastruktury współpracy z określonym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy wyświetlane nie muszą być unikatowe. Przed zaakceptowaniem zaproszenia do współpracy użytkownicy powinni zweryfikować tożsamość osoby przy użyciu nazwy wyświetlanej pocztą e-mail, telefonu lub osoby.  
  
 Ta funkcja podpisuje użytkowników w infrastrukturze współpracy.  
  
 Dostęp do tej metody wymaga <xref:System.Security.Permissions.PermissionState>. <xref:System.Security.Permissions.PermissionState.Unrestricted> Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób podpisywania użytkowników do infrastruktury współpracy.  
  
 [!code-csharp[NCLPNRPContacts#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="peerScope" />jest ustawiony na <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="peerScope" /> Parametr zawiera nieprawidłową wartość wyliczenia.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć operacji. <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignInScope">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerScope SignInScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.PeerToPeer.Collaboration.PeerScope SignInScope" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignInScope As PeerScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerScope SignInScope { System::Net::PeerToPeer::Collaboration::PeerScope get(); };" />
      <MemberSignature Language="F#" Value="member this.SignInScope : System.Net.PeerToPeer.Collaboration.PeerScope" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> do którego wywołujący element równorzędny może publikować informacje o obecności, możliwości i obiekt.</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />Obiekt, który określa zakres, w którym będzie uczestniczyć wywołujący element równorzędny. Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Host równorzędny lub aplikacja hosta może ograniczyć lub odróżnić udziały równorzędne w działaniach związanych ze współpracą przy użyciu oddzielnych zakresów.  
  
 Wywołujący element równorzędny powinien zbadać wartość zwracaną z tej metody, aby określić, jakie dalsze akcje mogą pomyślnie wykonać.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="static member SignOut : System.Net.PeerToPeer.Collaboration.PeerScope -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut peerScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">Wyliczenie zakresu określone przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />.</param>
        <summary>Podpisuje element równorzędny poza określonym zakresem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest operacją specyficzną dla aplikacji i wylogowywanie może mieć wpływ na inne aplikacje, które mogą być obecnie uruchomione. Jeśli użytkownik nie jest jeszcze zalogowany do określonego zakresu, wywołanie tej metody spowoduje, że nie jest to operacja.  
  
 Gdy użytkownik wyloguje się z osób blisko mnie, ich opublikowane informacje są usuwane z <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> zestawu obiektów punktu końcowego.  Obejmuje <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A> to i <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A>, oprócz wszelkich identyfikacji obiektów zarejestrowanych przez wywołujący element równorzędny do infrastruktury współpracy. Ponieważ te informacje są usuwane, nie są już dostępne dla zdalnych elementów równorzędnych ani hosta równorzędnego w celu współpracy. Z perspektywy <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> klasy inne udostępnianie tych samych informacji z zaufanymi kontaktami nie jest istotne. użycie <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> klasy nie ma wpływu na inne obiekty, w których te informacje były utrwalane, takie jak zdalny element równorzędny <xref:System.Net.PeerToPeer.Collaboration.ContactManager>obiekt. Podobnie usuwanie elementu równorzędnego z <xref:System.Net.PeerToPeer.Collaboration.ContactManager> usługi nie wpływa na jego obecność w aplikacji współpracy. Inne kontakty nadal mogą wyświetlać swoją obecność i współpracować z nią.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="peerScope" /> Parametr zawiera nieprawidłową wartość wyliczenia.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć operacji. <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" /></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt wywołania zwrotnego programu obsługi zdarzeń dla wszystkich programów obsługi zdarzeń.</summary>
        <value>Obiekt z <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> zaimplementowanym elementem, który będzie używany do synchronizacji wątków aplikacji.  
  
Wartość domyślna tej właściwości to <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterApplication">
      <MemberSignature Language="C#" Value="public static void UnregisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member UnregisterApplication : System.Net.PeerToPeer.Collaboration.PeerApplication * System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication (application, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> Do wyrejestrowania dla wywołującego elementu równorzędnego.</param>
        <param name="type">Typ rejestracji do wykonania dla elementu równorzędnego wywołującego lub dla wszystkich elementów równorzędnych, które istnieją na komputerze.</param>
        <summary>Wyrejestrowuje określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> z infrastruktury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyrejestrowanie powoduje <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> zatrzymanie wywołującego elementu równorzędnego do otrzymywania zaproszeń do współpracy. Jeśli wyrejestrowana aplikacja nie została wcześniej zarejestrowana, to nie jest.  
  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu. Ten stan jest tworzony po <xref:System.Net.PeerToPeer.Collaboration.Peer> rozpoczęciu sesji współpracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Globalnie unikatowa <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> dla określonej aplikacji nie istnieje lub jest pusta.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="application" /> lub<paramref name="type" /> jest ustawiony na<see langword="null." /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr nie jest ustawiony na znaną wartość w <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />. <paramref name="type" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć operacji. <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /></exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
  </Members>
</Type>
