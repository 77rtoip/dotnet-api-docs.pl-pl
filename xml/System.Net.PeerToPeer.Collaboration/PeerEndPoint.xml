<Type Name="PeerEndPoint" FullName="System.Net.PeerToPeer.Collaboration.PeerEndPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eeb6db235005d79555f8766c8b1517ade77f5963" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550734" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerEndPoint : IDisposable, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PeerEndPoint extends System.Object implements class System.IDisposable, class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerEndPoint&#xA;Implements IDisposable, IEquatable(Of PeerEndPoint), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerEndPoint : IDisposable, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerEndPoint ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerEndPoint = class&#xA;    interface IDisposable&#xA;    interface IEquatable&lt;PeerEndPoint&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje lokalizację <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, lub <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpienie określić konfigurację adresu sieciowego przez bieżące wystąpienie klasy opisujące <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> lub <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> w infrastrukturze współpracy Peer-to-Peer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementu równorzędnego "punktu końcowego" w tym artykule opisano lokalizacji obecności kontaktu — konfiguracji adresu sieciowego, opisujący obecnie dostępnego wystąpienia kontaktu w sieci równorzędnej współpracy. Pojedynczy kontakt mogą być dostępne w wielu punktach końcowych w sieci równorzędnej współpracy.  
  
 Element równorzędny obserwowanie kontaktu można badać wszelkie punkty końcowe skojarzone z tym kontaktem obecność określonych elementów równorzędnych, aplikacji lub aktualizacji obiektu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Generuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest dostępne w przypadku dewelopera zna już adres IP <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> chcą skontaktuj się z pomocą.  
  
 Przy użyciu tego konstruktora do generowania jawnego <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> wystąpienia ułatwia tworzenie <xref:System.Net.PeerToPeer.Collaboration.Peer> wystąpienia klasy, która z kolei może służyć do interakcji z węzłem równorzędnym identyfikowana na podstawie adresu IP przy użyciu infrastruktury współpracy elementów równorzędnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerEndPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerEndPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Generuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerEndPoint (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerEndPoint(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerEndPoint : System.Net.IPEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerEndPoint" Usage="new System.Net.PeerToPeer.Collaboration.PeerEndPoint endPoint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">Punkt końcowym skojarzony z węzłem równorzędnym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> klasy z punktem końcowym skojarzony elementów równorzędnych, zawartych w <see cref="T:System.Net.IPEndPoint" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerEndPoint (System.Net.IPEndPoint endPoint, string endPointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint endPoint, string endPointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endPoint As IPEndPoint, endPointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerEndPoint(System::Net::IPEndPoint ^ endPoint, System::String ^ endPointName);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerEndPoint : System.Net.IPEndPoint * string -&gt; System.Net.PeerToPeer.Collaboration.PeerEndPoint" Usage="new System.Net.PeerToPeer.Collaboration.PeerEndPoint (endPoint, endPointName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="endPointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endPoint">Punkt końcowym skojarzony z węzłem równorzędnym.</param>
        <param name="endPointName">Określa nazwę skojarzoną z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> klasy z punktem końcowym skojarzony elementów równorzędnych, zawartych w <see cref="T:System.Net.IPEndPoint" /> i określając ciąg <paramref name="endPointName" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endPoint" /> Argument określa <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="endPoint" /> Nie jest prawidłowy punkt końcowy IPv6.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerEndPoint (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerEndPoint(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerEndPoint : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerEndPoint" Usage="new System.Net.PeerToPeer.Collaboration.PeerEndPoint (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
        <param name="streamingContext">Miejsce docelowe serializacji skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
        <summary>Inicjuje nowy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia o skojarzonych parametrów wymaganych do serializacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia wszystkie zasoby wykorzystane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerEndPoint.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerEndPoint.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Ustaw <see langword="true" /> aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiektu i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint EndPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint EndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property EndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ EndPoint { System::Net::IPEndPoint ^ get(); void set(System::Net::IPEndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EndPoint : System.Net.IPEndPoint with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Net.IPEndPoint" /> zawierający adres IP skojarzony z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
        <value>Adres IP skojarzony z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć uszkodzenia stan wystąpienia, obiekt wywołujący nie należy zmieniać <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint%2A> wartość, gdy wystąpienie zostały pobrane z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> lub <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Określony <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> punktu końcowego nie jest prawidłowy punkt końcowy IPv6.</exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy zawartość <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiektu jest odpowiednikiem zawartości innego obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerEndPoint other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerEndPoint other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; bool" Usage="peerEndPoint.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Wystąpienie do testowania pod kątem równości.</param>
        <summary>Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> do określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> podane wystąpienie ma dopasowywania danych else <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">To <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerEndPoint.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Do testowania pod kątem równości.</param>
        <summary>Porównuje <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> do określonego <see cref="T:System.Object" />.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> jest taki sam jak określony obiekt wystąpienie else <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">Pierwszy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> do porównania.</param>
        <param name="objB">Drugi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> do porównania.</param>
        <summary>Określa, czy określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiekty są traktowane jako równe.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia zapewniane ma dopasowywania danych else <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerEndPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
        <returns>32-bitowy podpisane liczby całkowitej wartość skrótu użyty do porównania wystąpień tego typu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerEndPoint.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="context">Lokalizacja docelowa dla serializacji.</param>
        <summary>Wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> wystąpienie klasy przy użyciu danych wymaganych do zserializowania określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> wystąpienia. Typ pochodny musi wywołać typu podstawowego <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> metody.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.String" /> reprezentujący nazwę wyświetlaną dla <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
        <value>
          <see cref="T:System.String" /> reprezentujący nazwę wyświetlaną <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć uszkodzenia stan wystąpienia, obiekt wywołujący nie należy zmieniać <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint%2A> wartość, gdy wystąpienie zostały pobrane z <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> lub <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="NameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ NameChanged;" />
      <MemberSignature Language="F#" Value="member this.NameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.NameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sygnalizuje, gdy nazwa skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> obiekt zmiany.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnNameChanged">
      <MemberSignature Language="C#" Value="protected void OnNameChanged (System.Net.PeerToPeer.Collaboration.NameChangedEventArgs nameChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnNameChanged(class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs nameChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnNameChanged (nameChangedArgs As NameChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnNameChanged(System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^ nameChangedArgs);" />
      <MemberSignature Language="F#" Value="member this.OnNameChanged : System.Net.PeerToPeer.Collaboration.NameChangedEventArgs -&gt; unit" Usage="peerEndPoint.OnNameChanged nameChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameChangedArgs" Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="nameChangedArgs">Określa typ zmiany, która nastąpiła do <c>PeerName</c>.</param>
        <summary>Wywoływane, gdy nastąpi zmiana na <paramref name="PeerName" /> określonego przez <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wartość tej właściwości jest ustawiona, wszystkie zdarzenia, które nie są uruchamiane jako wynik operacji asynchronicznej ma skojarzonej obsługi zdarzeń wywołanie zwrotne na wątek, który utworzył konkretnym <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
        <value>Obiekt, który implementuje <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interfejsu i jest używany przez wystąpień tego typu synchronizacji programu obsługi zdarzeń w wątku, który go utworzył.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw wartość domyślna dla tej właściwości to `null`, wskazujący, że wszystkie procedury obsługi zdarzeń są nazywane w wątku puli wątków systemu.  
  
 Ta właściwość jest zwykle ustawiana na element interfejsu użytkownika takich jak <xref:System.Windows.Forms.Form> wystąpienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt wywołujący został usunięty.</exception>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="context">Lokalizacja docelowa dla serializacji.</param>
        <summary>Wypełnia bieżący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia z danych uzyskanych od źródła serializacji.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerEndPoint.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.String" /> reprezentujący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.String" /> reprezentujący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> Obiekt został usunięty.</exception>
      </Docs>
    </Member>
  </Members>
</Type>