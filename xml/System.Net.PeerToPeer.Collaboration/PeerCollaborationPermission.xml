<Type Name="PeerCollaborationPermission" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2be51a4947dd4d6348cd61e6c053821db2c4073" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52370993" /></Metadata><TypeSignature Language="C#" Value="public sealed class PeerCollaborationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PeerCollaborationPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerCollaborationPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaborationPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PeerCollaborationPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa wartości, które zdefiniować lub są używane w <see cref="N:System.Net.PeerToPeer.Collaboration" /> obiekt uprawnień.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.Security.Permissions> zezwolić na wszystkie lokalne i aplikacje strefy Intranet na dostęp do usług współpracy, a nie uprawnienia dla aplikacji do strefy Internet. Innymi słowy Jeśli domyślne uprawnienia nie są zmienione, wszystkie połączenia lokalnego i lokalne aplikacje mają dostęp do usług współpracy Peer-To-Peer, ale aplikacje globalne nie mają dostępu.  
  
 Ta klasa nie jest derivable.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerCollaborationPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerCollaborationPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" Usage="new System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jedna z wartości w <see cref="T:System.Security.Permissions.PermissionState" /> wyliczenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. Początkowy <see cref="T:System.Security.Permissions.PermissionState" /> dla tego wystąpienia jest przekazywany, gdy Konstruktor jest wywoływany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienia tego typu albo nie mają dostępu do zasobów chronionych przez uprawnienia, lub mają oni nieograniczony pełny dostęp do tych zasobów.  
  
 Jeśli stan jest <xref:System.Security.Permissions.PermissionState.Unrestricted>, <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> wystąpienia przekazuje wszystkie żądania. Jeśli stan zawiera jakąkolwiek inną wartość, <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> wystąpienia awarii wszystkich potrzeb.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca kopię bieżącego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</summary>
        <returns>A <see cref="T:System.Object" /> zawierający kopię bieżącego wystąpienia <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopię <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> wystąpienia daje taki sam dostęp do zasobów, jak uprawnienie oryginalne.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="peerCollaborationPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</param>
        <summary>Reprezentuje model obiektów XML do kodowania obiektów zabezpieczeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa ma być uproszczone wykonania prostego modelu obiektów XML do użycia w ramach systemu zabezpieczeń, a nie do użytku jako ogólne model obiektów XML.  
  
 Klasa ta nie może być dziedziczona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">— Parametr nie jest elementem prawidłowego uprawnienia.  
  
Parametr nie zawiera prawidłowego typu lub klasy.  
  
Numer wersji parametr nie jest obsługiwane.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia do <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> z uprawnieniami bieżącego. Należy się tego samego typu jak bieżące uprawnienia.</param>
        <summary>Tworzy i zwraca uprawnienia, które jest częścią bieżącego wspólną <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> , a określony <paramref name="target" /> uprawnień.</summary>
        <returns>Nowe uprawnienia, które reprezentuje część wspólną bieżącego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> , a określony <paramref name="target" /> uprawnień. Jest to nowe uprawnienie <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic) jeżeli wspólną jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część wspólną dwóch uprawnień jest uprawnień, który opisuje zestaw operacji, które opisują one zarówno we wspólnych. Żądanie, który przekazuje zarówno pierwotnych uprawnień zostaną spełnione część wspólną.  
  
 Poniższe instrukcje muszą być `true` dla wszystkich implementacjach <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect%2A> metody. Reprezentują X i Y <xref:System.Security.IPermission> odwołania do obiektów, które nie są `null` odwołania (`Nothing` w języku Visual Basic).  
  
-   X.Intersect(X) zwraca wartość równa X.  
  
-   X.Intersect(Y) zwraca taką samą wartość jak Y.Intersect(X).  
  
-   X.Intersect ( `null` odwołania) zwraca `null` odwołania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametr docelowy nie jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic) i nie jest wystąpieniem tej samej klasy jako bieżące uprawnienia.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="peerCollaborationPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia, które ma zostać przetestowana dla relacji podzbioru. To uprawnienie musi być tego samego typu jak bieżące uprawnienia.</param>
        <summary>Określa, czy bieżący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> jest podzbiorem określonego <paramref name="target" /> uprawnień.</summary>
        <returns><see langword="True" /> Jeśli bieżący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> jest podzbiorem określone uprawnienie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżący <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienia określa zestaw operacji, który jest całkowicie zawarty w określone uprawnienie. Na przykład reprezentującą dostępu do uprawnienia "*C:\example.txt*"stanowią podzbiór zestawu uprawnień, która reprezentuje dostęp do "*C:\\*". Jeśli ta metoda zwraca `true`, bieżące uprawnienia reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.  
  
 Poniższe instrukcje muszą być `true` dla wszystkich implementacjach <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf%2A> metody. Reprezentują X, Y i Z <xref:System.Security.IPermission> obiekty, które nie są `null` odwołania (`Nothing` w języku Visual Basic).  
  
-   Zwraca X.IsSubsetOf(X) `true`.  
  
-   X.IsSubsetOf(Y) zwraca taką samą wartość jak Y.IsSubsetOf(X) tylko wtedy, gdy X i Y reprezentują ten sam zestaw uprawnień.  
  
-   Jeśli X.IsSubsetOf(Y) i Y.IsSubsetOf(Z) oba zwracają `true`, zwraca X.IsSubsetOf(Z) `true`.  
  
 Jeśli X reprezentuje pusty [interfejsu IPermission](https://go.microsoft.com/fwlink?LinkID=98303) obiektu ze stanem uprawnień None, a Y reprezentuje obiekt interfejsu IPermission, który jest `null` odwołania (`Nothing` w języku Visual Basic), zwraca X.IsSubsetOf(Y) `true`. Jeśli Z również jest pusty uprawnień, operacja X.Union(Z) ustawienia złożony. Zwraca także IsSubsetOf(Y) `true` ponieważ <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> dwa uprawnienia puste jest pusty uprawnień.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="peerCollaborationPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość określająca czy bieżący <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> jest nieograniczony.</summary>
        <returns><see langword="True" /> Jeśli bieżący uprawnienie jest nieograniczony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nieograniczone uprawnienia reprezentuje dostęp do wszystkich zasobów chronionych przez uprawnienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="peerCollaborationPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy XML kodowanie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> i bieżącego stanu.</summary>
        <returns>Kodowanie XML uprawnień, w tym wszelkich informacji o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastrukturę i nie są przeznaczone do użytku w aplikacjach.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z uprawnieniami bieżącego. Należy się tego samego typu jak bieżące uprawnienia.</param>
        <summary>Tworzy uprawnienia, które sumę bieżącą <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> , a określony <paramref name="target" /> uprawnień.</summary>
        <returns>Nowe uprawnienie, który reprezentuje <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> bieżącego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> i określone uprawnienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynik wywołania <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> uprawnienia, który reprezentuje wszystkie operacje, które są reprezentowane przez oba bieżącą <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> i określone uprawnienie. Wszelkie żądania spełniającą albo uprawnienie przekazuje ich Unii.  
  
 Poniższe instrukcje muszą być `true` dla wszystkich implementacji metody Unii. Reprezentują X i Y <xref:System.Security.IPermission> obiekty, które nie są `null` odwołania (`Nothing` w języku Visual Basic).  
  
-   X.Union(X) zwraca obiekt, który ma taką samą wartość jak X.  
  
-   X.Union(Y) zwraca obiekt, który ma taką samą wartość jak obiektu zwróconego przez Y.Union(X).  
  
-   X.Union ( `null` odwołania (`Nothing` w języku Visual Basic)) zwraca obiekt, który ma taką samą wartość jak X.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>