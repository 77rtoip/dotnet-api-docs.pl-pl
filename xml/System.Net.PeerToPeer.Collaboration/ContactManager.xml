<Type Name="ContactManager" FullName="System.Net.PeerToPeer.Collaboration.ContactManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c443e1a2ed8889342e0ec70c464462948185977d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69091554" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContactManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContactManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContactManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContactManager sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ContactManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiektów, która utrzymuje się w książce adresowej systemu Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa nie ma konstruktorów publicznych, ponieważ odwołanie do niego jest zwracane przez <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> klasę.  
  
 Książki adresowe skojarzone z <xref:System.Net.PeerToPeer.Collaboration.PeerContact> zarządzaniem obejmują te powiązane z elementem równorzędnym hosta i zdalnym elementem równorzędnym.  Każdy komputer może współpracować z innymi elementami równorzędnymi; gdy element równorzędny jest lokalny dla zdalnego elementu równorzędnego, ale nie do elementu równorzędnego hosta, można <xref:System.Net.PeerToPeer.Collaboration.ContactManager> go dodać do węzła równorzędnego hosta. Niektóre operacje na <xref:System.Net.PeerToPeer.Collaboration.ContactManager> klasie, takie jak <xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> i <xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A>, są skorelowane ze skojarzonymi operacjami, które są wykonywane w książce adresowej zdalnego elementu równorzędnego.  
  
 Element równorzędny hosta ma dostęp do tego magazynu trwałego, aby uzyskać <xref:System.Net.PeerToPeer.Collaboration.PeerContact> informacje, które mogą być skojarzone z aplikacjami, w których element równorzędny uczestniczy. Może identyfikować siebie jako użytkownika <xref:System.Net.PeerToPeer.Collaboration.ContactManager> magazynu trwałego na komputerze. <xref:System.Net.PeerToPeer.Collaboration.PeerApplication>  
  
   
  
## Examples  
 Poniższy przykładowy kod ilustruje sposób wyliczania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> i dodawania go <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do lokalnego <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
  </Docs>
  <Members>
    <Member MemberName="AddContact">
      <MemberSignature Language="C#" Value="public void AddContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.AddContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.AddContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact">Wystąpienie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> , które ma zostać <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />dodane do.</param>
        <summary>Dodaje określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> do lokalnego elementu równorzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
   
  
## Examples  
 Poniższy przykładowy kod ilustruje sposób wyliczania <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> i dodawania go <xref:System.Net.PeerToPeer.Collaboration.PeerContact> do lokalnego <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Określony przez<paramref name="peerContact" /> już istnieje.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerContact" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Określony <paramref name="peerContact" /> został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-Określone przez <paramref name="peerContact" /> nie można odtworzyć z jego serializowanego formatu XML. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  
  
-Nie można dodać lokalnego elementu równorzędnego do <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> konstruowanego wystąpienia.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany zawsze, <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> gdy skojarzona <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> z elementem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> w został zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tylko aplikacje publikowane przez kontakty wywołującego elementu równorzędnego.  
  
 Przed podniesieniem tego zdarzenia bieżący użytkownik zdalnego elementu równorzędnego musi subskrybować zdarzenia współpracy zdalnego elementu równorzędnego. Subskrypcja jest realizowana za pośrednictwem <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metody.  
  
 To zdarzenie wymaga <xref:System.Security.Permissions.PermissionState> programu <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt wywołujący został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="CreateContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact CreateContact (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact CreateContact(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ CreateContact(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe);" />
      <MemberSignature Language="F#" Value="member this.CreateContact : System.Net.PeerToPeer.Collaboration.PeerNearMe -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="contactManager.CreateContact peerNearMe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Parameters>
      <Docs>
        <param name="peerNearMe">Do skojarzenia z nowym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpieniem. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /></param>
        <summary>Tworzy wystąpienie dla określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> obiektu. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></summary>
        <returns>Wystąpienie <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> dla określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerNearMe" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-Nie można skontaktować się z Menedżerem kontaktów <paramref name="peerNearMe" /> zdalnego elementu równorzędnego lub nie można go odczytać z osoby kontaktowej.  
  
<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> - Przesłanewystąpienieniema<paramref name="peerNearMe" /> ustawionych punktów końcowych.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactAsync">
      <MemberSignature Language="C#" Value="public void CreateContactAsync (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateContactAsync(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateContactAsync(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.CreateContactAsync : System.Net.PeerToPeer.Collaboration.PeerNearMe * obj -&gt; unit" Usage="contactManager.CreateContactAsync (peerNearMe, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNearMe">Do skojarzenia z nowym <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wystąpieniem. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /></param>
        <param name="userToken">Zdefiniowany <see cref="T:System.Object" /> przez użytkownika, który zawiera informacje <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> o operacji. Zostanie on przesłany do wywołania zwrotnego operacji asynchronicznej do identyfikacji.</param>
        <summary>Tworzy wystąpienie Contact dla określonego <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="userToken" />już istnieje i jest w użyciu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerNearMe" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> Obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-Określone <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> wystąpienie nie ma ustawionych punktów końcowych.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreateContactCompleted As EventHandler(Of CreateContactCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::CreateContactCompletedEventArgs ^&gt; ^ CreateContactCompleted;" />
      <MemberSignature Language="F#" Value="member this.CreateContactCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; " Usage="member this.CreateContactCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany za każdym <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> razem, gdy metoda została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane, <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A> gdy metoda została ukończona. Jest również zgłaszane, <xref:System.Net.PeerToPeer.Collaboration.ContactManager> Jeśli operacja kończy się błędem lub została anulowana.  
  
 To zdarzenie wymaga <xref:System.Security.Permissions.PermissionState> programu <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt wywołujący został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteContact">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Usuwa lub <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> z lokalnegoelementurównorzędnego.<see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.DeleteContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.DeleteContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Do usunięcia <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />z.</param>
        <summary>Usuwa określony <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> z lokalnego elementu równorzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób usuwania <xref:System.Net.PeerToPeer.Collaboration.PeerContact> z lokalnego: <xref:System.Net.PeerToPeer.Collaboration.ContactManager>  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerContact" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.DeleteContact : System.Net.PeerToPeer.PeerName -&gt; unit" Usage="contactManager.DeleteContact peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">Skojarzona z elementem do usunięcia z <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /></param>
        <summary>Usuwa skojarzenie z określonym <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> z <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> lokalnego elementu równorzędnego. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób usuwania <xref:System.Net.PeerToPeer.Collaboration.PeerContact> z lokalnego: <xref:System.Net.PeerToPeer.Collaboration.ContactManager>  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można znaleźć <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />skojarzonegoz nim w Menedżerze kontaktów. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> wcześniej wywołany i nie można go użyć do przyszłych operacji.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> operacji.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contactManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> obiekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact GetContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact GetContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ GetContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.GetContact : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="contactManager.GetContact peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">Skojarzona z elementem do pobrania. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /></param>
        <summary>Zwraca obiekt dla określonego <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />elementu. <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /></summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />skojarzone z podaną <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-Nie znaleziono kontaktu w <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.  
  
-Nie można uzyskać kontaktu dla podanego <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />elementu.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="GetContacts">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContacts () As PeerContactCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContactCollection ^ GetContacts();" />
      <MemberSignature Language="F#" Value="member this.GetContacts : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerContactCollection" Usage="contactManager.GetContacts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContactCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca element <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> zawierający wszystkie kontakty <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> w ramach zdalnego elementu równorzędnego.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />zawiera wszystkie kontakty w ramach <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> zdalnego elementu równorzędnego.  
  
Jeśli Menedżer kontaktów jest pusty, zostanie zwrócona kolekcja o rozmiarze zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób pobierania <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> reprezentujących kontakty zawarte w lokalnym: <xref:System.Net.PeerToPeer.Collaboration.ContactManager>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Zwrócono nieprawidłową wartość, gdy ta metoda próbuje wyliczyć <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> a w tej kolekcji kontaktów równorzędnych.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="LocalContact">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact LocalContact { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerContact LocalContact" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LocalContact As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerContact ^ LocalContact { System::Net::PeerToPeer::Collaboration::PeerContact ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalContact : System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Pobiera reprezentuje lokalnego elementu równorzędnego.</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Wystąpienie reprezentujące lokalny element równorzędny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie określona, wartość domyślna tej właściwości `null`to.  
  
 Użycie tej właściwości wymaga <xref:System.Security.Permissions.PermissionState>. <xref:System.Security.Permissions.PermissionState.Unrestricted>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="NameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ NameChanged;" />
      <MemberSignature Language="F#" Value="member this.NameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.NameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany zawsze, <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> gdy skojarzona <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> z elementem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> w został zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Skojarzone wywołanie zwrotne zawiera odwołanie do nowego <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>elementu.  
  
 To zdarzenie wymaga <xref:System.Security.Permissions.PermissionState> programu <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt wywołujący został usunięty.</exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany za każdym razem, gdy obiekt wewnątrz zarejestrowanych <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> obiektów kontaktu został zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed podniesieniem tego zdarzenia bieżący użytkownik zdalnego elementu równorzędnego musi subskrybować zdarzenia współpracy elementu równorzędnego hosta. Subskrypcja jest realizowana za pośrednictwem <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metod PeerContact.  
  
 To zdarzenie wymaga <xref:System.Security.Permissions.PermissionState> programu <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> Obiekt został usunięty.</exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany zawsze, gdy stan obecności elementu <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> w został zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed podniesieniem tego zdarzenia bieżący użytkownik zdalnego elementu równorzędnego musi subskrybować zdarzenia współpracy elementu równorzędnego hosta. Subskrypcja jest realizowana za pośrednictwem <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metody.  
  
 To zdarzenie wymaga <xref:System.Security.Permissions.PermissionState> programu <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Obiekt został usunięty.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SubscriptionListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscriptionListChanged As EventHandler(Of SubscriptionListChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscriptionListChangedEventArgs ^&gt; ^ SubscriptionListChanged;" />
      <MemberSignature Language="F#" Value="member this.SubscriptionListChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; " Usage="member this.SubscriptionListChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany, gdy Lista subskrybowanych kontaktów zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ze względu na to, że subskrypcje są na użytkownika, a nie na proces lub na domenę aplikacji, inna aplikacja działająca na hoście może również spowodować podniesienie tego zdarzenia.  
  
 To zdarzenie wymaga <xref:System.Security.Permissions.PermissionState> programu <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy ta wartość właściwości jest ustawiona, wszystkie zdarzenia niewyzwalane w wyniku operacji asynchronicznej będą miały skojarzone programy obsługi zdarzeń o nazwie z powrotem w wątku, który utworzył określony <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
        <value>Obiekt, który implementuje <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interfejs i jest używany przez wystąpienia tego typu do synchronizacji programu obsługi zdarzeń w wątku, który go utworzył.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ustawiona wartość tej właściwości `null`wskazuje, że wszystkie programy obsługi zdarzeń są wywoływane w wątku puli wątków systemowych.  
  
 Ta właściwość jest zwykle ustawiona na element interfejsu użytkownika, taki jak <xref:System.Windows.Forms.Form> wystąpienie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt wywołujący został usunięty.</exception>
        <altmember cref="N:System.Windows.Forms" />
      </Docs>
    </Member>
    <Member MemberName="UpdateContact">
      <MemberSignature Language="C#" Value="public void UpdateContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.UpdateContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.UpdateContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> Do zaktualizowania.</param>
        <summary>Aktualizuje dane skojarzone z <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wymaga <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.Unrestricted>elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />nie znaleziono w <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerContact" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> obiekt został usunięty.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można ukończyć <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> operacji.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
  </Members>
</Type>
