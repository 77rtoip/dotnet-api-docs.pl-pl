<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1a87892d6931450c1a1f82402af9d73dfe93b57" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66817944" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e4ef-101"><see langword="FileSystem" /> Modułu zawiera procedury, które są używane do wykonywania operacji pliku, katalogu lub folderu i systemu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span></span> <span data-ttu-id="1e4ef-102"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż przy użyciu <see langword="FileSystem" /> modułu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span></span> <span data-ttu-id="1e4ef-103">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-104">Ten moduł obsługuje słowa kluczowe języka Visual Basic i elementy członkowskie biblioteki wykonawczej, uzyskujących dostęp do plików i folderów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-105">W tym przykładzie użyto `GetAttr` funkcję, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/directories-and-files-summary.md"><span data-ttu-id="1e4ef-106">Katalogi i pliki</span><span class="sxs-lookup"><span data-stu-id="1e4ef-106">Directories and Files Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/input-and-output-summary.md"><span data-ttu-id="1e4ef-107">Wejście i wyjście — Podsumowanie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-107">Input and Output Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="1e4ef-108">Słowa kluczowe (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="1e4ef-109">Elementy członkowskie biblioteki wykonawczej języka Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member ChDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="1e4ef-110">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-110">Required.</span></span> <span data-ttu-id="1e4ef-111">Wyrażenie ciągu, który identyfikuje, które katalogu lub folderu staje się nowego domyślnego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-111">A string expression that identifies which directory or folder becomes the new default directory or folder.</span></span> <span data-ttu-id="1e4ef-112"><paramref name="Path" /> może zawierać dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-112"><paramref name="Path" /> may include the drive.</span></span> <span data-ttu-id="1e4ef-113">Jeśli dysk nie zostanie określony, <see langword="ChDir" /> zmienia domyślnego katalogu lub folderu na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-113">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-114">Zmienia bieżącego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-114">Changes the current directory or folder.</span></span> <span data-ttu-id="1e4ef-115"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="ChDir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-115">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span></span> <span data-ttu-id="1e4ef-116">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-116">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-117">`ChDir` Funkcji zmienia domyślnego katalogu, ale nie dysk domyślny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-117">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="1e4ef-118">Na przykład jeśli domyślnym dysku C, następująca instrukcja zmienia domyślny katalog na dysku D, ale C pozostaje dysk domyślny:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-118">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="1e4ef-119">Można ustawić względne zmiany w katalogu jest przez wpisanie dwóch kropek w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-119">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-120">`ChDir` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-120">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="1e4ef-121">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-121">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-122">W tym przykładzie użyto `ChDir` funkcję, aby zmienić bieżącego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-122">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-123"><paramref name="Path" /> jest pusty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-123"><paramref name="Path" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-124">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-124">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md"><span data-ttu-id="1e4ef-125">Instrukcje: Analizowanie ścieżek pliku w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-125">How to: Parse File Paths in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories.md"><span data-ttu-id="1e4ef-126">Tworzenie, usuwanie i przenoszenie plików i katalogów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-126">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-127">Zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-127">Changes the current drive.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : char -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="1e4ef-128">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-128">Required.</span></span> <span data-ttu-id="1e4ef-129">Wyrażenie ciągu, który określa istniejącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-129">String expression that specifies an existing drive.</span></span> <span data-ttu-id="1e4ef-130">Jeśli podasz ciągiem o zerowej długości (""), nie zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-130">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="1e4ef-131">Jeśli <paramref name="Drive" /> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-131">If the <paramref name="Drive" /> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="1e4ef-132">Zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-132">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-133">`ChDrive` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-133">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="1e4ef-134">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-134">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-135">W tym przykładzie użyto `ChDrive` funkcję, aby zmienić bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-135">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="1e4ef-136">Funkcja zgłasza wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-136">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-137">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-137">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-138">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-138">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="1e4ef-139">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-139">Required.</span></span> <span data-ttu-id="1e4ef-140">Wyrażenie ciągu, który określa istniejącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-140">String expression that specifies an existing drive.</span></span> <span data-ttu-id="1e4ef-141">Jeśli podasz ciągiem o zerowej długości (""), nie zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-141">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="1e4ef-142">Jeśli <paramref name="Drive" /> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-142">If the <paramref name="Drive" /> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="1e4ef-143">Zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-143">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-144">`ChDrive` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-144">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="1e4ef-145">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-145">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-146">W tym przykładzie użyto `ChDrive` funkcję, aby zmienić bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-146">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="1e4ef-147">Funkcja zgłasza wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-147">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-148">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-148">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-149">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-149">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-150">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-150">Returns a string representing the current path.</span></span> <span data-ttu-id="1e4ef-151"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-151">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="1e4ef-152">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-152">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberSignature Language="F#" Value="static member CurDir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e4ef-153">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-153">Returns a string representing the current path.</span></span> <span data-ttu-id="1e4ef-154"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="1e4ef-155">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-156">Ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-156">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e4ef-157">W tym przykładzie użyto `CurDir` funkcja zwraca bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberSignature Language="F#" Value="static member CurDir : char -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="1e4ef-158">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-158">Optional.</span></span> <span data-ttu-id="1e4ef-159"><see langword="Char" /> wyrażenie określające istniejącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-159"><see langword="Char" /> expression that specifies an existing drive.</span></span> <span data-ttu-id="1e4ef-160">Jeśli dysk nie zostanie określony, lub jeśli <paramref name="Drive" /> jest ciągiem o zerowej długości (""), <see langword="CurDir" /> zwraca ścieżkę dla bieżącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-160">If no drive is specified, or if <paramref name="Drive" /> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-161">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-161">Returns a string representing the current path.</span></span> <span data-ttu-id="1e4ef-162"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="1e4ef-163">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-163">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-164">Ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-164">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e4ef-165">W tym przykładzie użyto `CurDir` funkcja zwraca bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-165">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-166">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-166">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="1e4ef-167"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-167">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="1e4ef-168">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-168">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberSignature Language="F#" Value="static member Dir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e4ef-169">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-169">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="1e4ef-170"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-170">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="1e4ef-171">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-171">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-172">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-172">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-173">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-173">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="1e4ef-174">`VbVolume` zwraca etykietę woluminu dysku, zamiast nazwy określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-174">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="1e4ef-175">Należy podać `PathName` przy pierwszym wywołaniu `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-175">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="1e4ef-176">Aby pobrać następny element, może wykonać kolejne wywołania `Dir` funkcję bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-176">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-177">By działała poprawnie, `Dir` funkcja wymaga, aby <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-177">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="1e4ef-178">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-178">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="1e4ef-179">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-179">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="1e4ef-180">Wartość</span><span class="sxs-lookup"><span data-stu-id="1e4ef-180">Value</span></span>|<span data-ttu-id="1e4ef-181">Stała</span><span class="sxs-lookup"><span data-stu-id="1e4ef-181">Constant</span></span>|<span data-ttu-id="1e4ef-182">Opis</span><span class="sxs-lookup"><span data-stu-id="1e4ef-182">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="1e4ef-183">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-183">Default.</span></span> <span data-ttu-id="1e4ef-184">Określa pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-184">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="1e4ef-185">Określa pliki tylko do odczytu, a także pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-185">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="1e4ef-186">Określa ukryte pliki i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-186">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="1e4ef-187">Określa pliki systemowe i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-187">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="1e4ef-188">Określa etykietę woluminu; Jeśli inne atrybut jest określony, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-188">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="1e4ef-189">Określa katalogi lub foldery i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-189">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="1e4ef-190">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-190">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="1e4ef-191">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-191">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-192">Te wyliczenia są określone przez język Visual Basic i mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-192">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-193">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją określone pliki i katalogi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-193">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string Pathname, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Dir(string Pathname, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (Pathname As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" Index="1" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1e4ef-194">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-194">Optional.</span></span> <span data-ttu-id="1e4ef-195">Wyrażenie ciągu, który określa nazwę pliku, nazwa katalogu lub folderu lub etykiety woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-195">A string expression that specifies a file name, directory or folder name, or drive volume label.</span></span> <span data-ttu-id="1e4ef-196">Ciąg o zerowej długości (<see langword="&quot;&quot;" />) jest zwracany, jeśli <paramref name="PathName" /> nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-196">A zero-length string (<see langword="&quot;&quot;" />) is returned if <paramref name="PathName" /> is not found.</span></span></param>
        <param name="Pathname"><span data-ttu-id="1e4ef-197">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-197">Optional.</span></span> <span data-ttu-id="1e4ef-198">Wyrażenie ciągu, który określa nazwę pliku, nazwa katalogu lub folderu lub etykiety woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-198">A string expression that specifies a file name, directory or folder name, or drive volume label.</span></span> <span data-ttu-id="1e4ef-199">Ciąg o zerowej długości (<see langword="&quot;&quot;" />) jest zwracany, jeśli <paramref name="Pathname" /> nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-199">A zero-length string (<see langword="&quot;&quot;" />) is returned if <paramref name="Pathname" /> is not found.</span></span></param>
        <param name="Attributes"><span data-ttu-id="1e4ef-200">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-200">Optional.</span></span> <span data-ttu-id="1e4ef-201">Wyrażenie wyliczenia lub liczbowe, którego wartość określa atrybuty pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-201">Enumeration or numeric expression whose value specifies file attributes.</span></span> <span data-ttu-id="1e4ef-202">W przypadku pominięcia <see langword="Dir" /> zwraca pliki dopasowane <paramref name="Pathname" /> , ale nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-202">If omitted, <see langword="Dir" /> returns files that match <paramref name="Pathname" /> but have no attributes.</span></span></param>
        <summary><span data-ttu-id="1e4ef-203">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-203">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="1e4ef-204"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-204">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="1e4ef-205">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-205">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-206">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-206">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-207">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-207">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="1e4ef-208">`VbVolume` zwraca etykietę woluminu dysku, zamiast nazwy określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-208">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="1e4ef-209">Należy podać `PathName` przy pierwszym wywołaniu `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-209">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="1e4ef-210">Aby pobrać następny element, może wykonać kolejne wywołania `Dir` funkcję bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-210">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-211">By działała poprawnie, `Dir` funkcja wymaga, aby <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-211">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="1e4ef-212">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-212">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="1e4ef-213">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-213">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="1e4ef-214">Wartość</span><span class="sxs-lookup"><span data-stu-id="1e4ef-214">Value</span></span>|<span data-ttu-id="1e4ef-215">Stała</span><span class="sxs-lookup"><span data-stu-id="1e4ef-215">Constant</span></span>|<span data-ttu-id="1e4ef-216">Opis</span><span class="sxs-lookup"><span data-stu-id="1e4ef-216">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="1e4ef-217">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-217">Default.</span></span> <span data-ttu-id="1e4ef-218">Określa pliki, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-218">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="1e4ef-219">Określa pliki tylko do odczytu, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-219">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="1e4ef-220">Określa pliki ukryte, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-220">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="1e4ef-221">Określa pliki systemowe, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-221">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="1e4ef-222">Określa etykietę woluminu; Jeśli inne atrybut jest określony, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-222">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="1e4ef-223">Określa katalogi lub foldery, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-223">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="1e4ef-224">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-224">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="1e4ef-225">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-225">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-226">Te wyliczenia są określone przez język Visual Basic i mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-226">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-227">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją określone pliki i katalogi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-227">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member EOF : int -&gt; bool" Usage="Microsoft.VisualBasic.FileSystem.EOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-228">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-228">Required.</span></span> <span data-ttu-id="1e4ef-229"><see langword="Integer" /> Zawierający Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-229">An <see langword="Integer" /> that contains any valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-230">Zwraca wartość typu Boolean <see langword="True" /> po otwarciu końca pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-230">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-231">Wartość logiczna <see langword="True" /> po otwarciu końca pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-231">A Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-232">Użyj `EOF` w celu uniknięcia błędów generowanych podczas próby pobrania danych wejściowych poza końcem pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-232">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="1e4ef-233">`EOF` Funkcja zwraca `False` dopóki nie zostanie osiągnięty koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-233">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="1e4ef-234">W przypadku plików otwartych do `Random` lub `Binary` dostęp, `EOF` zwraca `False` dopóki ostatnio wykonana `FileGet` funkcji nie może odczytać całego rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-234">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="1e4ef-235">W przypadku plików otwartych do `Binary` dostęp do próba odczytania pliku przy użyciu `Input` działać do momentu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-235">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="1e4ef-236">Użyj `LOF` i `Loc` funkcji zamiast `EOF` podczas odczytywania plików binarnych z `Input`, lub użyj `Get` przy użyciu `EOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-236">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="1e4ef-237">W przypadku plików otwartych do `Output`, `EOF` zawsze zwraca `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-237">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-238">W tym przykładzie użyto `EOF` funkcję, aby wykrywać koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-238">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="1e4ef-239">W tym przykładzie założono, że `Testfile` to plik tekstowy, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-239">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-240">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-240">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member FileAttr : int -&gt; Microsoft.VisualBasic.OpenMode" Usage="Microsoft.VisualBasic.FileSystem.FileAttr FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-241">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-241">Required.</span></span> <span data-ttu-id="1e4ef-242"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-242"><see langword="Integer" />.</span></span> <span data-ttu-id="1e4ef-243">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-243">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-244">Zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-244">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-245"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="FileAttr" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-245">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span></span> <span data-ttu-id="1e4ef-246">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-246">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-247">Następujące wartości wyliczenia wskazują tryb dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-247">The following enumeration values indicate the file access mode:</span></span> 
 <list type="table"><item><term> <span data-ttu-id="1e4ef-248">Wartość</span><span class="sxs-lookup"><span data-stu-id="1e4ef-248">Value</span></span> 
 </term><description> <span data-ttu-id="1e4ef-249">Tryb</span><span class="sxs-lookup"><span data-stu-id="1e4ef-249">Mode</span></span> 
 </description></item><item><term> <span data-ttu-id="1e4ef-250">1</span><span class="sxs-lookup"><span data-stu-id="1e4ef-250">1</span></span> 
 </term><description><see langword="OpenMode.Input" /></description></item><item><term> <span data-ttu-id="1e4ef-251">2</span><span class="sxs-lookup"><span data-stu-id="1e4ef-251">2</span></span> 
 </term><description><see langword="OpenMode.Output" /></description></item><item><term> <span data-ttu-id="1e4ef-252">4</span><span class="sxs-lookup"><span data-stu-id="1e4ef-252">4</span></span> 
 </term><description><see langword="OpenMode.Random" /></description></item><item><term> <span data-ttu-id="1e4ef-253">8</span><span class="sxs-lookup"><span data-stu-id="1e4ef-253">8</span></span> 
 </term><description><see langword="OpenMode.Append" /></description></item><item><term> <span data-ttu-id="1e4ef-254">32</span><span class="sxs-lookup"><span data-stu-id="1e4ef-254">32</span></span> 
 </term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-255">Ta funkcja zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą `FileOpen` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-255">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-256">W tym przykładzie użyto `FileAttr` funkcja zwraca tryb pliku otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-256">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-257">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-257">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberSignature Language="F#" Value="static member FileClose : int[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileClose FileNumbers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers"><span data-ttu-id="1e4ef-258">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-258">Optional.</span></span> <span data-ttu-id="1e4ef-259">Tablica parametrów 0 lub więcej kanałów zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-259">Parameter array of 0 or more channels to be closed.</span></span></param>
        <summary><span data-ttu-id="1e4ef-260">Zawiera wejścia/wyjścia (We/Wy) do pliku, który został otwarty przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-260">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-261"><see langword="My" /> zapewnia lepszą szybkość i wydajność operacji We/Wy na plikach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-261"><see langword="My" /> gives you better productivity and performance in file I/O operations.</span></span> <span data-ttu-id="1e4ef-262">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-262">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-263">`FileClose` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-263">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-264">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-264">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-265">Aby uzyskać więcej informacji, zobacz [jak: Odczytywanie tekstu z plików za pomocą StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md), [jak: Zapisywanie tekstu do plików za pomocą StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), i [instruktażu: Manipulowanie plikami i katalogami w Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-265">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md), [How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="1e4ef-266">Jeżeli pominięto `FileNumbers`, wszystkie aktywne pliki otwierane przez `FileOpen` funkcji są zamknięte.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-266">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="1e4ef-267">Podczas zamykania plików, które zostały otwarte dla `Output` lub `Append`, końcowego bufor wyjściowy jest zapisywany w buforze systemu operacyjnego dla tego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-267">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="1e4ef-268">Wszystkie ilość miejsca w buforze skojarzone z zamkniętej zwolnienia pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-268">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="1e4ef-269">Gdy `FileClose` funkcja jest wykonywana, skojarzenia plików za pomocą jego pliku numer kończy się.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-269">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-270">W tym przykładzie użyto `FileClose` funkcję, aby zamknąć plik otwarty `Input`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-270">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-271"><paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-271"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/end-statement.md"><span data-ttu-id="1e4ef-272">End — Instrukcja</span><span class="sxs-lookup"><span data-stu-id="1e4ef-272">End Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/stop-statement.md"><span data-ttu-id="1e4ef-273">Stop — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-273">Stop Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-274">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-274">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberSignature Language="F#" Value="static member FileCopy : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileCopy (Source, Destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="1e4ef-275">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-275">Required.</span></span> <span data-ttu-id="1e4ef-276">Wyrażenie ciągu, który określa nazwę pliku, który ma być skopiowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-276">A string expression that specifies the name of the file to be copied.</span></span> <span data-ttu-id="1e4ef-277"><paramref name="Source" /> może to obejmować katalogu lub folderu i dysk z plikiem źródłowym.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-277"><paramref name="Source" /> may include the directory or folder, and drive, of the source file.</span></span></param>
        <param name="Destination"><span data-ttu-id="1e4ef-278">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-278">Required.</span></span> <span data-ttu-id="1e4ef-279">Wyrażenie ciągu, który określa nazwę pliku docelowego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-279">A string expression that specifies the destination file name.</span></span> <span data-ttu-id="1e4ef-280"><paramref name="Destination" /> może to obejmować katalogu lub folderu i dysk pliku docelowego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-280"><paramref name="Destination" /> may include the directory or folder, and drive, of the destination file.</span></span></param>
        <summary><span data-ttu-id="1e4ef-281">Kopiuje plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-281">Copies a file.</span></span> <span data-ttu-id="1e4ef-282"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="FileCopy" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-282">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span></span> <span data-ttu-id="1e4ef-283">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-283">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-284">Jeśli spróbujesz użyć `FileCopy` działać na aktualnie otwartego pliku, wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-284">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="1e4ef-285">`FileCopy` wymaga pełnego zaufania do pracy na dysku lokalnym.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-285">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-286">W tym przykładzie użyto `FileCopy` funkcji do kopiowania plików do innego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-286">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="1e4ef-287">Dla celów tego przykładu załóżmy, że `SrcFile` jest plikiem, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-287">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-288"><paramref name="Source" /> lub <paramref name="Destination" /> jest nieprawidłowy lub nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-288"><paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-289">Plik jest już otwarty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-289">File is already open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-290">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-290">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md"><span data-ttu-id="1e4ef-291">Instrukcje: Tworzenie kopii pliku w innym katalogu w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-291">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md"><span data-ttu-id="1e4ef-292">Instrukcje: Tworzenie kopii pliku w tym samym katalogu w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-292">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md"><span data-ttu-id="1e4ef-293">Instrukcje: Kopiowanie katalogu do innego katalogu w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-293">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileDateTime : string -&gt; DateTime" Usage="Microsoft.VisualBasic.FileSystem.FileDateTime PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1e4ef-294">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-294">Required.</span></span> <span data-ttu-id="1e4ef-295">Wyrażenie ciągu, który określa nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-295">A string expression that specifies a file name.</span></span> <span data-ttu-id="1e4ef-296"><paramref name="PathName" /> może to obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-296"><paramref name="PathName" /> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-297">Zwraca <see langword="Date" /> wartość, która wskazuje datę i godzinę, plik został zapisany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-297">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span></span> <span data-ttu-id="1e4ef-298"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-298">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span></span> <span data-ttu-id="1e4ef-299">Aby uzyskać więcej informacji zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="1e4ef-299">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span></span></summary>
        <returns><span data-ttu-id="1e4ef-300"><see langword="Date" /> wartość, która wskazuje, daty i godziny pliku utworzenia lub ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-300"><see langword="Date" /> value that indicates the date and time a file was created or last modified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e4ef-301">W tym przykładzie użyto `FileDateTime` funkcję, aby określić datę i godzinę plik został utworzony lub Data ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-301">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="1e4ef-302">Format daty i godziny widocznej zależy od ustawień regionalnych systemu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-302">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-303"><paramref name="PathName" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-303"><paramref name="PathName" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-304">Plik docelowy nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-304">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-305">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-305">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-306">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-306">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-307"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-307">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-308">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-308">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-309">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-309">Required.</span></span> <span data-ttu-id="1e4ef-310">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-310">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-311">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-311">Required.</span></span> <span data-ttu-id="1e4ef-312">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-312">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-313">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-313">Optional.</span></span> <span data-ttu-id="1e4ef-314">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-314">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-315">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-315">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-316"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-316">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-317">Aby uzyskać więcej informacji zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span><span class="sxs-lookup"><span data-stu-id="1e4ef-317">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-318">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-318">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-319">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-319">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-320">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-320">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-321">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-321">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-322">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-322">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-323">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-323">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-324">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-324">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-325">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-325">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-326">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-326">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-327">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-327">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-328">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-328">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-329">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-329">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-330">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-330">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-331">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-331">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-332">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-332">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-333">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-333">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-334">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-334">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-335">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-335">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-336">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-336">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-337">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-337">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-338">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-338">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-339">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-339">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-340">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-340">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-341">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-341">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-342">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-342">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-343">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-343">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-344">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-344">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-345">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-345">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-346">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-346">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-347">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-347">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-348">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-348">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-349">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-349">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-350">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-350">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-351">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-351">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-352">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-352">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-353">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-353">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-354">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-354">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-355">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-355">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-356">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-356">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-357">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-357">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-358">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-358">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-359">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-359">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-360">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-360">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-361">Podczas odczytu z pliku za pomocą`FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-361">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-362"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-362"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-363">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-363">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-364">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-364">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-365">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-365">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-366">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-366">Required.</span></span> <span data-ttu-id="1e4ef-367">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-367">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-368">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-368">Required.</span></span> <span data-ttu-id="1e4ef-369">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-369">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-370">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-370">Optional.</span></span> <span data-ttu-id="1e4ef-371">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-371">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-372">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-372">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-373"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-373">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-374">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-374">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-375">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-375">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-376">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-376">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-377">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-377">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-378">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-378">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-379">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-379">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-380">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-380">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-381">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-381">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-382">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-382">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-383">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-383">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-384">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-384">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-385">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-385">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-386">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-386">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-387">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-387">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-388">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-388">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-389">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-389">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-390">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-390">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-391">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-391">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-392">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-392">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-393">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-393">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-394">Jeżeli nie zastosowano deskryptora.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-394">If the descriptor is not used.</span></span> <span data-ttu-id="1e4ef-395">Rozmiar i granice tablicy przekazane do, a następnie `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-395">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-396">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-396">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-397">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-397">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-398">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-398">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-399">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-399">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-400">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-400">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-401">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-401">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-402">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-402">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-403">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-403">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-404">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-404">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-405">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-405">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-406">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-406">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-407">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-407">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-408">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-408">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-409">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-409">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-410">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-410">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-411">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-411">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-412">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-412">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-413">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-413">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-414">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-414">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-415">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-415">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-416">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-416">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-417">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-417">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-418">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-418">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-419">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-419">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-420"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-420"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-421">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-421">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-422">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-422">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-423">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-423">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-424">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-424">Required.</span></span> <span data-ttu-id="1e4ef-425">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-425">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-426">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-426">Required.</span></span> <span data-ttu-id="1e4ef-427">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-427">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-428">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-428">Optional.</span></span> <span data-ttu-id="1e4ef-429">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-429">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-430">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-430">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-431"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-431">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-432">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-432">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-433">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-433">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-434">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-434">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-435">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-435">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-436">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-436">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-437">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-437">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-438">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-438">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-439">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-439">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-440">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-440">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-441">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-441">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-442">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-442">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-443">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-443">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-444">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-444">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-445">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-445">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-446">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-446">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-447">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-447">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-448">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-448">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-449">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-449">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-450">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-450">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-451">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-451">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-452">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-452">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-453">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-453">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-454">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-454">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-455">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-455">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-456">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-456">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-457">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-457">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-458">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-458">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-459">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-459">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-460">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-460">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-461">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-461">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-462">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-462">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-463">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-463">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-464">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-464">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-465">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-465">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-466">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-466">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-467">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-467">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-468">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-468">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-469">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-469">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-470">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-470">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-471">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-471">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-472">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-472">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-473">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-473">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-474">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-474">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-475">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-475">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-476">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-476">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-477"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-477"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-478">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-478">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-479">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-479">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-480">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-480">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-481">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-481">Required.</span></span> <span data-ttu-id="1e4ef-482">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-482">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-483">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-483">Required.</span></span> <span data-ttu-id="1e4ef-484">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-484">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-485">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-485">Optional.</span></span> <span data-ttu-id="1e4ef-486">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-486">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-487">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-487">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-488"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-488">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-489">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-489">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-490">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-490">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-491">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-491">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-492">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-492">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-493">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-493">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-494">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-494">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-495">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-495">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-496">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-496">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-497">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-497">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-498">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji`FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-498">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-499">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-499">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-500">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-500">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-501">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-501">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-502">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-502">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-503">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-503">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-504">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-504">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-505">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-505">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-506">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-506">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-507">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-507">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-508">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-508">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-509">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-509">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-510">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-510">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-511">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-511">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-512">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-512">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-513">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-513">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-514">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-514">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-515">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-515">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-516">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-516">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-517">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-517">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-518">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-518">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-519">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-519">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-520">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-520">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-521">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-521">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-522">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-522">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-523">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-523">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-524">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-524">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-525">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-525">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-526">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-526">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-527">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-527">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-528">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-528">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-529">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-529">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-530">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-530">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-531">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-531">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-532">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-532">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-533">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-533">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-534"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-534"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-535">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-535">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-536">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-536">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-537">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-537">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-538">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-538">Required.</span></span> <span data-ttu-id="1e4ef-539">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-539">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-540">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-540">Required.</span></span> <span data-ttu-id="1e4ef-541">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-541">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-542">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-542">Optional.</span></span> <span data-ttu-id="1e4ef-543">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-543">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-544">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-544">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-545"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-545">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-546">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-546">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-547">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-547">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-548">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-548">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-549">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-549">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-550">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-550">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-551">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-551">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-552">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-552">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-553">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-553">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-554">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-554">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-555">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-555">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-556">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-556">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-557">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-557">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-558">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-558">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-559">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-559">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-560">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-560">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-561">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-561">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-562">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-562">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-563">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-563">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-564">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-564">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-565">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-565">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-566">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-566">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-567">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-567">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-568">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-568">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-569">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-569">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-570">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-570">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-571">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-571">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-572">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-572">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-573">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-573">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-574">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-574">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-575">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-575">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-576">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-576">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-577">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-577">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-578">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-578">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-579">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-579">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-580">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-580">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-581">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-581">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-582">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-582">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-583">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-583">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-584">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-584">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-585">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-585">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-586">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-586">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-587">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-587">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-588">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-588">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-589">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-589">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-590">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-590">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-591"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-591"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-592">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-592">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-593">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-593">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-594">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-594">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-595">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-595">Required.</span></span> <span data-ttu-id="1e4ef-596">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-596">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-597">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-597">Required.</span></span> <span data-ttu-id="1e4ef-598">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-598">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-599">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-599">Optional.</span></span> <span data-ttu-id="1e4ef-600">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-600">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-601">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-601">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-602"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-602">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-603">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-603">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-604">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-604">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-605">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-605">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-606">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-606">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-607">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-607">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-608">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-608">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-609">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-609">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-610">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-610">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-611">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-611">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-612">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-612">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-613">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-613">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-614">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-614">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-615">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-615">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-616">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-616">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-617">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-617">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-618">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-618">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-619">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-619">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-620">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-620">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-621">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-621">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-622">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-622">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-623">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-623">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-624">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-624">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-625">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-625">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-626">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-626">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-627">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-627">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-628">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-628">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-629">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-629">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-630">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-630">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-631">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-631">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-632">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-632">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-633">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-633">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-634">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-634">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-635">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-635">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-636">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-636">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-637">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-637">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-638">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-638">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-639">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-639">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-640">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-640">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-641">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-641">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-642">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-642">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-643">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-643">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-644">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-644">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-645">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-645">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-646">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-646">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-647">Podczas odczytu z pliku za pomocą`FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-647">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-648"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-648"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-649">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-649">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-650">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-650">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-651">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-651">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-652">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-652">Required.</span></span> <span data-ttu-id="1e4ef-653">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-653">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-654">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-654">Required.</span></span> <span data-ttu-id="1e4ef-655">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-655">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-656">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-656">Optional.</span></span> <span data-ttu-id="1e4ef-657">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-657">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-658">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-658">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-659"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-659">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-660">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-660">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-661">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-661">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-662">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-662">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-663">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-663">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-664">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-664">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-665">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-665">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-666">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-666">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-667">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-667">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-668">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-668">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-669">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-669">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-670">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-670">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-671">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-671">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-672">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-672">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-673">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-673">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-674">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-674">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-675">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-675">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-676">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-676">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-677">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-677">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-678">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-678">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-679">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-679">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-680">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-680">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-681">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-681">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-682">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-682">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-683">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-683">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-684">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-684">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-685">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-685">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-686">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-686">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-687">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-687">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-688">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-688">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-689">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-689">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-690">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-690">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-691">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-691">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-692">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-692">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-693">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-693">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-694">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-694">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-695">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-695">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-696">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-696">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-697">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-697">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-698">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-698">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-699">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-699">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-700">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-700">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-701">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-701">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-702">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-702">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-703">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-703">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-704">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-704">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-705"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-705"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-706">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-706">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-707">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-707">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-708">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-708">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-709">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-709">Required.</span></span> <span data-ttu-id="1e4ef-710">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-710">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-711">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-711">Required.</span></span> <span data-ttu-id="1e4ef-712">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-712">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-713">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-713">Optional.</span></span> <span data-ttu-id="1e4ef-714">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-714">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-715">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-715">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-716"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-716">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-717">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-717">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-718">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-718">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-719">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-719">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-720">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-720">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-721">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-721">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-722">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-722">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-723">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-723">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-724">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-724">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-725">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-725">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-726">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-726">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-727">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-727">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-728">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-728">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-729">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-729">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-730">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-730">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-731">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-731">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-732">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-732">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-733">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-733">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-734">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-734">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-735">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-735">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-736">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-736">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-737">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-737">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-738">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-738">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-739">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-739">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-740">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-740">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-741">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-741">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-742">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-742">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-743">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-743">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-744">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-744">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-745">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-745">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-746">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-746">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-747">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-747">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-748">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-748">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-749">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-749">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-750">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-750">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-751">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-751">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-752">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-752">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-753">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-753">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-754">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-754">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-755">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-755">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-756">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-756">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-757">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-757">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-758">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-758">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-759">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-759">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-760">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-760">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-761">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-761">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-762"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-762"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-763">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-763">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-764">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-764">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-765">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-765">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-766">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-766">Required.</span></span> <span data-ttu-id="1e4ef-767">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-767">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-768">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-768">Required.</span></span> <span data-ttu-id="1e4ef-769">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-769">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-770">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-770">Optional.</span></span> <span data-ttu-id="1e4ef-771">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-771">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-772">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-772">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-773"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-773">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-774">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-774">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-775">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-775">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-776">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-776">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-777">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-777">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-778">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-778">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-779">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-779">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-780">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-780">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-781">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-781">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-782">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-782">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-783">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-783">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-784">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-784">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-785">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-785">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-786">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-786">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-787">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-787">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-788">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-788">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-789">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-789">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-790">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-790">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-791">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-791">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-792">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-792">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-793">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-793">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-794">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-794">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-795">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-795">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-796">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-796">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-797">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-797">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-798">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-798">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-799">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-799">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-800">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-800">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-801">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-801">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-802">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-802">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-803">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-803">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-804">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-804">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-805">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-805">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-806">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-806">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-807">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-807">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-808">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-808">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-809">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-809">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-810">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-810">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-811">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-811">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-812">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-812">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-813">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-813">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-814">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-814">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-815">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-815">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-816">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-816">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-817">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-817">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-818">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-818">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-819"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-819"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-820">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-820">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-821">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-821">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-822">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-822">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-823">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-823">Required.</span></span> <span data-ttu-id="1e4ef-824">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-824">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-825">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-825">Required.</span></span> <span data-ttu-id="1e4ef-826">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-826">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-827">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-827">Optional.</span></span> <span data-ttu-id="1e4ef-828">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-828">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-829">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-829">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-830"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-830">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-831">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-831">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-832">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-832">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-833">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-833">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-834">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-834">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-835">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-835">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-836">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-836">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-837">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-837">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-838">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-838">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-839">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-839">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-840">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-840">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-841">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-841">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-842">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-842">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-843">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-843">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-844">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-844">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-845">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-845">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-846">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-846">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-847">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-847">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-848">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-848">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-849">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-849">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-850">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-850">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-851">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-851">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-852">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-852">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-853">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-853">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-854">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-854">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-855">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-855">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-856">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-856">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-857">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-857">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-858">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-858">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-859">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-859">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-860">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-860">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-861">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-861">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-862">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-862">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-863">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-863">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-864">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-864">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-865">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-865">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-866">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-866">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-867">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-867">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-868">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-868">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-869">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-869">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-870">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-870">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-871">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-871">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-872">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-872">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-873">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-873">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-874">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-874">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-875">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-875">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-876"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-876"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-877">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-877">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-878">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-878">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-879">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-879">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-880">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-880">Required.</span></span> <span data-ttu-id="1e4ef-881">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-881">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-882">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-882">Required.</span></span> <span data-ttu-id="1e4ef-883">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-883">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-884">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-884">Optional.</span></span> <span data-ttu-id="1e4ef-885">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-885">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-886">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-886">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-887"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-887">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-888">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-888">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-889">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-889">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-890">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-890">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-891">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-891">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-892">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-892">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-893">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-893">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-894">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-894">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-895">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-895">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-896">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-896">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-897">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-897">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-898">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-898">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-899">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-899">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-900">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-900">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-901">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-901">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-902">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-902">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-903">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-903">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-904">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-904">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-905">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-905">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-906">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-906">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-907">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-907">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-908">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-908">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-909">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-909">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-910">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-910">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-911">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-911">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-912">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-912">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-913">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-913">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-914">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-914">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-915">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-915">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-916">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-916">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-917">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-917">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-918">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-918">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-919">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-919">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-920">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-920">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-921">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-921">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-922">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-922">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-923">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-923">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-924">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-924">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-925">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-925">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-926">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-926">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-927">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-927">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-928">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-928">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-929">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-929">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-930">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-930">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-931">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-931">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-932">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-932">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-933"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-933"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-934">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-934">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-935">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-935">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-936">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-936">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-937">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-937">Required.</span></span> <span data-ttu-id="1e4ef-938">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-938">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-939">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-939">Required.</span></span> <span data-ttu-id="1e4ef-940">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-940">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-941">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-941">Optional.</span></span> <span data-ttu-id="1e4ef-942">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-942">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1e4ef-943">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-943">Optional.</span></span> <span data-ttu-id="1e4ef-944">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-944">Applies only when writing a string.</span></span> <span data-ttu-id="1e4ef-945">Określa, czy należy napisać deskryptor dwubajtowy, który ma być ciąg, który opisuje długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-945">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="1e4ef-946">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-946">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1e4ef-947">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-947">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-948"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-948">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-949">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-949">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-950">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-950">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-951">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-951">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-952">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-952">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-953">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-953">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-954">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-954">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-955">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-955">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-956">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-956">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-957">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-957">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-958">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-958">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-959">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-959">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-960">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-960">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-961">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-961">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-962">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-962">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-963">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-963">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-964">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-964">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-965">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-965">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-966">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-966">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-967">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-967">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-968">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-968">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-969">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-969">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-970">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-970">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-971">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-971">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-972">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-972">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-973">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-973">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-974">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-974">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-975">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-975">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-976">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-976">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-977">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-977">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-978">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-978">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-979">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-979">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-980">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-980">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-981">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-981">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-982">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-982">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-983">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-983">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-984">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-984">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-985">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-985">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-986">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-986">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-987">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-987">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-988">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-988">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-989">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-989">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-990">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-990">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-991">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-991">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-992">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-992">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-993">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-993">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-994"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-994"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-995">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-995">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-996">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-996">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-997">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-997">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-998">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-998">Required.</span></span> <span data-ttu-id="1e4ef-999">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-999">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1000">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1000">Required.</span></span> <span data-ttu-id="1e4ef-1001">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1001">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1002">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1002">Optional.</span></span> <span data-ttu-id="1e4ef-1003">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1003">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="1e4ef-1004">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1004">Optional.</span></span> <span data-ttu-id="1e4ef-1005">Ma zastosowanie tylko wtedy, gdy pisania tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1005">Applies only when writing an array.</span></span> <span data-ttu-id="1e4ef-1006">Określa, czy tablica jest traktowane jako dynamiczne i czy konieczne jest deskryptora tablicy opisujących rozmiar i granice tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1006">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1e4ef-1007">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1007">Optional.</span></span> <span data-ttu-id="1e4ef-1008">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1008">Applies only when writing a string.</span></span> <span data-ttu-id="1e4ef-1009">Określa, czy należy napisać deskryptor dwubajtowy, który ma być ciąg, który opisuje długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1009">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="1e4ef-1010">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1010">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1011">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1011">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1e4ef-1012"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1012">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1e4ef-1013">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1013">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1014">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1014">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1015">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1015">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1e4ef-1016">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1016">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1017">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1017">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-1018">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1018">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-1019">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1019">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1020">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1020">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1021">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1021">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1022">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1022">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1023">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest dopełniana istniejącą zawartość buforu pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1023">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1024">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1024">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-1025">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1025">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1026">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1026">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1027">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1027">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-1028">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1028">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1029">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1029">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1e4ef-1030">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1030">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1031">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1031">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1e4ef-1032">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1032">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1e4ef-1033">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1033">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1e4ef-1034">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1034">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1035">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1035">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1036">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1036">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1037">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1037">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1e4ef-1038">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1038">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1e4ef-1039">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1039">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1e4ef-1040">200 bajtów w przypadku danych: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1040">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-1041">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1041">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1e4ef-1042">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1042">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-1043">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1043">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1044">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1044">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1045">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1045">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1e4ef-1046">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1046">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-1047">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1047">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1048">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1048">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1049">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1049">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1050">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1050">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1051">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1051">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1052">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1052">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1053">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1053">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1e4ef-1054">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1054">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1e4ef-1055">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1055">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1056">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1056">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1e4ef-1057">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1057">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1058"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1058"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1059">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1059">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-1060">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1060">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1061">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1061">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGetObject : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGetObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1062">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1062">Required.</span></span> <span data-ttu-id="1e4ef-1063">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1063">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1064">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1064">Required.</span></span> <span data-ttu-id="1e4ef-1065">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1065">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1066">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1066">Optional.</span></span> <span data-ttu-id="1e4ef-1067">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1067">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1068">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1068">Reads data from an open disk file into a variable.</span></span>  <span data-ttu-id="1e4ef-1069"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGetObject" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1069">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span></span> <span data-ttu-id="1e4ef-1070">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1070">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1071">`FileGetObject` Funkcja jest używana zamiast `FileGet` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` zwracany zamiast innego typu, takie jak `Integer`, `Long`, `Short`, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1071">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="1e4ef-1072">Jeśli zamierzasz zapisać `Variant` typu `FileGetObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1072">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="1e4ef-1073">W razie wątpliwości, jeśli używasz obiektu jako drugi parametr, zawsze zaleca się używanie `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1073">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="1e4ef-1074">`FileGetObject` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1074">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1075">Dane odczytane z `FileGetObject` są zwykle zapisywane z `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1075">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="1e4ef-1076">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1076">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1077">Jeżeli pominięto `RecordNumber`, `FileGetObject` odczytuje rekord lub bajt po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1077">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1078">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1078">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1079">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1079">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1080">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGetObject` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1080">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1081">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest dopełniana istniejącą zawartość buforu pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1081">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1082">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to dobry pomysł, aby mieć długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1082">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1e4ef-1083">Jeżeli zmienna wczytywana jest ciągiem, domyślnie `FileGetObject` odczytuje dwubajtowy deskryptor, zawierająca długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1083">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1084">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1084">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1085">Visual Basic 6.0 i starsze wersje obsługują ciągi o stałej długości i podczas odczytu pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1085">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1e4ef-1086">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1086">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1087">Jeśli wczytywana zmienna jest tablicą, długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1087">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1088">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1088">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1089">Jego długość jest równa 2 plus 8 razy liczba wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1089">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="1e4ef-1090">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, gdy tablica jest zapisywany na dysku:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1090">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="1e4ef-1091">218 bajtów zostało rozdzielonych w następujący sposób: 18 bajtów w przypadku deskryptora (2 + 8 \* 2), a 100 bajtów danych (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1091">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1e4ef-1092">`FileGetObject` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1092">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1093">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePutObject`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1093">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="1e4ef-1094">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów, w tym wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1094">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="1e4ef-1095"><xref:Microsoft.VisualBasic.VBFixedStringAttribute> Klasy mogą być stosowane do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1095">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1096">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1096">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1097">Do plików otwieranych w `Binary` trybie wszystkie `Random` reguły mają zastosowanie, z uwzględnieniem poniższych wyjątków:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1097">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="1e4ef-1098">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1098">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1099">`FileGetObject` odczytuje wszystkie zmienne z dysku w sposób ciągły, oznacza to, za pomocą żadnych uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1099">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1100">Dla tablicy innej niż tablica w strukturze `FileGetObject` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1100">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="1e4ef-1101">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1101">No descriptor is read.</span></span>  
  
 <span data-ttu-id="1e4ef-1102">`FileGetObject` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1102">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1103">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1103">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-1104">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1104">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-1105">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1105">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1106">Poniższy przykład odczytuje rekordu w pliku testu i następnie pobiera go.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1106">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-1107">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1107">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1108">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1108">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileLen : string -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.FileLen PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1e4ef-1109">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1109">Required.</span></span> <span data-ttu-id="1e4ef-1110">Wyrażenie ciągu, który określa plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1110">A string expression that specifies a file.</span></span> <span data-ttu-id="1e4ef-1111"><paramref name="PathName" /> może to obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1111"><paramref name="PathName" /> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1112">Zwraca wartość, która określa długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1112">Returns a value that specifies the length of a file in bytes.</span></span> <span data-ttu-id="1e4ef-1113"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileLen" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1113">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span></span> <span data-ttu-id="1e4ef-1114">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1114">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-1115">Długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1115">The length of a file in bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1116">Jeśli określony plik jest otwarty, kiedy `FileLen` funkcja jest wywoływana, wartość zwracana reprezentuje rozmiar pliku w czasie ostatniego otwarcia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1116">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-1117">Aby uzyskać bieżącą długość otwartego pliku, użyj `LOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1117">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1118">W tym przykładzie użyto `FileLen` funkcja zwraca długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1118">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="1e4ef-1119">Dla celów tego przykładu załóżmy, że `TestFile` jest plik, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1119">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-1120">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1120">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-1121">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1121">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberSignature Language="F#" Value="static member FileOpen : int * string * Microsoft.VisualBasic.OpenMode * Microsoft.VisualBasic.OpenAccess * Microsoft.VisualBasic.OpenShare * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileOpen (FileNumber, FileName, Mode, Access, Share, RecordLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1122">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1122">Required.</span></span> <span data-ttu-id="1e4ef-1123">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1123">Any valid file number.</span></span> <span data-ttu-id="1e4ef-1124">Użyj <see langword="FreeFile" /> funkcję, aby uzyskać najbliższej liczby plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1124">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span></span></param>
        <param name="FileName"><span data-ttu-id="1e4ef-1125">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1125">Required.</span></span> <span data-ttu-id="1e4ef-1126">Wyrażenie ciągu, który określa nazwę pliku - może zawierać katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1126">A string expression that specifies a file name - may include directory or folder, and drive.</span></span></param>
        <param name="Mode"><span data-ttu-id="1e4ef-1127">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1127">Required.</span></span> <span data-ttu-id="1e4ef-1128">Wyliczenie opisujące tryb pliku: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, lub <see langword="Random" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1128">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span></span> <span data-ttu-id="1e4ef-1129">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1129">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span></span></param>
        <param name="Access"><span data-ttu-id="1e4ef-1130">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1130">Optional.</span></span> <span data-ttu-id="1e4ef-1131">Wyliczenie opisujące operacje dozwolona dla otwartego pliku: <see langword="Read" />, <see langword="Write" />, lub <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1131">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span></span> <span data-ttu-id="1e4ef-1132">Wartość domyślna to <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1132">Defaults to <see langword="ReadWrite" />.</span></span> <span data-ttu-id="1e4ef-1133">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1133">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span></span></param>
        <param name="Share"><span data-ttu-id="1e4ef-1134">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1134">Optional.</span></span> <span data-ttu-id="1e4ef-1135">Wyliczenie opisujące operacje jest niedozwolony otwartego pliku przez inne procesy: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, i <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1135">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="1e4ef-1136">Wartość domyślna to <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1136">Defaults to <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="1e4ef-1137">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1137">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span></span></param>
        <param name="RecordLength"><span data-ttu-id="1e4ef-1138">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1138">Optional.</span></span> <span data-ttu-id="1e4ef-1139">Liczbę mniejszą lub równą 32 767 znaków (w bajtach).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1139">Number less than or equal to 32,767 (bytes).</span></span> <span data-ttu-id="1e4ef-1140">Dla plików otwartych do dostępu losowego ta wartość jest długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1140">For files opened for random access, this value is the record length.</span></span> <span data-ttu-id="1e4ef-1141">Dla kolejnych plików ta wartość jest liczbą znaków buforowane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1141">For sequential files, this value is the number of characters buffered.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1142">Otwiera plik dla danych wejściowych lub wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1142">Opens a file for input or output.</span></span> <span data-ttu-id="1e4ef-1143"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1143">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span></span> <span data-ttu-id="1e4ef-1144">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1144">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1145">`FileOpen` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1145">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-1146">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1146">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-1147">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1147">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-1148">Przed wykonaniem wszelkich operacji We/Wy na nim, należy otworzyć plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1148">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="1e4ef-1149">`FileOpen` przydziela bufor dla operacji We/Wy do pliku i określa tryb dostępu do używania z buforu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1149">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-1150">Podczas zapisywania do pliku, aplikacja może być konieczne utworzenie pliku, jeśli plik, który próbuje zapisać nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1150">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="1e4ef-1151">Aby to zrobić, musi ona uprawnienia dla katalogu, w którym ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1151">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="1e4ef-1152">Jednakże jeżeli plik określony przez `FileName` istnieje w zakresie aplikacji `Write` uprawnienia tylko do sam plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1152">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="1e4ef-1153">Wszędzie tam, gdzie to możliwe, aby pomóc zwiększyć bezpieczeństwo, tworzyć plik podczas wdrożenia i przyznać `Write` uprawnienie do tego pliku tylko, a nie do całego katalogu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1153">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="1e4ef-1154">Aby zwiększyć bezpieczeństwo, zapisywać dane do katalogów użytkownika zamiast do katalogu głównego lub katalogu Program Files.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1154">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="1e4ef-1155">Kanał, aby otworzyć znajduje się za pomocą `FreeFile()` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1155">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-1156">`FileOpen` Funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1156">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="1e4ef-1157">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1157">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1158">Ten przykład ilustruje różne przypadki użycia `FileOpen` funkcję, aby włączyć dane wejściowe i wyjściowe do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1158">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="1e4ef-1159">Poniższy kod zostanie otwarty plik `TestFile` w `Input` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1159">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="1e4ef-1160">W tym przykładzie otwiera plik w `Binary` tryb tylko operacje zapisu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1160">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="1e4ef-1161">W poniższym przykładzie otwierany plik w `Random` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1161">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="1e4ef-1162">Ten plik zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1162">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="1e4ef-1163">Ten przykład kodu otwiera plik w `Output` tryb; wszelkie może procesu Odczyt lub zapis do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1163">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="1e4ef-1164">Ten przykład kodu otwiera plik w `Binary` trybie do odczytu; inne procesy nie można odczytać pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1164">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1165">Długość rekordu jest ujemna (i nie jest równa -1).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1165">Record length is negative (and not equal to -1).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1166"><paramref name="FileName" /> jest jeszcze otwarty, lub <paramref name="FileName" /> jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1166"><paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-1167">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1167">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1168">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1168">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-1169">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1169">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1170"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1170">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1171">F, aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1171">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * bool * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1172">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1172">Required.</span></span> <span data-ttu-id="1e4ef-1173">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1173">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1174">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1174">Required.</span></span> <span data-ttu-id="1e4ef-1175">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1175">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1176">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1176">Optional.</span></span> <span data-ttu-id="1e4ef-1177">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1177">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1178">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1178">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1179"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1179">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1180">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1180">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1181">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1181">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1182">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1182">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1183">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1183">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1184">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1184">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1185">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1185">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1186">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1186">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1187">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1187">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1188">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1188">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1189">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1189">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1190">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1190">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1191">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1191">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1192">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1192">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1193">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1193">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1194">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1194">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1195">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1195">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1196">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1196">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1197">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1197">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1198">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1198">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1199">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1199">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1200">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1200">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1201">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1201">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1202">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1202">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1203">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1203">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1204">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1204">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1205">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1205">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1206">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1206">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1207">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1207">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1208">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1208">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1209">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1209">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1210">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1210">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1211">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1211">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1212">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1212">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1213">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1213">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1214">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1214">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1215">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1215">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1216">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1216">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1217">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1217">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1218">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1218">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1219">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1219">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1220">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1220">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1221">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1221">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1222">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1222">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1223">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1223">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1224">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1224">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1225">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1225">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1226">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1226">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1227">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1227">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1228">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1228">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1229"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1229"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1230">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1230">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1231">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1231">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * byte * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1232">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1232">Required.</span></span> <span data-ttu-id="1e4ef-1233">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1233">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1234">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1234">Required.</span></span> <span data-ttu-id="1e4ef-1235">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1235">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1236">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1236">Optional.</span></span> <span data-ttu-id="1e4ef-1237">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1237">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1238">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1238">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1239"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1239">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1240">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1240">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1241">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1241">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1242">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1242">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1243">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1243">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1244">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1244">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1245">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1245">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1246">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1246">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1247">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1247">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1248">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1248">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1249">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1249">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1250">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1250">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1251">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1251">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1252">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1252">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1253">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1253">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1254">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1254">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1255">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1255">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1256">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1256">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1257">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1257">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1258">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1258">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1259">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1259">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1260">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1260">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1261">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1261">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1262">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1262">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1263">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1263">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1264">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1264">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1265">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1265">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1266">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1266">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1267">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1267">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1268">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1268">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1269">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1269">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1270">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1270">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1271">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1271">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1272">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1272">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1273">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1273">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1274">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1274">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1275">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1275">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1276">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1276">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1277">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1277">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1278">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1278">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1279">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1279">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1280">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1280">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1281">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1281">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1282">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1282">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1283">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1283">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1284">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1284">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1285">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1285">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1286">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1286">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1287">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1287">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1288">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1288">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1289"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1289"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1290">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1290">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1291">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1291">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * char * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1292">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1292">Required.</span></span> <span data-ttu-id="1e4ef-1293">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1293">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1294">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1294">Required.</span></span> <span data-ttu-id="1e4ef-1295">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1295">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1296">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1296">Optional.</span></span> <span data-ttu-id="1e4ef-1297">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1297">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1298">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1298">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1299"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1299">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1300">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1300">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1301">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1301">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1302">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1302">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1303">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1303">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1304">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1304">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1305">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1305">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1306">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1306">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1307">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1307">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1308">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1308">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1309">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1309">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1310">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1310">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1311">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1311">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1312">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1312">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1313">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1313">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1314">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1314">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1315">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1315">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1316">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1316">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1317">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1317">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1318">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1318">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1319">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1319">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1320">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1320">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1321">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1321">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1322">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1322">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1323">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1323">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1324">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1324">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1325">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1325">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1326">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1326">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1327">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1327">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1328">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1328">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1329">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1329">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1330">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1330">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1331">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1331">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1332">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1332">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1333">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1333">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1334">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1334">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1335">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1335">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1336">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1336">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1337">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1337">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1338">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1338">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1339">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1339">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1340">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1340">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1341">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1341">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1342">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1342">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1343">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1343">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1344">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1344">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1345">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1345">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1346">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1346">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1347">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1347">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1348">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1348">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1349"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1349"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1350">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1350">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1351">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1351">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * DateTime * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1352">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1352">Required.</span></span> <span data-ttu-id="1e4ef-1353">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1353">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1354">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1354">Required.</span></span> <span data-ttu-id="1e4ef-1355">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1355">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1356">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1356">Optional.</span></span> <span data-ttu-id="1e4ef-1357">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1357">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1358">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1358">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1359"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1359">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1360">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1360">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1361">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1361">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1362">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1362">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1363">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1363">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1364">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1364">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1365">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1365">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1366">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1366">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1367">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1367">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1368">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1368">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1369">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1369">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1370">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1370">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1371">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1371">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1372">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1372">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1373">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1373">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1374">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1374">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1375">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1375">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1376">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1376">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1377">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1377">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1378">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1378">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1379">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1379">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1380">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1380">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1381">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1381">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1382">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1382">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1383">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1383">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1384">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1384">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1385">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1385">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1386">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1386">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1387">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1387">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1388">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1388">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1389">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1389">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1390">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1390">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1391">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1391">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1392">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1392">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1393">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1393">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1394">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1394">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1395">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1395">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1396">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1396">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1397">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1397">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1398">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1398">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1399">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1399">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1400">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1400">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1401">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1401">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1402">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1402">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1403">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1403">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1404">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1404">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1405">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1405">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1406">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1406">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1407">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1407">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1408">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1408">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1409"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1409"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1410">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1410">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1411">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1411">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * decimal * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1412">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1412">Required.</span></span> <span data-ttu-id="1e4ef-1413">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1413">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1414">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1414">Required.</span></span> <span data-ttu-id="1e4ef-1415">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1415">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1416">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1416">Optional.</span></span> <span data-ttu-id="1e4ef-1417">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1417">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1418">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1418">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1419"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1419">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1420">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1420">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1421">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1421">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1422">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1422">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1423">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1423">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1424">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1424">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1425">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1425">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1426">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1426">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1427">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1427">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1428">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1428">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1429">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1429">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1430">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1430">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1431">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1431">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1432">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1432">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1433">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1433">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1434">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1434">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1435">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1435">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1436">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1436">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1437">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1437">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1438">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1438">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1439">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1439">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1440">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1440">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1441">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1441">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1442">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1442">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1443">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1443">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1444">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1444">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1445">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1445">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1446">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1446">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1447">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1447">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1448">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1448">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1449">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1449">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1450">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1450">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1451">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1451">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1452">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1452">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1453">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1453">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1454">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1454">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1455">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1455">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1456">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1456">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1457">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1457">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1458">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1458">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1459">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1459">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1460">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1460">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1461">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1461">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1462">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1462">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1463">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1463">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1464">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1464">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1465">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1465">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1466">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1466">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1467">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1467">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1468">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1468">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1469"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1469"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1470">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1470">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1471">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1471">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * double * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1472">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1472">Required.</span></span> <span data-ttu-id="1e4ef-1473">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1473">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1474">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1474">Required.</span></span> <span data-ttu-id="1e4ef-1475">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1475">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1476">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1476">Optional.</span></span> <span data-ttu-id="1e4ef-1477">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1477">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1478">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1478">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1479"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1479">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1480">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1480">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1481">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1481">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1482">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1482">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1483">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1483">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1484">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1484">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1485">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1485">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1486">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1486">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1487">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1487">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1488">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1488">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1489">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1489">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1490">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1490">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1491">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1491">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1492">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1492">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1493">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1493">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1494">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1494">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1495">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1495">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1496">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1496">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1497">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1497">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1498">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1498">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1499">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1499">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1500">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1500">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1501">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1501">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1502">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1502">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1503">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1503">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1504">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1504">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1505">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1505">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1506">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1506">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1507">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1507">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1508">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1508">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1509">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1509">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1510">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1510">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1511">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1511">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1512">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1512">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1513">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1513">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1514">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1514">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1515">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1515">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1516">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1516">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1517">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1517">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1518">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1518">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1519">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1519">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1520">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1520">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1521">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1521">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1522">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1522">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1523">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1523">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1524">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1524">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1525">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1525">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1526">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1526">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1527">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1527">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1528">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1528">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1529"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1529"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1530">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1530">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1531">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1531">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int16 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1532">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1532">Required.</span></span> <span data-ttu-id="1e4ef-1533">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1533">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1534">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1534">Required.</span></span> <span data-ttu-id="1e4ef-1535">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1535">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1536">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1536">Optional.</span></span> <span data-ttu-id="1e4ef-1537">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1537">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1538">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1538">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1539"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1539">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1540">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1540">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1541">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1541">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1542">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1542">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1543">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1543">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1544">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1544">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1545">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1545">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1546">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1546">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1547">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1547">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1548">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1548">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1549">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1549">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1550">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1550">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1551">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1551">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1552">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1552">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1553">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1553">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1554">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1554">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1555">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1555">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1556">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1556">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1557">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1557">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1558">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1558">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1559">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący`VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1559">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1560">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1560">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1561">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1561">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1562">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1562">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1563">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1563">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1564">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1564">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1565">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1565">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1566">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1566">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1567">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1567">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1568">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1568">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1569">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1569">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1570">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1570">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1571">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1571">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1572">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1572">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1573">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1573">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1574">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1574">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1575">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1575">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1576">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1576">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1577">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1577">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1578">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1578">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1579">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1579">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1580">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1580">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1581">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1581">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1582">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1582">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1583">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1583">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1584">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1584">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1585">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1585">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1586">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1586">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1587">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1587">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1588">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1588">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1589"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1589"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1590">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1590">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1591">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1591">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1592">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1592">Required.</span></span> <span data-ttu-id="1e4ef-1593">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1593">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1594">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1594">Required.</span></span> <span data-ttu-id="1e4ef-1595">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1595">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1596">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1596">Optional.</span></span> <span data-ttu-id="1e4ef-1597">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1597">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1598">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1598">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1599"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1599">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1600">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1600">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1601">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1601">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1602">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1602">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1603">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1603">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1604">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1604">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1605">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1605">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1606">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1606">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1607">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1607">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1608">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1608">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1609">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1609">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1610">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1610">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1611">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1611">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1612">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1612">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1613">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1613">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1614">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1614">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1615">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1615">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1616">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1616">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1617">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1617">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1618">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1618">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1619">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1619">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1620">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1620">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1621">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1621">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1622">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1622">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1623">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1623">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1624">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1624">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1625">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1625">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1626">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1626">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1627">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1627">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1628">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1628">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1629">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1629">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1630">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1630">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1631">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1631">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1632">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1632">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1633">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1633">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1634">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1634">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1635">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1635">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1636">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1636">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1637">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1637">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1638">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1638">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1639">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1639">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1640">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1640">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1641">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1641">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1642">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1642">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1643">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1643">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1644">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1644">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1645">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1645">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1646">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1646">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1647">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1647">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1648">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1648">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1649"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1649"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1650">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1650">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1651">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1651">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1652">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1652">Required.</span></span> <span data-ttu-id="1e4ef-1653">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1653">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1654">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1654">Required.</span></span> <span data-ttu-id="1e4ef-1655">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1655">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1656">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1656">Optional.</span></span> <span data-ttu-id="1e4ef-1657">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1657">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1658">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1658">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1659"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1659">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1660">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1660">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1661">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1661">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1662">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1662">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1663">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1663">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1664">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1664">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1665">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1665">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1666">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1666">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1667">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1667">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1668">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1668">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1669">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1669">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1670">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1670">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1671">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1671">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1672">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1672">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1673">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1673">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1674">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1674">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1675">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1675">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1676">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1676">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1677">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1677">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1678">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1678">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1679">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1679">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1680">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1680">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1681">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1681">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1682">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1682">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1683">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1683">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1684">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1684">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1685">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1685">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1686">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1686">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1687">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1687">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1688">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1688">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1689">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1689">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1690">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1690">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1691">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1691">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1692">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1692">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1693">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1693">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1694">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1694">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1695">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1695">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1696">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1696">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1697">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1697">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1698">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1698">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1699">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1699">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1700">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1700">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1701">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1701">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1702">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1702">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1703">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1703">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1704">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1704">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1705">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1705">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1706">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1706">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1707">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1707">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1708">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1708">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1709"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1709"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1710">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1710">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1711">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1711">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * single * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1712">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1712">Required.</span></span> <span data-ttu-id="1e4ef-1713">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1713">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1714">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1714">Required.</span></span> <span data-ttu-id="1e4ef-1715">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1715">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1716">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1716">Optional.</span></span> <span data-ttu-id="1e4ef-1717">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1717">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1718">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1718">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1719"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1719">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1720">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1720">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1721">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1721">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1722">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1722">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1723">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1723">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1724">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1724">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1725">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1725">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1726">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1726">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1727">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1727">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1728">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1728">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1729">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1729">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1730">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1730">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1731">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1731">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1732">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1732">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1733">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1733">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1734">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1734">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1735">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1735">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1736">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1736">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1737">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1737">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1738">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1738">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1739">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1739">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1740">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1740">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1741">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1741">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1742">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1742">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1743">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1743">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1744">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1744">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1745">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1745">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1746">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1746">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1747">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1747">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1748">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1748">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1749">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1749">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1750">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1750">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1751">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1751">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1752">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1752">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1753">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1753">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1754">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1754">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1755">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1755">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1756">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1756">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1757">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1757">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1758">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1758">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1759">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1759">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1760">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1760">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1761">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1761">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1762">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1762">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1763">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1763">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1764">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1764">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1765">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1765">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1766">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1766">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1767">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1767">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1768">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1768">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1769"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1769"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1770">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1770">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1771">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1771">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * ValueType * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1772">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1772">Required.</span></span> <span data-ttu-id="1e4ef-1773">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1773">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1774">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1774">Required.</span></span> <span data-ttu-id="1e4ef-1775">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1775">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1776">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1776">Optional.</span></span> <span data-ttu-id="1e4ef-1777">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1777">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1778">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1778">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1779"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1779">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1780">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1780">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1781">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1781">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1782">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1782">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1783">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1783">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1784">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1784">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1785">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1785">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1786">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1786">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1787">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1787">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1788">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1788">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1789">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1789">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1790">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w`RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1790">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1791">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1791">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1792">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1792">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1793">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1793">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1794">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1794">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1795">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1795">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1796">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1796">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1797">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1797">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1798">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1798">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1799">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1799">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1800">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1800">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1801">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1801">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1802">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1802">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1803">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1803">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1804">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1804">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1805">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1805">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1806">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1806">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1807">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1807">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1808">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1808">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1809">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1809">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1810">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1810">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1811">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1811">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1812">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1812">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1813">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1813">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1814">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1814">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1815">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1815">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1816">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1816">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1817">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1817">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1818">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1818">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1819">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1819">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1820">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1820">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1821">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1821">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1822">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1822">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1823">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1823">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1824">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1824">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1825">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1825">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1826">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1826">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1827">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1827">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1828">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1828">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1829"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1829"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1830">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1830">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1831">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1831">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : obj * obj * obj -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1832">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1832">Required.</span></span> <span data-ttu-id="1e4ef-1833">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1833">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1834">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1834">Required.</span></span> <span data-ttu-id="1e4ef-1835">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1835">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1836">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1836">Optional.</span></span> <span data-ttu-id="1e4ef-1837">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1837">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1838">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1838">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1839"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1839">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1840">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1840">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1841">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1841">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1842">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1842">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1843">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1843">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1844">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1844">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1845">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1845">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1846">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1846">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1847">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1847">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1848">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1848">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1849">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1849">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1850">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1850">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1851">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1851">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1852">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1852">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1853">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1853">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1854">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1854">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1855">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1855">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1856">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1856">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1857">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1857">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1858">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1858">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1859">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1859">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1860">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1860">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1861">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1861">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1862">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1862">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1863">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1863">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1864">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1864">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1865">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1865">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1866">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1866">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1867">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1867">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1868">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1868">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1869">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1869">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1870">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1870">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1871">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1871">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1872">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1872">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1873">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1873">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1874">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1874">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1875">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1875">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1876">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1876">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1877">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1877">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1878">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1878">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1879">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1879">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1880">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1880">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1881">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1881">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1882">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1882">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1883">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1883">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1884">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1884">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1885">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1885">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1886">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1886">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1887">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1887">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1888">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1888">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1889"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1889"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1890">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1890">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1891">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1891">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * string * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1892">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1892">Required.</span></span> <span data-ttu-id="1e4ef-1893">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1893">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1894">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1894">Required.</span></span> <span data-ttu-id="1e4ef-1895">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1895">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1896">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1896">Optional.</span></span> <span data-ttu-id="1e4ef-1897">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1897">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1e4ef-1898">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1898">Optional.</span></span> <span data-ttu-id="1e4ef-1899">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1899">Applies only when writing a string.</span></span> <span data-ttu-id="1e4ef-1900">Określa, czy chcesz zapisać ciąg dwubajtowy deskryptor długości ciągu do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1900">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="1e4ef-1901">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1901">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1902">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1902">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1903"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1903">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1904">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1904">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1905">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1905">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1906">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1906">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1907">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1907">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1908">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1908">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1909">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1909">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1910">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1910">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1911">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1911">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1912">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1912">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1913">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1913">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1914">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1914">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1915">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1915">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1916">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1916">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1917">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1917">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1918">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1918">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1919">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1919">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1920">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1920">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1921">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1921">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1922">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1922">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1923">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1923">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1924">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1924">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1925">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1925">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1926">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1926">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1927">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1927">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1928">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1928">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1929">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1929">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1930">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1930">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1931">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1931">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1932">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1932">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-1933">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1933">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-1934">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1934">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-1935">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1935">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-1936">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1936">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1937">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1937">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-1938">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1938">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-1939">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1939">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-1940">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1940">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-1941">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1941">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-1942">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1942">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-1943">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1943">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-1944">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1944">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-1945">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1945">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-1946">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1946">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-1947">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1947">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-1948">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1948">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-1949">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1949">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-1950">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1950">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-1951">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1951">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-1952">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1952">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-1953"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1953"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-1954">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1954">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-1955">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1955">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * Array * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-1956">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1956">Required.</span></span> <span data-ttu-id="1e4ef-1957">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1957">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-1958">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1958">Required.</span></span> <span data-ttu-id="1e4ef-1959">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1959">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-1960">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1960">Optional.</span></span> <span data-ttu-id="1e4ef-1961">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1961">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="1e4ef-1962">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1962">Optional.</span></span> <span data-ttu-id="1e4ef-1963">Ma zastosowanie tylko wtedy, gdy pisania tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1963">Applies only when writing an array.</span></span> <span data-ttu-id="1e4ef-1964">Określa, czy tablica jest traktowane jako dynamiczne i czy należy napisać deskryptor ciąg, który opisuje długość tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1964">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1e4ef-1965">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1965">Optional.</span></span> <span data-ttu-id="1e4ef-1966">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1966">Applies only when writing a string.</span></span> <span data-ttu-id="1e4ef-1967">Określa, czy chcesz zapisać ciąg dwubajtowy deskryptor długości ciągu do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1967">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="1e4ef-1968">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1968">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1e4ef-1969">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1969">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1e4ef-1970"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1970">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1e4ef-1971">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1971">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-1972">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1972">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-1973">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1973">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1e4ef-1974">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1974">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-1975">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1975">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1e4ef-1976">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1976">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-1977">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1977">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-1978">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1978">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-1979">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1979">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-1980">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1980">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-1981">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1981">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-1982">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1982">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-1983">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1983">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-1984">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1984">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-1985">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1985">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1e4ef-1986">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1986">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1e4ef-1987">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1987">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-1988">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1988">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-1989">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1989">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-1990">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1990">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-1991">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1991">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-1992">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1992">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-1993">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1993">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1e4ef-1994">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1994">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1e4ef-1995">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1995">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1e4ef-1996">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1996">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1e4ef-1997">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1997">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1e4ef-1998">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1998">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-1999">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-1999">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1e4ef-2000">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2000">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-2001">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2001">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1e4ef-2002">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2002">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1e4ef-2003">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2003">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1e4ef-2004">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2004">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1e4ef-2005">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2005">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4ef-2006">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2006">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-2007">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2007">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-2008">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2008">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1e4ef-2009">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2009">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1e4ef-2010">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2010">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-2011">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2011">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1e4ef-2012">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2012">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1e4ef-2013">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2013">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-2014">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2014">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1e4ef-2015">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2015">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1e4ef-2016">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2016">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1e4ef-2017">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2017">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2018">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2018">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1e4ef-2019">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2019">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-2020"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2020"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2021">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2021">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-2022">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2022">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePutObject : int * obj * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePutObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2023">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2023">Required.</span></span> <span data-ttu-id="1e4ef-2024">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2024">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2025">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2025">Required.</span></span> <span data-ttu-id="1e4ef-2026">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2026">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1e4ef-2027">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2027">Optional.</span></span> <span data-ttu-id="1e4ef-2028">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2028">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2029">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2029">Writes data from a variable to a disk file.</span></span>  <span data-ttu-id="1e4ef-2030"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePutObject" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2030">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span></span> <span data-ttu-id="1e4ef-2031">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2031">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2032">`FilePutObject` Funkcja jest używana zamiast `FilePut` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` jest przekazywany zamiast innego typu, takie jak `Integer`, `Long`, `Short`, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2032">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="1e4ef-2033">`FilePutObject` zapisuje i odczytuje deskryptory, które opisują obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2033">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="1e4ef-2034">Jeśli zamierzasz zapisać `Variant` typu `FilePutObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2034">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="1e4ef-2035">W razie wątpliwości, jeśli używasz obiektu jako drugi parametr, firma Microsoft zaleca, aby zawsze używać `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2035">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="1e4ef-2036">`FilePutObject` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2036">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-2037">Dane zapisane z `FilePutObject` są zazwyczaj odczytywane z pliku za pomocą `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2037">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="1e4ef-2038">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2038">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1e4ef-2039">Jeżeli pominięto `RecordNumber`, `FilePutObject` zapisuje następny rekord lub bajt po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (lub rekord lub bajt wskazywany przez ostatnią `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2039">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="1e4ef-2040">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2040">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1e4ef-2041">`FilePutObject` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2041">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1e4ef-2042">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePutObject`, należy wykonać takie same, z `FileGetObject`, i należy również upewnić się, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2042">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1e4ef-2043">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2043">Random Mode</span></span>  
 <span data-ttu-id="1e4ef-2044">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2044">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1e4ef-2045">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePutObject` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2045">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1e4ef-2046">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2046">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1e4ef-2047">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest mieć długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2047">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1e4ef-2048">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2048">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="1e4ef-2049">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePutObject` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2049">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1e4ef-2050">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePutObject` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2050">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1e4ef-2051">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2051">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1e4ef-2052">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePutObject` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2052">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1e4ef-2053">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2053">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1e4ef-2054">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2054">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1e4ef-2055">Jeśli zmienna zapisywana jest tablica, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2055">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1e4ef-2056">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2056">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1e4ef-2057">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2057">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1e4ef-2058">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2058">Binary Mode</span></span>  
 <span data-ttu-id="1e4ef-2059">Do plików otwieranych w `Binary` trybie wszystkie `Random` zastosować zasady dotyczące trybu, z wyjątkiem:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2059">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="1e4ef-2060">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2060">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1e4ef-2061">`FilePutObject` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2061">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2062">W tym przykładzie użyto `FilePutObject` funkcję, aby zapisać ciąg do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2062">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-2063">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2063">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberSignature Language="F#" Value="static member FileWidth : int * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileWidth (FileNumber, RecordWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2064">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2064">Required.</span></span> <span data-ttu-id="1e4ef-2065">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2065">Any valid file number.</span></span></param>
        <param name="RecordWidth"><span data-ttu-id="1e4ef-2066">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2066">Required.</span></span> <span data-ttu-id="1e4ef-2067">Wyrażenie liczbowe w zakresie 0-255 włącznie, co oznacza liczbę znaków, są wyświetlane w wierszu, przed rozpoczęciem nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2067">Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started.</span></span> <span data-ttu-id="1e4ef-2068">Jeśli <paramref name="RecordWidth" /> jest równa 0, nie ma żadnego limitu długości wiersza.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2068">If <paramref name="RecordWidth" /> equals 0, there is no limit to the length of a line.</span></span> <span data-ttu-id="1e4ef-2069">Wartością domyślną dla <paramref name="RecordWidth" /> wynosi 0.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2069">The default value for <paramref name="RecordWidth" /> is 0.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2070">Przypisuje szerokość linii danych wyjściowych w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2070">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e4ef-2071">W tym przykładzie użyto `FileWidth` funkcję, aby ustawić szerokość linii danych wyjściowych dla pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2071">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2072">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2072">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2073">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2073">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberSignature Language="F#" Value="static member FreeFile : unit -&gt; int" Usage="Microsoft.VisualBasic.FileSystem.FreeFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e4ef-2074">Zwraca <see langword="Integer" /> wartość reprezentująca następny dostępny do użytku przez numer pliku <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2074">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2075">Wartość całkowitą, która reprezentuje następny dostępny do użytku przez numer pliku <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2075">An integer value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2076">Użyj `FreeFile` podawać numer pliku, który nie jest już używana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2076">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2077">W tym przykładzie użyto `FreeFile` funkcja zwraca następny dostępny numer pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2077">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="1e4ef-2078">Pięć plików są otwarte dla danych wyjściowych w ramach pętli i przykładowe dane są zapisywane do każdego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2078">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2079">Więcej niż 255 pliki są używane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2079">More than 255 files are in use.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-2080">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2080">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member GetAttr : string -&gt; Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.FileSystem.GetAttr PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1e4ef-2081">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2081">Required.</span></span> <span data-ttu-id="1e4ef-2082">Wyrażenie ciągu, który określa nazwę pliku, katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2082">A string expression that specifies a file, directory, or folder name.</span></span> <span data-ttu-id="1e4ef-2083"><paramref name="PathName" /> może zawierać katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2083"><paramref name="PathName" /> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2084">Zwraca <see langword="FileAttribute" /> wartość, która reprezentuje atrybuty pliku, katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2084">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span></span> <span data-ttu-id="1e4ef-2085"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2085">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span></span> <span data-ttu-id="1e4ef-2086">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2086">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2087">Bitowe połączenie wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2087">A bitwise combination of the enumeration values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2088">Aby określić, które atrybuty są ustawione, użyj `And` operatora bitowego porównania wartości zwracanej przez `GetAttr` funkcji i wartość wybranego atrybutu pliku chcesz.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2088">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="1e4ef-2089">Jeśli wynik nie wynosi zero, ten atrybut jest ustawiony dla wskazanego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2089">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="1e4ef-2090">Na przykład, wartość zwracana przez następujące `And` wyrażenie jest zero, jeśli `Archive` nie ustawiono atrybutu:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2090">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="1e4ef-2091">Wartość różną od zera jest zwracany, jeśli `Archive` ma ustawioną wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2091">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2092">W tym przykładzie użyto `GetAttr` funkcję, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2092">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2093"><paramref name="Pathname" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2093"><paramref name="Pathname" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-2094">Plik docelowy nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2094">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="1e4ef-2095">And — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2095">And Operator (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2096">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2096">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-2097">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2097">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2098">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2098">Required.</span></span> <span data-ttu-id="1e4ef-2099">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2099">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2100">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2100">Required.</span></span> <span data-ttu-id="1e4ef-2101">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2101">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2102">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2102">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2103">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2103">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2104">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2104">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2105">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2105">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2106">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2106">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2107">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2107">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2108">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2108">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2109">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2109">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2110">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2110">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2111">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2111">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2112">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2112">Data</span></span>|<span data-ttu-id="1e4ef-2113">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2113">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2114">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2114">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2115">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2115">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2116">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2116">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2117">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2117">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2118">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2118">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2119">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2119">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2120">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2120">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2121">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2121">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2122">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2122">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2123">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2123">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2124">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2124">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2125">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2125">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2126">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2126">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2127">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2127">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2128">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2128">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2129">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2129">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2130">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2130">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2131">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2131">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2132">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2132">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2133">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2133">Required.</span></span> <span data-ttu-id="1e4ef-2134">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2134">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2135">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2135">Required.</span></span> <span data-ttu-id="1e4ef-2136">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2136">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2137">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2137">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2138">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2138">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2139">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2139">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2140">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2140">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2141">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2141">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2142">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2142">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2143">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2143">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2144">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2144">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2145">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2145">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2146">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2146">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2147">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2147">Data</span></span>|<span data-ttu-id="1e4ef-2148">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2148">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2149">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2149">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2150">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2150">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2151">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2151">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2152">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2152">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2153">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2153">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2154">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2154">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2155">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2155">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2156">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2156">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2157">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2157">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2158">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2158">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2159">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2159">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2160">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2160">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2161">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2161">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2162">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2162">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2163">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2163">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2164">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2164">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2165">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2165">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2166">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2166">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2167">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2167">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2168">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2168">Required.</span></span> <span data-ttu-id="1e4ef-2169">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2169">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2170">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2170">Required.</span></span> <span data-ttu-id="1e4ef-2171">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2171">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2172">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2172">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2173">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2173">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2174">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2174">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2175">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2175">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2176">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2176">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2177">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2177">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2178">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2178">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2179">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2179">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2180">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2180">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2181">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2181">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2182">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2182">Data</span></span>|<span data-ttu-id="1e4ef-2183">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2183">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2184">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2184">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2185">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2185">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2186">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2186">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2187">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2187">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2188">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2188">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2189">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2189">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2190">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2190">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2191">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2191">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2192">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2192">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2193">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2193">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2194">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2194">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2195">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2195">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2196">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2196">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2197">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2197">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2198">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2198">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2199">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2199">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2200">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2200">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2201">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2201">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2202">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2202">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2203">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2203">Required.</span></span> <span data-ttu-id="1e4ef-2204">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2204">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2205">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2205">Required.</span></span> <span data-ttu-id="1e4ef-2206">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2206">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2207">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2207">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2208">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2208">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2209">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2209">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2210">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2210">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2211">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2211">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2212">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2212">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2213">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2213">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2214">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2214">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2215">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2215">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2216">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2216">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2217">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2217">Data</span></span>|<span data-ttu-id="1e4ef-2218">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2218">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2219">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2219">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2220">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2220">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2221">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2221">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2222">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2222">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2223">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2223">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2224">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2224">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2225">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2225">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2226">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2226">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2227">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2227">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2228">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2228">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2229">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2229">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2230">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2230">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2231">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2231">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2232">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2232">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2233">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2233">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2234">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2234">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2235">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2235">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2236">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2236">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2237">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2237">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2238">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2238">Required.</span></span> <span data-ttu-id="1e4ef-2239">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2239">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2240">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2240">Required.</span></span> <span data-ttu-id="1e4ef-2241">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2241">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2242">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2242">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2243">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2243">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2244">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2244">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2245">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2245">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2246">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2246">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2247">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2247">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2248">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2248">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2249">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2249">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2250">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2250">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2251">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2251">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2252">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2252">Data</span></span>|<span data-ttu-id="1e4ef-2253">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2253">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2254">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2254">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2255">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2255">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2256">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2256">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2257">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2257">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2258">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2258">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2259">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2259">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2260">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2260">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2261">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2261">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2262">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2262">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2263">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2263">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2264">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2264">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2265">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2265">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2266">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2266">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2267">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2267">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2268">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2268">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2269">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2269">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2270">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2270">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2271">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2271">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2272">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2272">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2273">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2273">Required.</span></span> <span data-ttu-id="1e4ef-2274">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2274">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2275">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2275">Required.</span></span> <span data-ttu-id="1e4ef-2276">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2276">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2277">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2277">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2278">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2278">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2279">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2279">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2280">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2280">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2281">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2281">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2282">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2282">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2283">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2283">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2284">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2284">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2285">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2285">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2286">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2286">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2287">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2287">Data</span></span>|<span data-ttu-id="1e4ef-2288">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2288">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2289">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2289">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2290">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2290">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2291">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2291">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2292">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2292">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2293">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2293">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2294">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2294">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2295">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2295">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2296">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2296">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2297">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2297">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2298">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2298">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2299">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2299">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2300">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2300">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2301">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2301">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2302">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2302">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2303">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2303">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2304">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2304">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2305">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2305">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2306">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2306">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2307">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2307">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2308">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2308">Required.</span></span> <span data-ttu-id="1e4ef-2309">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2309">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2310">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2310">Required.</span></span> <span data-ttu-id="1e4ef-2311">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2311">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2312">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2312">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2313">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2313">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2314">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2314">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2315">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2315">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2316">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2316">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2317">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2317">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2318">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2318">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2319">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2319">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2320">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2320">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2321">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2321">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2322">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2322">Data</span></span>|<span data-ttu-id="1e4ef-2323">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2323">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2324">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2324">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2325">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2325">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2326">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2326">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2327">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2327">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2328">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2328">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2329">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2329">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2330">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2330">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2331">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2331">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2332">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2332">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2333">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2333">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2334">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2334">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2335">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2335">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2336">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2336">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2337">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2337">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2338">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2338">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2339">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2339">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2340">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2340">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2341">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2341">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2342">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2342">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2343">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2343">Required.</span></span> <span data-ttu-id="1e4ef-2344">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2344">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2345">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2345">Required.</span></span> <span data-ttu-id="1e4ef-2346">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2346">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2347">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2347">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2348">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2348">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2349">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2349">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2350">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2350">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2351">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2351">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2352">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2352">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2353">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2353">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2354">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2354">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2355">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2355">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2356">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2356">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2357">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2357">Data</span></span>|<span data-ttu-id="1e4ef-2358">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2358">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2359">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2359">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2360">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2360">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2361">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2361">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2362">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2362">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2363">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2363">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2364">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2364">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2365">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2365">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2366">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2366">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2367">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2367">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2368">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2368">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2369">Na przykład w niemieckiej wersji, gdy wejściowe 3,14159, zwraca tylko 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2369">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2370">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2370">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2371">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2371">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2372">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2372">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2373">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2373">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2374">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2374">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2375">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2375">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2376">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2376">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2377">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2377">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2378">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2378">Required.</span></span> <span data-ttu-id="1e4ef-2379">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2379">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2380">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2380">Required.</span></span> <span data-ttu-id="1e4ef-2381">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2381">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2382">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2382">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2383">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2383">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2384">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2384">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2385">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2385">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2386">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2386">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2387">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2387">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2388">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2388">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2389">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2389">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2390">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2390">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2391">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2391">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2392">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2392">Data</span></span>|<span data-ttu-id="1e4ef-2393">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2393">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2394">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2394">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2395">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2395">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2396">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2396">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2397">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2397">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2398">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2398">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2399">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2399">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2400">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2400">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2401">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2401">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2402">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2402">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2403">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2403">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2404">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2404">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2405">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2405">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2406">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2406">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2407">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2407">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2408">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2408">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2409">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2409">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2410">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2410">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2411">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2411">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2412">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2412">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2413">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2413">Required.</span></span> <span data-ttu-id="1e4ef-2414">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2414">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2415">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2415">Required.</span></span> <span data-ttu-id="1e4ef-2416">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2416">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2417">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2417">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2418">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2418">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2419">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2419">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2420">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2420">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2421">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2421">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2422">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2422">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2423">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2423">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2424">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2424">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2425">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2425">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2426">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2426">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2427">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2427">Data</span></span>|<span data-ttu-id="1e4ef-2428">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2428">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2429">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2429">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2430">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2430">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2431">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2431">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2432">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2432">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2433">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2433">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2434">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2434">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2435">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2435">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2436">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2436">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2437">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2437">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2438">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2438">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2439">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2439">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2440">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2440">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2441">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2441">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2442">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2442">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2443">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2443">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2444">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2444">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2445">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2445">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2446">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2446">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2447">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2447">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2448">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2448">Required.</span></span> <span data-ttu-id="1e4ef-2449">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2449">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2450">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2450">Required.</span></span> <span data-ttu-id="1e4ef-2451">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2451">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2452">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2452">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2453">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2453">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2454">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2454">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2455">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2455">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2456">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2456">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2457">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2457">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2458">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2458">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2459">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2459">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2460">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2460">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2461">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2461">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2462">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2462">Data</span></span>|<span data-ttu-id="1e4ef-2463">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2463">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2464">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2464">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2465">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2465">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2466">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2466">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2467">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2467">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2468">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2468">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2469">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2469">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2470">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2470">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2471">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2471">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2472">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2472">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2473">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2473">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2474">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2474">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2475">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2475">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2476">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2476">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2477">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2477">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2478">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2478">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2479">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2479">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2480">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2480">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2481">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2481">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2482">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2482">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2483">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2483">Required.</span></span> <span data-ttu-id="1e4ef-2484">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2484">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1e4ef-2485">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2485">Required.</span></span> <span data-ttu-id="1e4ef-2486">Zmiennej, którą przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2486">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2487">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2487">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2488">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2488">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2489">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2489">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2490">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2490">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2491">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2491">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1e4ef-2492">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2492">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2493">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2493">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2494">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2494">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2495">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2495">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1e4ef-2496">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2496">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1e4ef-2497">Dane</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2497">Data</span></span>|<span data-ttu-id="1e4ef-2498">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2498">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1e4ef-2499">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2499">Delimiting comma or blank line</span></span>|<span data-ttu-id="1e4ef-2500">Pusty</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2500">Empty</span></span>|  
|<span data-ttu-id="1e4ef-2501">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2501">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1e4ef-2502">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2502">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1e4ef-2503">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2503">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1e4ef-2504">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2504">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1e4ef-2505">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2505">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1e4ef-2506">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2506">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1e4ef-2507">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2507">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2508">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2508">The `Input` function is not localized.</span></span> <span data-ttu-id="1e4ef-2509">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2509">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2510">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2510">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2511">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2511">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2512">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2512">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1e4ef-2513">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2513">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2514">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2514">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2515">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2515">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2516">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2516">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2517">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2517">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberSignature Language="F#" Value="static member InputString : int * int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.InputString (FileNumber, CharCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2518">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2518">Required.</span></span> <span data-ttu-id="1e4ef-2519">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2519">Any valid file number.</span></span></param>
        <param name="CharCount"><span data-ttu-id="1e4ef-2520">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2520">Required.</span></span> <span data-ttu-id="1e4ef-2521">Dowolne prawidłowe wyrażenie liczbowe określającą liczbę znaków do odczytania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2521">Any valid numeric expression specifying the number of characters to read.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2522">Zwraca <see langword="String" /> wartość, która zawiera znaki z pliku otwarte w <see langword="Input" /> lub <see langword="Binary" /> trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2522">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="1e4ef-2523"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2523">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span> <span data-ttu-id="1e4ef-2524">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2524">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2525">Ciąg, który zawiera znaki z pliku otwarte w <see langword="Input" /> lub <see langword="Binary" /> trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2525">A string that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="1e4ef-2526"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2526">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2527">`InputString` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2527">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2528">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2528">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2529">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2529">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2530">Dane odczytane z `InputString` funkcji są zwykle zapisywane w pliku przy użyciu `Print` lub `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2530">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="1e4ef-2531">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2531">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="1e4ef-2532">W odróżnieniu od `Input` funkcji `InputString` funkcja zwraca wszystkie znaki, zostanie odczytanych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2532">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="1e4ef-2533">W tym przecinki, znaki powrotu karetki, wysuwu wiersza, znaki cudzysłowu i spacje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2533">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="1e4ef-2534">W przypadku plików otwartych do `Binary` dostęp do próba odczytania pliku przy użyciu `InputString` działać do momentu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2534">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="1e4ef-2535">Użyj `LOF` i `Loc` funkcji zamiast `EOF` podczas odczytu plików binarnych za pomocą `InputString`, lub użyj `FileGet` zastosowania `EOF` — funkcja.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2535">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2536">Podczas odczytu z plików, nie należy wprowadzać zabezpieczeń decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2536">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2537">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2537">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2538">W tym przykładzie użyto `InputString` funkcję, aby przeczytać o jeden znak w czasie z pliku i wydrukuj go do `Output` okna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2538">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="1e4ef-2539">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2539">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2540"><paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2540"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-2541"><paramref name="CharCount" /> &lt; 0 lub &gt; 214.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2541"><paramref name="CharCount" /> &lt; 0 or &gt; 214.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2542">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2542">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2543">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2543">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2544">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2544">How to: Write Text to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member Kill : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Kill PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1e4ef-2545">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2545">Required.</span></span> <span data-ttu-id="1e4ef-2546">Wyrażenie ciągu, który określa jedną lub więcej nazw plików do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2546">A string expression that specifies one or more file names to be deleted.</span></span> <span data-ttu-id="1e4ef-2547"><paramref name="PathName" /> może zawierać katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2547"><paramref name="PathName" /> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2548">Usuwa pliki z dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2548">Deletes files from a disk.</span></span> <span data-ttu-id="1e4ef-2549"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Kill" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2549">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span></span> <span data-ttu-id="1e4ef-2550">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2550">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2551">`Kill` obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2551">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="1e4ef-2552">**Uwaga dotycząca zabezpieczeń** w celu wykonania `Kill` funkcja wymaga, aby `Read` i `PathDiscovery` flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2552">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="1e4ef-2553">Aby uzyskać więcej informacji, zobacz <xref:System.Security.SecurityException> [uprawnienia dostępu kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2553">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2554">W tym przykładzie użyto `Kill` funkcję, aby usunąć plik z dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2554">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2555">Otwieranie plików docelowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2555">Target file(s) open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-2556">Nie można odnaleźć plików docelowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2556">Target file(s) not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e4ef-2557">Odmowa uprawnień.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2557">Permission denied.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LineInput : int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.LineInput FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2558">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2558">Required.</span></span> <span data-ttu-id="1e4ef-2559">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2559">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2560">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnego i przypisuje go do <see langword="String" /> zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2560">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2561">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnego i przypisuje go do <see langword="String" /> zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2561">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2562">`LineInput` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2562">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2563">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2563">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2564">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2564">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2565">Dane odczytane z `LineInput` są zwykle zapisywane w pliku przy użyciu `Print`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2565">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2566">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2566">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1e4ef-2567">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2567">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="1e4ef-2568">`LineInput` Funkcja odczytuje z pliku o jeden znak w danym momencie, aż do napotkania znaku powrotu karetki (`Chr(13)`) lub zwrotu/wiersz źródła danych (`Chr(13) + Chr(10)`) sekwencji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2568">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="1e4ef-2569">Sekwencje kanału informacyjnego powrotu/wiersza powrotu karetki są pomijane zamiast dołączany do ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2569">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2570">Podczas odczytu z pliku za pomocą `LineInput` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2570">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2571">W tym przykładzie użyto `LineInput` funkcję, aby odczytać wiersz z pliku sekwencyjnego i przypisać ją do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2571">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="1e4ef-2572">W tym przykładzie założono, że `TestFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2572">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="1e4ef-2573">Osiągnięto koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2573">End of file reached.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2574"><paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2574"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2575">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2575">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2576">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2576">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2577">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2577">How to: Write Text to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Loc : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Loc FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2578">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2578">Required.</span></span> <span data-ttu-id="1e4ef-2579">Dowolne, prawidłowe <see langword="Integer" /> pliku numer.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2579">Any valid <see langword="Integer" /> file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2580">Zwraca wartość określającą bieżącą pozycję odczytu/zapisu w otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2580">Returns a value that specifies the current read/write position in an open file.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2581">Bieżąca pozycja odczytu/zapisu w otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2581">The current read/write position in an open file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2582">`Loc` Funkcji jest liczony od zera; korzystania z niego pobrać pierwszy bajt w pliku zwróci wartość 0.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2582">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="1e4ef-2583">`Loc` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2583">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2584">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2584">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2585">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2585">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2586">Poniżej opisano wartość zwracana przez każdy tryb dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2586">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="1e4ef-2587">Tryb</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2587">Mode</span></span>|<span data-ttu-id="1e4ef-2588">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2588">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="1e4ef-2589">Numer ostatniego rekordu odczytywany lub zapisywany do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2589">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="1e4ef-2590">Bieżące położenie bajtów w pliku podzielona przez 128.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2590">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="1e4ef-2591">Jednak informacje zwrócone przez `Loc` dla kolejnych plików nie jest używany ani wymagane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2591">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="1e4ef-2592">Położenie ostatniego bajtu zapisu lub odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2592">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2593">W tym przykładzie użyto `Loc` funkcja zwraca bieżącą pozycję odczytu/zapisu w otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2593">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="1e4ef-2594">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2594">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2595">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2595">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-2596">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2596">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2597"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2597">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2598">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2598">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Lock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2599">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2599">Required.</span></span> <span data-ttu-id="1e4ef-2600">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2600">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2601">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2601">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2602"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2602">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2603">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2603">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2604">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2604">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1e4ef-2605">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2605">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1e4ef-2606">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2606">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1e4ef-2607">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2607">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1e4ef-2608">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2608">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1e4ef-2609">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2609">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2610">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2610">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1e4ef-2611">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2611">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2612">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2612">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2613">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2613">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2614">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2614">Required.</span></span> <span data-ttu-id="1e4ef-2615">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2615">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="1e4ef-2616">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2616">Optional.</span></span> <span data-ttu-id="1e4ef-2617">Liczba tylko rekord lub bajt, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2617">Number of the only record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2618">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2618">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2619"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2619">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2620">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2620">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2621">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2621">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1e4ef-2622">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2622">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1e4ef-2623">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2623">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1e4ef-2624">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2624">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1e4ef-2625">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2625">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1e4ef-2626">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2626">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2627">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2627">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1e4ef-2628">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2628">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2629">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2629">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2630">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2630">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2631">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2631">Required.</span></span> <span data-ttu-id="1e4ef-2632">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2632">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="1e4ef-2633">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2633">Optional.</span></span> <span data-ttu-id="1e4ef-2634">Liczba pierwszy rekord lub bajt, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2634">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="1e4ef-2635">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2635">Optional.</span></span> <span data-ttu-id="1e4ef-2636">Liczba ostatnich rekord lub bajt, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2636">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2637">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2637">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2638"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2638">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2639">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2639">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2640">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2640">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1e4ef-2641">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2641">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1e4ef-2642">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2642">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1e4ef-2643">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2643">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1e4ef-2644">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2644">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1e4ef-2645">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2645">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2646">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2646">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1e4ef-2647">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2647">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2648">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2648">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2649">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2649">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LOF : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.LOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2650">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2650">Required.</span></span> <span data-ttu-id="1e4ef-2651">Liczba całkowita, która zawiera numer prawidłowego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2651">An integer that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2652">Zwraca rozmiar w bajtach, w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2652">Returns the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-2653"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2653">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span> <span data-ttu-id="1e4ef-2654">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2654">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2655">Rozmiar w bajtach, w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2655">The size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-2656"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2656">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2657">Użyj `FileLen` funkcję, aby uzyskać długość pliku, który nie jest otwarty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2657">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2658">W tym przykładzie użyto `LOF` funkcję, aby określić rozmiar otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2658">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="1e4ef-2659">W tym przykładzie założono, że `TestFile` to plik tekstowy, który zawiera przykładowe dane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2659">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2660">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2660">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-2661">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2661">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-2662">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2662">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member MkDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.MkDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="1e4ef-2663">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2663">Required.</span></span> <span data-ttu-id="1e4ef-2664">Wyrażenie ciągu, identyfikująca katalogu, który ma zostać utworzony.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2664">A string expression that identifies the directory to be created.</span></span> <span data-ttu-id="1e4ef-2665"><paramref name="Path" /> Mogą obejmować dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2665">The <paramref name="Path" /> may include the drive.</span></span> <span data-ttu-id="1e4ef-2666">Jeśli dysk nie zostanie określony, <see langword="MkDir" /> powoduje utworzenie nowego katalogu na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2666">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2667">Tworzy nowy katalog.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2667">Creates a new directory.</span></span> <span data-ttu-id="1e4ef-2668"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="MkDir" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2668">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span></span> <span data-ttu-id="1e4ef-2669">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2669">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2670">Ta funkcja tworzy nowy katalog.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2670">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2671">W tym przykładzie użyto `MkDir` funkcję, aby utworzyć katalog.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2671">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="1e4ef-2672">Jeśli dysk nie zostanie określony, nowy katalog jest tworzony na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2672">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-2673"><paramref name="Path" /> nie jest określona lub jest pusty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2673"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e4ef-2674">Odmowa uprawnień.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2674">Permission denied.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2675">Katalog już istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2675">Directory already exists.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory.md"><span data-ttu-id="1e4ef-2676">Instrukcje: Utwórz katalog w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2676">How to: Create a Directory in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Print : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Print (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2677">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2677">Required.</span></span> <span data-ttu-id="1e4ef-2678">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2678">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1e4ef-2679">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2679">Optional.</span></span> <span data-ttu-id="1e4ef-2680">Zero lub więcej rozdzielonych przecinkami wyrażenia, aby zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2680">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
<span data-ttu-id="1e4ef-2681"><paramref name="Output" /> Ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2681">The <paramref name="Output" /> argument settings are:</span></span> 
 <span data-ttu-id="1e4ef-2682"><see langword="T:System.IO.IOException" />: Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2682"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="1e4ef-2683"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2683"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2684">Zapisy wyświetlania danych w formacie pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2684">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2685">`Print` i `PrintLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2685">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2686">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2686">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2687">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2687">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2688">`Print` nie ma wiersz na końcu wiersza; jednak `PrintLine` Dołącz wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2688">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="1e4ef-2689">Dane zapisane z `Print` są zazwyczaj odczytywane z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2689">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="1e4ef-2690">Jeżeli pominięto `Output` dla `PrintLine`, pusty wiersz zostanie wydrukowany do pliku; w przypadku `Print`, nic nie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2690">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="1e4ef-2691">Wiele wyrażeń oddzielone przecinkami mają zostać wyrównane na granicach kartę, ale mieszanie przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2691">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="1e4ef-2692">Aby uzyskać `Boolean` danych, albo `True` lub `False` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2692">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="1e4ef-2693">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2693">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="1e4ef-2694">Dane są zapisywane do pliku przy użyciu formatu daty krótkiej standardowa rozpoznany przez system.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2694">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="1e4ef-2695">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2695">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="1e4ef-2696">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2696">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1e4ef-2697">Jednak jeśli `Output` dane listy `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2697">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="1e4ef-2698">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2698">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="1e4ef-2699">`Error` — Słowo kluczowe nie jest tłumaczony niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2699">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="1e4ef-2700">Wszystkie dane zapisane do pliku za pomocą `Print` uwzględnia ustawienia regionalne; oznacza to, dane są poprawnie sformatowane przy użyciu odpowiednich separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2700">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="1e4ef-2701">Jeśli użytkownik chce do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2701">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="1e4ef-2702">Zapisywanie do pliku za pomocą `Print` lub `PrintLine` functions wymaga `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2702">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2703">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2703">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2704">W tym przykładzie użyto `Print` i `PrintLine` funkcje można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2704">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2705">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2705">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2706">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2706">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2707">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2707">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member PrintLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.PrintLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2708">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2708">Required.</span></span> <span data-ttu-id="1e4ef-2709">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2709">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1e4ef-2710">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2710">Optional.</span></span> <span data-ttu-id="1e4ef-2711">Zero lub więcej rozdzielonych przecinkami wyrażenia, aby zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2711">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
<span data-ttu-id="1e4ef-2712"><paramref name="Output" /> Ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2712">The <paramref name="Output" /> argument settings are:</span></span> 
 <span data-ttu-id="1e4ef-2713"><see langword="T:System.IO.IOException" />: Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2713"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="1e4ef-2714"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2714"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2715">Zapisy wyświetlania danych w formacie pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2715">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2716">`Print` i `PrintLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2716">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2717">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2717">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2718">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2718">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2719">`Print` nie ma wiersz na końcu wiersza; jednak`PrintLine` Dołącz wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2719">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="1e4ef-2720">Dane zapisane z `Print` są zazwyczaj odczytywane z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2720">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="1e4ef-2721">Jeżeli pominięto `Output` dla `PrintLine`, pusty wiersz zostanie wydrukowany do pliku; w przypadku `Print`, nic nie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2721">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="1e4ef-2722">Wiele wyrażeń oddzielone przecinkami mają zostać wyrównane na granicach kartę, ale mieszanie przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2722">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="1e4ef-2723">Aby uzyskać `Boolean` danych, albo `True` lub `False` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2723">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="1e4ef-2724">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2724">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="1e4ef-2725">Dane są zapisywane do pliku przy użyciu formatu daty krótkiej standardowa rozpoznawane przez system.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2725">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="1e4ef-2726">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2726">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="1e4ef-2727">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2727">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1e4ef-2728">Jednak jeśli `Output` dane listy `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2728">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="1e4ef-2729">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2729">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="1e4ef-2730">`Error` — Słowo kluczowe nie jest tłumaczony niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2730">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="1e4ef-2731">Wszystkie dane zapisane do pliku za pomocą `Print` uwzględnia ustawienia regionalne; oznacza to, dane są poprawnie sformatowane przy użyciu odpowiednich separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2731">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="1e4ef-2732">Jeśli użytkownik chce do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2732">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="1e4ef-2733">Zapisywanie do pliku za pomocą `Print` lub `PrintLine` functions wymaga `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2733">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2734">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2734">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2735">W tym przykładzie użyto `Print` i `PrintLine` funkcje można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2735">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2736">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2736">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2737">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2737">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2738">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2738">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberSignature Language="F#" Value="static member Rename : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Rename (OldPath, NewPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath"><span data-ttu-id="1e4ef-2739">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2739">Required.</span></span> <span data-ttu-id="1e4ef-2740">Wyrażenie ciągu, które określa istniejącej nazwy pliku i lokalizację.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2740">A string expression that specifies the existing file name and location.</span></span> <span data-ttu-id="1e4ef-2741"><paramref name="OldPath" /> może to obejmować katalogu i dysku w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2741"><paramref name="OldPath" /> may include the directory, and drive, of the file.</span></span></param>
        <param name="NewPath"><span data-ttu-id="1e4ef-2742">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2742">Required.</span></span> <span data-ttu-id="1e4ef-2743">Wyrażenie ciągu, który określa nową nazwę pliku i lokalizację.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2743">A string expression that specifies the new file name and location.</span></span> <span data-ttu-id="1e4ef-2744"><paramref name="NewPath" /> może zawierać katalogu i dysk w lokalizacji docelowej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2744"><paramref name="NewPath" /> may include directory and drive of the destination location.</span></span> <span data-ttu-id="1e4ef-2745">Nazwa pliku określona przez <paramref name="NewPath" /> już nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2745">The file name specified by <paramref name="NewPath" /> cannot already exist.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2746">Zmienia nazwę pliku lub katalogu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2746">Renames a disk file or directory.</span></span> <span data-ttu-id="1e4ef-2747"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Rename" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2747">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span></span> <span data-ttu-id="1e4ef-2748">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2748">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2749">`Rename` Funkcji zmieniania nazwy pliku i przenosi je do innego katalogu, jeśli jest to wymagane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2749">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="1e4ef-2750">`Rename` Funkcji można przenieść plik na dyskach, ale tylko wtedy można zmienić nazwę istniejącego katalogu podczas zarówno `NewPath` i `OldPath` znajdują się na tym samym dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2750">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="1e4ef-2751">`Rename` Nie można utworzyć nowego pliku lub katalogu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2751">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="1e4ef-2752">Za pomocą `Rename` generuje błąd, funkcję dla otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2752">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="1e4ef-2753">Otwórz plik należy zamknąć przed zmianą nazwy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2753">You must close an open file before renaming it.</span></span> <span data-ttu-id="1e4ef-2754">`Rename` argumenty nie może zawierać wielu znaków (\*) i symboli wieloznacznych pojedynczych znaków (?).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2754">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e4ef-2755">Korzystając z `Rename` do skopiowania pliku niechronionych lokalizacji do chronionej lokalizacji, plik zachowuje mniej ograniczone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2755">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="1e4ef-2756">Sprawdź, czy nie są Przedstawiamy zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2756">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2757">W tym przykładzie użyto `Rename` funkcję, aby zmienić nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2757">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="1e4ef-2758">Do celów tego przykładu założono, że katalogi, które są określone w już istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2758">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-2759">Ścieżka jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2759">Path is invalid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-2760"><paramref name="OldPath" /> Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2760"><paramref name="OldPath" /> file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2761">Nie można zmienić nazwy do innego urządzenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2761">Cannot rename to different device.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file.md"><span data-ttu-id="1e4ef-2762">Instrukcje: Zmień nazwę pliku w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2762">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberSignature Language="F#" Value="static member Reset : unit -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e4ef-2763">Zamyka wszystkie dysku pliki otwierane przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2763">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-2764"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Reset" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2764">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span></span> <span data-ttu-id="1e4ef-2765">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2765">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2766">`Reset` Funkcji spowoduje zamknięcie wszystkich aktywnych plików otwartych przez `FileOpen` działa i ma taką samą funkcję jak `FileClose()` bez żadnych parametrów.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2766">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2767">W tym przykładzie użyto `Reset` funkcję, aby zamknąć wszystkie otwarte pliki i zapisać zawartość wszystkie bufory plików na dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2767">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="1e4ef-2768">Zwróć uwagę na użycie `Object` zmiennej `FileNumber` zarówno jako ciąg i numeru.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2768">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/end-statement.md"><span data-ttu-id="1e4ef-2769">End — Instrukcja</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2769">End Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member RmDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.RmDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="1e4ef-2770">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2770">Required.</span></span> <span data-ttu-id="1e4ef-2771">Wyrażenie ciągu, identyfikująca katalogu lub folderu, do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2771">A string expression that identifies the directory or folder to be removed.</span></span> <span data-ttu-id="1e4ef-2772"><paramref name="Path" /> można dołączyć dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2772"><paramref name="Path" /> can include the drive.</span></span> <span data-ttu-id="1e4ef-2773">Jeśli dysk nie zostanie określony, <see langword="RmDir" /> powoduje usunięcie katalogu na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2773">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2774">Usuwa istniejącego katalogu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2774">Removes an existing directory.</span></span> <span data-ttu-id="1e4ef-2775"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="RmDir" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2775">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span></span> <span data-ttu-id="1e4ef-2776">Aby uzyskać więcej informacji, zobacz <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2776">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2777">Błąd występuje, Jeśli spróbujesz użyć `RmDir` w katalogu, który zawiera pliki.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2777">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="1e4ef-2778">Użyj `Kill` funkcję, aby usunąć wszystkie pliki, zanim spróbujesz usunąć katalog.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2778">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2779">W tym przykładzie użyto `RmDir` funkcję, aby usunąć istniejący katalog.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2779">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-2780"><paramref name="Path" /> nie jest określona lub jest pusty.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2780"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2781">Katalog docelowy zawiera pliki.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2781">Target directory contains files.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e4ef-2782">Katalog nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2782">Directory does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-2783">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2783">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-2784"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2784">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="1e4ef-2785">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2785">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Seek : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Seek FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2786">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2786">Required.</span></span> <span data-ttu-id="1e4ef-2787"><see langword="Integer" /> Zawierający prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2787">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2788">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2788">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-2789"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2789">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="1e4ef-2790">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2790">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2791">A <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2791">A <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2792">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (równoważne do 2 ^ 31 - 1) (włącznie).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2792">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 - 1), inclusive.</span></span>  
  
 <span data-ttu-id="1e4ef-2793">Poniżej przedstawiono wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2793">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="1e4ef-2794">Tryb</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2794">Mode</span></span>|<span data-ttu-id="1e4ef-2795">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2795">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="1e4ef-2796">Liczbę odczytywanych lub zapisywanych następnego rekordu</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2796">Number of the next record read or written</span></span>|  
|<span data-ttu-id="1e4ef-2797">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2797">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="1e4ef-2798">Pozycja bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2798">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="1e4ef-2799">Pierwszy bajt w pliku znajduje się na pozycji 1, drugi bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2799">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2800">W tym przykładzie użyto `Seek` funkcja zwraca bieżącą pozycję w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2800">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="1e4ef-2801">W przykładzie założono `TestFile` to plik zawierający rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2801">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="1e4ef-2802">Do plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2802">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="1e4ef-2803">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2803">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1e4ef-2804">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2804">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="1e4ef-2805">W tym przykładzie użyto `Seek` funkcję, aby ustawić położenie do następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2805">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="1e4ef-2806">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2806">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1e4ef-2807">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2807">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2808">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2808">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-2809">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2809">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-2810">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2810">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberSignature Language="F#" Value="static member Seek : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Seek (FileNumber, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2811">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2811">Required.</span></span> <span data-ttu-id="1e4ef-2812"><see langword="Integer" /> Zawierający prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2812">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <param name="Position"><span data-ttu-id="1e4ef-2813">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2813">Required.</span></span> <span data-ttu-id="1e4ef-2814">Jeśli wystąpią liczbą z zakresu 1-2 147 483 647, włącznie, która wskazuje, gdzie następnego odczyt/zapis operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2814">Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2815">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2815">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1e4ef-2816"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2816">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="1e4ef-2817">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2817">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2818">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (równoważne do 2 ^ 31 - 1) (włącznie).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2818">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 - 1), inclusive.</span></span>  
  
 <span data-ttu-id="1e4ef-2819">Poniżej przedstawiono wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2819">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="1e4ef-2820">Tryb</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2820">Mode</span></span>|<span data-ttu-id="1e4ef-2821">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2821">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="1e4ef-2822">Liczbę odczytywanych lub zapisywanych następnego rekordu</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2822">Number of the next record read or written</span></span>|  
|<span data-ttu-id="1e4ef-2823">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2823">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="1e4ef-2824">Pozycja bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2824">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="1e4ef-2825">Pierwszy bajt w pliku znajduje się na pozycji 1, drugi bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2825">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2826">W tym przykładzie użyto `Seek` funkcja zwraca bieżącą pozycję w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2826">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="1e4ef-2827">W przykładzie założono `TestFile` to plik zawierający rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2827">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="1e4ef-2828">Do plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2828">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="1e4ef-2829">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2829">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1e4ef-2830">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2830">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="1e4ef-2831">W tym przykładzie użyto `Seek` funkcję, aby ustawić położenie do następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2831">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="1e4ef-2832">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2832">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1e4ef-2833">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2833">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2834">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2834">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="1e4ef-2835">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2835">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="1e4ef-2836">Zapisywanie w plikach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2836">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberSignature Language="F#" Value="static member SetAttr : string * Microsoft.VisualBasic.FileAttribute -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.SetAttr (PathName, Attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1e4ef-2837">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2837">Required.</span></span> <span data-ttu-id="1e4ef-2838">Wyrażenie ciągu, który określa nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2838">A string expression that specifies a file name.</span></span> <span data-ttu-id="1e4ef-2839"><paramref name="PathName" /> może zawierać katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2839"><paramref name="PathName" /> can include directory or folder, and drive.</span></span></param>
        <param name="Attributes"><span data-ttu-id="1e4ef-2840">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2840">Required.</span></span> <span data-ttu-id="1e4ef-2841">Wyrażenie stałe i liczbowego, w których suma określa atrybuty pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2841">Constant or numeric expression, whose sum specifies file attributes.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2842">Ustawia atrybut informacji dla pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2842">Sets attribute information for a file.</span></span> <span data-ttu-id="1e4ef-2843"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="SetAttr" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2843">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span></span> <span data-ttu-id="1e4ef-2844">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2844">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2845">Błąd czasu wykonywania występuje, Jeśli spróbujesz ustawić atrybuty otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2845">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="1e4ef-2846">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2846">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="1e4ef-2847">Wartość</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2847">Value</span></span>|<span data-ttu-id="1e4ef-2848">Stała</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2848">Constant</span></span>|<span data-ttu-id="1e4ef-2849">Opis</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2849">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="1e4ef-2850">Normalny (domyślnie).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2850">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="1e4ef-2851">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2851">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="1e4ef-2852">Ukryte.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2852">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="1e4ef-2853">System plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2853">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="1e4ef-2854">Etykieta woluminu</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2854">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="1e4ef-2855">Katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2855">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="1e4ef-2856">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2856">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="1e4ef-2857">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2857">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2858">Te wyliczenia są określane za pomocą języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2858">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="1e4ef-2859">Nazwy mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2859">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2860">W tym przykładzie użyto `SetAttr` funkcję, aby ustawić atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2860">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e4ef-2861"><paramref name="Attribute" /> Typ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2861"><paramref name="Attribute" /> type is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberSignature Language="F#" Value="static member SPC : int16 -&gt; Microsoft.VisualBasic.SpcInfo" Usage="Microsoft.VisualBasic.FileSystem.SPC Count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count"><span data-ttu-id="1e4ef-2862">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2862">Required.</span></span> <span data-ttu-id="1e4ef-2863">Liczba miejsc do magazynowania, aby wstawić przed wyświetleniem lub drukowanie następnego wyrażenia na liście.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2863">The number of spaces to insert before displaying or printing the next expression in a list.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2864">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2864">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2865">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2865">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2866">Jeśli `Count` jest mniejsza niż szerokość linii danych wyjściowych, natychmiast następną pozycję wydruku następuje liczba wydrukowanych spacji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2866">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="1e4ef-2867">Jeśli`Count` jest większa niż szerokość linii danych wyjściowych, `SPC` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2867">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="1e4ef-2868">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2868">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="1e4ef-2869">Na przykład, jeśli bieżącej pozycji drukowania jest 24, szerokość linii danych wyjściowych to 80 i określeniu `SPC(90)`, drukowania dalej rozpocznie się od pozycji 34 (bieżącej pozycji drukowania + pozostałą część 90/80).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2869">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="1e4ef-2870">Jeśli różnica między bieżącą pozycję wydruku i szerokości linii danych wyjściowych jest mniejsza niż `Count` (lub `Count` `Mod` *szerokość*), `SPC` funkcji nakłada się na początku następnego wiersza i generuje miejsca do magazynowania jest równa `Count` -(*szerokość* - *bieżąca_pozycja_wydruku*).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2870">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` - (*width* - *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2871">Upewnij się, że kolumny tabel są dostatecznie szeroka umożliwić szerokie litery.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2871">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2872">W tym przykładzie użyto `SPC` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2872">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="1e4ef-2873">Mod — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2873">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-2874">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2874">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberSignature Language="F#" Value="static member TAB : unit -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e4ef-2875">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2875">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2876">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2876">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2877">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większy niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2877">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="1e4ef-2878">Jeśli `Column` jest mniejszy niż 1 `TAB` Przenosi pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2878">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="1e4ef-2879">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2879">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="1e4ef-2880">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2880">Column Mod width</span></span>  
  
 <span data-ttu-id="1e4ef-2881">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, drukowania dalej rozpocznie się w kolumnie 10 (reszta 90/80).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2881">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="1e4ef-2882">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania drukowania rozpoczyna się w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2882">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="1e4ef-2883">Jeśli obliczonej pozycji drukowania jest większy niż bieżąca pozycja drukowania, drukowanie rozpoczyna się na obliczony wydrukować pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2883">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="1e4ef-2884">Skrajnie po lewej stronie pozycji drukowania w wierszu danych wyjściowych ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2884">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="1e4ef-2885">Kiedy używasz `Print` lub `PrintLine` funkcji Drukowanie do plików, po prawej stronie pozycji drukowania jest szerokość bieżącego pliku wyjściowego, który można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2885">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="1e4ef-2886">`TAB` Funkcji można używać z `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2886">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="1e4ef-2887">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2887">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2888">Upewnij się, że kolumny tabel są dostatecznie szeroka, aby zawierać litery szerokości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2888">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2889">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2889">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="1e4ef-2890">Mod — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2890">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberSignature Language="F#" Value="static member TAB : int16 -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB Column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column"><span data-ttu-id="1e4ef-2891">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2891">Optional.</span></span> <span data-ttu-id="1e4ef-2892">Numer kolumny, przenieść przed wyświetleniem lub drukowanie następnego wyrażenia na liście.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2892">The column number moved to before displaying or printing the next expression in a list.</span></span> <span data-ttu-id="1e4ef-2893">W przypadku pominięcia <see langword="TAB" /> przenosi punkt wstawiania do początku następnego strefy drukowania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2893">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2894">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2894">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="1e4ef-2895">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2895">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2896">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większa niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2896">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="1e4ef-2897">Jeśli `Column` jest mniejszy niż 1 `TAB` Przenosi pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2897">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="1e4ef-2898">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2898">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="1e4ef-2899">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2899">Column Mod width</span></span>  
  
 <span data-ttu-id="1e4ef-2900">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, drukowania dalej rozpocznie się w kolumnie 10 (reszta 90/80).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2900">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="1e4ef-2901">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania drukowania rozpoczyna się w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2901">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="1e4ef-2902">Jeśli obliczonej pozycji drukowania jest większa od bieżącej pozycji drukowania, drukowanie rozpoczyna się na obliczony wydrukować pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2902">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="1e4ef-2903">Skrajnie po lewej stronie pozycji drukowania w wierszu danych wyjściowych ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2903">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="1e4ef-2904">Kiedy używasz `Print` lub `PrintLine` funkcji Drukowanie do plików, po prawej stronie pozycji drukowania jest szerokość bieżącego pliku wyjściowego, który można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2904">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="1e4ef-2905">`TAB` Funkcji można używać z `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2905">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="1e4ef-2906">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2906">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4ef-2907">Upewnij się, że kolumny tabel są dostatecznie szeroka, aby zawierać litery szerokości.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2907">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2908">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2908">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="1e4ef-2909">Mod — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2909">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4ef-2910">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2910">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2911"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2911">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2912">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2912">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Unlock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2913">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2913">Required.</span></span> <span data-ttu-id="1e4ef-2914">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2914">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2915">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2915">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2916"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2916">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2917">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2917">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2918">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2918">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1e4ef-2919">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2919">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1e4ef-2920">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2920">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1e4ef-2921">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2921">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1e4ef-2922">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2922">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1e4ef-2923">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2923">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2924">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2924">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1e4ef-2925">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2925">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2926">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2926">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2927">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2927">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2928">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2928">Required.</span></span> <span data-ttu-id="1e4ef-2929">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2929">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="1e4ef-2930">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2930">Optional.</span></span> <span data-ttu-id="1e4ef-2931">Liczba tylko rekord lub bajt do zablokowania lub odblokowania</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2931">Number of the only record or byte to lock or unlock</span></span></param>
        <summary><span data-ttu-id="1e4ef-2932">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2932">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2933"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2933">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2934">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2934">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2935">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2935">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1e4ef-2936">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2936">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1e4ef-2937">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2937">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1e4ef-2938">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2938">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1e4ef-2939">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2939">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1e4ef-2940">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2940">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2941">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2941">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1e4ef-2942">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2942">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2943">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2943">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2944">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2944">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2945">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2945">Required.</span></span> <span data-ttu-id="1e4ef-2946">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2946">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="1e4ef-2947">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2947">Optional.</span></span> <span data-ttu-id="1e4ef-2948">Liczba pierwszy rekord lub bajt, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2948">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="1e4ef-2949">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2949">Optional.</span></span> <span data-ttu-id="1e4ef-2950">Liczba ostatnich rekord lub bajt, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2950">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2951">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2951">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1e4ef-2952"><see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2952">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1e4ef-2953">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2953">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2954">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2954">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1e4ef-2955">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2955">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1e4ef-2956">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2956">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1e4ef-2957">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2957">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1e4ef-2958">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2958">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1e4ef-2959">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2959">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2960">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2960">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1e4ef-2961">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2961">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2962">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2962">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2963">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2963">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Write : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Write (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2964">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2964">Required.</span></span> <span data-ttu-id="1e4ef-2965"><see langword="Integer" /> Wyrażenia zawierającego Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2965">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1e4ef-2966">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2966">Optional.</span></span> <span data-ttu-id="1e4ef-2967">Co najmniej jednego rozdzielonych przecinkami wyrażenia można zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2967">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="1e4ef-2968">Zapisuje dane do pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2968">Writes data to a sequential file.</span></span> <span data-ttu-id="1e4ef-2969">Dane zapisane z <see langword="Write" /> są zazwyczaj odczytywane z pliku za pomocą <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2969">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-2970">`Write` i `WriteLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2970">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-2971">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2971">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-2972">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2972">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-2973">Jeżeli pominięto `Output`, wydrukowaniu pusty wiersz do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2973">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="1e4ef-2974">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2974">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="1e4ef-2975">W odróżnieniu od `Print` funkcji `Write` funkcji wstawia przecinkami, między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2975">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="1e4ef-2976">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2976">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="1e4ef-2977">Gdy `Write` służy do zapisywania danych do pliku, tylko liczbowe, `Boolean`, Data, null, i `Error` formatów danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2977">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="1e4ef-2978">Następujące założenia uniwersalne są przestrzegane, dzięki czemu dane mogą zawsze odczytać i poprawnie interpretowany przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2978">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="1e4ef-2979">Dane liczbowe są zawsze zapisywane używającego kropki jako separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2979">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="1e4ef-2980">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2980">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="1e4ef-2981">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2981">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="1e4ef-2982">Dane daty są zapisywane do pliku przy użyciu formatu daty uniwersalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2982">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="1e4ef-2983">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2983">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="1e4ef-2984">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2984">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1e4ef-2985">Jednak w przypadku danych o wartości null `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2985">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-2986">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2986">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="1e4ef-2987">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2987">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="1e4ef-2988">`WriteLine` Wstawia znak nowego wiersza (czyli kanału informacyjnego powrotu karetki/wiersza lub `Chr(13) + Chr(10)`) po zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2988">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="1e4ef-2989">Możesz osadzić znaki cudzysłowu w ciągu za pomocą podwójnego cudzysłowu lub "".</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2989">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="1e4ef-2990">Na przykład</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2990">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="1e4ef-2991">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2991">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="1e4ef-2992">Zapisywanie do pliku za pomocą `Write` lub `WriteLine` functions wymaga `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2992">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-2993">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2993">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-2994">W tym przykładzie użyto `Write` funkcji do zapisu danych pierwotnych pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2994">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1e4ef-2995">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2995">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-2996">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2996">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-2997">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2997">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-2998">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2998">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.WriteLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1e4ef-2999">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-2999">Required.</span></span> <span data-ttu-id="1e4ef-3000"><see langword="Integer" /> Wyrażenia zawierającego Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3000">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1e4ef-3001">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3001">Optional.</span></span> <span data-ttu-id="1e4ef-3002">Co najmniej jednego rozdzielonych przecinkami wyrażenia można zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3002">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="1e4ef-3003">Zapisuje dane do pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3003">Writes data to a sequential file.</span></span> <span data-ttu-id="1e4ef-3004">Dane zapisane z <see langword="Write" /> są zazwyczaj odczytywane z pliku za pomocą <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3004">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4ef-3005">`Write` i `WriteLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3005">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1e4ef-3006">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3006">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1e4ef-3007">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3007">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1e4ef-3008">Jeżeli pominięto `Output`, wydrukowaniu pusty wiersz do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3008">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="1e4ef-3009">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3009">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="1e4ef-3010">W odróżnieniu od `Print` funkcji `Write` funkcji wstawia przecinkami, między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3010">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="1e4ef-3011">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3011">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="1e4ef-3012">Gdy `Write` służy do zapisywania danych do pliku, tylko liczbowe, `Boolean`, Data, null, i `Error` formatów danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3012">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="1e4ef-3013">Następujące założenia uniwersalne są przestrzegane, dzięki czemu dane mogą zawsze odczytać i poprawnie interpretowany przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3013">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="1e4ef-3014">Dane liczbowe są zawsze zapisywane używającego kropki jako separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3014">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="1e4ef-3015">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3015">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="1e4ef-3016">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3016">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="1e4ef-3017">Dane daty są zapisywane do pliku przy użyciu formatu daty uniwersalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3017">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="1e4ef-3018">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3018">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="1e4ef-3019">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3019">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1e4ef-3020">Jednak w przypadku danych o wartości null `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3020">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="1e4ef-3021">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3021">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="1e4ef-3022">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3022">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="1e4ef-3023">`WriteLine` Wstawia znak nowego wiersza (czyli kanału informacyjnego powrotu karetki/wiersza lub `Chr(13) + Chr(10)`) po zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3023">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="1e4ef-3024">Możesz osadzić znaki cudzysłowu w ciągu za pomocą podwójnego cudzysłowu lub "".</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3024">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="1e4ef-3025">Na przykład</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3025">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="1e4ef-3026">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3026">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="1e4ef-3027">Zapisywanie do pliku za pomocą `Write` lub `WriteLine` functions wymaga `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3027">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1e4ef-3028">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3028">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4ef-3029">W tym przykładzie użyto `Write` funkcji do zapisu danych pierwotnych pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3029">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="1e4ef-3030">Dostęp do plików za pomocą Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3030">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="1e4ef-3031">Instrukcje: Zapisywanie tekstu do plików w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3031">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="1e4ef-3032">Instrukcje: Zapisywanie tekstu do pliku za pomocą Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e4ef-3032">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>