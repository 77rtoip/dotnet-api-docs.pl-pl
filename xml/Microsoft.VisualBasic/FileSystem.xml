<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1bc3f-101"><see langword="FileSystem" /> Moduł zawiera procedury, które są używane do wykonywania operacji pliku, katalogu lub folderu i systemu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span></span> <span data-ttu-id="1bc3f-102"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż przy użyciu <see langword="FileSystem" /> modułu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span></span> <span data-ttu-id="1bc3f-103">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-104">Ten moduł obsługuje słów kluczowych języka Visual Basic i elementy członkowskie biblioteki wykonawczej, które uzyskują dostęp do plików i folderów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-105">W tym przykładzie użyto `GetAttr` funkcji, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="1bc3f-106">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-106">Required.</span></span> <span data-ttu-id="1bc3f-107">A <see langword="String" /> Wyrażenie identyfikujące które katalogu lub folderu staje się nowego domyślnego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span></span> <span data-ttu-id="1bc3f-108"><c>Ścieżka</c> mogą obejmować dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-108"><c>Path</c> may include the drive.</span></span> <span data-ttu-id="1bc3f-109">Jeśli dysk nie zostanie wskazany, <see langword="ChDir" /> zmiany domyślnego katalogu lub folderu na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-110">Zmiany bieżącego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-110">Changes the current directory or folder.</span></span> <span data-ttu-id="1bc3f-111"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="ChDir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span></span> <span data-ttu-id="1bc3f-112">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-113">`ChDir` Funkcja zmiany domyślnego katalogu, ale nie domyślnym dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-113">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="1bc3f-114">Na przykład, jeśli dysk domyślny jest C, następująca instrukcja zmiany domyślnego katalogu na dysku D, ale pozostanie na domyślnym dysku C:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-114">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="1bc3f-115">Można ustawić względne zmiany katalogu jest przez wpisanie dwóch kropek w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-115">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-116">`ChDir` Funkcja wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-116">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="1bc3f-117">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-117">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-118">W tym przykładzie użyto `ChDir` funkcji, aby zmienić bieżącego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-118">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-119"><paramref name="Path" /> jest pusty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-119"><paramref name="Path" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-120">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-120">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-121">Zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-121">Changes the current drive.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="1bc3f-122">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-122">Required.</span></span> <span data-ttu-id="1bc3f-123">Wyrażenia ciągu, który określa istniejący dysk.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-123">String expression that specifies an existing drive.</span></span> <span data-ttu-id="1bc3f-124">Jeśli podasz ciąg o zerowej długości (""), nie powoduje zmiany bieżącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-124">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="1bc3f-125">Jeśli <c>dysków</c> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="1bc3f-126">Zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-126">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-127">`ChDrive` Funkcja wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-127">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="1bc3f-128">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-128">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-129">W tym przykładzie użyto `ChDrive` funkcji, aby zmienić bieżącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-129">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="1bc3f-130">Funkcja zwraca wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-130">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-131">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-131">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="1bc3f-132">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-132">Required.</span></span> <span data-ttu-id="1bc3f-133">Wyrażenia ciągu, który określa istniejący dysk.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-133">String expression that specifies an existing drive.</span></span> <span data-ttu-id="1bc3f-134">Jeśli podasz ciąg o zerowej długości (""), nie powoduje zmiany bieżącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-134">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="1bc3f-135">Jeśli <c>dysków</c> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="1bc3f-136">Zmienia bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-136">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-137">`ChDrive` Funkcja wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-137">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="1bc3f-138">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-138">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-139">W tym przykładzie użyto `ChDrive` funkcji, aby zmienić bieżącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-139">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="1bc3f-140">Funkcja zwraca wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-140">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-141">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-141">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-142">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-142">Returns a string representing the current path.</span></span> <span data-ttu-id="1bc3f-143"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="1bc3f-144">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1bc3f-145">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-145">Returns a string representing the current path.</span></span> <span data-ttu-id="1bc3f-146"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="1bc3f-147">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-148">Ciąg reprezentujący bieżącej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-148">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1bc3f-149">W tym przykładzie użyto `CurDir` funkcja zwracająca bieżącej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-149">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="1bc3f-150">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-150">Optional.</span></span> <span data-ttu-id="1bc3f-151"><see langword="Char" /> wyrażenie określające istniejący dysk.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-151"><see langword="Char" /> expression that specifies an existing drive.</span></span> <span data-ttu-id="1bc3f-152">Jeśli dysk nie zostanie wskazany lub <c>dysku</c> jest ciągiem o zerowej długości (""), <see langword="CurDir" /> zwraca ścieżkę dla bieżącego dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-153">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-153">Returns a string representing the current path.</span></span> <span data-ttu-id="1bc3f-154"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="1bc3f-155">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-156">Ciąg reprezentujący bieżącej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-156">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1bc3f-157">W tym przykładzie użyto `CurDir` funkcja zwracająca bieżącej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-158">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="1bc3f-159"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="1bc3f-160">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1bc3f-161">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="1bc3f-162"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="1bc3f-163">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-164">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-165">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i jednego znaku (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-165">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="1bc3f-166">`VbVolume` zwraca etykietę woluminu dla dysku zamiast określoną nazwą pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-166">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="1bc3f-167">Należy podać `PathName` po raz pierwszy należy wywołać `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-167">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="1bc3f-168">Aby pobrać następny element, należy wybrać kolejnych wywołań `Dir` funkcji bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-168">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-169">By działała poprawnie, `Dir` wymaga funkcji <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-169">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="1bc3f-170">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-170">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="1bc3f-171">`Attributes` Argumentu wyliczenia wartości są następujące:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-171">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="1bc3f-172">Wartość</span><span class="sxs-lookup"><span data-stu-id="1bc3f-172">Value</span></span>|<span data-ttu-id="1bc3f-173">Stała</span><span class="sxs-lookup"><span data-stu-id="1bc3f-173">Constant</span></span>|<span data-ttu-id="1bc3f-174">Opis</span><span class="sxs-lookup"><span data-stu-id="1bc3f-174">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="1bc3f-175">Domyślne.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-175">Default.</span></span> <span data-ttu-id="1bc3f-176">Określa pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-176">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="1bc3f-177">Określa pliki tylko do odczytu, a także pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-177">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="1bc3f-178">Określa ukryte pliki i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-178">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="1bc3f-179">Określa pliki systemowe i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-179">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="1bc3f-180">Określa etykietę woluminu; Jeśli określono inny atrybut, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-180">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="1bc3f-181">Określa katalogi lub foldery i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-181">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="1bc3f-182">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-182">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="1bc3f-183">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-183">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-184">Te wyliczenia są określane przez język Visual Basic i mogą być używane w dowolne miejsce w kodzie, a nie rzeczywiste wartości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-184">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-185">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją niektórych plików i katalogów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-185">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1bc3f-186">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-186">Optional.</span></span> <span data-ttu-id="1bc3f-187"><see langword="String" /> wyrażenie, które określa nazwę pliku, nazwy katalogu lub folderu lub etykiety woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-187"><see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span></span> <span data-ttu-id="1bc3f-188">Ciąg o zerowej długości (<see langword="&quot;&quot;" />) jest zwracany, jeśli <c>PathName</c> nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span></span></param>
        <param name="Attributes"><span data-ttu-id="1bc3f-189">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-189">Optional.</span></span> <span data-ttu-id="1bc3f-190">Określa atrybutów pliku, którego wartość wyrażenie wyliczenia lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-190">Enumeration or numeric expression whose value specifies file attributes.</span></span> <span data-ttu-id="1bc3f-191">Pominięcie <see langword="Dir" /> zwraca plików zgodnych ze <c>PathName</c> , ale żadne atrybuty nie miały.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span></span></param>
        <summary><span data-ttu-id="1bc3f-192">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="1bc3f-193"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="1bc3f-194">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-195">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-196">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i jednego znaku (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-196">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="1bc3f-197">`VbVolume` zwraca etykietę woluminu dla dysku zamiast określoną nazwą pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-197">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="1bc3f-198">Należy podać `PathName` po raz pierwszy należy wywołać `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-198">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="1bc3f-199">Aby pobrać następny element, należy wybrać kolejnych wywołań `Dir` funkcji bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-199">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-200">By działała poprawnie, `Dir` wymaga funkcji <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-200">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="1bc3f-201">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-201">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="1bc3f-202">`Attributes` Argumentu wyliczenia wartości są następujące:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-202">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="1bc3f-203">Wartość</span><span class="sxs-lookup"><span data-stu-id="1bc3f-203">Value</span></span>|<span data-ttu-id="1bc3f-204">Stała</span><span class="sxs-lookup"><span data-stu-id="1bc3f-204">Constant</span></span>|<span data-ttu-id="1bc3f-205">Opis</span><span class="sxs-lookup"><span data-stu-id="1bc3f-205">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="1bc3f-206">Domyślne.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-206">Default.</span></span> <span data-ttu-id="1bc3f-207">Określa pliki, które nie atrybuty nie miały.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-207">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="1bc3f-208">Określa pliki tylko do odczytu, oprócz plików, które nie atrybuty nie miały.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-208">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="1bc3f-209">Określa pliki ukryte, oprócz plików, które nie atrybuty nie miały.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-209">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="1bc3f-210">Określa pliki systemowe, oprócz plików, które nie atrybuty nie miały.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-210">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="1bc3f-211">Określa etykietę woluminu; Jeśli określono inny atrybut, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-211">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="1bc3f-212">Określa katalogi lub foldery, oprócz plików, które nie atrybuty nie miały.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-212">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="1bc3f-213">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-213">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="1bc3f-214">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-214">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-215">Te wyliczenia są określane przez język Visual Basic i mogą być używane w dowolne miejsce w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-215">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-216">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją niektórych plików i katalogów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-216">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-217">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-217">Required.</span></span> <span data-ttu-id="1bc3f-218"><see langword="Integer" /> Zawiera dowolną liczbę prawidłowy plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-218">An <see langword="Integer" /> that contains any valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-219">Zwraca wartość logiczną <see langword="True" /> otwarcia koniec pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-220">Zwraca wartość logiczną <see langword="True" /> otwarcia koniec pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-221">Użyj `EOF` w celu uniknięcia błędów generowanych podczas próby pobrania danych wejściowych poza końcem pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-221">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="1bc3f-222">`EOF` Funkcja zwraca `False` dopóki nie zostanie osiągnięty koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-222">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="1bc3f-223">W przypadku plików otwartych dla `Random` lub `Binary` dostępu, `EOF` zwraca `False` dopóki ostatnio wykonana `FileGet` funkcji nie może odczytać całego rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-223">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="1bc3f-224">W przypadku plików otwartych dla `Binary` dostępu, próba odczytania pliku przy użyciu `Input` działać do czasu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-224">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="1bc3f-225">Użyj `LOF` i `Loc` funkcje zamiast `EOF` podczas odczytywania plików binarnych z `Input`, lub użyj `Get` przy użyciu `EOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-225">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="1bc3f-226">W przypadku plików otwartych dla `Output`, `EOF` zawsze zwraca `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-226">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-227">W tym przykładzie użyto `EOF` funkcji, aby wykryć koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-227">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="1bc3f-228">W tym przykładzie założono, że `Testfile` to plik tekstowy, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-228">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-229">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-229">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-230">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-230">Required.</span></span> <span data-ttu-id="1bc3f-231"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-231"><see langword="Integer" />.</span></span> <span data-ttu-id="1bc3f-232">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-232">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-233">Zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-234"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileAttr" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span></span> <span data-ttu-id="1bc3f-235">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-236">Następujące wartości wyliczenia wskazują tryb dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-236">The following enumeration values indicate the file access mode:</span></span>  
  
 <span data-ttu-id="1bc3f-237"><list type="table"><item><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="1bc3f-237"><list type="table"><item><term> Value</span></span>  
  
 <span data-ttu-id="1bc3f-238"></term><description> Tryb</span><span class="sxs-lookup"><span data-stu-id="1bc3f-238"></term><description> Mode</span></span>  
  
 <span data-ttu-id="1bc3f-239"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="1bc3f-239"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="1bc3f-240"></term><description><see langword="OpenMode.Input" /></description></item><item><term> 2</span><span class="sxs-lookup"><span data-stu-id="1bc3f-240"></term><description><see langword="OpenMode.Input" /></description></item><item><term> 2</span></span>  
  
 <span data-ttu-id="1bc3f-241"></term><description><see langword="OpenMode.Output" /></description></item><item><term> 4</span><span class="sxs-lookup"><span data-stu-id="1bc3f-241"></term><description><see langword="OpenMode.Output" /></description></item><item><term> 4</span></span>  
  
 <span data-ttu-id="1bc3f-242"></term><description><see langword="OpenMode.Random" /></description></item><item><term> 8</span><span class="sxs-lookup"><span data-stu-id="1bc3f-242"></term><description><see langword="OpenMode.Random" /></description></item><item><term> 8</span></span>  
  
 <span data-ttu-id="1bc3f-243"></term><description><see langword="OpenMode.Append" /></description></item><item><term> 32</span><span class="sxs-lookup"><span data-stu-id="1bc3f-243"></term><description><see langword="OpenMode.Append" /></description></item><item><term> 32</span></span>  
  
 </term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-244">Ta funkcja zwraca wartość reprezentującą tryb otwierania plików za pomocą wyliczenie `FileOpen` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-244">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-245">W tym przykładzie użyto `FileAttr` funkcja zwraca tryb pliku otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-245">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers"><span data-ttu-id="1bc3f-246">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-246">Optional.</span></span> <span data-ttu-id="1bc3f-247">Tablica parametrów 0 lub więcej kanałów zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-247">Parameter array of 0 or more channels to be closed.</span></span></param>
        <summary><span data-ttu-id="1bc3f-248">Na koniec zostanie wejścia/wyjścia (We/Wy) do pliku otwartego przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-248">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-249"><see langword="My" /> zapewnia lepszą wydajność i wydajność w operacji We/Wy na plikach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-249"><see langword="My" /> gives you better productivity and performance in file I/O operations.</span></span> <span data-ttu-id="1bc3f-250">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-250">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-251">`FileClose` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-251">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-252">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-252">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-253">Aby uzyskać więcej informacji, zobacz [porady: Odczyt tekstu z plików za pomocą StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[porady: pisanie tekstu do plików za pomocą StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), i [wskazówki: manipulowanie plików i katalogów w Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-253">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="1bc3f-254">W przypadku pominięcia `FileNumbers`, wszystkie pliki active otwarty przez `FileOpen` funkcji są zamknięte.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-254">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="1bc3f-255">Podczas zamykania pliki, które zostały otwarte dla `Output` lub `Append`, końcowego buforu danych wyjściowych jest zapisywany w buforze systemu operacyjnego dla tego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-255">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="1bc3f-256">Wszystkie ilość miejsca w buforze skojarzone z zamkniętego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-256">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="1bc3f-257">Gdy `FileClose` funkcja jest wykonywana, skojarzenie pliku z jego plików numer kończy się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-257">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-258">W tym przykładzie użyto `FileClose` funkcji, aby zamknąć plik otwarty do `Input`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-258">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1bc3f-259"><paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-259"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="1bc3f-260">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-260">Required.</span></span> <span data-ttu-id="1bc3f-261"><see langword="String" /> wyrażenie, które określa nazwę pliku, który ma zostać skopiowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-261"><see langword="String" /> expression that specifies the name of the file to be copied.</span></span> <span data-ttu-id="1bc3f-262"><c>Źródło</c> mogą obejmować katalogu lub folderu i dysku z plikiem źródłowym.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-262"><c>Source</c> may include the directory or folder, and drive, of the source file.</span></span></param>
        <param name="Destination"><span data-ttu-id="1bc3f-263">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-263">Required.</span></span> <span data-ttu-id="1bc3f-264"><see langword="String" /> wyrażenie określające nazwa pliku docelowego.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-264"><see langword="String" /> expression that specifies the destination file name.</span></span> <span data-ttu-id="1bc3f-265"><c>Docelowy</c> mogą obejmować katalogu lub folderu i dysku, plik docelowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-265"><c>Destination</c> may include the directory or folder, and drive, of the destination file.</span></span></param>
        <summary><span data-ttu-id="1bc3f-266">Kopiuje plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-266">Copies a file.</span></span> <span data-ttu-id="1bc3f-267"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileCopy" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-267">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span></span> <span data-ttu-id="1bc3f-268">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-268">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-269">Jeśli spróbujesz użyć `FileCopy` działać na aktualnie otwarty plik, występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-269">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="1bc3f-270">`FileCopy` wymaga pełnego zaufania do pracy na dysku lokalnym.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-270">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-271">W tym przykładzie użyto `FileCopy` funkcji do kopiowania plików do innego.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-271">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="1bc3f-272">Do celów tego przykładu, zakłada, że `SrcFile` plik, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-272">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-273"><paramref name="Source" /> lub <paramref name="Destination" /> jest nieprawidłowa lub nie została określona.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-273"><paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-274">Plik jest już otwarty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-274">File is already open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-275">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-275">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1bc3f-276">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-276">Required.</span></span> <span data-ttu-id="1bc3f-277"><see langword="String" /> wyrażenie, które określa nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-277"><see langword="String" /> expression that specifies a file name.</span></span> <span data-ttu-id="1bc3f-278"><c>Nazwa ścieżki</c> mogą obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-278"><c>PathName</c> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-279">Zwraca <see langword="Date" /> wartość, która wskazuje datę i godzinę pliku zostało zapisane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-279">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span></span> <span data-ttu-id="1bc3f-280"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-280">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span></span> <span data-ttu-id="1bc3f-281">Aby uzyskać więcej informacji zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="1bc3f-281">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span></span></summary>
        <returns>
          <span data-ttu-id="1bc3f-282"><see langword="Date" /> wartość, która wskazuje datę i godzinę pliku utworzenia lub ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-282"><see langword="Date" /> value that indicates the date and time a file was created or last modified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1bc3f-283">W tym przykładzie użyto `FileDateTime` funkcji, aby określić datę i godzinę plik został utworzony lub ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-283">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="1bc3f-284">Format daty i godziny wyświetlane zależy od ustawień regionalnych systemu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-284">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-285"><paramref name="PathName" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-285"><paramref name="PathName" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-286">Plik docelowy nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-286">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-287">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-287">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-288"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-288">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-289">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-289">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-290">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-290">Required.</span></span> <span data-ttu-id="1bc3f-291">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-291">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-292">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-292">Required.</span></span> <span data-ttu-id="1bc3f-293">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-293">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-294">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-294">Optional.</span></span> <span data-ttu-id="1bc3f-295">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-295">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-296">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-296">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-297"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-297">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-298">Aby uzyskać więcej informacji zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span><span class="sxs-lookup"><span data-stu-id="1bc3f-298">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-299">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-299">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-300">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-300">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-301">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-301">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-302">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-302">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-303">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-303">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-304">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-304">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-305">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-305">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-306">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-306">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-307">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-307">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-308">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-308">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-309">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-309">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-310">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-310">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-311">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-311">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-312">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-312">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-313">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-313">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-314">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-314">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-315">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-315">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-316">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-316">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-317">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-317">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-318">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-318">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-319">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-319">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-320">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-320">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-321">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-321">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-322">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-322">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-323">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-323">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-324">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-324">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-325">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-325">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-326">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-326">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-327">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-327">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-328">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-328">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-329">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-329">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-330">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-330">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-331">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-331">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-332">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-332">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-333">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-333">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-334">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-334">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-335">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-335">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-336">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-336">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-337">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-337">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-338">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-338">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-339">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-339">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-340">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-340">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-341">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-341">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-342">Odczyt z pliku za pomocą`FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-342">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-343"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-343"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-344">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-344">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-345">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-345">Required.</span></span> <span data-ttu-id="1bc3f-346">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-346">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-347">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-347">Required.</span></span> <span data-ttu-id="1bc3f-348">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-348">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-349">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-349">Optional.</span></span> <span data-ttu-id="1bc3f-350">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-350">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-351">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-351">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-352"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-352">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-353">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-353">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-354">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-354">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-355">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-355">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-356">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-356">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-357">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-357">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-358">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-358">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-359">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-359">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-360">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-360">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-361">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-361">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-362">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-362">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-363">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-363">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-364">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-364">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-365">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-365">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-366">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-366">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-367">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-367">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-368">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-368">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-369">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-369">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-370">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-370">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-371">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-371">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-372">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-372">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-373">Jeśli nie jest używany deskryptora.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-373">If the descriptor is not used.</span></span> <span data-ttu-id="1bc3f-374">Następnie rozmiaru i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-374">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-375">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-375">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-376">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-376">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-377">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-377">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-378">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-378">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-379">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-379">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-380">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-380">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-381">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-381">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-382">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-382">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-383">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-383">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-384">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-384">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-385">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-385">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-386">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-386">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-387">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-387">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-388">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-388">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-389">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-389">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-390">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-390">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-391">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-391">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-392">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-392">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-393">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-393">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-394">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-394">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-395">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-395">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-396">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-396">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-397">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-397">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-398">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-398">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-399"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-399"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-400">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-400">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-401">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-401">Required.</span></span> <span data-ttu-id="1bc3f-402">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-402">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-403">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-403">Required.</span></span> <span data-ttu-id="1bc3f-404">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-404">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-405">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-405">Optional.</span></span> <span data-ttu-id="1bc3f-406">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-406">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-407">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-407">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-408"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-408">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-409">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-409">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-410">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-410">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-411">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-411">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-412">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-412">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-413">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-413">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-414">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-414">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-415">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-415">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-416">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-416">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-417">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-417">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-418">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-418">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-419">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-419">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-420">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-420">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-421">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-421">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-422">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-422">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-423">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-423">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-424">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-424">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-425">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-425">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-426">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-426">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-427">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-427">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-428">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-428">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-429">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-429">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-430">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-430">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-431">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-431">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-432">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-432">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-433">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-433">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-434">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-434">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-435">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-435">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-436">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-436">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-437">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-437">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-438">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-438">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-439">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-439">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-440">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-440">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-441">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-441">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-442">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-442">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-443">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-443">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-444">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-444">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-445">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-445">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-446">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-446">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-447">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-447">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-448">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-448">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-449">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-449">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-450">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-450">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-451">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-451">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-452">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-452">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-453">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-453">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-454"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-454"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-455">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-455">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-456">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-456">Required.</span></span> <span data-ttu-id="1bc3f-457">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-457">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-458">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-458">Required.</span></span> <span data-ttu-id="1bc3f-459">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-459">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-460">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-460">Optional.</span></span> <span data-ttu-id="1bc3f-461">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-461">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-462">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-462">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-463"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-463">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-464">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-464">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-465">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-465">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-466">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-466">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-467">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-467">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-468">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-468">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-469">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-469">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-470">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-470">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-471">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-471">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-472">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-472">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-473">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji`FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-473">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-474">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-474">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-475">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-475">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-476">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-476">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-477">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-477">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-478">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-478">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-479">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-479">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-480">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-480">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-481">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-481">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-482">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-482">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-483">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-483">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-484">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-484">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-485">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-485">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-486">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-486">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-487">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-487">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-488">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-488">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-489">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-489">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-490">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-490">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-491">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-491">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-492">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-492">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-493">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-493">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-494">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-494">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-495">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-495">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-496">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-496">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-497">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-497">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-498">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-498">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-499">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-499">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-500">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-500">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-501">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-501">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-502">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-502">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-503">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-503">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-504">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-504">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-505">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-505">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-506">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-506">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-507">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-507">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-508">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-508">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-509"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-509"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-510">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-510">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-511">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-511">Required.</span></span> <span data-ttu-id="1bc3f-512">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-512">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-513">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-513">Required.</span></span> <span data-ttu-id="1bc3f-514">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-514">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-515">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-515">Optional.</span></span> <span data-ttu-id="1bc3f-516">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-516">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-517">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-517">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-518"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-518">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-519">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-519">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-520">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-520">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-521">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-521">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-522">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-522">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-523">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-523">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-524">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-524">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-525">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-525">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-526">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-526">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-527">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-527">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-528">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-528">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-529">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-529">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-530">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-530">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-531">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-531">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-532">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-532">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-533">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-533">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-534">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-534">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-535">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-535">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-536">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-536">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-537">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-537">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-538">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-538">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-539">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-539">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-540">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-540">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-541">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-541">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-542">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-542">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-543">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-543">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-544">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-544">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-545">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-545">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-546">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-546">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-547">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-547">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-548">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-548">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-549">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-549">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-550">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-550">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-551">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-551">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-552">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-552">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-553">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-553">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-554">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-554">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-555">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-555">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-556">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-556">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-557">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-557">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-558">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-558">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-559">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-559">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-560">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-560">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-561">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-561">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-562">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-562">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-563">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-563">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-564"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-564"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-565">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-565">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-566">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-566">Required.</span></span> <span data-ttu-id="1bc3f-567">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-567">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-568">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-568">Required.</span></span> <span data-ttu-id="1bc3f-569">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-569">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-570">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-570">Optional.</span></span> <span data-ttu-id="1bc3f-571">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-571">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-572">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-572">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-573"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-573">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-574">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-574">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-575">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-575">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-576">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-576">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-577">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-577">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-578">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-578">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-579">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-579">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-580">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-580">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-581">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-581">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-582">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-582">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-583">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-583">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-584">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-584">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-585">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-585">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-586">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-586">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-587">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-587">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-588">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-588">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-589">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-589">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-590">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-590">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-591">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-591">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-592">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-592">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-593">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-593">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-594">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-594">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-595">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-595">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-596">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-596">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-597">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-597">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-598">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-598">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-599">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-599">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-600">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-600">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-601">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-601">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-602">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-602">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-603">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-603">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-604">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-604">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-605">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-605">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-606">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-606">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-607">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-607">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-608">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-608">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-609">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-609">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-610">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-610">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-611">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-611">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-612">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-612">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-613">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-613">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-614">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-614">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-615">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-615">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-616">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-616">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-617">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-617">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-618">Odczyt z pliku za pomocą`FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-618">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-619"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-619"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-620">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-620">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-621">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-621">Required.</span></span> <span data-ttu-id="1bc3f-622">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-622">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-623">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-623">Required.</span></span> <span data-ttu-id="1bc3f-624">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-624">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-625">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-625">Optional.</span></span> <span data-ttu-id="1bc3f-626">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-626">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-627">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-627">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-628"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-628">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-629">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-629">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-630">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-630">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-631">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-631">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-632">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-632">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-633">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-633">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-634">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-634">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-635">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-635">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-636">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-636">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-637">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-637">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-638">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-638">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-639">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-639">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-640">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-640">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-641">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-641">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-642">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-642">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-643">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-643">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-644">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-644">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-645">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-645">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-646">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-646">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-647">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-647">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-648">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-648">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-649">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-649">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-650">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-650">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-651">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-651">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-652">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-652">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-653">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-653">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-654">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-654">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-655">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-655">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-656">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-656">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-657">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-657">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-658">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-658">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-659">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-659">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-660">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-660">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-661">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-661">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-662">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-662">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-663">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-663">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-664">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-664">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-665">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-665">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-666">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-666">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-667">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-667">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-668">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-668">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-669">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-669">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-670">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-670">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-671">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-671">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-672">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-672">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-673">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-673">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-674"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-674"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-675">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-675">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-676">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-676">Required.</span></span> <span data-ttu-id="1bc3f-677">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-677">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-678">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-678">Required.</span></span> <span data-ttu-id="1bc3f-679">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-679">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-680">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-680">Optional.</span></span> <span data-ttu-id="1bc3f-681">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-681">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-682">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-682">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-683"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-683">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-684">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-684">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-685">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-685">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-686">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-686">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-687">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-687">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-688">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-688">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-689">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-689">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-690">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-690">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-691">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-691">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-692">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-692">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-693">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-693">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-694">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-694">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-695">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-695">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-696">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-696">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-697">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-697">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-698">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-698">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-699">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-699">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-700">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-700">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-701">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-701">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-702">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-702">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-703">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-703">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-704">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-704">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-705">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-705">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-706">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-706">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-707">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-707">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-708">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-708">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-709">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-709">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-710">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-710">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-711">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-711">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-712">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-712">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-713">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-713">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-714">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-714">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-715">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-715">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-716">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-716">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-717">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-717">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-718">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-718">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-719">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-719">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-720">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-720">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-721">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-721">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-722">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-722">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-723">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-723">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-724">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-724">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-725">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-725">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-726">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-726">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-727">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-727">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-728">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-728">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-729"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-729"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-730">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-730">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-731">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-731">Required.</span></span> <span data-ttu-id="1bc3f-732">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-732">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-733">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-733">Required.</span></span> <span data-ttu-id="1bc3f-734">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-734">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-735">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-735">Optional.</span></span> <span data-ttu-id="1bc3f-736">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-736">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-737">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-737">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-738"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-738">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-739">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-739">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-740">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-740">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-741">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-741">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-742">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-742">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-743">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-743">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-744">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-744">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-745">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-745">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-746">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-746">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-747">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-747">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-748">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-748">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-749">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-749">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-750">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-750">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-751">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-751">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-752">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-752">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-753">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-753">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-754">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-754">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-755">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-755">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-756">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-756">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-757">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-757">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-758">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-758">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-759">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-759">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-760">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-760">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-761">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-761">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-762">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-762">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-763">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-763">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-764">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-764">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-765">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-765">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-766">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-766">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-767">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-767">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-768">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-768">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-769">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-769">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-770">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-770">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-771">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-771">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-772">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-772">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-773">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-773">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-774">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-774">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-775">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-775">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-776">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-776">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-777">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-777">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-778">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-778">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-779">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-779">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-780">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-780">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-781">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-781">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-782">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-782">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-783">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-783">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-784"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-784"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-785">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-785">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-786">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-786">Required.</span></span> <span data-ttu-id="1bc3f-787">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-787">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-788">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-788">Required.</span></span> <span data-ttu-id="1bc3f-789">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-789">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-790">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-790">Optional.</span></span> <span data-ttu-id="1bc3f-791">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-791">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-792">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-792">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-793"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-793">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-794">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-794">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-795">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-795">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-796">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-796">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-797">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-797">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-798">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-798">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-799">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-799">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-800">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-800">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-801">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-801">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-802">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-802">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-803">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-803">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-804">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-804">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-805">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-805">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-806">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-806">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-807">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-807">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-808">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-808">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-809">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-809">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-810">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-810">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-811">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-811">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-812">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-812">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-813">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-813">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-814">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-814">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-815">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-815">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-816">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-816">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-817">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-817">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-818">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-818">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-819">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-819">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-820">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-820">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-821">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-821">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-822">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-822">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-823">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-823">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-824">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-824">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-825">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-825">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-826">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-826">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-827">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-827">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-828">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-828">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-829">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-829">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-830">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-830">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-831">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-831">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-832">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-832">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-833">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-833">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-834">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-834">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-835">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-835">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-836">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-836">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-837">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-837">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-838">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-838">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-839"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-839"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-840">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-840">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-841">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-841">Required.</span></span> <span data-ttu-id="1bc3f-842">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-842">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-843">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-843">Required.</span></span> <span data-ttu-id="1bc3f-844">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-844">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-845">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-845">Optional.</span></span> <span data-ttu-id="1bc3f-846">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-846">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-847">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-847">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-848"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-848">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-849">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-849">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-850">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-850">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-851">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-851">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-852">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-852">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-853">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-853">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-854">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-854">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-855">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-855">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-856">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-856">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-857">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-857">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-858">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-858">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-859">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-859">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-860">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-860">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-861">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-861">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-862">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-862">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-863">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-863">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-864">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-864">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-865">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-865">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-866">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-866">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-867">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-867">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-868">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-868">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-869">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-869">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-870">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-870">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-871">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-871">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-872">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-872">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-873">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-873">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-874">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-874">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-875">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-875">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-876">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-876">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-877">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-877">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-878">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-878">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-879">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-879">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-880">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-880">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-881">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-881">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-882">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-882">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-883">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-883">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-884">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-884">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-885">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-885">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-886">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-886">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-887">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-887">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-888">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-888">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-889">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-889">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-890">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-890">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-891">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-891">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-892">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-892">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-893">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-893">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-894"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-894"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-895">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-895">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-896">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-896">Required.</span></span> <span data-ttu-id="1bc3f-897">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-897">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-898">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-898">Required.</span></span> <span data-ttu-id="1bc3f-899">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-899">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-900">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-900">Optional.</span></span> <span data-ttu-id="1bc3f-901">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-901">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1bc3f-902">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-902">Optional.</span></span> <span data-ttu-id="1bc3f-903">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-903">Applies only when writing a string.</span></span> <span data-ttu-id="1bc3f-904">Określa, czy można zapisać deskryptor dwubajtowego ciąg opisujący długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-904">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="1bc3f-905">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-905">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1bc3f-906">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-906">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-907"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-907">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-908">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-908">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-909">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-909">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-910">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-910">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-911">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-911">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-912">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-912">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-913">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-913">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-914">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-914">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-915">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-915">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-916">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-916">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-917">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-917">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-918">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-918">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-919">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-919">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-920">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-920">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-921">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-921">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-922">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-922">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-923">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-923">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-924">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-924">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-925">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-925">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-926">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-926">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-927">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-927">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-928">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-928">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-929">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-929">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-930">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-930">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-931">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-931">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-932">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-932">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-933">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-933">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-934">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-934">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-935">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-935">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-936">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-936">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-937">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-937">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-938">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-938">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-939">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-939">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-940">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-940">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-941">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-941">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-942">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-942">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-943">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-943">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-944">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-944">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-945">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-945">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-946">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-946">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-947">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-947">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-948">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-948">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-949">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-949">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-950">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-950">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-951">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-951">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-952">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-952">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-953"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-953"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-954">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-954">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-955">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-955">Required.</span></span> <span data-ttu-id="1bc3f-956">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-956">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-957">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-957">Required.</span></span> <span data-ttu-id="1bc3f-958">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-958">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-959">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-959">Optional.</span></span> <span data-ttu-id="1bc3f-960">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-960">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="1bc3f-961">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-961">Optional.</span></span> <span data-ttu-id="1bc3f-962">Ma zastosowanie tylko wtedy, gdy zapisywania tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-962">Applies only when writing an array.</span></span> <span data-ttu-id="1bc3f-963">Określa, czy tablica jest traktowane jako dynamiczny i czy jest konieczne deskryptora tablica zawierająca opis rozmiaru i granice tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-963">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1bc3f-964">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-964">Optional.</span></span> <span data-ttu-id="1bc3f-965">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-965">Applies only when writing a string.</span></span> <span data-ttu-id="1bc3f-966">Określa, czy można zapisać deskryptor dwubajtowego ciąg opisujący długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-966">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="1bc3f-967">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-967">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1bc3f-968">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-968">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="1bc3f-969"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-969">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="1bc3f-970">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-970">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-971">`FileGet` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-971">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-972">Dane odczytane z `FileGet` są zwykle zapisywane do pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-972">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="1bc3f-973">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-973">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-974">W przypadku pominięcia `RecordNumber`, następnego rekordu lub od ostatniego bajtu `FileGet` lub `FilePut` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-974">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-975">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-975">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-976">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-976">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-977">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-977">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-978">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-978">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-979">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-979">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-980">Odstęp między zakończeniem jeden rekord a rozpoczęciem następnego rekordu są dopełniane przy użyciu istniejącej zawartości buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-980">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-981">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-981">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-982">Domyślnie, gdy zmienna odczytywane w ciągu `FileGet` odczytuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie odczytuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-982">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-983">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-983">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-984">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-984">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-985">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-985">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-986">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-986">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="1bc3f-987">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-987">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-988">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-988">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="1bc3f-989">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-989">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="1bc3f-990">Jeśli deskryptor nie jest używany, rozmiar i granice tablicy przekazany `FileGet` określenia, jakie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-990">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="1bc3f-991">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-991">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-992">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-992">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-993">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-993">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-994">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-994">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="1bc3f-995">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-995">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="1bc3f-996">18 bajtów dla deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-996">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="1bc3f-997">200 bajtów danych: [5 * 10 * 4].</span><span class="sxs-lookup"><span data-stu-id="1bc3f-997">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-998">Jeśli zmienna do odczytu jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FileGet` odczytuje tylko danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-998">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="1bc3f-999">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-999">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-1000">`FileGet` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1000">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1001">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePut`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1001">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1002">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do odczytu poszczególne elementy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1002">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="1bc3f-1003">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1003">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-1004">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciągiem, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1004">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1005">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1005">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1006">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1006">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1007">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1007">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1008">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1008">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1009">`FileGet` odczytuje wszystkie zmienne ciągłym; z dysku oznacza to bez dopełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1009">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1010">Dla tablicy niż tablicy w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1010">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="1bc3f-1011">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1011">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="1bc3f-1012">`FileGet` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1012">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1013">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1013">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bc3f-1014">Odczyt z pliku za pomocą `FileGet` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1014">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1015"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1015"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1016">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1016">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1017">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1017">Required.</span></span> <span data-ttu-id="1bc3f-1018">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1018">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1019">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1019">Required.</span></span> <span data-ttu-id="1bc3f-1020">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1020">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1021">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1021">Optional.</span></span> <span data-ttu-id="1bc3f-1022">Numer rekordu (<see langword="Random" /> plików trybu) lub liczbę bajtów (<see langword="Binary" /> plików trybu), w których odczytu rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1022">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1023">Wczytuje dane z otwartego pliku dysku do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1023">Reads data from an open disk file into a variable.</span></span>  <span data-ttu-id="1bc3f-1024"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileGetObject" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1024">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span></span> <span data-ttu-id="1bc3f-1025">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1025">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1026">`FileGetObject` Funkcja jest używana zamiast `FileGet` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` jest zwracana zamiast innego typu, takich jak `Integer`, `Long`, `Short`, itd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1026">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="1bc3f-1027">Jeśli zamierzasz zapisać `Variant` typu `FileGetObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1027">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="1bc3f-1028">W razie wątpliwości, jeśli używasz obiektu dla drugiego parametru, zawsze zalecane jest używanie `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1028">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="1bc3f-1029">`FileGetObject` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1029">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1030">Dane odczytane z `FileGetObject` są zwykle zapisywane z `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1030">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="1bc3f-1031">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1031">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1032">W przypadku pominięcia `RecordNumber`, `FileGetObject` odczytuje rekord lub byte po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (lub wskazywana przez ostatnich `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1032">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1033">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1033">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1034">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1034">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1035">Jeśli długość odczytywane dane jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGetObject` odczytuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1035">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1036">Odstęp między zakończeniem jeden rekord a początek następnego rekordu są dopełniane przy użyciu istniejącej zawartości buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1036">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1037">Ponieważ ilość danych dopełnienia nie można precyzyjnie ustalić, to warto mieć długość rekordu jest zgodna z długością odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1037">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="1bc3f-1038">Jeśli zmienna do odczytu jest ciągiem, domyślnie `FileGetObject` odczytuje deskryptor dwubajtowego zawierająca długość ciągu i odczytuje danych, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1038">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1039">W związku z tym długość rekordu określony przez `RecordLength` klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1039">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1040">Visual Basic 6.0 i starsze wersje obsługują ciągi o stałej długości i odczytywana do pliku, deskryptora długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1040">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="1bc3f-1041">Jeśli chcesz odczytać ciągu bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1041">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1042">Gdy zmienna odczytywane w tablicy, a następnie rekordów długości określonej przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1042">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1043">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1043">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1044">Liczba wymiarów czasu jego długość jest równa 2 plus 8: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1044">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="1bc3f-1045">Na przykład następujące deklaracja tablicy wymaga 218 bajtów podczas tablicy są zapisywane na dysku:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1045">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="1bc3f-1046">Bajty 218 są rozpowszechniane w następujący sposób: 18 bajtów dla deskryptora (2 + 8 \* 2) i 100 bajtów danych (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1046">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="1bc3f-1047">`FileGetObject` odczytuje elementy struktury tak, jakby każda odczytu oddzielnie, z wyjątkiem tego, że nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1047">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1048">Na dysku dynamicznym tablica z typu zdefiniowanego przez użytkownika (napisany za pomocą `FilePutObject`) jest poprzedzony deskryptor o długości 2 plus 8 godzin jest równa liczbie wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1048">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="1bc3f-1049">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów, które są wymagane do poszczególnych elementów, w tym wszystkie tablice i ich deskryptory odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1049">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="1bc3f-1050"><xref:Microsoft.VisualBasic.VBFixedStringAttribute> Klasy mogą być stosowane do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1050">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1051">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1051">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1052">Dla plików otwieranych w `Binary` trybie wszystkie `Random` zastosować reguły, z następującymi wyjątkami:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1052">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="1bc3f-1053">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1053">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1054">`FileGetObject` odczytuje wszystkie zmienne z dysku ciągłym, czyli z nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1054">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1055">Dla tablicy niż tablicy w strukturze `FileGetObject` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1055">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="1bc3f-1056">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1056">No descriptor is read.</span></span>  
  
 <span data-ttu-id="1bc3f-1057">`FileGetObject` odczytuje ciągów o zmiennej długości, które nie są elementami struktur nie oczekuje deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1057">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1058">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1058">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-1059">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1059">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-1060">Na przykład plik o nazwie Form1.vb nie może być plik źródłowy języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1060">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1061">Poniższy przykład odczytuje rekord w pliku testu, a następnie pobierze go.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1061">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1bc3f-1062">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1062">Required.</span></span> <span data-ttu-id="1bc3f-1063"><see langword="String" /> wyrażenie, które określa plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1063"><see langword="String" /> expression that specifies a file.</span></span> <span data-ttu-id="1bc3f-1064"><c>Nazwa ścieżki</c> mogą obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1064"><c>PathName</c> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1065">Zwraca <see langword="Long" /> wartość określająca długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1065">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span></span> <span data-ttu-id="1bc3f-1066"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileLen" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1066">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span></span> <span data-ttu-id="1bc3f-1067">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1067">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="1bc3f-1068"><see langword="Long" /> Wartość określająca długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1068"><see langword="Long" /> value that specifies the length of a file in bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1069">Jeśli określony plik jest otwarty, kiedy `FileLen` funkcja jest wywoływana, zwracana wartość reprezentuje rozmiar pliku w czasie zostało otwarte.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1069">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-1070">Aby uzyskać bieżącą długość otwartego pliku, użyj `LOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1070">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1071">W tym przykładzie użyto `FileLen` funkcja zwraca długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1071">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="1bc3f-1072">Do celów tego przykładu, zakłada, że `TestFile` plik, który zawiera niektóre dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1072">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-1073">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1073">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1074">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1074">Required.</span></span> <span data-ttu-id="1bc3f-1075">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1075">Any valid file number.</span></span> <span data-ttu-id="1bc3f-1076">Użyj <see langword="FreeFile" /> funkcji, aby uzyskać następny dostępny numer pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1076">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span></span></param>
        <param name="FileName"><span data-ttu-id="1bc3f-1077">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1077">Required.</span></span> <span data-ttu-id="1bc3f-1078"><see langword="String" /> wyrażenie, które określa nazwę pliku — może obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1078"><see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span></span></param>
        <param name="Mode"><span data-ttu-id="1bc3f-1079">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1079">Required.</span></span> <span data-ttu-id="1bc3f-1080">Wyliczenie opisujące tryb pliku: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, lub <see langword="Random" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1080">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span></span> <span data-ttu-id="1bc3f-1081">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1081">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span></span></param>
        <param name="Access"><span data-ttu-id="1bc3f-1082">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1082">Optional.</span></span> <span data-ttu-id="1bc3f-1083">Wyliczenie opisujące operacje dozwolone na otwieranie pliku: <see langword="Read" />, <see langword="Write" />, lub <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1083">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span></span> <span data-ttu-id="1bc3f-1084">Domyślnie <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1084">Defaults to <see langword="ReadWrite" />.</span></span> <span data-ttu-id="1bc3f-1085">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1085">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span></span></param>
        <param name="Share"><span data-ttu-id="1bc3f-1086">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1086">Optional.</span></span> <span data-ttu-id="1bc3f-1087">Wyliczenie opisujące operacje nie zezwala na otwieranie pliku przez inne procesy: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, i <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1087">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="1bc3f-1088">Domyślnie <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1088">Defaults to <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="1bc3f-1089">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1089">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span></span></param>
        <param name="RecordLength"><span data-ttu-id="1bc3f-1090">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1090">Optional.</span></span> <span data-ttu-id="1bc3f-1091">Liczba mniejsza lub równa 32 767 (w bajtach).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1091">Number less than or equal to 32,767 (bytes).</span></span> <span data-ttu-id="1bc3f-1092">W przypadku plików na dostępie swobodnym ta wartość jest długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1092">For files opened for random access, this value is the record length.</span></span> <span data-ttu-id="1bc3f-1093">Sekwencyjnych plików ta wartość jest liczbą znaków buforowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1093">For sequential files, this value is the number of characters buffered.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1094">Otwiera plik dla danych wejściowych lub wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1094">Opens a file for input or output.</span></span> <span data-ttu-id="1bc3f-1095"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1095">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span></span> <span data-ttu-id="1bc3f-1096">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1096">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1097">`FileOpen` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1097">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-1098">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1098">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-1099">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1099">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-1100">Aby można było wykonać żadnej operacji We/Wy na nim należy otworzyć plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1100">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="1bc3f-1101">`FileOpen` przydziela buforu dla operacji We/Wy do pliku i określa tryb dostępu do użycia z buforu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1101">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-1102">Podczas zapisywania do pliku, aplikacja może być konieczne utworzenie pliku, jeśli plik, do którego próbuje zapisać nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1102">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="1bc3f-1103">Aby to zrobić, wymaganych uprawnień dla katalogu, w którym ma być utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1103">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="1bc3f-1104">Jednak jeśli plik określony przez `FileName` istnieje aplikacji należy `Write` uprawnienia tylko w samym pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1104">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="1bc3f-1105">Wszędzie tam, gdzie to możliwe, aby zwiększyć bezpieczeństwo, tworzenie pliku podczas wdrażania i przyznać `Write` uprawnienia do tego pliku tylko, a nie całego katalogu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1105">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="1bc3f-1106">Aby zwiększyć bezpieczeństwo, zapisać danych do katalogów użytkowników zamiast do katalogu głównego lub katalog Program Files.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1106">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="1bc3f-1107">Kanał, aby otworzyć znajduje się za pomocą `FreeFile()` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1107">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-1108">`FileOpen` Wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia, które mogą wpłynąć na jej wykonanie w sytuacji, w częściowej relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1108">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="1bc3f-1109">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1109">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1110">W tym przykładzie przedstawiono różnych zastosowań `FileOpen` funkcji, aby włączyć dane wejściowe i wyjściowe do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1110">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="1bc3f-1111">Poniższy kod otwiera plik `TestFile` w `Input` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1111">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="1bc3f-1112">W tym przykładzie powoduje otwarcie tego pliku w `Binary` tryb operacji tylko do zapisu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1112">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="1bc3f-1113">Poniższy przykład powoduje otwarcie tego pliku w `Random` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1113">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="1bc3f-1114">Plik zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1114">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="1bc3f-1115">W tym przykładzie kodu otwiera plik w `Output` tryb; żadnych może proces odczytu lub zapisu do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1115">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="1bc3f-1116">W tym przykładzie kodu otwiera plik w `Binary` trybie do odczytu; inne procesy nie można odczytać pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1116">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1bc3f-1117">Długość rekordu jest ujemny (i nie jest równa -1).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1117">Record length is negative (and not equal to -1).</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1bc3f-1118"><paramref name="FileName" /> jest już otwarty, lub <paramref name="FileName" /> jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1118"><paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-1119">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1119">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1120"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1120">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1121">F, aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1121">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1122">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1122">Required.</span></span> <span data-ttu-id="1bc3f-1123">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1123">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1124">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1124">Required.</span></span> <span data-ttu-id="1bc3f-1125">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1125">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1126">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1126">Optional.</span></span> <span data-ttu-id="1bc3f-1127">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1127">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1128">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1128">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1129"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1129">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1130">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1130">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1131">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1131">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1132">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1132">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1133">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1133">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1134">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1134">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1135">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1135">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1136">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1136">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1137">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1137">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1138">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1138">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1139">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1139">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1140">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1140">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1141">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1141">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1142">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1142">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1143">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1143">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1144">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1144">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1145">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1145">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1146">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1146">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1147">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1147">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1148">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1148">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1149">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1149">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1150">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1150">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1151">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1151">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1152">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1152">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1153">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1153">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1154">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1154">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1155">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1155">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1156">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1156">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1157">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1157">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1158">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1158">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1159">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1159">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1160">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1160">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1161">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1161">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1162">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1162">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1163">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1163">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1164">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1164">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1165">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1165">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1166">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1166">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1167">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1167">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1168">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1168">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1169">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1169">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1170">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1170">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1171">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1171">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1172">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1172">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1173">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1173">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1174">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1174">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1175">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1175">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1176">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1176">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1177">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1177">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1178">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1178">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1179"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1179"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1180">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1180">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1181">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1181">Required.</span></span> <span data-ttu-id="1bc3f-1182">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1182">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1183">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1183">Required.</span></span> <span data-ttu-id="1bc3f-1184">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1184">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1185">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1185">Optional.</span></span> <span data-ttu-id="1bc3f-1186">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1186">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1187">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1187">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1188"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1188">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1189">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1189">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1190">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1190">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1191">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1191">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1192">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1192">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1193">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1193">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1194">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1194">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1195">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1195">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1196">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1196">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1197">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1197">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1198">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1198">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1199">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1199">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1200">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1200">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1201">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1201">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1202">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1202">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1203">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1203">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1204">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1204">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1205">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1205">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1206">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1206">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1207">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1207">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1208">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1208">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1209">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1209">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1210">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1210">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1211">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1211">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1212">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1212">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1213">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1213">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1214">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1214">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1215">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1215">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1216">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1216">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1217">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1217">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1218">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1218">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1219">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1219">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1220">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1220">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1221">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1221">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1222">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1222">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1223">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1223">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1224">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1224">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1225">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1225">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1226">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1226">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1227">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1227">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1228">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1228">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1229">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1229">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1230">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1230">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1231">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1231">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1232">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1232">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1233">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1233">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1234">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1234">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1235">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1235">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1236">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1236">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1237">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1237">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1238"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1238"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1239">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1239">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1240">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1240">Required.</span></span> <span data-ttu-id="1bc3f-1241">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1241">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1242">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1242">Required.</span></span> <span data-ttu-id="1bc3f-1243">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1243">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1244">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1244">Optional.</span></span> <span data-ttu-id="1bc3f-1245">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1245">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1246">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1246">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1247"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1247">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1248">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1248">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1249">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1249">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1250">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1250">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1251">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1251">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1252">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1252">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1253">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1253">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1254">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1254">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1255">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1255">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1256">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1256">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1257">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1257">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1258">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1258">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1259">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1259">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1260">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1260">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1261">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1261">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1262">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1262">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1263">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1263">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1264">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1264">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1265">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1265">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1266">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1266">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1267">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1267">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1268">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1268">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1269">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1269">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1270">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1270">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1271">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1271">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1272">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1272">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1273">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1273">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1274">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1274">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1275">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1275">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1276">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1276">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1277">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1277">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1278">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1278">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1279">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1279">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1280">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1280">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1281">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1281">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1282">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1282">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1283">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1283">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1284">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1284">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1285">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1285">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1286">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1286">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1287">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1287">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1288">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1288">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1289">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1289">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1290">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1290">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1291">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1291">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1292">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1292">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1293">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1293">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1294">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1294">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1295">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1295">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1296">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1296">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1297"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1297"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1298">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1298">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1299">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1299">Required.</span></span> <span data-ttu-id="1bc3f-1300">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1300">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1301">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1301">Required.</span></span> <span data-ttu-id="1bc3f-1302">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1302">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1303">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1303">Optional.</span></span> <span data-ttu-id="1bc3f-1304">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1304">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1305">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1305">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1306"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1306">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1307">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1307">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1308">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1308">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1309">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1309">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1310">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1310">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1311">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1311">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1312">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1312">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1313">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1313">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1314">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1314">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1315">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1315">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1316">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1316">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1317">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1317">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1318">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1318">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1319">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1319">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1320">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1320">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1321">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1321">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1322">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1322">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1323">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1323">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1324">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1324">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1325">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1325">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1326">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1326">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1327">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1327">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1328">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1328">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1329">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1329">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1330">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1330">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1331">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1331">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1332">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1332">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1333">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1333">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1334">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1334">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1335">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1335">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1336">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1336">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1337">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1337">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1338">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1338">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1339">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1339">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1340">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1340">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1341">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1341">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1342">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1342">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1343">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1343">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1344">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1344">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1345">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1345">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1346">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1346">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1347">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1347">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1348">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1348">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1349">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1349">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1350">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1350">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1351">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1351">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1352">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1352">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1353">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1353">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1354">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1354">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1355">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1355">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1356"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1356"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1357">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1357">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1358">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1358">Required.</span></span> <span data-ttu-id="1bc3f-1359">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1359">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1360">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1360">Required.</span></span> <span data-ttu-id="1bc3f-1361">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1361">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1362">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1362">Optional.</span></span> <span data-ttu-id="1bc3f-1363">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1363">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1364">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1364">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1365"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1365">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1366">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1366">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1367">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1367">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1368">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1368">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1369">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1369">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1370">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1370">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1371">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1371">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1372">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1372">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1373">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1373">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1374">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1374">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1375">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1375">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1376">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1376">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1377">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1377">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1378">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1378">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1379">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1379">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1380">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1380">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1381">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1381">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1382">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1382">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1383">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1383">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1384">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1384">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1385">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1385">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1386">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1386">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1387">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1387">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1388">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1388">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1389">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1389">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1390">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1390">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1391">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1391">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1392">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1392">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1393">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1393">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1394">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1394">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1395">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1395">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1396">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1396">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1397">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1397">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1398">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1398">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1399">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1399">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1400">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1400">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1401">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1401">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1402">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1402">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1403">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1403">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1404">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1404">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1405">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1405">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1406">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1406">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1407">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1407">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1408">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1408">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1409">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1409">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1410">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1410">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1411">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1411">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1412">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1412">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1413">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1413">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1414">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1414">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1415"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1415"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1416">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1416">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1417">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1417">Required.</span></span> <span data-ttu-id="1bc3f-1418">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1418">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1419">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1419">Required.</span></span> <span data-ttu-id="1bc3f-1420">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1420">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1421">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1421">Optional.</span></span> <span data-ttu-id="1bc3f-1422">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1422">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1423">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1423">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1424"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1424">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1425">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1425">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1426">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1426">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1427">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1427">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1428">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1428">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1429">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1429">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1430">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1430">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1431">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1431">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1432">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1432">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1433">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1433">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1434">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1434">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1435">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1435">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1436">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1436">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1437">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1437">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1438">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1438">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1439">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1439">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1440">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1440">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1441">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1441">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1442">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1442">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1443">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1443">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1444">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1444">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1445">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1445">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1446">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1446">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1447">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1447">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1448">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1448">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1449">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1449">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1450">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1450">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1451">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1451">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1452">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1452">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1453">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1453">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1454">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1454">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1455">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1455">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1456">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1456">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1457">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1457">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1458">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1458">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1459">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1459">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1460">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1460">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1461">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1461">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1462">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1462">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1463">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1463">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1464">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1464">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1465">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1465">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1466">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1466">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1467">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1467">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1468">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1468">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1469">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1469">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1470">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1470">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1471">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1471">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1472">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1472">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1473">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1473">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1474"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1474"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1475">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1475">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1476">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1476">Required.</span></span> <span data-ttu-id="1bc3f-1477">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1477">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1478">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1478">Required.</span></span> <span data-ttu-id="1bc3f-1479">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1479">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1480">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1480">Optional.</span></span> <span data-ttu-id="1bc3f-1481">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1481">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1482">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1482">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1483"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1483">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1484">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1484">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1485">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1485">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1486">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1486">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1487">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1487">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1488">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1488">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1489">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1489">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1490">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1490">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1491">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1491">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1492">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1492">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1493">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1493">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1494">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1494">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1495">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1495">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1496">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1496">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1497">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1497">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1498">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1498">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1499">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1499">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1500">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1500">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1501">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1501">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1502">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1502">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1503">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo`VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1503">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1504">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1504">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1505">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1505">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1506">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1506">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1507">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1507">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1508">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1508">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1509">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1509">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1510">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1510">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1511">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1511">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1512">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1512">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1513">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1513">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1514">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1514">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1515">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1515">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1516">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1516">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1517">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1517">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1518">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1518">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1519">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1519">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1520">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1520">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1521">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1521">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1522">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1522">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1523">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1523">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1524">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1524">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1525">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1525">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1526">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1526">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1527">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1527">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1528">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1528">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1529">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1529">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1530">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1530">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1531">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1531">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1532">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1532">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1533"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1533"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1534">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1534">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1535">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1535">Required.</span></span> <span data-ttu-id="1bc3f-1536">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1536">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1537">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1537">Required.</span></span> <span data-ttu-id="1bc3f-1538">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1538">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1539">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1539">Optional.</span></span> <span data-ttu-id="1bc3f-1540">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1540">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1541">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1541">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1542"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1542">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1543">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1543">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1544">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1544">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1545">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1545">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1546">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1546">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1547">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1547">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1548">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1548">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1549">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1549">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1550">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1550">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1551">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1551">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1552">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1552">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1553">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1553">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1554">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1554">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1555">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1555">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1556">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1556">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1557">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1557">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1558">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1558">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1559">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1559">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1560">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1560">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1561">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1561">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1562">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1562">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1563">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1563">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1564">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1564">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1565">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1565">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1566">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1566">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1567">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1567">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1568">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1568">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1569">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1569">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1570">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1570">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1571">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1571">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1572">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1572">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1573">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1573">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1574">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1574">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1575">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1575">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1576">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1576">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1577">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1577">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1578">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1578">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1579">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1579">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1580">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1580">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1581">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1581">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1582">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1582">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1583">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1583">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1584">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1584">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1585">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1585">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1586">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1586">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1587">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1587">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1588">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1588">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1589">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1589">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1590">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1590">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1591">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1591">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1592"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1592"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1593">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1593">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1594">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1594">Required.</span></span> <span data-ttu-id="1bc3f-1595">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1595">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1596">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1596">Required.</span></span> <span data-ttu-id="1bc3f-1597">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1597">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1598">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1598">Optional.</span></span> <span data-ttu-id="1bc3f-1599">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1599">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1600">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1600">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1601"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1601">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1602">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1602">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1603">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1603">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1604">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1604">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1605">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1605">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1606">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1606">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1607">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1607">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1608">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1608">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1609">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1609">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1610">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1610">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1611">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1611">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1612">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1612">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1613">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1613">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1614">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1614">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1615">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1615">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1616">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1616">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1617">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1617">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1618">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1618">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1619">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1619">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1620">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1620">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1621">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1621">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1622">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1622">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1623">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1623">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1624">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1624">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1625">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1625">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1626">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1626">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1627">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1627">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1628">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1628">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1629">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1629">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1630">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1630">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1631">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1631">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1632">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1632">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1633">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1633">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1634">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1634">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1635">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1635">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1636">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1636">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1637">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1637">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1638">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1638">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1639">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1639">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1640">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1640">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1641">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1641">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1642">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1642">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1643">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1643">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1644">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1644">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1645">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1645">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1646">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1646">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1647">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1647">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1648">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1648">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1649">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1649">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1650">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1650">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1651"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1651"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1652">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1652">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1653">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1653">Required.</span></span> <span data-ttu-id="1bc3f-1654">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1654">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1655">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1655">Required.</span></span> <span data-ttu-id="1bc3f-1656">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1656">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1657">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1657">Optional.</span></span> <span data-ttu-id="1bc3f-1658">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1658">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1659">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1659">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1660"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1660">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1661">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1661">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1662">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1662">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1663">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1663">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1664">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1664">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1665">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1665">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1666">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1666">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1667">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1667">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1668">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1668">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1669">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1669">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1670">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1670">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1671">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1671">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1672">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1672">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1673">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1673">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1674">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1674">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1675">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1675">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1676">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1676">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1677">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1677">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1678">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1678">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1679">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1679">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1680">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1680">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1681">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1681">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1682">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1682">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1683">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1683">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1684">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1684">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1685">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1685">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1686">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1686">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1687">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1687">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1688">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1688">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1689">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1689">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1690">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1690">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1691">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1691">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1692">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1692">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1693">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1693">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1694">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1694">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1695">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1695">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1696">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1696">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1697">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1697">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1698">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1698">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1699">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1699">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1700">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1700">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1701">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1701">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1702">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1702">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1703">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1703">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1704">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1704">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1705">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1705">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1706">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1706">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1707">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1707">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1708">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1708">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1709">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1709">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1710"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1710"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1711">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1711">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1712">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1712">Required.</span></span> <span data-ttu-id="1bc3f-1713">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1713">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1714">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1714">Required.</span></span> <span data-ttu-id="1bc3f-1715">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1715">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1716">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1716">Optional.</span></span> <span data-ttu-id="1bc3f-1717">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1717">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1718">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1718">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1719"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1719">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1720">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1720">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1721">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1721">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1722">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1722">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1723">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1723">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1724">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1724">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1725">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1725">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1726">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1726">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1727">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1727">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1728">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1728">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1729">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1729">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1730">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w`RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1730">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1731">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1731">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1732">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1732">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1733">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1733">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1734">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1734">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1735">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1735">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1736">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1736">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1737">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1737">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1738">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1738">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1739">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1739">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1740">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1740">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1741">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1741">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1742">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1742">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1743">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1743">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1744">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1744">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1745">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1745">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1746">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1746">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1747">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1747">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1748">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1748">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1749">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1749">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1750">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1750">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1751">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1751">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1752">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1752">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1753">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1753">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1754">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1754">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1755">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1755">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1756">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1756">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1757">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1757">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1758">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1758">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1759">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1759">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1760">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1760">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1761">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1761">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1762">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1762">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1763">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1763">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1764">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1764">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1765">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1765">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1766">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1766">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1767">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1767">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1768">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1768">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1769"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1769"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1770">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1770">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1771">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1771">Required.</span></span> <span data-ttu-id="1bc3f-1772">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1772">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1773">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1773">Required.</span></span> <span data-ttu-id="1bc3f-1774">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1774">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1775">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1775">Optional.</span></span> <span data-ttu-id="1bc3f-1776">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1776">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1777">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1777">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1778"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1778">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1779">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1779">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1780">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1780">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1781">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1781">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1782">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1782">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1783">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1783">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1784">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1784">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1785">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1785">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1786">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1786">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1787">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1787">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1788">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1788">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1789">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1789">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1790">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1790">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1791">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1791">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1792">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1792">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1793">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1793">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1794">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1794">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1795">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1795">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1796">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1796">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1797">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1797">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1798">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1798">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1799">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1799">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1800">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1800">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1801">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1801">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1802">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1802">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1803">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1803">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1804">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1804">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1805">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1805">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1806">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1806">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1807">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1807">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1808">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1808">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1809">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1809">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1810">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1810">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1811">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1811">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1812">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1812">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1813">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1813">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1814">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1814">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1815">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1815">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1816">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1816">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1817">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1817">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1818">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1818">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1819">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1819">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1820">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1820">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1821">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1821">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1822">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1822">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1823">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1823">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1824">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1824">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1825">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1825">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1826">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1826">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1827">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1827">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1828"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1828"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1829">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1829">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1830">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1830">Required.</span></span> <span data-ttu-id="1bc3f-1831">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1831">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1832">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1832">Required.</span></span> <span data-ttu-id="1bc3f-1833">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1833">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1834">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1834">Optional.</span></span> <span data-ttu-id="1bc3f-1835">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1835">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1bc3f-1836">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1836">Optional.</span></span> <span data-ttu-id="1bc3f-1837">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1837">Applies only when writing a string.</span></span> <span data-ttu-id="1bc3f-1838">Określa, czy można zapisać do pliku dwubajtowego ciągu deskryptora długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1838">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="1bc3f-1839">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1839">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1840">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1840">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1841"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1841">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1842">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />...</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1842">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1843">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1843">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1844">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1844">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1845">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1845">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1846">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1846">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1847">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1847">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1848">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1848">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1849">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1849">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1850">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1850">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1851">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1851">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1852">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1852">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1853">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1853">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1854">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1854">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1855">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1855">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1856">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1856">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1857">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1857">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1858">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1858">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1859">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1859">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1860">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1860">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1861">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1861">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1862">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1862">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1863">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1863">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1864">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1864">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1865">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1865">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1866">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1866">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1867">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1867">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1868">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1868">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1869">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1869">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1870">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1870">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1871">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1871">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1872">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1872">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1873">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1873">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1874">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1874">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1875">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1875">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1876">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1876">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1877">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1877">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1878">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1878">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1879">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1879">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1880">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1880">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1881">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1881">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1882">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1882">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1883">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1883">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1884">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1884">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1885">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1885">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1886">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1886">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1887">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1887">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1888">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1888">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1889">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1889">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1890">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1890">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1891"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1891"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1892">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1892">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1893">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1893">Required.</span></span> <span data-ttu-id="1bc3f-1894">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1894">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1895">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1895">Required.</span></span> <span data-ttu-id="1bc3f-1896">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1896">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1897">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1897">Optional.</span></span> <span data-ttu-id="1bc3f-1898">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1898">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="1bc3f-1899">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1899">Optional.</span></span> <span data-ttu-id="1bc3f-1900">Ma zastosowanie tylko wtedy, gdy zapisywania tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1900">Applies only when writing an array.</span></span> <span data-ttu-id="1bc3f-1901">Określa, czy tablica jest traktowane jako dynamiczny oraz czy zapisać deskryptora ciąg opisujący długość tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1901">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="1bc3f-1902">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1902">Optional.</span></span> <span data-ttu-id="1bc3f-1903">Stosuje się tylko przy pisaniu ciągów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1903">Applies only when writing a string.</span></span> <span data-ttu-id="1bc3f-1904">Określa, czy można zapisać do pliku dwubajtowego ciągu deskryptora długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1904">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="1bc3f-1905">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1905">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1906">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1906">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="1bc3f-1907"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1907">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="1bc3f-1908">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1908">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1909">`FilePut` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1909">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1910">Dane zapisywane z `FilePut` jest zwykle do odczytu z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1910">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="1bc3f-1911">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1911">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1912">W przypadku pominięcia `RecordNumber`, dalej rekord lub byte po ostatniej `FileGet` lub `FilePut` funkcji lub wskazywana przez ostatnich `Seek` funkcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1912">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="1bc3f-1913">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1913">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1914">`FilePut` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1914">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1915">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, musisz wykonać taki sam jak `FileGet`, i upewnij się, że zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1915">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1916">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1916">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1917">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1917">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1918">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1918">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1919">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1919">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1920">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1920">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1921">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1921">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1922">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje deskryptora dwubajtowego, który zawiera długość ciągu, a następnie zapisuje dane, który jest przesyłany do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1922">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="1bc3f-1923">W związku z tym długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1923">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="1bc3f-1924">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1924">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1925">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePut` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1925">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1926">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1926">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1927">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePut` zapisuje identyfikowanie deskryptora dwubajtowo `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1927">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1928">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1928">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1929">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1929">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1930">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1930">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="1bc3f-1931">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1931">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="1bc3f-1932">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1932">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="1bc3f-1933">Aby napisać deskryptora, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1933">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="1bc3f-1934">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1934">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="1bc3f-1935">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1935">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1936">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1936">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="1bc3f-1937">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1937">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1938">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1938">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="1bc3f-1939">Jeśli zmienna zapisywana jest innego typu zmiennej (nie ciągiem o długości zmiennej lub obiektu), `FilePut` zapisuje danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1939">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="1bc3f-1940">Długość rekordu określony przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1940">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1941">`FilePut` Zapisuje elementy struktury tak, jakby każda napisanych oddzielnie, z wyjątkiem nie istnieje żadne uzupełnienie między elementami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1941">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="1bc3f-1942">`VBFixedString` Atrybut można stosować do pól ciągów w strukturach rozmiaru ciąg, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1942">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1bc3f-1943">Pola, które mają więcej bajtów niż określona przez ciąg `VBFixedString` atrybutu są obcinane, gdy zapisywane na dysku,</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1943">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1944">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1944">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1945">Dla plików otwieranych w `Binary` trybie większość `Random` zasady trybu się z kilkoma wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1945">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="1bc3f-1946">Następujące reguły pliki otwarte w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1946">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="1bc3f-1947">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1947">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1948">`FilePut` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1948">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="1bc3f-1949">Dla tablicy niż tablicy w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1949">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="1bc3f-1950">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1950">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-1951">`FilePut` zapisuje ciągów o zmiennej długości, które nie są elementami struktury bez deskryptora dwóch bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1951">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="1bc3f-1952">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1952">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="1bc3f-1953">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1953">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="1bc3f-1954">Zapis do pliku przy użyciu `FilePut` wymaga funkcji `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1954">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1955">W tym przykładzie użyto `FilePut` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1955">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="1bc3f-1956">Rejestruje pięć struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1956">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-1957"><paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1957"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-1958">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1958">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1959">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1959">Required.</span></span> <span data-ttu-id="1bc3f-1960">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1960">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-1961">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1961">Required.</span></span> <span data-ttu-id="1bc3f-1962">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1962">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="1bc3f-1963">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1963">Optional.</span></span> <span data-ttu-id="1bc3f-1964">Numer rekordu (<see langword="Random" /> tryb pliki) lub liczbę bajtów (<see langword="Binary" /> plików trybu) na piśmie, które uruchamia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1964">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="1bc3f-1965">Zapisuje dane ze zmiennej do pliku na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1965">Writes data from a variable to a disk file.</span></span>  <span data-ttu-id="1bc3f-1966"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FilePutObject" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1966">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span></span> <span data-ttu-id="1bc3f-1967">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1967">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-1968">`FilePutObject` Funkcja jest używana zamiast `FilePut` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` przekazany zamiast innego typu, takich jak `Integer`, `Long`, `Short`, itd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1968">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="1bc3f-1969">`FilePutObject` zapisuje i odczytuje deskryptory, które opisują obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1969">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="1bc3f-1970">Jeśli zamierzasz zapisać `Variant` typu `FilePutObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1970">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="1bc3f-1971">W razie wątpliwości, jeśli używasz obiektu dla drugiego parametru, firma Microsoft zaleca, aby zawsze używać `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1971">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="1bc3f-1972">`FilePutObject` jest prawidłowy tylko w `Random` i `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1972">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-1973">Dane zapisywane z `FilePutObject` jest zwykle do odczytu z pliku za pomocą `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1973">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="1bc3f-1974">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1974">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="1bc3f-1975">W przypadku pominięcia `RecordNumber`, `FilePutObject` zapisuje dalej rekord lub byte po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (lub rekordu lub byte wskazywana przez ostatnich `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1975">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="1bc3f-1976">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmienna lub stała długość.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1976">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="1bc3f-1977">`FilePutObject` zapisuje deskryptora długość, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1977">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="1bc3f-1978">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePutObject`, musisz wykonać taki sam jak `FileGetObject`, i musi również upewnij się, zainicjowanej Oczekiwana długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1978">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="1bc3f-1979">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1979">Random Mode</span></span>  
 <span data-ttu-id="1bc3f-1980">Dla plików otwieranych w `Random` tryb, obowiązują następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1980">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="1bc3f-1981">Jeśli długość danych zapisywanych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePutObject` zapisuje kolejne rekordy na granicach długość rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1981">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="1bc3f-1982">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1982">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="1bc3f-1983">Ponieważ ilość danych dopełnienia nie można precyzyjnie ustalić, zazwyczaj jest warto mieć długość rekordu jest zgodna z długością zapisywanych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1983">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="1bc3f-1984">Jeśli długość danych zapisywanych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1984">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="1bc3f-1985">Jeśli zmienna zapisywana jest obiekt, który zawiera typ liczbowy `FilePutObject` zapisuje dwa bajty identyfikowanie `VarType` obiektu, a następnie zapisuje zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1985">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="1bc3f-1986">Na przykład podczas zapisu obiektu zawiera całkowitą, `FilePutObject` zapisuje bajty sześciu: dwa bajty, które identyfikują obiektu jako `VarType(3)` (`Integer`) i czterech bajtów, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1986">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="1bc3f-1987">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista liczba bajtów wymaganą do zapisania zmiennej co najmniej dwa bajty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1987">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="1bc3f-1988">Jeśli zmienna zapisywana jest obiekt, który zawiera ciąg, `FilePutObject` zapisuje identyfikowanie deskryptora dwubajtowego `VarType(8)` obiektu deskryptora dwubajtowego wskazującym długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1988">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="1bc3f-1989">Długość rekordu określony przez `RecordLength` parametru w `FileOpen` funkcja musi być większa niż rzeczywista długość ciągu co najmniej cztery bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1989">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="1bc3f-1990">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru i odczytu do powinna być poprawna długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1990">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="1bc3f-1991">Jeśli zmienna zapisywana jest tablicą, a następnie rekordów długości określonej przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich wymaganych do zapisania danych tablicy i deskryptora tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1991">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="1bc3f-1992">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1992">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="1bc3f-1993">Liczba wymiarów czasu jego długość jest równa 2 plus 8: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1993">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="1bc3f-1994">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1994">Binary Mode</span></span>  
 <span data-ttu-id="1bc3f-1995">Dla plików otwieranych w `Binary` trybie wszystkie `Random` tryb reguły mają zastosowanie, z wyjątkiem:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1995">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="1bc3f-1996">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1996">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="1bc3f-1997">`FilePutObject` zapisuje wszystkie zmienne do ciągłym, dysku, oznacza to, że nie uzupełnienie między rekordów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1997">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-1998">W tym przykładzie użyto `FilePutObject` funkcji, aby zapisać ciąg do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1998">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-1999">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-1999">Required.</span></span> <span data-ttu-id="1bc3f-2000">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2000">Any valid file number.</span></span></param>
        <param name="RecordWidth"><span data-ttu-id="1bc3f-2001">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2001">Required.</span></span> <span data-ttu-id="1bc3f-2002">Wyrażenie liczbowe w zakresie od 0 do 255 włącznie, która określa, ile znaków pojawiać się w wierszu przed uruchomieniem nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2002">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span></span> <span data-ttu-id="1bc3f-2003">Jeśli <c>RecordWidth</c> jest równe 0, nie ma żadnego limitu długości wiersza.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2003">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span></span> <span data-ttu-id="1bc3f-2004">Wartość domyślna dla <c>RecordWidth</c> ma wartość 0.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2004">The default value for <c>RecordWidth</c> is 0.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2005">Przypisuje szerokość linii dane wyjściowe do pliku otwartego przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2005">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1bc3f-2006">W tym przykładzie użyto `FileWidth` funkcji, aby ustawić szerokość linii dane wyjściowe do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2006">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2007">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2007">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1bc3f-2008">Zwraca <see langword="Integer" /> wartość, która reprezentuje kolejny numer pliku dostępne do użycia przez <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2008">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2009">Zwraca <see langword="Integer" /> wartość, która reprezentuje kolejny numer pliku dostępne do użycia przez <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2009">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2010">Użyj `FreeFile` podać numer pliku, który nie jest już jest używany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2010">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2011">W tym przykładzie użyto `FreeFile` funkcja zwraca następny dostępny numer pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2011">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="1bc3f-2012">Pięć plików są otwarte dla danych wyjściowych w pętli, a niektóre przykładowe dane są zapisywane do każdego.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2012">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2013">Więcej niż 255 pliki są używane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2013">More than 255 files are in use.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1bc3f-2014">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2014">Required.</span></span> <span data-ttu-id="1bc3f-2015"><see langword="String" /> wyrażenie, które określa nazwę pliku, katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2015"><see langword="String" /> expression that specifies a file, directory, or folder name.</span></span> <span data-ttu-id="1bc3f-2016"><c>Nazwa ścieżki</c> mogą obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2016"><c>PathName</c> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2017">Zwraca <see langword="FileAttribute" /> wartość, która reprezentuje atrybuty pliku, katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2017">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span></span> <span data-ttu-id="1bc3f-2018"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="FileAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2018">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span></span> <span data-ttu-id="1bc3f-2019">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2019">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2020">Wartość zwrócona przez <see langword="GetAttr" /> jest sumą wartości wyliczenia następujące:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2020">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:</span></span>  
  
 <span data-ttu-id="1bc3f-2021"><list type="table"><item><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2021"><list type="table"><item><term> Value</span></span>  
  
 <span data-ttu-id="1bc3f-2022"></term><description> Stała</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2022"></term><description> Constant</span></span>  
  
 <span data-ttu-id="1bc3f-2023"></description><description> Opis elementu</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2023"></description><description> Description</span></span>  
  
 <span data-ttu-id="1bc3f-2024"></description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2024"></description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normal.</span></span>  
  
 <span data-ttu-id="1bc3f-2025"></description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2025"></description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Read-only.</span></span>  
  
 <span data-ttu-id="1bc3f-2026"></description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Ukryte.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2026"></description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Hidden.</span></span>  
  
 <span data-ttu-id="1bc3f-2027"></description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2027"></description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System file.</span></span>  
  
 <span data-ttu-id="1bc3f-2028"></description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2028"></description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Directory or folder.</span></span>  
  
 <span data-ttu-id="1bc3f-2029"></description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> Plik zmienił się od czasu ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2029"></description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> File has changed since last backup.</span></span>  
  
 <span data-ttu-id="1bc3f-2030"></description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2030"></description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> File has a different name.</span></span>  
  
 </description></item></list><block subset="none" type="note"><para>  
 <span data-ttu-id="1bc3f-2031">Te wyliczenia są określane przez język Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2031">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="1bc3f-2032">Nazwy mogą być użyte w dowolne miejsce w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2032">The names can be used anywhere in your code in place of the actual values.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2033">Aby określić, które atrybuty są ustawione, użyj `And` operatora, aby wykonać porównanie bitowe wartości zwróconej przez `GetAttr` funkcji i wartość atrybutu pojedynczy plik ma.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2033">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="1bc3f-2034">Jeśli wynik nie jest równa zero, ten atrybut jest ustawiony dla wskazanego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2034">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="1bc3f-2035">Na przykład, wartość zwracana następujące `And` wyrażenie jest zero, jeśli `Archive` nie ustawiono atrybutu:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2035">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="1bc3f-2036">Zwracana wartość niezerową, gdy `Archive` ustawiono atrybut.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2036">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2037">W tym przykładzie użyto `GetAttr` funkcji, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2037">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1bc3f-2038"><paramref name="Pathname" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2038"><paramref name="Pathname" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-2039">Plik docelowy nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2039">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-2040">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2040">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2041">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2041">Required.</span></span> <span data-ttu-id="1bc3f-2042">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2042">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2043">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2043">Required.</span></span> <span data-ttu-id="1bc3f-2044">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2044">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2045">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2045">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2046">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2046">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2047">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2047">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2048">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2048">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2049">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2049">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2050">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2050">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2051">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2051">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2052">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2052">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2053">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2053">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2054">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2054">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2055">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2055">Data</span></span>|<span data-ttu-id="1bc3f-2056">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2056">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2057">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2057">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2058">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2058">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2059">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2059">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2060">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2060">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2061">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2061">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2062">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2062">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2063">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2063">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2064">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2064">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2065">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2065">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2066">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2066">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2067">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2067">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2068">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2068">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2069">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2069">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2070">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2070">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2071">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2071">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2072">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2072">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2073">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2073">Required.</span></span> <span data-ttu-id="1bc3f-2074">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2074">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2075">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2075">Required.</span></span> <span data-ttu-id="1bc3f-2076">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2076">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2077">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2077">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2078">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2078">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2079">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2079">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2080">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2080">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2081">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2081">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2082">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2082">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2083">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2083">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2084">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2084">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2085">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2085">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2086">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2086">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2087">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2087">Data</span></span>|<span data-ttu-id="1bc3f-2088">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2088">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2089">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2089">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2090">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2090">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2091">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2091">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2092">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2092">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2093">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2093">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2094">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2094">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2095">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2095">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2096">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2096">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2097">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2097">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2098">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2098">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2099">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2099">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2100">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2100">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2101">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2101">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2102">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2102">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2103">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2103">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2104">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2104">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2105">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2105">Required.</span></span> <span data-ttu-id="1bc3f-2106">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2106">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2107">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2107">Required.</span></span> <span data-ttu-id="1bc3f-2108">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2108">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2109">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2109">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2110">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2110">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2111">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2111">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2112">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2112">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2113">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2113">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2114">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2114">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2115">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2115">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2116">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2116">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2117">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2117">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2118">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2118">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2119">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2119">Data</span></span>|<span data-ttu-id="1bc3f-2120">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2120">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2121">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2121">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2122">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2122">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2123">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2123">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2124">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2124">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2125">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2125">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2126">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2126">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2127">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2127">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2128">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2128">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2129">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2129">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2130">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2130">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2131">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2131">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2132">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2132">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2133">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2133">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2134">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2134">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2135">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2135">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2136">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2136">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2137">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2137">Required.</span></span> <span data-ttu-id="1bc3f-2138">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2138">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2139">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2139">Required.</span></span> <span data-ttu-id="1bc3f-2140">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2140">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2141">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2141">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2142">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2142">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2143">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2143">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2144">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2144">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2145">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2145">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2146">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2146">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2147">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2147">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2148">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2148">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2149">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2149">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2150">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2150">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2151">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2151">Data</span></span>|<span data-ttu-id="1bc3f-2152">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2152">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2153">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2153">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2154">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2154">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2155">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2155">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2156">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2156">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2157">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2157">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2158">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2158">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2159">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2159">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2160">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2160">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2161">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2161">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2162">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2162">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2163">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2163">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2164">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2164">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2165">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2165">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2166">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2166">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2167">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2167">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2168">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2168">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2169">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2169">Required.</span></span> <span data-ttu-id="1bc3f-2170">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2170">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2171">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2171">Required.</span></span> <span data-ttu-id="1bc3f-2172">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2172">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2173">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2173">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2174">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2174">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2175">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2175">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2176">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2176">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2177">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2177">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2178">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2178">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2179">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2179">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2180">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2180">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2181">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2181">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2182">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2182">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2183">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2183">Data</span></span>|<span data-ttu-id="1bc3f-2184">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2184">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2185">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2185">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2186">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2186">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2187">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2187">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2188">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2188">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2189">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2189">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2190">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2190">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2191">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2191">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2192">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2192">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2193">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2193">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2194">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2194">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2195">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2195">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2196">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2196">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2197">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2197">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2198">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2198">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2199">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2199">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2200">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2200">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2201">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2201">Required.</span></span> <span data-ttu-id="1bc3f-2202">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2202">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2203">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2203">Required.</span></span> <span data-ttu-id="1bc3f-2204">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2204">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2205">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2205">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2206">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2206">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2207">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2207">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2208">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2208">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2209">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2209">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2210">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2210">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2211">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2211">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2212">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2212">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2213">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2213">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2214">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2214">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2215">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2215">Data</span></span>|<span data-ttu-id="1bc3f-2216">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2216">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2217">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2217">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2218">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2218">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2219">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2219">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2220">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2220">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2221">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2221">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2222">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2222">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2223">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2223">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2224">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2224">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2225">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2225">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2226">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2226">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2227">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2227">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2228">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2228">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2229">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2229">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2230">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2230">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2231">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2231">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2232">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2232">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2233">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2233">Required.</span></span> <span data-ttu-id="1bc3f-2234">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2234">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2235">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2235">Required.</span></span> <span data-ttu-id="1bc3f-2236">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2236">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2237">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2237">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2238">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2238">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2239">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2239">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2240">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2240">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2241">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2241">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2242">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2242">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2243">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2243">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2244">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2244">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2245">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2245">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2246">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2246">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2247">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2247">Data</span></span>|<span data-ttu-id="1bc3f-2248">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2248">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2249">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2249">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2250">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2250">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2251">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2251">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2252">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2252">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2253">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2253">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2254">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2254">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2255">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2255">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2256">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2256">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2257">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2257">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2258">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2258">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2259">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2259">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2260">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2260">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2261">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2261">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2262">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2262">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2263">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2263">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2264">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2264">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2265">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2265">Required.</span></span> <span data-ttu-id="1bc3f-2266">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2266">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2267">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2267">Required.</span></span> <span data-ttu-id="1bc3f-2268">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2268">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2269">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2269">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2270">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2270">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2271">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2271">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2272">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2272">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2273">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2273">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2274">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2274">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2275">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2275">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2276">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2276">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2277">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2277">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2278">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2278">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2279">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2279">Data</span></span>|<span data-ttu-id="1bc3f-2280">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2280">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2281">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2281">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2282">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2282">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2283">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2283">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2284">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2284">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2285">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2285">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2286">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2286">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2287">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2287">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2288">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2288">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2289">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2289">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2290">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2290">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2291">Na przykład w niemieckiej wersji, jeśli wejściowych 3,14159, zwraca tylko 3, ponieważ przecinek jest traktowane jako separator zmiennej zamiast jako separatorem dziesiętnym.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2291">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2292">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2292">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2293">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2293">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2294">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2294">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2295">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2295">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2296">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2296">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2297">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2297">Required.</span></span> <span data-ttu-id="1bc3f-2298">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2298">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2299">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2299">Required.</span></span> <span data-ttu-id="1bc3f-2300">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2300">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2301">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2301">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2302">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2302">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2303">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2303">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2304">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2304">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2305">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2305">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2306">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2306">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2307">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2307">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2308">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2308">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2309">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2309">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2310">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2310">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2311">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2311">Data</span></span>|<span data-ttu-id="1bc3f-2312">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2312">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2313">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2313">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2314">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2314">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2315">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2315">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2316">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2316">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2317">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2317">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2318">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2318">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2319">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2319">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2320">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2320">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2321">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2321">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2322">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2322">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2323">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2323">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2324">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2324">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2325">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2325">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2326">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2326">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2327">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2327">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2328">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2328">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2329">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2329">Required.</span></span> <span data-ttu-id="1bc3f-2330">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2330">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2331">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2331">Required.</span></span> <span data-ttu-id="1bc3f-2332">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2332">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2333">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2333">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2334">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2334">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2335">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2335">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2336">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2336">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2337">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2337">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2338">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2338">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2339">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2339">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2340">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2340">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2341">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2341">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2342">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2342">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2343">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2343">Data</span></span>|<span data-ttu-id="1bc3f-2344">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2344">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2345">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2345">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2346">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2346">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2347">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2347">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2348">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2348">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2349">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2349">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2350">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2350">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2351">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2351">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2352">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2352">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2353">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2353">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2354">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2354">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2355">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2355">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2356">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2356">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2357">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2357">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2358">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2358">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2359">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2359">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2360">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2360">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2361">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2361">Required.</span></span> <span data-ttu-id="1bc3f-2362">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2362">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2363">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2363">Required.</span></span> <span data-ttu-id="1bc3f-2364">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2364">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2365">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2365">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2366">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2366">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2367">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2367">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2368">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2368">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2369">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2369">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2370">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2370">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2371">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2371">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2372">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2372">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2373">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2373">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2374">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2374">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2375">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2375">Data</span></span>|<span data-ttu-id="1bc3f-2376">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2376">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2377">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2377">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2378">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2378">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2379">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2379">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2380">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2380">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2381">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2381">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2382">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2382">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2383">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2383">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2384">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2384">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2385">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2385">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2386">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2386">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2387">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2387">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2388">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2388">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2389">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2389">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2390">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2390">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2391">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2391">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2392">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2392">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2393">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2393">Required.</span></span> <span data-ttu-id="1bc3f-2394">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2394">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="1bc3f-2395">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2395">Required.</span></span> <span data-ttu-id="1bc3f-2396">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2396">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2397">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2397">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2398">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2398">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2399">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2399">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2400">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2400">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2401">Dane odczytane z `Input` są zwykle zapisywane do pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2401">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="1bc3f-2402">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2402">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2403">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2403">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2404">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2404">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2405">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2405">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="1bc3f-2406">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2406">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="1bc3f-2407">Dane</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2407">Data</span></span>|<span data-ttu-id="1bc3f-2408">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2408">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="1bc3f-2409">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2409">Delimiting comma or blank line</span></span>|<span data-ttu-id="1bc3f-2410">Pusty</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2410">Empty</span></span>|  
|<span data-ttu-id="1bc3f-2411">#NULL #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2411">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="1bc3f-2412">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2412">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="1bc3f-2413">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2413">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="1bc3f-2414">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2414">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="1bc3f-2415">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2415">#ERROR `errornumber`#</span></span>|<span data-ttu-id="1bc3f-2416">`errornumber` (zmienna jest oznaczone jako błąd obiektu)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2416">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="1bc3f-2417">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2417">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2418">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2418">The `Input` function is not localized.</span></span> <span data-ttu-id="1bc3f-2419">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2419">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2420">Odczyt z pliku za pomocą `Input` wymaga funkcji `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2420">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2421">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2421">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2422">W tym przykładzie użyto `Input` funkcji można odczytać danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2422">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="1bc3f-2423">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy dane zapisane za pomocą `Write` działanie, każdy wiersz zawierający ciąg w ofert oraz numer rozdzielonych przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2423">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2424">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2424">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2425">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2425">Required.</span></span> <span data-ttu-id="1bc3f-2426">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2426">Any valid file number.</span></span></param>
        <param name="CharCount"><span data-ttu-id="1bc3f-2427">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2427">Required.</span></span> <span data-ttu-id="1bc3f-2428">Dowolne prawidłowe wyrażenie liczbowe określająca liczbę znaków do odczytania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2428">Any valid numeric expression specifying the number of characters to read.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2429">Zwraca <see langword="String" /> wartości, która zawiera znaki z pliku otwartym w <see langword="Input" /> lub <see langword="Binary" /> tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2429">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="1bc3f-2430"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2430">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span> <span data-ttu-id="1bc3f-2431">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2431">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2432">Zwraca <see langword="String" /> wartości, która zawiera znaki z pliku otwartym w <see langword="Input" /> lub <see langword="Binary" /> tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2432">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="1bc3f-2433"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2433">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2434">`InputString` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2434">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2435">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2435">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2436">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2436">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2437">Dane odczytane z `InputString` funkcji są zwykle zapisywane do pliku przy użyciu `Print` lub `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2437">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="1bc3f-2438">Użyj tej funkcji tylko w przypadku plików otwartych w `Input` lub `Binary` tryb.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2438">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="1bc3f-2439">W odróżnieniu od `Input` funkcji `InputString` funkcja zwraca wszystkie znaki tekstu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2439">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="1bc3f-2440">W tym przecinki, znaki powrotu karetki znaki wysuwu wiersza, cudzysłowy i spacje początkowe.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2440">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="1bc3f-2441">W przypadku plików otwartych dla `Binary` dostępu, próba odczytania pliku przy użyciu `InputString` działać do czasu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2441">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="1bc3f-2442">Użyj `LOF` i `Loc` funkcje zamiast `EOF` odczytywana plików binarnych za pomocą `InputString`, lub użyj `FileGet` korzystając `EOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2442">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2443">Podczas odczytu z plików, nie należy wprowadzać zabezpieczeń decyzje dotyczące zawartości pliku, na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2443">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2444">Na przykład plik o nazwie Form1.vb nie może być plik źródłowy języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2444">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2445">W tym przykładzie użyto `InputString` funkcji, aby przeczytać o jeden znak w czasie z pliku i wydrukuj go do `Output` okna.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2445">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="1bc3f-2446">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2446">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1bc3f-2447"><paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2447"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-2448"><paramref name="CharCount" /> &lt; 0 lub &gt; 214.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2448"><paramref name="CharCount" /> &lt; 0 or &gt; 214.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1bc3f-2449">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2449">Required.</span></span> <span data-ttu-id="1bc3f-2450"><see langword="String" /> wyrażenie określające jedną lub więcej nazw plików do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2450"><see langword="String" /> expression that specifies one or more file names to be deleted.</span></span> <span data-ttu-id="1bc3f-2451"><c>Nazwa ścieżki</c> mogą obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2451"><c>PathName</c> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2452">Usuwa pliki z dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2452">Deletes files from a disk.</span></span> <span data-ttu-id="1bc3f-2453"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Kill" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2453">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span></span> <span data-ttu-id="1bc3f-2454">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2454">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2455">`Kill` obsługuje korzystanie z wielu znaków (`*`) i jednego znaku (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2455">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="1bc3f-2456">**Uwaga dotycząca zabezpieczeń** w celu wykonania, `Kill` wymaga funkcji `Read` i `PathDiscovery` flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2456">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="1bc3f-2457">Aby uzyskać więcej informacji, zobacz <xref:System.Security.SecurityException> [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2457">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2458">W tym przykładzie użyto `Kill` funkcji, aby usunąć plik z dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2458">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2459">Otwieranie plików docelowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2459">Target file(s) open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-2460">Nie można odnaleźć plików docelowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2460">Target file(s) not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1bc3f-2461">Odmowa uprawnień.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2461">Permission denied.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2462">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2462">Required.</span></span> <span data-ttu-id="1bc3f-2463">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2463">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2464">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnych i przypisuje go do <see langword="String" /> zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2464">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2465">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnych i przypisuje go do <see langword="String" /> zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2465">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2466">`LineInput` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2466">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2467">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2467">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2468">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2468">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2469">Dane odczytane z `LineInput` są zwykle zapisywane do pliku przy użyciu `Print`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2469">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2470">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2470">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="1bc3f-2471">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2471">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="1bc3f-2472">`LineInput` Funkcja odczytuje z pliku znak w chwili, aż do napotkania powrotu karetki (`Chr(13)`) lub powrotu/wiersza kanału informacyjnego (`Chr(13) + Chr(10)`) sekwencji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2472">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="1bc3f-2473">Sekwencje źródła powrotu i wiersza karetki są pomijane zamiast dołączony do ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2473">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2474">Odczyt z pliku za pomocą `LineInput` wymaga funkcji `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2474">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2475">W tym przykładzie użyto `LineInput` funkcji do odczytywania wiersz z pliku sekwencyjnego i przypisz go do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2475">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="1bc3f-2476">W tym przykładzie założono, że `TestFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2476">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="1bc3f-2477">Osiągnięto koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2477">End of file reached.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1bc3f-2478"><paramref name="FileNumber" /> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2478"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2479">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2479">Required.</span></span> <span data-ttu-id="1bc3f-2480">Wszystkie prawidłowe <see langword="Integer" /> numer pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2480">Any valid <see langword="Integer" /> file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2481">Zwraca <see langword="Long" /> wartość, która określa bieżącą pozycję odczytu/zapisu, w której plik otwarty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2481">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2482">Zwraca <see langword="Long" /> wartość, która określa bieżącą pozycję odczytu/zapisu, w której plik otwarty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2482">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2483">`Loc` Funkcji jest liczony od zera; użyciem jej do pierwszego bajtu w pliku pobrać zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2483">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="1bc3f-2484">`Loc` Funkcja zapewnia zgodność z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2484">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2485">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2485">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2486">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2486">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2487">Poniżej opisano wartość zwracana dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2487">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="1bc3f-2488">Tryb</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2488">Mode</span></span>|<span data-ttu-id="1bc3f-2489">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2489">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="1bc3f-2490">Numer ostatniego rekordu odczytu lub zapisu do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2490">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="1bc3f-2491">Pozycja bieżącego bajtu podzielona przez 128.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2491">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="1bc3f-2492">Jednak informacje zwracane przez `Loc` dla kolejnych plików nie jest używany ani wymagane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2492">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="1bc3f-2493">Położenie ostatniego bajtu zapisu lub odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2493">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2494">W tym przykładzie użyto `Loc` funkcja zwraca bieżącą pozycję odczytu/zapisu, w której plik otwarty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2494">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="1bc3f-2495">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2495">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2496">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2496">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-2497">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2497">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2498"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2498">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2499">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2499">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2500">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2500">Required.</span></span> <span data-ttu-id="1bc3f-2501">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2501">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2502">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2502">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2503"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2503">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2504">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2504">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2505">`Lock` i `Unlock` funkcje są używane w środowiskach, w której kilka procesów może muszą mieć dostęp do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2505">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1bc3f-2506">`Lock` i `Unlock` funkcji zawsze są używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2506">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1bc3f-2507">Argumenty `Lock` i `Unlock` muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2507">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1bc3f-2508">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostaną podane, blokada będzie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2508">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1bc3f-2509">Jeśli `Record` samodzielnie określono pojedynczy rekord będzie zablokowany odblokowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2509">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1bc3f-2510">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` mają wpływ na cały plik, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2510">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2511">W tym przykładzie przedstawiono użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2511">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1bc3f-2512">W tym przykładzie założono, że `People.txt` plik, który zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2512">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2513">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2513">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2514">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2514">Required.</span></span> <span data-ttu-id="1bc3f-2515">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2515">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="1bc3f-2516">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2516">Optional.</span></span> <span data-ttu-id="1bc3f-2517">Liczba tylko rekordu lub byte, aby zablokować lub odblokować</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2517">Number of the only record or byte to lock or unlock</span></span></param>
        <summary><span data-ttu-id="1bc3f-2518">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2518">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2519"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2519">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2520">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2520">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2521">`Lock` i `Unlock` funkcje są używane w środowiskach, w której kilka procesów może muszą mieć dostęp do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2521">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1bc3f-2522">`Lock` i `Unlock` funkcji zawsze są używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2522">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1bc3f-2523">Argumenty `Lock` i `Unlock` muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2523">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1bc3f-2524">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostaną podane, blokada będzie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2524">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1bc3f-2525">Jeśli `Record` samodzielnie określono pojedynczy rekord będzie zablokowany odblokowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2525">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1bc3f-2526">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` mają wpływ na cały plik, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2526">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2527">W tym przykładzie przedstawiono użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2527">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1bc3f-2528">W tym przykładzie założono, że `People.txt` plik, który zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2528">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2529">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2529">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2530">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2530">Required.</span></span> <span data-ttu-id="1bc3f-2531">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2531">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="1bc3f-2532">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2532">Optional.</span></span> <span data-ttu-id="1bc3f-2533">Liczba pierwszy rekord lub byte, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2533">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="1bc3f-2534">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2534">Optional.</span></span> <span data-ttu-id="1bc3f-2535">Liczba ostatnich rekordu lub byte, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2535">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2536">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2536">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2537"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2537">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2538">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2538">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2539">`Lock` i `Unlock` funkcje są używane w środowiskach, w której kilka procesów może muszą mieć dostęp do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2539">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1bc3f-2540">`Lock` i `Unlock` funkcji zawsze są używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2540">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1bc3f-2541">Argumenty `Lock` i `Unlock` muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2541">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1bc3f-2542">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostaną podane, blokada będzie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2542">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1bc3f-2543">Jeśli `Record` samodzielnie określono pojedynczy rekord będzie zablokowany odblokowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2543">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1bc3f-2544">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` mają wpływ na cały plik, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2544">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2545">W tym przykładzie przedstawiono użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2545">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1bc3f-2546">W tym przykładzie założono, że `People.txt` plik, który zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2546">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2547">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2547">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2548">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2548">Required.</span></span> <span data-ttu-id="1bc3f-2549"><see langword="Integer" /> Zawierającą numer prawidłowy plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2549">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2550">Zwraca <see langword="Long" /> reprezentującą rozmiar w bajtach plik otwarty przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2550">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-2551"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2551">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span> <span data-ttu-id="1bc3f-2552">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2552">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2553">Zwraca <see langword="Long" /> reprezentującą rozmiar w bajtach plik otwarty przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2553">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-2554"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2554">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2555">Użyj `FileLen` funkcji, aby uzyskać długość pliku, który nie jest otwarty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2555">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2556">W tym przykładzie użyto `LOF` funkcji, aby określić rozmiar otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2556">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="1bc3f-2557">W tym przykładzie założono, że `TestFile` to plik tekstowy, który zawiera przykładowe dane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2557">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2558">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2558">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="1bc3f-2559">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2559">Required.</span></span> <span data-ttu-id="1bc3f-2560"><see langword="String" /> wyrażenie, które identyfikuje katalog ma zostać utworzony.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2560"><see langword="String" /> expression that identifies the directory to be created.</span></span> <span data-ttu-id="1bc3f-2561"><c>Ścieżki</c> mogą obejmować dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2561">The <c>Path</c> may include the drive.</span></span> <span data-ttu-id="1bc3f-2562">Jeśli dysk nie zostanie wskazany, <see langword="MkDir" /> tworzy nowy katalog na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2562">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2563">Tworzy nowy katalog.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2563">Creates a new directory.</span></span> <span data-ttu-id="1bc3f-2564"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="MkDir" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2564">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span></span> <span data-ttu-id="1bc3f-2565">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2565">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2566">Ta funkcja tworzy nowy katalog.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2566">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2567">W tym przykładzie użyto `MkDir` funkcji do tworzenia katalogu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2567">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="1bc3f-2568">Jeśli dysk nie zostanie określony, nowy katalog jest tworzony na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2568">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-2569"><paramref name="Path" /> nie jest określony lub jest pusty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2569"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1bc3f-2570">Odmowa uprawnień.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2570">Permission denied.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2571">Katalog już istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2571">Directory already exists.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2572">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2572">Required.</span></span> <span data-ttu-id="1bc3f-2573">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2573">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1bc3f-2574">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2574">Optional.</span></span> <span data-ttu-id="1bc3f-2575">Zero lub więcej rozdzielana przecinkami wyrażenia można zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2575">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
 <span data-ttu-id="1bc3f-2576"><c>Dane wyjściowe</c> ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2576">The <c>Output</c> argument settings are:</span></span>  
  
 <span data-ttu-id="1bc3f-2577"><see langword="T:System.IO.IOException" />: Tryb plik jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2577"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="1bc3f-2578"><see langword="T:System.IO.IOException" />: <c>Numer_pliku</c> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2578"><see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2579">Zapisy wyświetlania danych w formacie pliku sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2579">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2580">`Print` i `PrintLine` funkcje są udostępniane dla zgodności z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2580">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2581">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2581">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2582">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2582">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2583">`Print` nie ma wiersz na końcu wiersza; jednak `PrintLine` obejmują wysuwu wiersza.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2583">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="1bc3f-2584">Dane zapisywane z `Print` jest zwykle do odczytu z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2584">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="1bc3f-2585">W przypadku pominięcia `Output` dla `PrintLine`, pusty wiersz jest drukowany do pliku, na `Print`, nie ma danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2585">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="1bc3f-2586">Wiele wyrażeń oddzielonych przecinkami będzie wyrównane na granicach kartę, ale mieszania przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2586">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="1bc3f-2587">Aby uzyskać `Boolean` danych, albo `True` lub `False` drukowania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2587">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="1bc3f-2588">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2588">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="1bc3f-2589">Dane daty są zapisywane do pliku w formacie daty krótkiej standardowe rozpoznany przez system.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2589">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="1bc3f-2590">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2590">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="1bc3f-2591">Jeśli nic nie są zapisywane do pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2591">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1bc3f-2592">Jednak jeśli `Output` dane listy jest `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2592">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="1bc3f-2593">Aby uzyskać `Error` dane, dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2593">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="1bc3f-2594">`Error` — Słowo kluczowe nie jest translacja niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2594">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="1bc3f-2595">Wszystkie dane zapisane do pliku przy użyciu `Print` uwzględnia ustawienia regionalne; oznacza to, danych jest poprawnie sformatowany przy użyciu odpowiednich separatorem dziesiętnym.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2595">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="1bc3f-2596">Jeśli użytkownik żąda do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinien być używany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2596">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="1bc3f-2597">Zapis do pliku przy użyciu `Print` lub `PrintLine` wymaga funkcji `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2597">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2598">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2598">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2599">W tym przykładzie użyto `Print` i `PrintLine` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2599">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2600">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2600">Required.</span></span> <span data-ttu-id="1bc3f-2601">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2601">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1bc3f-2602">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2602">Optional.</span></span> <span data-ttu-id="1bc3f-2603">Zero lub więcej rozdzielana przecinkami wyrażenia można zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2603">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
 <span data-ttu-id="1bc3f-2604"><c>Dane wyjściowe</c> ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2604">The <c>Output</c> argument settings are:</span></span>  
  
 <span data-ttu-id="1bc3f-2605"><see langword="T:System.IO.IOException" />: Tryb plik jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2605"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="1bc3f-2606"><see langword="T:System.IO.IOException" />: <c>Numer_pliku</c> nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2606"><see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2607">Zapisy wyświetlania danych w formacie pliku sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2607">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2608">`Print` i `PrintLine` funkcje są udostępniane dla zgodności z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2608">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2609">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2609">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2610">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2610">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2611">`Print` nie ma wiersz na końcu wiersza; jednak`PrintLine` obejmują wysuwu wiersza.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2611">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="1bc3f-2612">Dane zapisywane z `Print` jest zwykle do odczytu z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2612">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="1bc3f-2613">W przypadku pominięcia `Output` dla `PrintLine`, pusty wiersz jest drukowany do pliku, na `Print`, nie ma danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2613">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="1bc3f-2614">Wiele wyrażeń oddzielonych przecinkami będzie wyrównane na granicach kartę, ale mieszania przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2614">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="1bc3f-2615">Aby uzyskać `Boolean` danych, albo `True` lub `False` drukowania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2615">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="1bc3f-2616">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2616">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="1bc3f-2617">Dane daty są zapisywane do pliku w formacie daty krótkiej standardowe rozpoznawane przez system.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2617">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="1bc3f-2618">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2618">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="1bc3f-2619">Jeśli nic nie są zapisywane do pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2619">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1bc3f-2620">Jednak jeśli `Output` dane listy jest `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2620">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="1bc3f-2621">Aby uzyskać `Error` dane, dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2621">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="1bc3f-2622">`Error` — Słowo kluczowe nie jest translacja niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2622">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="1bc3f-2623">Wszystkie dane zapisane do pliku przy użyciu `Print` uwzględnia ustawienia regionalne; oznacza to, danych jest poprawnie sformatowany przy użyciu odpowiednich separatorem dziesiętnym.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2623">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="1bc3f-2624">Jeśli użytkownik żąda do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinien być używany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2624">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="1bc3f-2625">Zapis do pliku przy użyciu `Print` lub `PrintLine` wymaga funkcji `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2625">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2626">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2626">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2627">W tym przykładzie użyto `Print` i `PrintLine` funkcji można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2627">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath"><span data-ttu-id="1bc3f-2628">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2628">Required.</span></span> <span data-ttu-id="1bc3f-2629"><see langword="String" /> wyrażenie określające istniejącą nazwę pliku i lokalizację.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2629"><see langword="String" /> expression that specifies the existing file name and location.</span></span> <span data-ttu-id="1bc3f-2630"><c>OldPath</c> może obejmować katalogu i dysku w pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2630"><c>OldPath</c> may include the directory, and drive, of the file.</span></span></param>
        <param name="NewPath"><span data-ttu-id="1bc3f-2631">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2631">Required.</span></span> <span data-ttu-id="1bc3f-2632"><see langword="String" /> wyrażenie, które określa nową nazwę pliku i lokalizację.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2632"><see langword="String" /> expression that specifies the new file name and location.</span></span> <span data-ttu-id="1bc3f-2633"><c>Nowa_ścieżka</c> mogą obejmować katalogu oraz dysk w lokalizacji docelowej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2633"><c>NewPath</c> may include directory and drive of the destination location.</span></span> <span data-ttu-id="1bc3f-2634">Nazwa pliku określona przez <c>Nowa_ścieżka</c> już nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2634">The file name specified by <c>NewPath</c> cannot already exist.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2635">Zmienia nazwę pliku lub katalogu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2635">Renames a disk file or directory.</span></span> <span data-ttu-id="1bc3f-2636"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Rename" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2636">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span></span> <span data-ttu-id="1bc3f-2637">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2637">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2638">`Rename` Funkcji zmienia nazwę pliku i przenosi ją do innego katalogu, jeśli jest to wymagane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2638">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="1bc3f-2639">`Rename` Funkcja może przenieść plik na dyskach, ale tylko wtedy można zmienić nazwę istniejącego katalogu po obu `NewPath` i `OldPath` znajdują się na tym samym dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2639">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="1bc3f-2640">`Rename` Nie można utworzyć nowego pliku lub katalogu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2640">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="1bc3f-2641">Przy użyciu `Rename` funkcji, dla której plik otwarty powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2641">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="1bc3f-2642">Otwórz plik należy zamknąć przed zmianą nazwy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2642">You must close an open file before renaming it.</span></span> <span data-ttu-id="1bc3f-2643">`Rename` argumenty nie może zawierać wielu znaków (\*) i symboli wieloznacznych, jednoznakowym (?).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2643">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bc3f-2644">Korzystając z `Rename` kopiowania pliku z lokalizacji niechronione do chronionej lokalizacji, plik zachowuje mniej ograniczone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2644">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="1bc3f-2645">Sprawdź, czy nie są wprowadzenie zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2645">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2646">W tym przykładzie użyto `Rename` funkcji, aby zmienić nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2646">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="1bc3f-2647">Do celów tego przykładu założono, że katalogi, które są określone już istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2647">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1bc3f-2648">Ścieżka jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2648">Path is invalid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1bc3f-2649"><paramref name="OldPath" /> Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2649"><paramref name="OldPath" /> file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2650">Nie można zmienić nazwy na innym urządzeniu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2650">Cannot rename to different device.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1bc3f-2651">Zamyka wszystkie dysku pliki otwierane przy użyciu <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2651">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-2652"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Reset" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2652">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span></span> <span data-ttu-id="1bc3f-2653">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2653">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2654">`Reset` Funkcja zamyka wszystkie aktywne pliki otwarte przez `FileOpen` funkcji i ma taką samą funkcję jak `FileClose()` bez żadnych parametrów.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2654">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2655">W tym przykładzie użyto `Reset` funkcji, aby zamknąć wszystkie otwarte pliki i zapisać zawartość buforów plików na dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2655">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="1bc3f-2656">Zwróć uwagę na użycie `Object` zmiennej `FileNumber` zarówno jako ciąg i numeru.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2656">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="1bc3f-2657">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2657">Required.</span></span> <span data-ttu-id="1bc3f-2658"><see langword="String" /> wyrażenie, które identyfikuje katalogu lub folderu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2658"><see langword="String" /> expression that identifies the directory or folder to be removed.</span></span> <span data-ttu-id="1bc3f-2659"><c>Ścieżka</c> można dołączyć dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2659"><c>Path</c> can include the drive.</span></span> <span data-ttu-id="1bc3f-2660">Jeśli dysk nie zostanie wskazany, <see langword="RmDir" /> usuwa katalogu na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2660">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2661">Usuwa istniejący katalog.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2661">Removes an existing directory.</span></span> <span data-ttu-id="1bc3f-2662"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="RmDir" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2662">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span></span> <span data-ttu-id="1bc3f-2663">Aby uzyskać więcej informacji, zobacz <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2663">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2664">Błąd występuje, gdy użytkownik próbuje użyć `RmDir` w katalogu, który zawiera pliki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2664">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="1bc3f-2665">Użyj `Kill` funkcji, aby usunąć wszystkie pliki przed podjęciem próby usunięcia katalogu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2665">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2666">W tym przykładzie użyto `RmDir` funkcji, aby usunąć istniejący katalog.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2666">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-2667"><paramref name="Path" /> nie jest określony lub jest pusty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2667"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2668">Katalog docelowy zawiera pliki.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2668">Target directory contains files.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1bc3f-2669">Katalog nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2669">Directory does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-2670">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji lub Ustawia położenie w następnej operacji odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2670">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-2671"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2671">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="1bc3f-2672">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2672">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2673">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2673">Required.</span></span> <span data-ttu-id="1bc3f-2674"><see langword="Integer" /> Zawierającą numer prawidłowy plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2674">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2675">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji lub Ustawia położenie w następnej operacji odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2675">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-2676"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2676">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="1bc3f-2677">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2677">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2678">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji lub Ustawia położenie w następnej operacji odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2678">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2679">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (odpowiednikiem 2 ^ 31 – 1) włącznie.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2679">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="1bc3f-2680">Poniżej opisano wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2680">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="1bc3f-2681">Tryb</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2681">Mode</span></span>|<span data-ttu-id="1bc3f-2682">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2682">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="1bc3f-2683">Liczba następnego rekordu odczytu lub zapisu</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2683">Number of the next record read or written</span></span>|  
|<span data-ttu-id="1bc3f-2684">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2684">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="1bc3f-2685">Pozycja bajtów, jaką występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2685">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="1bc3f-2686">Pierwszy bajt w pliku od pozycji 1, drugi bajt znajduje się na pozycji nr 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2686">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2687">W tym przykładzie użyto `Seek` funkcja zwraca bieżące położenie pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2687">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="1bc3f-2688">W przykładzie założono `TestFile` plik, który zawiera rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2688">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="1bc3f-2689">Dla plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2689">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="1bc3f-2690">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2690">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1bc3f-2691">Załóżmy `TestFile` plik, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2691">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="1bc3f-2692">W tym przykładzie użyto `Seek` funkcja ustawienia pozycji dla następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2692">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="1bc3f-2693">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajtów, jaką występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2693">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1bc3f-2694">Załóżmy `TestFile` plik, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2694">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2695">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2695">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2696">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2696">Required.</span></span> <span data-ttu-id="1bc3f-2697"><see langword="Integer" /> Zawierającą numer prawidłowy plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2697">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <param name="Position"><span data-ttu-id="1bc3f-2698">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2698">Required.</span></span> <span data-ttu-id="1bc3f-2699">Liczba z zakresu 1 – 2 147 483 647, włącznie, która wskazuje, gdzie następnej odczytu/zapisu operacji powinien wystąpić.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2699">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2700">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji lub Ustawia położenie w następnej operacji odczytu/zapisu w pliku otworzyć za pomocą <see langword="FileOpen" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2700">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="1bc3f-2701"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2701">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="1bc3f-2702">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2702">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2703">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (odpowiednikiem 2 ^ 31 – 1) włącznie.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2703">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="1bc3f-2704">Poniżej opisano wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2704">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="1bc3f-2705">Tryb</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2705">Mode</span></span>|<span data-ttu-id="1bc3f-2706">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2706">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="1bc3f-2707">Liczba następnego rekordu odczytu lub zapisu</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2707">Number of the next record read or written</span></span>|  
|<span data-ttu-id="1bc3f-2708">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2708">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="1bc3f-2709">Pozycja bajtów, jaką występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2709">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="1bc3f-2710">Pierwszy bajt w pliku od pozycji 1, drugi bajt znajduje się na pozycji nr 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2710">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2711">W tym przykładzie użyto `Seek` funkcja zwraca bieżące położenie pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2711">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="1bc3f-2712">W przykładzie założono `TestFile` plik, który zawiera rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2712">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="1bc3f-2713">Dla plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2713">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="1bc3f-2714">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2714">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1bc3f-2715">Załóżmy `TestFile` plik, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2715">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="1bc3f-2716">W tym przykładzie użyto `Seek` funkcja ustawienia pozycji dla następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2716">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="1bc3f-2717">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajtów, jaką występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2717">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="1bc3f-2718">Załóżmy `TestFile` plik, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2718">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2719">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2719">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="1bc3f-2720">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2720">Required.</span></span> <span data-ttu-id="1bc3f-2721"><see langword="String" /> wyrażenie, które określa nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2721"><see langword="String" /> expression that specifies a file name.</span></span> <span data-ttu-id="1bc3f-2722"><c>Nazwa ścieżki</c> mogą obejmować katalogu lub folderu i dysku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2722"><c>PathName</c> can include directory or folder, and drive.</span></span></param>
        <param name="Attributes"><span data-ttu-id="1bc3f-2723">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2723">Required.</span></span> <span data-ttu-id="1bc3f-2724">Wyrażenie stałej lub liczbowego, którego suma określa atrybuty pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2724">Constant or numeric expression, whose sum specifies file attributes.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2725">Ustawia atrybut informacji dla pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2725">Sets attribute information for a file.</span></span> <span data-ttu-id="1bc3f-2726"><see langword="My" /> Funkcji zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="SetAttr" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2726">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span></span> <span data-ttu-id="1bc3f-2727">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2727">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2728">Błąd czasu wykonywania występuje, Jeśli spróbujesz ustawić atrybuty otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2728">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="1bc3f-2729">`Attributes` Argumentu wyliczenia wartości są następujące:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2729">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="1bc3f-2730">Wartość</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2730">Value</span></span>|<span data-ttu-id="1bc3f-2731">Stała</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2731">Constant</span></span>|<span data-ttu-id="1bc3f-2732">Opis</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2732">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="1bc3f-2733">Normalny (domyślnie).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2733">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="1bc3f-2734">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2734">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="1bc3f-2735">Ukryte.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2735">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="1bc3f-2736">System plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2736">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="1bc3f-2737">Etykieta woluminu</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2737">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="1bc3f-2738">Katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2738">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="1bc3f-2739">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2739">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="1bc3f-2740">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2740">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2741">Te wyliczenia są określane przez język Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2741">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="1bc3f-2742">Nazwy mogą być użyte w dowolne miejsce w kodzie, a nie rzeczywiste wartości.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2742">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2743">W tym przykładzie użyto `SetAttr` funkcji można ustawić atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2743">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bc3f-2744"><paramref name="Attribute" /> Typ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2744"><paramref name="Attribute" /> type is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count"><span data-ttu-id="1bc3f-2745">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2745">Required.</span></span> <span data-ttu-id="1bc3f-2746">Liczba spacji do wstawienia przed wyświetleniem lub wydrukowaniem następnego wyrażenia na liście.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2746">The number of spaces to insert before displaying or printing the next expression in a list.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2747">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2747">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2748">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2748">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2749">Jeśli `Count` jest mniejsza niż szerokość linii danych wyjściowych, natychmiast następną pozycję wydruku następuje liczba wydrukowanych spacji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2749">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="1bc3f-2750">Jeśli`Count` jest większa niż szerokość linii danych wyjściowych, `SPC` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2750">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="1bc3f-2751">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2751">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="1bc3f-2752">Na przykład, czy bieżące położenie wydruku jest 24, szerokość linii danych wyjściowych 80, a określisz `SPC(90)`, wydruk rozpocznie się na pozycji 34 (bieżąca pozycja wydruku + pozostałej części 90/80).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2752">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="1bc3f-2753">Jeśli różnica między bieżącą pozycję wydruku i szerokości linii danych wyjściowych jest mniejsza niż `Count` (lub `Count` `Mod` *szerokość*), `SPC` funkcja przejdzie do rozpoczęcia następnego wiersza i generuje spacje równa `Count` — (*szerokość* — *bieżąca_pozycja_wydruku*).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2753">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` – (*width* – *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2754">Upewnij się, że kolumny tabel są wystarczająco szerokie umożliwić szerokie litery.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2754">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2755">W tym przykładzie użyto `SPC` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2755">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-2756">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcje do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2756">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1bc3f-2757">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcje do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2757">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2758">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcje do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2758">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2759">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większy niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2759">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="1bc3f-2760">Jeśli `Column` jest mniejszy niż 1 `TAB` przesunie pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2760">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="1bc3f-2761">Jeśli `Column` jest większy niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2761">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="1bc3f-2762">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2762">Column Mod width</span></span>  
  
 <span data-ttu-id="1bc3f-2763">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, wydruk zostaną uruchomione w kolumnie 10 (w pozostałej części 90/80).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2763">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="1bc3f-2764">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania, uruchamia drukowanie w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2764">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="1bc3f-2765">Jeśli obliczonej pozycji drukowania jest większy niż bieżącej pozycji drukowania, drukowania rozpoczyna się od obliczony drukowanie pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2765">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="1bc3f-2766">Po lewej stronie pozycja drukowania w wierszu wydruku ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2766">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="1bc3f-2767">Jeśli używasz `Print` lub `PrintLine` funkcje drukowania do plików, po prawej stronie pozycja drukowania jest bieżąca szerokość pliku wyjściowego, którą można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2767">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="1bc3f-2768">`TAB` Funkcji można również używać razem `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2768">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="1bc3f-2769">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2769">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2770">Upewnij się, że kolumny tabel są dostatecznie szerokie, zawierają szerokie litery.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2770">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2771">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2771">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column"><span data-ttu-id="1bc3f-2772">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2772">Optional.</span></span> <span data-ttu-id="1bc3f-2773">Numer kolumny przeniesione do przed wyświetleniem lub wydrukowaniem następnego wyrażenia na liście.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2773">The column number moved to before displaying or printing the next expression in a list.</span></span> <span data-ttu-id="1bc3f-2774">Pominięcie <see langword="TAB" /> przenosi punkt wstawiania na początek następnego strefy wydruku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2774">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2775">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcje do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2775">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="1bc3f-2776">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcje do pozycjonowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2776">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2777">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większa niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2777">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="1bc3f-2778">Jeśli `Column` jest mniejszy niż 1 `TAB` przesunie pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2778">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="1bc3f-2779">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2779">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="1bc3f-2780">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2780">Column Mod width</span></span>  
  
 <span data-ttu-id="1bc3f-2781">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, wydruk zostaną uruchomione w kolumnie 10 (w pozostałej części 90/80).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2781">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="1bc3f-2782">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania, uruchamia drukowanie w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2782">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="1bc3f-2783">Jeśli obliczonej pozycji drukowania jest większa niż bieżące położenie wydruku, drukowania rozpoczyna się od obliczony drukowanie pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2783">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="1bc3f-2784">Po lewej stronie pozycja drukowania w wierszu wydruku ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2784">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="1bc3f-2785">Jeśli używasz `Print` lub `PrintLine` funkcje drukowania do plików, po prawej stronie pozycja drukowania jest bieżąca szerokość pliku wyjściowego, którą można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2785">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="1bc3f-2786">`TAB` Funkcji można również używać razem `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2786">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="1bc3f-2787">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2787">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bc3f-2788">Upewnij się, że kolumny tabel są dostatecznie szerokie, zawierają szerokie litery.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2788">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2789">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2789">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bc3f-2790">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2790">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2791"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2791">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2792">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2792">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2793">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2793">Required.</span></span> <span data-ttu-id="1bc3f-2794">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2794">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2795">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2795">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2796"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2796">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2797">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2797">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2798">`Lock` i `Unlock` funkcje są używane w środowiskach, w której kilka procesów może muszą mieć dostęp do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2798">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1bc3f-2799">`Lock` i `Unlock` funkcji zawsze są używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2799">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1bc3f-2800">Argumenty `Lock` i `Unlock` muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2800">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1bc3f-2801">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostaną podane, blokada będzie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2801">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1bc3f-2802">Jeśli `Record` samodzielnie określono pojedynczy rekord będzie zablokowany odblokowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2802">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1bc3f-2803">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` mają wpływ na cały plik, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2803">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2804">W tym przykładzie przedstawiono użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2804">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1bc3f-2805">W tym przykładzie założono, że `People.txt` plik, który zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2805">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2806">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2806">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2807">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2807">Required.</span></span> <span data-ttu-id="1bc3f-2808">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2808">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="1bc3f-2809">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2809">Optional.</span></span> <span data-ttu-id="1bc3f-2810">Liczba tylko rekordu lub byte, aby zablokować lub odblokować</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2810">Number of the only record or byte to lock or unlock</span></span></param>
        <summary><span data-ttu-id="1bc3f-2811">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2811">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2812"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2812">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2813">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2813">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2814">`Lock` i `Unlock` funkcje są używane w środowiskach, w której kilka procesów może muszą mieć dostęp do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2814">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1bc3f-2815">`Lock` i `Unlock` funkcji zawsze są używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2815">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1bc3f-2816">Argumenty `Lock` i `Unlock` muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2816">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1bc3f-2817">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostaną podane, blokada będzie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2817">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1bc3f-2818">Jeśli `Record` samodzielnie określono pojedynczy rekord będzie zablokowany odblokowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2818">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1bc3f-2819">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` mają wpływ na cały plik, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2819">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2820">W tym przykładzie przedstawiono użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2820">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1bc3f-2821">W tym przykładzie założono, że `People.txt` plik, który zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2821">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2822">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2822">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2823">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2823">Required.</span></span> <span data-ttu-id="1bc3f-2824">Dowolna prawidłowa liczba plików.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2824">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="1bc3f-2825">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2825">Optional.</span></span> <span data-ttu-id="1bc3f-2826">Liczba pierwszy rekord lub byte, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2826">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="1bc3f-2827">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2827">Optional.</span></span> <span data-ttu-id="1bc3f-2828">Liczba ostatnich rekordu lub byte, aby zablokować lub odblokować.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2828">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2829">Kontroluje dostęp przez inne procesy do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2829">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="1bc3f-2830"><see langword="My" /> Funkcja zapewnia lepszą wydajność i wydajności w ramach operacji We/Wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2830">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="1bc3f-2831">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2831">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2832">`Lock` i `Unlock` funkcje są używane w środowiskach, w której kilka procesów może muszą mieć dostęp do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2832">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="1bc3f-2833">`Lock` i `Unlock` funkcji zawsze są używane w parach.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2833">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="1bc3f-2834">Argumenty `Lock` i `Unlock` muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2834">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="1bc3f-2835">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostaną podane, blokada będzie cały plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2835">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="1bc3f-2836">Jeśli `Record` samodzielnie określono pojedynczy rekord będzie zablokowany odblokowane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2836">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="1bc3f-2837">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` mają wpływ na cały plik, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2837">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2838">W tym przykładzie przedstawiono użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2838">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="1bc3f-2839">W tym przykładzie założono, że `People.txt` plik, który zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2839">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2840">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2840">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2841">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2841">Required.</span></span> <span data-ttu-id="1bc3f-2842"><see langword="Integer" /> Wyrażenie, które zawiera dowolną liczbę prawidłowy plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2842">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1bc3f-2843">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2843">Optional.</span></span> <span data-ttu-id="1bc3f-2844">Co najmniej jednego rozdzielana przecinkami wyrażenia można zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2844">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2845">Zapisuje dane do pliku sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2845">Writes data to a sequential file.</span></span> <span data-ttu-id="1bc3f-2846">Dane zapisywane z <see langword="Write" /> jest zwykle do odczytu z pliku za pomocą <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2846">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2847">`Write` i `WriteLine` funkcje są udostępniane dla zgodności z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2847">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2848">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2848">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2849">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2849">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2850">W przypadku pominięcia `Output`, pusty wiersz jest drukowany w pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2850">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="1bc3f-2851">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2851">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="1bc3f-2852">W odróżnieniu od `Print` funkcji `Write` funkcja wstawia przecinkami między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2852">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="1bc3f-2853">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2853">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="1bc3f-2854">Gdy `Write` służy do zapisywania danych do pliku, tylko numeryczne `Boolean`, Data, null, i `Error` formaty danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2854">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="1bc3f-2855">Następujące założenia uniwersalnych zostaną wykonane, dane mogą zawsze odczytać i prawidłowo interpretowane przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2855">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="1bc3f-2856">Dane liczbowe są zawsze zapisywane przy użyciu okresu jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2856">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="1bc3f-2857">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` drukowania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2857">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="1bc3f-2858">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2858">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="1bc3f-2859">Data dane zostają zapisane do pliku w formacie uniwersalnego daty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2859">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="1bc3f-2860">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2860">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="1bc3f-2861">Jeśli nic nie są zapisywane do pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2861">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1bc3f-2862">Jednak w przypadku wartości null danych `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2862">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-2863">Aby uzyskać `Error` dane, dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2863">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="1bc3f-2864">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2864">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="1bc3f-2865">`WriteLine` Wstawia znaku nowego wiersza (to znaczy źródła powrotu karetki/wiersza lub `Chr(13) + Chr(10)`), po zostaną zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2865">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="1bc3f-2866">Znaki cudzysłowu w ciągu można osadzić przy użyciu podwójnych cudzysłowów prostych, lub "".</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2866">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="1bc3f-2867">Na przykład</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2867">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="1bc3f-2868">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2868">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="1bc3f-2869">Zapis do pliku przy użyciu `Write` lub `WriteLine` wymaga funkcji `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2869">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2870">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2870">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2871">W tym przykładzie użyto `Write` funkcji do zapisania danych pierwotnych do pliku sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2871">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1bc3f-2872">Tryb pliku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2872">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="1bc3f-2873">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2873">Required.</span></span> <span data-ttu-id="1bc3f-2874"><see langword="Integer" /> Wyrażenie, które zawiera dowolną liczbę prawidłowy plik.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2874">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="1bc3f-2875">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2875">Optional.</span></span> <span data-ttu-id="1bc3f-2876">Co najmniej jednego rozdzielana przecinkami wyrażenia można zapisać do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2876">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="1bc3f-2877">Zapisuje dane do pliku sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2877">Writes data to a sequential file.</span></span> <span data-ttu-id="1bc3f-2878">Dane zapisywane z <see langword="Write" /> jest zwykle do odczytu z pliku za pomocą <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2878">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bc3f-2879">`Write` i `WriteLine` funkcje są udostępniane dla zgodności z poprzednimi wersjami i mogą wpływać na wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2879">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="1bc3f-2880">W przypadku aplikacji starszym `My.Computer.FileSystem` obiektu zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2880">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="1bc3f-2881">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2881">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="1bc3f-2882">W przypadku pominięcia `Output`, pusty wiersz jest drukowany w pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2882">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="1bc3f-2883">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2883">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="1bc3f-2884">W odróżnieniu od `Print` funkcji `Write` funkcja wstawia przecinkami między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2884">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="1bc3f-2885">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2885">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="1bc3f-2886">Gdy `Write` służy do zapisywania danych do pliku, tylko numeryczne `Boolean`, Data, null, i `Error` formaty danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2886">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="1bc3f-2887">Następujące założenia uniwersalnych zostaną wykonane, dane mogą zawsze odczytać i prawidłowo interpretowane przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2887">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="1bc3f-2888">Dane liczbowe są zawsze zapisywane przy użyciu okresu jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2888">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="1bc3f-2889">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` drukowania.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2889">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="1bc3f-2890">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2890">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="1bc3f-2891">Data dane zostają zapisane do pliku w formacie uniwersalnego daty.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2891">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="1bc3f-2892">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2892">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="1bc3f-2893">Jeśli nic nie są zapisywane do pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2893">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="1bc3f-2894">Jednak w przypadku wartości null danych `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2894">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="1bc3f-2895">Aby uzyskać `Error` dane, dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2895">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="1bc3f-2896">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2896">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="1bc3f-2897">`WriteLine` Wstawia znaku nowego wiersza (to znaczy źródła powrotu karetki/wiersza lub `Chr(13) + Chr(10)`), po zostaną zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2897">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="1bc3f-2898">Znaki cudzysłowu w ciągu można osadzić przy użyciu podwójnych cudzysłowów prostych, lub "".</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2898">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="1bc3f-2899">Na przykład</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2899">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="1bc3f-2900">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2900">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="1bc3f-2901">Zapis do pliku przy użyciu `Write` lub `WriteLine` wymaga funkcji `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2901">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="1bc3f-2902">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2902">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bc3f-2903">W tym przykładzie użyto `Write` funkcji do zapisania danych pierwotnych do pliku sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="1bc3f-2903">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
  </Members>
</Type>