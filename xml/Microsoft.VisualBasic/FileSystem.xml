<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="698d4c7779138119bfe452e95602b55a06711e5b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37712147" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d4c80-101">
        <see langword="FileSystem" /> Modułu zawiera procedury, które są używane do wykonywania operacji pliku, katalogu lub folderu i systemu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4c80-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span>
      </span>
      <span data-ttu-id="d4c80-102">
        <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż przy użyciu <see langword="FileSystem" /> modułu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4c80-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span>
      </span>
      <span data-ttu-id="d4c80-103">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4c80-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-104">Ten moduł obsługuje słowa kluczowe języka Visual Basic i elementy członkowskie biblioteki wykonawczej, uzyskujących dostęp do plików i folderów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-105">W tym przykładzie użyto `GetAttr` funkcję, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member ChDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="d4c80-106">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-106">Required.</span>
          </span>
          <span data-ttu-id="d4c80-107">A <see langword="String" /> wyrażenia, który identyfikuje, które katalogu lub folderu staje się nowego domyślnego katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span>
          </span>
          <span data-ttu-id="d4c80-108">
            <c>Ścieżka</c> mogą obejmować dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-108">
              <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="d4c80-109">Jeśli dysk nie zostanie określony, <see langword="ChDir" /> zmienia domyślnego katalogu lub folderu na bieżącym dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-110">Zmienia bieżącego katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-110">Changes the current directory or folder.</span>
          </span>
          <span data-ttu-id="d4c80-111">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="ChDir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-112">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-113">`ChDir` Funkcji zmienia domyślnego katalogu, ale nie dysk domyślny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-113">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="d4c80-114">Na przykład jeśli domyślnym dysku C, następująca instrukcja zmienia domyślny katalog na dysku D, ale C pozostaje dysk domyślny:</span><span class="sxs-lookup"><span data-stu-id="d4c80-114">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="d4c80-115">Można ustawić względne zmiany w katalogu jest przez wpisanie dwóch kropek w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-115">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-116">`ChDir` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d4c80-116">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="d4c80-117">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i.</span><span class="sxs-lookup"><span data-stu-id="d4c80-117">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-118">W tym przykładzie użyto `ChDir` funkcję, aby zmienić bieżącego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-118">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-119">
            <paramref name="Path" /> jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-119">
              <paramref name="Path" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-120">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-120">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-121">Zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-121">Changes the current drive.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : char -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="d4c80-122">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-122">Required.</span>
          </span>
          <span data-ttu-id="d4c80-123">Wyrażenie ciągu, który określa istniejącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-123">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="d4c80-124">Jeśli podasz ciągiem o zerowej długości (""), nie zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-124">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="d4c80-125">Jeśli <c>dysku</c> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-126">Zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-126">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-127">`ChDrive` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d4c80-127">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="d4c80-128">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d4c80-128">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-129">W tym przykładzie użyto `ChDrive` funkcję, aby zmienić bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="d4c80-129">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="d4c80-130">Funkcja zgłasza wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d4c80-130">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-131">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-131">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="d4c80-132">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-132">Required.</span>
          </span>
          <span data-ttu-id="d4c80-133">Wyrażenie ciągu, który określa istniejącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-133">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="d4c80-134">Jeśli podasz ciągiem o zerowej długości (""), nie zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-134">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="d4c80-135">Jeśli <c>dysku</c> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-136">Zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-136">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-137">`ChDrive` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d4c80-137">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="d4c80-138">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d4c80-138">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-139">W tym przykładzie użyto `ChDrive` funkcję, aby zmienić bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="d4c80-139">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="d4c80-140">Funkcja zgłasza wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d4c80-140">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-141">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-141">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-142">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-142">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="d4c80-143">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="d4c80-144">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberSignature Language="F#" Value="static member CurDir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-145">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-145">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="d4c80-146">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="d4c80-147">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-148">Ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-148">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4c80-149">W tym przykładzie użyto `CurDir` funkcja zwraca bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="d4c80-149">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberSignature Language="F#" Value="static member CurDir : char -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="d4c80-150">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-150">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-151">
            <see langword="Char" /> wyrażenie określające istniejącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-151">
              <see langword="Char" /> expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="d4c80-152">Jeśli dysk nie zostanie określony, lub jeśli <c>dysku</c> jest ciągiem o zerowej długości (""), <see langword="CurDir" /> zwraca ścieżkę dla bieżącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-153">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-153">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="d4c80-154">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="d4c80-155">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-156">Ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-156">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4c80-157">W tym przykładzie użyto `CurDir` funkcja zwraca bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="d4c80-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-158">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="d4c80-159">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-160">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberSignature Language="F#" Value="static member Dir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-161">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="d4c80-162">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-163">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-164">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-165">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-165">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="d4c80-166">`VbVolume` zwraca etykietę woluminu dysku, zamiast nazwy określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-166">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="d4c80-167">Należy podać `PathName` przy pierwszym wywołaniu `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-167">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="d4c80-168">Aby pobrać następny element, może wykonać kolejne wywołania `Dir` funkcję bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-168">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-169">By działała poprawnie, `Dir` funkcja wymaga, aby <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-169">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="d4c80-170">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d4c80-170">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="d4c80-171">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="d4c80-171">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="d4c80-172">Wartość</span><span class="sxs-lookup"><span data-stu-id="d4c80-172">Value</span></span>|<span data-ttu-id="d4c80-173">Stała</span><span class="sxs-lookup"><span data-stu-id="d4c80-173">Constant</span></span>|<span data-ttu-id="d4c80-174">Opis</span><span class="sxs-lookup"><span data-stu-id="d4c80-174">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="d4c80-175">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="d4c80-175">Default.</span></span> <span data-ttu-id="d4c80-176">Określa pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-176">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="d4c80-177">Określa pliki tylko do odczytu, a także pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-177">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="d4c80-178">Określa ukryte pliki i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-178">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="d4c80-179">Określa pliki systemowe i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-179">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="d4c80-180">Określa etykietę woluminu; Jeśli inne atrybut jest określony, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-180">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="d4c80-181">Określa katalogi lub foldery i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-181">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="d4c80-182">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-182">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="d4c80-183">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d4c80-183">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-184">Te wyliczenia są określone przez język Visual Basic i mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-184">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-185">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją określone pliki i katalogi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-185">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string Pathname, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Dir(string Pathname, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (Pathname As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (Pathname, Attributes)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" Index="1" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d4c80-186">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-186">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-187">
            <see langword="String" /> wyrażenie, które określa nazwę pliku, nazwa katalogu lub folderu lub etykiety woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-187">
              <see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span>
          </span>
          <span data-ttu-id="d4c80-188">Ciąg o zerowej długości (<see langword="&quot;&quot;" />) jest zwracany, jeśli <c>PathName</c> nie zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span>
          </span>
        </param>
        <param name="Pathname">To be added.</param>
        <param name="Attributes">
          <span data-ttu-id="d4c80-189">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-189">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-190">Wyrażenie wyliczenia lub liczbowe, którego wartość określa atrybuty pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-190">Enumeration or numeric expression whose value specifies file attributes.</span>
          </span>
          <span data-ttu-id="d4c80-191">W przypadku pominięcia <see langword="Dir" /> zwraca pliki dopasowane <c>PathName</c> , ale nie uwzględniając atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-192">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="d4c80-193">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-194">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-195">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-196">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-196">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="d4c80-197">`VbVolume` zwraca etykietę woluminu dysku, zamiast nazwy określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-197">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="d4c80-198">Należy podać `PathName` przy pierwszym wywołaniu `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-198">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="d4c80-199">Aby pobrać następny element, może wykonać kolejne wywołania `Dir` funkcję bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-199">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-200">By działała poprawnie, `Dir` funkcja wymaga, aby <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-200">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="d4c80-201">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d4c80-201">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="d4c80-202">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="d4c80-202">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="d4c80-203">Wartość</span><span class="sxs-lookup"><span data-stu-id="d4c80-203">Value</span></span>|<span data-ttu-id="d4c80-204">Stała</span><span class="sxs-lookup"><span data-stu-id="d4c80-204">Constant</span></span>|<span data-ttu-id="d4c80-205">Opis</span><span class="sxs-lookup"><span data-stu-id="d4c80-205">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="d4c80-206">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="d4c80-206">Default.</span></span> <span data-ttu-id="d4c80-207">Określa pliki, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-207">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="d4c80-208">Określa pliki tylko do odczytu, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-208">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="d4c80-209">Określa pliki ukryte, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-209">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="d4c80-210">Określa pliki systemowe, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-210">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="d4c80-211">Określa etykietę woluminu; Jeśli inne atrybut jest określony, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-211">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="d4c80-212">Określa katalogi lub foldery, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-212">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="d4c80-213">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-213">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="d4c80-214">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d4c80-214">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-215">Te wyliczenia są określone przez język Visual Basic i mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-215">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-216">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją określone pliki i katalogi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-216">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member EOF : int -&gt; bool" Usage="Microsoft.VisualBasic.FileSystem.EOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-217">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-217">Required.</span>
          </span>
          <span data-ttu-id="d4c80-218">
            <see langword="Integer" /> Zawierający Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-218">An <see langword="Integer" /> that contains any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-219">Zwraca wartość typu Boolean <see langword="True" /> po otwarciu końca pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-220">Zwraca wartość typu Boolean <see langword="True" /> po otwarciu końca pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-221">Użyj `EOF` w celu uniknięcia błędów generowanych podczas próby pobrania danych wejściowych poza końcem pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-221">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="d4c80-222">`EOF` Funkcja zwraca `False` dopóki nie zostanie osiągnięty koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-222">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="d4c80-223">W przypadku plików otwartych do `Random` lub `Binary` dostęp, `EOF` zwraca `False` dopóki ostatnio wykonana `FileGet` funkcji nie może odczytać całego rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-223">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="d4c80-224">W przypadku plików otwartych do `Binary` dostęp do próba odczytania pliku przy użyciu `Input` działać do momentu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-224">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="d4c80-225">Użyj `LOF` i `Loc` funkcji zamiast `EOF` podczas odczytywania plików binarnych z `Input`, lub użyj `Get` przy użyciu `EOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-225">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="d4c80-226">W przypadku plików otwartych do `Output`, `EOF` zawsze zwraca `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-226">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-227">W tym przykładzie użyto `EOF` funkcję, aby wykrywać koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-227">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="d4c80-228">W tym przykładzie założono, że `Testfile` to plik tekstowy, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-228">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-229">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-229">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member FileAttr : int -&gt; Microsoft.VisualBasic.OpenMode" Usage="Microsoft.VisualBasic.FileSystem.FileAttr FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-230">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-230">Required.</span>
          </span>
          <span data-ttu-id="d4c80-231">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-231">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="d4c80-232">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-232">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-233">Zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-234">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="FileAttr" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-235">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-236">Następujące wartości wyliczenia wskazują tryb dostępu do pliku: <list type="table"><item><term> wartość </term><description> tryb </description></item><item><term> 1 </term><description><see langword="OpenMode.Input" /></description></item><item><term> 2 </term><description><see langword="OpenMode.Output" /></description></item><item><term> 4 </term><description><see langword="OpenMode.Random" /></description></item><item><term> 8 </term><description><see langword="OpenMode.Append" /></description></item><item><term> 32  </term><description><see langword="OpenMode.Binary" /></description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-236">The following enumeration values indicate the file access mode:  <list type="table"><item><term> Value  </term><description> Mode  </description></item><item><term> 1  </term><description><see langword="OpenMode.Input" /></description></item><item><term> 2  </term><description><see langword="OpenMode.Output" /></description></item><item><term> 4  </term><description><see langword="OpenMode.Random" /></description></item><item><term> 8  </term><description><see langword="OpenMode.Append" /></description></item><item><term> 32  </term><description><see langword="OpenMode.Binary" /></description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-237">Ta funkcja zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą `FileOpen` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-237">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-238">W tym przykładzie użyto `FileAttr` funkcja zwraca tryb pliku otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-238">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberSignature Language="F#" Value="static member FileClose : int[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileClose FileNumbers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers">
          <span data-ttu-id="d4c80-239">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-239">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-240">Tablica parametrów 0 lub więcej kanałów zostanie zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-240">Parameter array of 0 or more channels to be closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-241">Zawiera wejścia/wyjścia (We/Wy) do pliku, który został otwarty przy użyciu <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-241">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-242">
            <see langword="My" /> zapewnia lepszą szybkość i wydajność operacji We/Wy na plikach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-242">
              <see langword="My" /> gives you better productivity and performance in file I/O operations.</span>
          </span>
          <span data-ttu-id="d4c80-243">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-243">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-244">`FileClose` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-244">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-245">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-245">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-246">Aby uzyskać więcej informacji, zobacz [porady: Odczyt tekstu z plików za pomocą StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[jak: pisanie tekstu do plików za pomocą StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), i [wskazówki: manipulowanie plikami i katalogami w Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-246">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="d4c80-247">Jeżeli pominięto `FileNumbers`, wszystkie aktywne pliki otwierane przez `FileOpen` funkcji są zamknięte.</span><span class="sxs-lookup"><span data-stu-id="d4c80-247">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="d4c80-248">Podczas zamykania plików, które zostały otwarte dla `Output` lub `Append`, końcowego bufor wyjściowy jest zapisywany w buforze systemu operacyjnego dla tego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-248">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="d4c80-249">Wszystkie ilość miejsca w buforze skojarzone z zamkniętej zwolnienia pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-249">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="d4c80-250">Gdy `FileClose` funkcja jest wykonywana, skojarzenia plików za pomocą jego pliku numer kończy się.</span><span class="sxs-lookup"><span data-stu-id="d4c80-250">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-251">W tym przykładzie użyto `FileClose` funkcję, aby zamknąć plik otwarty `Input`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-251">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-252">
            <paramref name="FileNumber" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-252">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberSignature Language="F#" Value="static member FileCopy : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileCopy (Source, Destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="d4c80-253">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-253">Required.</span>
          </span>
          <span data-ttu-id="d4c80-254">
            <see langword="String" /> wyrażenie, który określa nazwę pliku, który ma być skopiowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-254">
              <see langword="String" /> expression that specifies the name of the file to be copied.</span>
          </span>
          <span data-ttu-id="d4c80-255">
            <c>Źródło</c> może zawierać katalogu lub folderu i dysk z plikiem źródłowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-255">
              <c>Source</c> may include the directory or folder, and drive, of the source file.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="d4c80-256">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-256">Required.</span>
          </span>
          <span data-ttu-id="d4c80-257">
            <see langword="String" /> wyrażenie, który określa nazwę pliku docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-257">
              <see langword="String" /> expression that specifies the destination file name.</span>
          </span>
          <span data-ttu-id="d4c80-258">
            <c>Miejsce docelowe</c> może zawierać katalogu lub folderu i dysk pliku docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-258">
              <c>Destination</c> may include the directory or folder, and drive, of the destination file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-259">Kopiuje plik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-259">Copies a file.</span>
          </span>
          <span data-ttu-id="d4c80-260">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="FileCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-260">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span>
          </span>
          <span data-ttu-id="d4c80-261">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-261">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-262">Jeśli spróbujesz użyć `FileCopy` działać na aktualnie otwartego pliku, wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-262">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="d4c80-263">`FileCopy` wymaga pełnego zaufania do pracy na dysku lokalnym.</span><span class="sxs-lookup"><span data-stu-id="d4c80-263">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-264">W tym przykładzie użyto `FileCopy` funkcji do kopiowania plików do innego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-264">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="d4c80-265">Dla celów tego przykładu załóżmy, że `SrcFile` jest plikiem, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-265">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-266">
            <paramref name="Source" /> lub <paramref name="Destination" /> jest nieprawidłowy lub nieokreślony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-266">
              <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-267">Plik jest już otwarty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-267">File is already open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-268">Plik nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-268">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileDateTime : string -&gt; DateTime" Usage="Microsoft.VisualBasic.FileSystem.FileDateTime PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d4c80-269">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-269">Required.</span>
          </span>
          <span data-ttu-id="d4c80-270">
            <see langword="String" /> wyrażenie, które określa nazwę pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-270">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="d4c80-271">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-271">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-272">Zwraca <see langword="Date" /> wartość, która wskazuje datę i godzinę, plik został zapisany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-272">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span>
          </span>
          <span data-ttu-id="d4c80-273">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-273">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span>
          </span>
          <span data-ttu-id="d4c80-274">Aby uzyskać więcej informacji zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-274">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-275">
            <see langword="Date" /> wartość, która wskazuje, daty i godziny pliku utworzenia lub ostatniej modyfikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-275">
              <see langword="Date" /> value that indicates the date and time a file was created or last modified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4c80-276">W tym przykładzie użyto `FileDateTime` funkcję, aby określić datę i godzinę plik został utworzony lub Data ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-276">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="d4c80-277">Format daty i godziny widocznej zależy od ustawień regionalnych systemu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-277">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-278">
            <paramref name="PathName" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-278">
              <paramref name="PathName" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-279">Plik docelowy nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-279">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-280">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-280">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-281">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-281">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-282">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-282">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-283">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-283">Required.</span>
          </span>
          <span data-ttu-id="d4c80-284">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-284">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-285">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-285">Required.</span>
          </span>
          <span data-ttu-id="d4c80-286">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-286">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-287">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-287">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-288">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-288">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-289">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-289">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-290">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-290">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-291">Aby uzyskać więcej informacji zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-291">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-292">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-292">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-293">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-293">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-294">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-294">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-295">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-295">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-296">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-296">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-297">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-297">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-298">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-298">Random Mode</span></span>  
 <span data-ttu-id="d4c80-299">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-299">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-300">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-300">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-301">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-301">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-302">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-302">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-303">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-303">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-304">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-304">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-305">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-305">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-306">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-306">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-307">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-307">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-308">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-308">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-309">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-309">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-310">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-310">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-311">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-311">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-312">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-312">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-313">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-313">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-314">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-314">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-315">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-315">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-316">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-316">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-317">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-317">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-318">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-318">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-319">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-319">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-320">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-320">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-321">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-321">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-322">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-322">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-323">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-323">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-324">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-324">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-325">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-325">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-326">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-326">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-327">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-327">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-328">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-328">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-329">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-329">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-330">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-330">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-331">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-331">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-332">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-332">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-333">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-333">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-334">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-334">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-335">Podczas odczytu z pliku za pomocą`FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-335">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-336">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-336">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-337">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-337">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-338">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-338">Required.</span>
          </span>
          <span data-ttu-id="d4c80-339">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-339">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-340">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-340">Required.</span>
          </span>
          <span data-ttu-id="d4c80-341">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-341">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-342">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-342">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-343">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-343">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-344">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-344">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-345">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-345">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-346">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-346">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-347">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-347">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-348">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-348">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-349">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-349">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-350">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-350">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-351">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-351">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-352">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-352">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-353">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-353">Random Mode</span></span>  
 <span data-ttu-id="d4c80-354">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-354">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-355">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-355">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-356">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-356">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-357">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-357">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-358">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-358">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-359">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-359">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-360">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-360">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-361">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-361">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-362">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-362">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-363">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-363">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-364">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-364">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-365">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-365">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-366">Jeżeli nie zastosowano deskryptora.</span><span class="sxs-lookup"><span data-stu-id="d4c80-366">If the descriptor is not used.</span></span> <span data-ttu-id="d4c80-367">Rozmiar i granice tablicy przekazane do, a następnie `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-367">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-368">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-368">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-369">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-369">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-370">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-370">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-371">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-371">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-372">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-372">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-373">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-373">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-374">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-374">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-375">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-375">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-376">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-376">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-377">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-377">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-378">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-378">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-379">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-379">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-380">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-380">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-381">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-381">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-382">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-382">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-383">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-383">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-384">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-384">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-385">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-385">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-386">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-386">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-387">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-387">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-388">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-388">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-389">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-389">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-390">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-390">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-391">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-391">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-392">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-392">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-393">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-393">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-394">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-394">Required.</span>
          </span>
          <span data-ttu-id="d4c80-395">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-395">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-396">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-396">Required.</span>
          </span>
          <span data-ttu-id="d4c80-397">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-397">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-398">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-398">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-399">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-399">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-400">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-400">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-401">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-401">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-402">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-402">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-403">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-403">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-404">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-404">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-405">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-405">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-406">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-406">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-407">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-407">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-408">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-408">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-409">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-409">Random Mode</span></span>  
 <span data-ttu-id="d4c80-410">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-410">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-411">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-411">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-412">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-412">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-413">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-413">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-414">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-414">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-415">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-415">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-416">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-416">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-417">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-417">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-418">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-418">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-419">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-419">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-420">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-420">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-421">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-421">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-422">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-422">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-423">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-423">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-424">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-424">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-425">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-425">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-426">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-426">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-427">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-427">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-428">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-428">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-429">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-429">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-430">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-430">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-431">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-431">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-432">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-432">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-433">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-433">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-434">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-434">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-435">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-435">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-436">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-436">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-437">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-437">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-438">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-438">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-439">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-439">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-440">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-440">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-441">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-441">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-442">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-442">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-443">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-443">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-444">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-444">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-445">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-445">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-446">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-446">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-447">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-447">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-448">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-448">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-449">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-449">Required.</span>
          </span>
          <span data-ttu-id="d4c80-450">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-450">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-451">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-451">Required.</span>
          </span>
          <span data-ttu-id="d4c80-452">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-452">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-453">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-453">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-454">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-454">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-455">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-455">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-456">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-456">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-457">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-457">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-458">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-458">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-459">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-459">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-460">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-460">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-461">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-461">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-462">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-462">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-463">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-463">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-464">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-464">Random Mode</span></span>  
 <span data-ttu-id="d4c80-465">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-465">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-466">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji`FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-466">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-467">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-467">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-468">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-468">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-469">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-469">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-470">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-470">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-471">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-471">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-472">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-472">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-473">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-473">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-474">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-474">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-475">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-475">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-476">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-476">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-477">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-477">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-478">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-478">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-479">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-479">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-480">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-480">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-481">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-481">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-482">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-482">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-483">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-483">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-484">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-484">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-485">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-485">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-486">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-486">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-487">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-487">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-488">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-488">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-489">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-489">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-490">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-490">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-491">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-491">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-492">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-492">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-493">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-493">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-494">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-494">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-495">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-495">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-496">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-496">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-497">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-497">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-498">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-498">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-499">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-499">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-500">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-500">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-501">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-501">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-502">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-502">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-503">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-503">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-504">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-504">Required.</span>
          </span>
          <span data-ttu-id="d4c80-505">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-505">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-506">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-506">Required.</span>
          </span>
          <span data-ttu-id="d4c80-507">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-507">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-508">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-508">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-509">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-509">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-510">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-510">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-511">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-511">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-512">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-512">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-513">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-513">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-514">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-514">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-515">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-515">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-516">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-516">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-517">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-517">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-518">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-518">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-519">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-519">Random Mode</span></span>  
 <span data-ttu-id="d4c80-520">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-520">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-521">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-521">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-522">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-522">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-523">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-523">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-524">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-524">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-525">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-525">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-526">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-526">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-527">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-527">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-528">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-528">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-529">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-529">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-530">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-530">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-531">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-531">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-532">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-532">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-533">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-533">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-534">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-534">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-535">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-535">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-536">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-536">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-537">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-537">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-538">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-538">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-539">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-539">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-540">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-540">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-541">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-541">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-542">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-542">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-543">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-543">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-544">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-544">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-545">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-545">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-546">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-546">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-547">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-547">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-548">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-548">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-549">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-549">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-550">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-550">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-551">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-551">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-552">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-552">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-553">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-553">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-554">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-554">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-555">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-555">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-556">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-556">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-557">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-557">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-558">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-558">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-559">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-559">Required.</span>
          </span>
          <span data-ttu-id="d4c80-560">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-560">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-561">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-561">Required.</span>
          </span>
          <span data-ttu-id="d4c80-562">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-562">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-563">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-563">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-564">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-564">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-565">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-565">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-566">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-566">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-567">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-567">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-568">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-568">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-569">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-569">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-570">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-570">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-571">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-571">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-572">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-572">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-573">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-573">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-574">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-574">Random Mode</span></span>  
 <span data-ttu-id="d4c80-575">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-575">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-576">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-576">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-577">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-577">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-578">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-578">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-579">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-579">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-580">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-580">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-581">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-581">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-582">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-582">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-583">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-583">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-584">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-584">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-585">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-585">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-586">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-586">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-587">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-587">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-588">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-588">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-589">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-589">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-590">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-590">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-591">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-591">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-592">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-592">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-593">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-593">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-594">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-594">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-595">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-595">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-596">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-596">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-597">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-597">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-598">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-598">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-599">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-599">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-600">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-600">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-601">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-601">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-602">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-602">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-603">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-603">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-604">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-604">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-605">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-605">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-606">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-606">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-607">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-607">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-608">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-608">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-609">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-609">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-610">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-610">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-611">Podczas odczytu z pliku za pomocą`FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-611">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-612">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-612">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-613">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-613">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-614">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-614">Required.</span>
          </span>
          <span data-ttu-id="d4c80-615">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-615">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-616">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-616">Required.</span>
          </span>
          <span data-ttu-id="d4c80-617">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-617">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-618">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-618">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-619">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-619">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-620">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-620">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-621">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-621">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-622">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-622">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-623">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-623">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-624">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-624">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-625">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-625">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-626">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-626">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-627">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-627">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-628">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-628">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-629">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-629">Random Mode</span></span>  
 <span data-ttu-id="d4c80-630">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-630">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-631">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-631">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-632">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-632">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-633">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-633">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-634">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-634">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-635">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-635">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-636">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-636">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-637">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-637">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-638">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-638">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-639">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-639">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-640">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-640">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-641">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-641">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-642">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-642">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-643">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-643">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-644">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-644">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-645">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-645">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-646">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-646">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-647">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-647">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-648">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-648">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-649">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-649">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-650">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-650">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-651">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-651">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-652">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-652">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-653">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-653">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-654">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-654">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-655">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-655">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-656">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-656">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-657">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-657">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-658">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-658">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-659">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-659">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-660">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-660">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-661">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-661">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-662">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-662">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-663">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-663">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-664">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-664">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-665">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-665">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-666">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-666">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-667">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-667">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-668">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-668">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-669">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-669">Required.</span>
          </span>
          <span data-ttu-id="d4c80-670">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-670">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-671">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-671">Required.</span>
          </span>
          <span data-ttu-id="d4c80-672">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-672">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-673">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-673">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-674">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-674">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-675">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-675">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-676">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-676">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-677">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-677">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-678">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-678">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-679">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-679">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-680">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-680">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-681">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-681">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-682">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-682">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-683">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-683">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-684">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-684">Random Mode</span></span>  
 <span data-ttu-id="d4c80-685">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-685">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-686">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-686">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-687">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-687">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-688">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-688">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-689">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-689">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-690">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-690">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-691">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-691">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-692">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-692">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-693">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-693">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-694">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-694">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-695">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-695">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-696">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-696">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-697">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-697">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-698">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-698">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-699">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-699">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-700">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-700">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-701">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-701">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-702">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-702">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-703">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-703">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-704">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-704">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-705">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-705">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-706">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-706">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-707">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-707">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-708">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-708">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-709">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-709">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-710">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-710">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-711">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-711">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-712">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-712">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-713">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-713">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-714">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-714">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-715">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-715">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-716">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-716">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-717">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-717">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-718">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-718">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-719">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-719">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-720">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-720">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-721">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-721">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-722">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-722">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-723">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-723">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-724">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-724">Required.</span>
          </span>
          <span data-ttu-id="d4c80-725">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-725">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-726">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-726">Required.</span>
          </span>
          <span data-ttu-id="d4c80-727">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-727">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-728">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-728">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-729">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-729">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-730">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-730">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-731">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-731">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-732">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-732">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-733">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-733">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-734">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-734">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-735">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-735">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-736">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-736">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-737">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-737">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-738">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-738">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-739">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-739">Random Mode</span></span>  
 <span data-ttu-id="d4c80-740">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-740">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-741">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-741">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-742">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-742">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-743">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-743">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-744">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-744">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-745">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-745">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-746">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-746">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-747">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-747">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-748">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-748">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-749">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-749">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-750">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-750">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-751">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-751">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-752">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-752">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-753">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-753">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-754">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-754">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-755">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-755">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-756">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-756">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-757">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-757">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-758">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-758">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-759">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-759">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-760">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-760">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-761">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-761">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-762">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-762">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-763">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-763">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-764">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-764">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-765">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-765">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-766">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-766">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-767">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-767">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-768">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-768">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-769">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-769">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-770">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-770">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-771">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-771">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-772">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-772">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-773">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-773">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-774">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-774">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-775">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-775">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-776">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-776">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-777">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-777">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-778">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-778">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-779">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-779">Required.</span>
          </span>
          <span data-ttu-id="d4c80-780">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-780">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-781">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-781">Required.</span>
          </span>
          <span data-ttu-id="d4c80-782">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-782">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-783">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-783">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-784">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-784">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-785">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-785">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-786">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-786">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-787">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-787">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-788">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-788">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-789">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-789">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-790">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-790">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-791">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-791">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-792">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-792">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-793">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-793">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-794">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-794">Random Mode</span></span>  
 <span data-ttu-id="d4c80-795">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-795">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-796">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-796">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-797">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-797">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-798">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-798">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-799">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-799">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-800">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-800">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-801">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-801">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-802">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-802">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-803">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-803">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-804">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-804">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-805">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-805">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-806">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-806">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-807">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-807">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-808">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-808">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-809">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-809">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-810">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-810">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-811">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-811">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-812">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-812">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-813">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-813">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-814">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-814">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-815">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-815">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-816">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-816">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-817">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-817">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-818">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-818">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-819">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-819">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-820">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-820">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-821">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-821">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-822">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-822">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-823">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-823">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-824">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-824">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-825">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-825">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-826">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-826">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-827">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-827">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-828">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-828">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-829">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-829">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-830">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-830">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-831">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-831">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-832">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-832">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-833">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-833">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-834">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-834">Required.</span>
          </span>
          <span data-ttu-id="d4c80-835">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-835">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-836">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-836">Required.</span>
          </span>
          <span data-ttu-id="d4c80-837">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-837">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-838">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-838">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-839">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-839">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-840">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-840">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-841">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-841">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-842">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-842">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-843">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-843">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-844">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-844">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-845">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-845">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-846">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-846">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-847">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-847">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-848">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-848">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-849">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-849">Random Mode</span></span>  
 <span data-ttu-id="d4c80-850">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-850">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-851">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-851">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-852">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-852">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-853">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-853">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-854">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-854">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-855">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-855">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-856">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-856">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-857">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-857">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-858">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-858">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-859">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-859">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-860">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-860">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-861">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-861">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-862">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-862">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-863">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-863">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-864">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-864">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-865">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-865">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-866">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-866">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-867">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-867">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-868">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-868">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-869">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-869">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-870">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-870">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-871">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-871">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-872">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-872">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-873">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-873">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-874">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-874">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-875">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-875">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-876">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-876">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-877">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-877">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-878">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-878">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-879">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-879">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-880">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-880">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-881">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-881">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-882">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-882">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-883">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-883">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-884">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-884">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-885">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-885">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-886">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-886">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-887">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-887">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-888">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-888">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-889">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-889">Required.</span>
          </span>
          <span data-ttu-id="d4c80-890">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-890">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-891">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-891">Required.</span>
          </span>
          <span data-ttu-id="d4c80-892">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-892">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-893">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-893">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-894">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-894">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d4c80-895">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-895">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-896">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-896">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d4c80-897">Określa, czy należy napisać deskryptor dwubajtowy, który ma być ciąg, który opisuje długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-897">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="d4c80-898">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-898">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-899">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-899">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-900">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-900">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-901">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-901">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-902">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-902">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-903">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-903">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-904">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-904">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-905">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-905">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-906">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-906">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-907">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-907">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-908">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-908">Random Mode</span></span>  
 <span data-ttu-id="d4c80-909">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-909">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-910">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-910">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-911">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-911">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-912">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-912">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-913">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-913">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-914">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-914">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-915">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-915">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-916">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-916">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-917">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-917">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-918">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-918">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-919">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-919">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-920">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-920">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-921">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-921">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-922">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-922">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-923">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-923">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-924">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-924">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-925">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-925">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-926">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-926">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-927">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-927">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-928">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-928">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-929">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-929">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-930">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-930">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-931">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-931">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-932">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-932">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-933">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-933">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-934">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-934">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-935">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-935">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-936">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-936">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-937">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-937">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-938">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-938">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-939">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-939">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-940">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-940">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-941">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-941">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-942">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-942">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-943">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-943">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-944">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-944">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-945">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-945">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-946">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-946">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-947">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-947">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-948">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-948">Required.</span>
          </span>
          <span data-ttu-id="d4c80-949">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-949">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-950">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-950">Required.</span>
          </span>
          <span data-ttu-id="d4c80-951">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-951">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-952">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-952">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-953">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-953">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="d4c80-954">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-954">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-955">Ma zastosowanie tylko wtedy, gdy pisania tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-955">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="d4c80-956">Określa, czy tablica jest traktowane jako dynamiczne i czy konieczne jest deskryptora tablicy opisujących rozmiar i granice tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-956">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d4c80-957">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-957">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-958">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-958">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d4c80-959">Określa, czy należy napisać deskryptor dwubajtowy, który ma być ciąg, który opisuje długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-959">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="d4c80-960">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-960">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-961">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-961">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-962">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-962">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d4c80-963">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-963">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-964">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-964">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-965">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-965">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d4c80-966">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-966">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-967">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-967">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-968">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-968">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-969">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-969">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-970">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-970">Random Mode</span></span>  
 <span data-ttu-id="d4c80-971">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-971">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-972">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-972">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-973">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest dopełniana istniejącą zawartość buforu pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-973">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-974">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-974">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-975">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-975">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-976">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-976">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-977">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-977">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-978">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-978">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-979">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-979">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d4c80-980">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-980">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-981">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-981">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d4c80-982">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-982">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d4c80-983">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d4c80-983">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d4c80-984">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-984">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-985">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-985">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-986">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-986">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-987">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-987">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d4c80-988">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d4c80-988">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d4c80-989">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d4c80-989">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d4c80-990">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-990">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d4c80-991">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-991">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d4c80-992">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-992">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-993">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-993">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-994">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-994">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-995">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-995">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d4c80-996">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-996">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-997">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-997">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-998">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-998">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-999">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-999">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1000">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1000">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1001">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1001">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1002">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1002">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1003">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1003">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d4c80-1004">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1004">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d4c80-1005">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1005">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1006">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1006">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d4c80-1007">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1007">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1008">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1008">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1009">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1009">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGetObject : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGetObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1010">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1010">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1011">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1011">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1012">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1012">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1013">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1013">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1014">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1014">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1015">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1015">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1016">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1016">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d4c80-1017">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGetObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1017">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span>
          </span>
          <span data-ttu-id="d4c80-1018">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1018">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1019">`FileGetObject` Funkcja jest używana zamiast `FileGet` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` zwracany zamiast innego typu, takie jak `Integer`, `Long`, `Short`, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1019">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="d4c80-1020">Jeśli zamierzasz zapisać `Variant` typu `FileGetObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1020">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="d4c80-1021">W razie wątpliwości, jeśli używasz obiektu jako drugi parametr, zawsze zaleca się używanie `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1021">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="d4c80-1022">`FileGetObject` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1022">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1023">Dane odczytane z `FileGetObject` są zwykle zapisywane z `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1023">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="d4c80-1024">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1024">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1025">Jeżeli pominięto `RecordNumber`, `FileGetObject` odczytuje rekord lub bajt po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1025">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1026">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1026">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1027">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1027">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1028">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGetObject` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1028">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1029">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest dopełniana istniejącą zawartość buforu pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1029">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1030">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to dobry pomysł, aby mieć długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1030">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d4c80-1031">Jeżeli zmienna wczytywana jest ciągiem, domyślnie `FileGetObject` odczytuje dwubajtowy deskryptor, zawierająca długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1031">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1032">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1032">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1033">Visual Basic 6.0 i starsze wersje obsługują ciągi o stałej długości i podczas odczytu pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1033">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d4c80-1034">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1034">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1035">Jeśli wczytywana zmienna jest tablicą, długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1035">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1036">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1036">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1037">Jego długość jest równa 2 plus 8 razy liczba wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1037">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="d4c80-1038">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, gdy tablica jest zapisywany na dysku:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1038">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="d4c80-1039">218 bajtów są rozpowszechniane w następujący sposób: 18 bajtów w przypadku deskryptora (2 + 8 \* 2), a 100 bajtów danych (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1039">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="d4c80-1040">`FileGetObject` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1040">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1041">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePutObject`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1041">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="d4c80-1042">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów, w tym wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1042">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="d4c80-1043"><xref:Microsoft.VisualBasic.VBFixedStringAttribute> Klasy mogą być stosowane do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1043">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1044">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1044">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1045">Do plików otwieranych w `Binary` trybie wszystkie `Random` reguły mają zastosowanie, z uwzględnieniem poniższych wyjątków:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1045">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="d4c80-1046">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1046">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1047">`FileGetObject` odczytuje wszystkie zmienne z dysku w sposób ciągły, oznacza to, za pomocą żadnych uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1047">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1048">Dla tablicy innej niż tablica w strukturze `FileGetObject` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1048">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="d4c80-1049">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1049">No descriptor is read.</span></span>  
  
 <span data-ttu-id="d4c80-1050">`FileGetObject` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1050">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1051">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1051">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-1052">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1052">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-1053">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1053">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1054">Poniższy przykład odczytuje rekordu w pliku testu i następnie pobiera go.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1054">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileLen : string -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.FileLen PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d4c80-1055">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1055">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1056">
            <see langword="String" /> wyrażenie, które określa plik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1056">
              <see langword="String" /> expression that specifies a file.</span>
          </span>
          <span data-ttu-id="d4c80-1057">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1057">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1058">Zwraca <see langword="Long" /> wartość, która określa długość pliku w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1058">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
          <span data-ttu-id="d4c80-1059">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileLen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1059">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span>
          </span>
          <span data-ttu-id="d4c80-1060">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1060">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-1061">
            <see langword="Long" /> Wartość określająca długość pliku w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1061">
              <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1062">Jeśli określony plik jest otwarty, kiedy `FileLen` funkcja jest wywoływana, wartość zwracana reprezentuje rozmiar pliku w czasie ostatniego otwarcia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1062">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-1063">Aby uzyskać bieżącą długość otwartego pliku, użyj `LOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1063">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1064">W tym przykładzie użyto `FileLen` funkcja zwraca długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1064">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="d4c80-1065">Dla celów tego przykładu załóżmy, że `TestFile` jest plik, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1065">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-1066">Plik nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1066">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberSignature Language="F#" Value="static member FileOpen : int * string * Microsoft.VisualBasic.OpenMode * Microsoft.VisualBasic.OpenAccess * Microsoft.VisualBasic.OpenShare * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileOpen (FileNumber, FileName, Mode, Access, Share, RecordLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1067">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1067">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1068">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1068">Any valid file number.</span>
          </span>
          <span data-ttu-id="d4c80-1069">Użyj <see langword="FreeFile" /> funkcję, aby uzyskać najbliższej liczby plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1069">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span>
          </span>
        </param>
        <param name="FileName">
          <span data-ttu-id="d4c80-1070">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1070">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1071">
            <see langword="String" /> wyrażenie, które określa nazwę pliku — może obejmować katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1071">
              <see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Mode">
          <span data-ttu-id="d4c80-1072">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1072">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1073">Wyliczenie opisujące tryb pliku: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, lub <see langword="Random" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1073">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span>
          </span>
          <span data-ttu-id="d4c80-1074">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1074">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          </span>
        </param>
        <param name="Access">
          <span data-ttu-id="d4c80-1075">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1075">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1076">Wyliczenie opisujące operacje dozwolona dla otwartego pliku: <see langword="Read" />, <see langword="Write" />, lub <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1076">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="d4c80-1077">Wartość domyślna to <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1077">Defaults to <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="d4c80-1078">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1078">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          </span>
        </param>
        <param name="Share">
          <span data-ttu-id="d4c80-1079">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1079">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1080">Wyliczenie opisujące operacje jest niedozwolony otwartego pliku przez inne procesy: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, i <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1080">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="d4c80-1081">Wartość domyślna to <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1081">Defaults to <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="d4c80-1082">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1082">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          </span>
        </param>
        <param name="RecordLength">
          <span data-ttu-id="d4c80-1083">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1083">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1084">Liczbę mniejszą lub równą 32 767 znaków (w bajtach).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1084">Number less than or equal to 32,767 (bytes).</span>
          </span>
          <span data-ttu-id="d4c80-1085">Dla plików otwartych do dostępu losowego ta wartość jest długość rekordu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1085">For files opened for random access, this value is the record length.</span>
          </span>
          <span data-ttu-id="d4c80-1086">Dla kolejnych plików ta wartość jest liczbą znaków buforowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1086">For sequential files, this value is the number of characters buffered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1087">Otwiera plik dla danych wejściowych lub wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1087">Opens a file for input or output.</span>
          </span>
          <span data-ttu-id="d4c80-1088">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1088">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span>
          </span>
          <span data-ttu-id="d4c80-1089">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1089">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1090">`FileOpen` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1090">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-1091">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1091">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-1092">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1092">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-1093">Przed wykonaniem wszelkich operacji We/Wy na nim, należy otworzyć plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1093">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="d4c80-1094">`FileOpen` przydziela bufor dla operacji We/Wy do pliku i określa tryb dostępu do używania z buforu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1094">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-1095">Podczas zapisywania do pliku, aplikacja może być konieczne utworzenie pliku, jeśli plik, który próbuje zapisać nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1095">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="d4c80-1096">Aby to zrobić, musi ona uprawnienia dla katalogu, w którym ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1096">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="d4c80-1097">Jednakże jeżeli plik określony przez `FileName` istnieje w zakresie aplikacji `Write` uprawnienia tylko do sam plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1097">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="d4c80-1098">Wszędzie tam, gdzie to możliwe, aby pomóc zwiększyć bezpieczeństwo, tworzyć plik podczas wdrożenia i przyznać `Write` uprawnienie do tego pliku tylko, a nie do całego katalogu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1098">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="d4c80-1099">Aby zwiększyć bezpieczeństwo, zapisywać dane do katalogów użytkownika zamiast do katalogu głównego lub katalogu Program Files.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1099">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="d4c80-1100">Kanał, aby otworzyć znajduje się za pomocą `FreeFile()` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1100">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-1101">`FileOpen` Funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1101">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="d4c80-1102">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1102">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1103">Ten przykład ilustruje różne przypadki użycia `FileOpen` funkcję, aby włączyć dane wejściowe i wyjściowe do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1103">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="d4c80-1104">Poniższy kod zostanie otwarty plik `TestFile` w `Input` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1104">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="d4c80-1105">W tym przykładzie otwiera plik w `Binary` tryb tylko operacje zapisu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1105">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="d4c80-1106">W poniższym przykładzie otwierany plik w `Random` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1106">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="d4c80-1107">Ten plik zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1107">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="d4c80-1108">Ten przykład kodu otwiera plik w `Output` tryb; wszelkie może procesu Odczyt lub zapis do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1108">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="d4c80-1109">Ten przykład kodu otwiera plik w `Binary` trybie do odczytu; inne procesy nie można odczytać pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1109">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1110">Długość rekordu jest ujemna (i nie jest równa -1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1110">Record length is negative (and not equal to -1).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1111">
            <paramref name="FileName" /> jest jeszcze otwarty, lub <paramref name="FileName" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1111">
              <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-1112">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1112">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1113">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1113">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1114">F, aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1114">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * bool * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1115">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1115">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1116">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1116">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1117">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1117">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1118">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1118">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1119">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1119">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1120">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1120">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1121">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1121">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1122">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1122">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1123">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1123">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1124">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1124">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1125">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1125">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1126">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1126">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1127">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1127">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1128">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1128">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1129">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1129">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1130">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1130">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1131">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1131">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1132">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1132">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1133">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1133">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1134">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1134">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1135">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1135">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1136">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1136">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1137">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1137">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1138">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1138">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1139">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1139">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1140">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1140">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1141">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1141">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1142">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1142">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1143">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1143">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1144">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1144">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1145">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1145">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1146">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1146">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1147">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1147">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1148">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1148">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1149">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1149">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1150">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1150">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1151">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1151">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1152">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1152">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1153">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1153">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1154">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1154">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1155">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1155">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1156">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1156">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1157">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1157">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1158">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1158">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1159">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1159">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1160">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1160">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1161">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1161">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1162">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1162">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1163">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1163">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1164">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1164">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1165">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1165">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1166">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1166">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1167">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1167">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1168">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1168">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1169">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1169">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1170">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1170">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1171">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1171">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1172">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1172">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1173">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1173">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * byte * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1174">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1174">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1175">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1175">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1176">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1176">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1177">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1177">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1178">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1178">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1179">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1179">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1180">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1180">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1181">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1181">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1182">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1182">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1183">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1183">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1184">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1184">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1185">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1185">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1186">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1186">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1187">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1187">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1188">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1188">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1189">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1189">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1190">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1190">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1191">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1191">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1192">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1192">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1193">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1193">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1194">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1194">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1195">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1195">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1196">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1196">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1197">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1197">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1198">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1198">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1199">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1199">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1200">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1200">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1201">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1201">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1202">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1202">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1203">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1203">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1204">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1204">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1205">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1205">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1206">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1206">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1207">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1207">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1208">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1208">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1209">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1209">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1210">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1210">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1211">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1211">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1212">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1212">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1213">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1213">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1214">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1214">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1215">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1215">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1216">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1216">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1217">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1217">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1218">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1218">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1219">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1219">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1220">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1220">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1221">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1221">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1222">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1222">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1223">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1223">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1224">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1224">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1225">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1225">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1226">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1226">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1227">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1227">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1228">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1228">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1229">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1229">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1230">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1230">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1231">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1231">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1232">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1232">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * char * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1233">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1233">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1234">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1234">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1235">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1235">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1236">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1236">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1237">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1237">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1238">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1238">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1239">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1239">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1240">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1240">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1241">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1241">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1242">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1242">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1243">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1243">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1244">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1244">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1245">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1245">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1246">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1246">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1247">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1247">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1248">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1248">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1249">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1249">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1250">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1250">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1251">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1251">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1252">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1252">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1253">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1253">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1254">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1254">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1255">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1255">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1256">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1256">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1257">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1257">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1258">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1258">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1259">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1259">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1260">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1260">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1261">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1261">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1262">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1262">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1263">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1263">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1264">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1264">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1265">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1265">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1266">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1266">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1267">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1267">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1268">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1268">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1269">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1269">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1270">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1270">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1271">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1271">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1272">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1272">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1273">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1273">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1274">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1274">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1275">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1275">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1276">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1276">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1277">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1277">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1278">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1278">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1279">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1279">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1280">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1280">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1281">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1281">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1282">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1282">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1283">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1283">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1284">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1284">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1285">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1285">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1286">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1286">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1287">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1287">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1288">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1288">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1289">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1289">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1290">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1290">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1291">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1291">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * DateTime * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1292">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1292">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1293">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1293">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1294">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1294">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1295">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1295">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1296">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1296">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1297">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1297">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1298">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1298">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1299">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1299">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1300">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1300">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1301">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1301">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1302">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1302">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1303">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1303">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1304">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1304">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1305">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1305">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1306">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1306">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1307">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1307">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1308">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1308">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1309">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1309">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1310">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1310">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1311">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1311">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1312">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1312">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1313">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1313">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1314">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1314">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1315">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1315">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1316">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1316">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1317">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1317">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1318">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1318">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1319">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1319">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1320">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1320">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1321">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1321">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1322">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1322">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1323">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1323">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1324">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1324">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1325">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1325">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1326">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1326">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1327">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1327">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1328">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1328">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1329">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1329">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1330">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1330">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1331">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1331">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1332">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1332">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1333">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1333">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1334">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1334">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1335">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1335">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1336">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1336">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1337">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1337">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1338">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1338">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1339">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1339">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1340">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1340">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1341">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1341">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1342">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1342">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1343">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1343">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1344">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1344">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1345">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1345">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1346">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1346">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1347">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1347">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1348">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1348">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1349">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1349">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1350">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1350">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * decimal * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1351">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1351">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1352">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1352">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1353">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1353">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1354">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1354">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1355">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1355">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1356">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1356">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1357">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1357">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1358">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1358">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1359">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1359">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1360">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1360">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1361">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1361">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1362">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1362">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1363">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1363">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1364">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1364">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1365">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1365">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1366">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1366">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1367">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1367">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1368">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1368">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1369">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1369">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1370">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1370">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1371">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1371">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1372">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1372">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1373">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1373">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1374">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1374">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1375">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1375">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1376">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1376">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1377">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1377">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1378">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1378">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1379">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1379">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1380">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1380">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1381">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1381">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1382">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1382">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1383">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1383">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1384">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1384">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1385">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1385">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1386">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1386">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1387">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1387">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1388">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1388">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1389">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1389">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1390">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1390">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1391">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1391">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1392">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1392">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1393">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1393">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1394">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1394">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1395">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1395">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1396">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1396">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1397">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1397">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1398">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1398">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1399">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1399">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1400">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1400">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1401">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1401">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1402">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1402">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1403">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1403">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1404">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1404">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1405">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1405">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1406">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1406">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1407">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1407">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1408">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1408">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1409">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1409">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * double * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1410">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1410">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1411">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1411">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1412">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1412">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1413">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1413">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1414">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1414">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1415">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1415">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1416">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1416">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1417">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1417">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1418">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1418">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1419">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1419">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1420">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1420">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1421">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1421">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1422">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1422">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1423">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1423">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1424">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1424">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1425">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1425">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1426">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1426">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1427">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1427">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1428">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1428">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1429">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1429">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1430">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1430">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1431">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1431">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1432">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1432">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1433">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1433">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1434">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1434">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1435">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1435">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1436">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1436">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1437">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1437">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1438">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1438">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1439">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1439">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1440">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1440">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1441">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1441">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1442">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1442">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1443">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1443">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1444">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1444">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1445">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1445">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1446">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1446">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1447">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1447">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1448">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1448">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1449">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1449">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1450">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1450">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1451">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1451">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1452">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1452">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1453">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1453">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1454">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1454">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1455">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1455">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1456">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1456">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1457">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1457">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1458">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1458">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1459">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1459">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1460">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1460">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1461">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1461">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1462">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1462">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1463">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1463">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1464">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1464">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1465">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1465">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1466">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1466">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1467">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1467">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1468">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1468">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int16 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1469">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1469">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1470">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1470">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1471">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1471">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1472">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1472">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1473">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1473">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1474">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1474">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1475">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1475">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1476">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1476">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1477">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1477">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1478">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1478">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1479">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1479">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1480">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1480">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1481">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1481">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1482">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1482">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1483">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1483">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1484">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1484">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1485">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1485">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1486">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1486">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1487">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1487">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1488">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1488">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1489">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1489">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1490">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1490">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1491">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1491">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1492">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1492">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1493">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1493">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1494">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1494">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1495">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1495">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1496">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący`VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1496">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1497">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1497">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1498">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1498">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1499">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1499">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1500">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1500">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1501">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1501">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1502">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1502">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1503">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1503">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1504">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1504">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1505">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1505">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1506">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1506">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1507">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1507">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1508">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1508">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1509">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1509">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1510">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1510">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1511">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1511">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1512">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1512">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1513">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1513">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1514">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1514">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1515">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1515">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1516">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1516">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1517">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1517">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1518">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1518">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1519">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1519">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1520">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1520">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1521">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1521">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1522">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1522">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1523">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1523">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1524">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1524">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1525">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1525">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1526">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1526">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1527">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1527">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1528">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1528">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1529">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1529">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1530">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1530">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1531">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1531">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1532">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1532">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1533">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1533">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1534">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1534">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1535">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1536">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1536">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1537">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1537">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1538">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1538">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1539">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1539">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1540">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1540">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1541">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1541">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1542">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1542">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1543">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1543">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1544">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1544">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1545">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1545">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1546">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1546">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1547">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1547">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1548">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1548">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1549">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1549">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1550">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1550">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1551">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1551">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1552">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1552">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1553">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1553">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1554">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1554">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1555">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1555">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1556">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1556">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1557">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1557">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1558">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1558">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1559">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1559">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1560">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1560">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1561">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1561">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1562">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1562">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1563">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1563">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1564">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1564">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1565">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1565">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1566">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1566">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1567">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1567">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1568">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1568">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1569">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1569">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1570">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1570">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1571">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1571">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1572">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1572">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1573">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1573">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1574">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1574">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1575">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1575">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1576">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1576">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1577">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1577">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1578">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1578">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1579">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1579">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1580">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1580">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1581">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1581">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1582">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1582">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1583">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1583">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1584">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1584">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1585">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1585">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1586">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1586">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1587">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1587">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1588">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1588">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1589">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1589">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1590">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1590">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1591">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1591">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1592">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1592">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1593">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1593">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1594">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1594">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1595">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1595">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1596">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1596">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1597">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1597">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1598">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1598">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1599">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1599">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1600">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1600">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1601">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1601">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1602">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1602">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1603">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1603">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1604">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1604">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1605">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1605">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1606">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1606">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1607">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1607">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1608">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1608">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1609">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1609">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1610">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1610">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1611">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1611">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1612">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1612">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1613">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1613">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1614">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1614">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1615">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1615">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1616">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1616">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1617">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1617">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1618">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1618">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1619">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1619">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1620">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1620">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1621">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1621">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1622">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1622">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1623">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1623">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1624">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1624">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1625">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1625">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1626">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1626">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1627">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1627">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1628">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1628">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1629">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1629">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1630">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1630">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1631">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1631">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1632">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1632">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1633">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1633">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1634">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1634">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1635">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1635">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1636">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1636">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1637">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1637">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1638">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1638">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1639">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1639">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1640">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1640">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1641">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1641">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1642">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1642">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1643">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1643">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1644">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1644">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1645">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1645">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * single * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1646">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1646">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1647">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1647">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1648">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1648">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1649">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1649">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1650">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1650">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1651">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1651">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1652">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1652">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1653">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1653">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1654">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1654">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1655">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1655">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1656">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1656">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1657">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1657">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1658">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1658">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1659">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1659">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1660">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1660">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1661">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1661">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1662">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1662">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1663">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1663">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1664">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1664">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1665">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1665">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1666">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1666">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1667">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1667">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1668">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1668">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1669">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1669">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1670">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1670">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1671">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1671">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1672">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1672">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1673">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1673">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1674">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1674">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1675">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1675">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1676">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1676">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1677">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1677">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1678">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1678">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1679">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1679">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1680">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1680">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1681">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1681">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1682">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1682">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1683">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1683">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1684">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1684">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1685">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1685">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1686">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1686">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1687">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1687">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1688">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1688">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1689">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1689">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1690">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1690">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1691">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1691">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1692">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1692">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1693">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1693">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1694">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1694">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1695">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1695">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1696">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1696">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1697">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1697">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1698">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1698">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1699">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1699">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1700">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1700">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1701">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1701">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1702">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1702">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1703">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1703">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1704">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1704">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * ValueType * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1705">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1705">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1706">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1706">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1707">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1707">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1708">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1708">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1709">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1709">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1710">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1710">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1711">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1711">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1712">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1712">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1713">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1713">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1714">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1714">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1715">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1715">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1716">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1716">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1717">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1717">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1718">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1718">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1719">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1719">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1720">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1720">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1721">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1721">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1722">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1722">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1723">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w`RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1723">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1724">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1724">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1725">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1725">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1726">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1726">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1727">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1727">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1728">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1728">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1729">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1729">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1730">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1730">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1731">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1731">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1732">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1732">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1733">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1733">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1734">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1734">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1735">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1735">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1736">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1736">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1737">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1737">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1738">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1738">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1739">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1739">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1740">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1740">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1741">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1741">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1742">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1742">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1743">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1743">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1744">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1744">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1745">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1745">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1746">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1746">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1747">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1747">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1748">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1748">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1749">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1749">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1750">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1750">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1751">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1751">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1752">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1752">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1753">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1753">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1754">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1754">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1755">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1755">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1756">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1756">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1757">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1757">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1758">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1758">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1759">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1759">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1760">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1760">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1761">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1761">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1762">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1762">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1763">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1763">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : obj * obj * obj -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1764">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1764">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1765">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1765">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1766">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1766">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1767">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1767">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1768">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1768">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1769">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1769">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1770">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1770">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1771">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1771">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1772">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1772">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1773">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1773">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1774">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1774">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1775">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1775">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1776">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1776">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1777">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1777">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1778">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1778">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1779">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1779">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1780">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1780">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1781">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1781">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1782">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1782">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1783">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1783">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1784">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1784">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1785">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1785">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1786">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1786">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1787">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1787">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1788">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1788">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1789">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1789">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1790">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1790">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1791">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1791">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1792">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1792">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1793">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1793">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1794">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1794">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1795">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1795">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1796">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1796">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1797">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1797">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1798">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1798">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1799">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1799">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1800">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1800">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1801">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1801">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1802">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1802">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1803">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1803">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1804">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1804">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1805">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1805">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1806">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1806">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1807">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1807">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1808">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1808">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1809">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1809">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1810">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1810">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1811">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1811">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1812">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1812">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1813">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1813">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1814">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1814">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1815">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1815">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1816">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1816">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1817">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1817">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1818">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1818">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1819">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1819">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1820">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1820">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1821">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1821">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1822">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1822">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * string * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1823">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1823">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1824">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1824">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1825">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1825">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1826">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1826">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1827">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1827">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1828">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1828">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d4c80-1829">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1829">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1830">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1830">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d4c80-1831">Określa, czy chcesz zapisać ciąg dwubajtowy deskryptor długości ciągu do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1831">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="d4c80-1832">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1832">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1833">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1833">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1834">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1834">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1835">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />...</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1835">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1836">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1836">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1837">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1837">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1838">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1838">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1839">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1839">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1840">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1840">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1841">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1841">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1842">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1842">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1843">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1843">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1844">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1844">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1845">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1845">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1846">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1846">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1847">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1847">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1848">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1848">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1849">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1849">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1850">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1850">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1851">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1851">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1852">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1852">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1853">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1853">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1854">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1854">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1855">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1855">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1856">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1856">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1857">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1857">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1858">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1858">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1859">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1859">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1860">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1860">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1861">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1861">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1862">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1862">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1863">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1863">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1864">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1864">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1865">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1865">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1866">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1866">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1867">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1867">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1868">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1868">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1869">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1869">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1870">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1870">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1871">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1871">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1872">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1872">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1873">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1873">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1874">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1874">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1875">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1875">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1876">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1876">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1877">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1877">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1878">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1878">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1879">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1879">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1880">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1880">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1881">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1881">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1882">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1882">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1883">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1883">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1884">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1884">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1885">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1885">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * Array * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1886">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1886">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1887">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1887">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1888">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1888">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1889">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1889">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1890">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1890">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1891">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1891">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="d4c80-1892">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1892">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1893">Ma zastosowanie tylko wtedy, gdy pisania tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1893">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="d4c80-1894">Określa, czy tablica jest traktowane jako dynamiczne i czy należy napisać deskryptor ciąg, który opisuje długość tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1894">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d4c80-1895">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1895">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1896">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1896">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d4c80-1897">Określa, czy chcesz zapisać ciąg dwubajtowy deskryptor długości ciągu do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1897">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="d4c80-1898">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1898">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1899">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1899">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1900">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1900">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d4c80-1901">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1901">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1902">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1902">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1903">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1903">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d4c80-1904">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1904">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1905">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1905">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d4c80-1906">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1906">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1907">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1907">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1908">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1908">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1909">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1909">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1910">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1910">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1911">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1911">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1912">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1912">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1913">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1913">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1914">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1914">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1915">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1915">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d4c80-1916">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1916">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d4c80-1917">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1917">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1918">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1918">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1919">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1919">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1920">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1920">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1921">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1921">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1922">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1922">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1923">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1923">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d4c80-1924">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1924">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d4c80-1925">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1925">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d4c80-1926">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1926">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d4c80-1927">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1927">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d4c80-1928">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1928">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1929">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1929">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d4c80-1930">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1930">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1931">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1931">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d4c80-1932">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1932">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d4c80-1933">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1933">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d4c80-1934">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1934">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d4c80-1935">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1935">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d4c80-1936">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d4c80-1936">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1937">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1937">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1938">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1938">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d4c80-1939">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1939">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d4c80-1940">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1940">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1941">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1941">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d4c80-1942">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1942">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d4c80-1943">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1943">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d4c80-1944">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1944">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d4c80-1945">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1945">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d4c80-1946">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1946">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d4c80-1947">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1947">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1948">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1948">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d4c80-1949">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1949">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-1950">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1950">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-1951">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1951">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePutObject : int * obj * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePutObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1952">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1952">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1953">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1953">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-1954">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1954">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1955">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1955">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d4c80-1956">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1956">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-1957">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1957">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1958">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1958">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d4c80-1959">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePutObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1959">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span>
          </span>
          <span data-ttu-id="d4c80-1960">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1960">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-1961">`FilePutObject` Funkcja jest używana zamiast `FilePut` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` jest przekazywany zamiast innego typu, takie jak `Integer`, `Long`, `Short`, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1961">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="d4c80-1962">`FilePutObject` zapisuje i odczytuje deskryptory, które opisują obiektu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1962">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="d4c80-1963">Jeśli zamierzasz zapisać `Variant` typu `FilePutObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1963">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="d4c80-1964">W razie wątpliwości, jeśli używasz obiektu jako drugi parametr, firma Microsoft zaleca, aby zawsze używać `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1964">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="d4c80-1965">`FilePutObject` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1965">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-1966">Dane zapisane z `FilePutObject` są zazwyczaj odczytywane z pliku za pomocą `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1966">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="d4c80-1967">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1967">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d4c80-1968">Jeżeli pominięto `RecordNumber`, `FilePutObject` zapisuje następny rekord lub bajt po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (lub rekord lub bajt wskazywany przez ostatnią `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1968">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="d4c80-1969">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1969">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d4c80-1970">`FilePutObject` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1970">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d4c80-1971">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePutObject`, należy wykonać takie same, z `FileGetObject`, i należy również upewnić się, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1971">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d4c80-1972">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d4c80-1972">Random Mode</span></span>  
 <span data-ttu-id="d4c80-1973">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1973">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d4c80-1974">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePutObject` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1974">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d4c80-1975">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1975">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d4c80-1976">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest mieć długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1976">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d4c80-1977">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1977">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="d4c80-1978">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePutObject` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1978">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d4c80-1979">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePutObject` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1979">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d4c80-1980">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1980">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d4c80-1981">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePutObject` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1981">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d4c80-1982">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1982">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d4c80-1983">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1983">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d4c80-1984">Jeśli zmienna zapisywana jest tablica, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1984">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d4c80-1985">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1985">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d4c80-1986">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d4c80-1986">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d4c80-1987">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d4c80-1987">Binary Mode</span></span>  
 <span data-ttu-id="d4c80-1988">Do plików otwieranych w `Binary` trybie wszystkie `Random` zastosować zasady dotyczące trybu, z wyjątkiem:</span><span class="sxs-lookup"><span data-stu-id="d4c80-1988">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="d4c80-1989">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1989">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d4c80-1990">`FilePutObject` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1990">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-1991">W tym przykładzie użyto `FilePutObject` funkcję, aby zapisać ciąg do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1991">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberSignature Language="F#" Value="static member FileWidth : int * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileWidth (FileNumber, RecordWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-1992">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1992">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1993">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1993">Any valid file number.</span>
          </span>
        </param>
        <param name="RecordWidth">
          <span data-ttu-id="d4c80-1994">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1994">Required.</span>
          </span>
          <span data-ttu-id="d4c80-1995">Wyrażenie liczbowe w zakresie 0 – 255 włącznie, co oznacza liczbę znaków, są wyświetlane w wierszu, przed rozpoczęciem nowego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1995">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span>
          </span>
          <span data-ttu-id="d4c80-1996">Jeśli <c>RecordWidth</c> jest równa 0, nie ma żadnego limitu długości wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1996">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span>
          </span>
          <span data-ttu-id="d4c80-1997">Wartością domyślną dla <c>RecordWidth</c> wynosi 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1997">The default value for <c>RecordWidth</c> is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-1998">Przypisuje szerokość linii danych wyjściowych w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-1998">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4c80-1999">W tym przykładzie użyto `FileWidth` funkcję, aby ustawić szerokość linii danych wyjściowych dla pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-1999">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2000">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2000">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberSignature Language="F#" Value="static member FreeFile : unit -&gt; int" Usage="Microsoft.VisualBasic.FileSystem.FreeFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2001">Zwraca <see langword="Integer" /> wartość reprezentująca następny dostępny do użytku przez numer pliku <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2001">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2002">Zwraca <see langword="Integer" /> wartość reprezentująca następny dostępny do użytku przez numer pliku <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2002">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2003">Użyj `FreeFile` podawać numer pliku, który nie jest już używana.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2003">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2004">W tym przykładzie użyto `FreeFile` funkcja zwraca następny dostępny numer pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2004">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="d4c80-2005">Pięć plików są otwarte dla danych wyjściowych w ramach pętli i przykładowe dane są zapisywane do każdego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2005">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2006">Więcej niż 255 pliki są używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2006">More than 255 files are in use.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member GetAttr : string -&gt; Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.FileSystem.GetAttr PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d4c80-2007">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2007">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2008">
            <see langword="String" /> wyrażenie, który określa nazwę pliku, katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2008">
              <see langword="String" /> expression that specifies a file, directory, or folder name.</span>
          </span>
          <span data-ttu-id="d4c80-2009">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2009">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2010">Zwraca <see langword="FileAttribute" /> wartość, która reprezentuje atrybuty pliku, katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2010">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span>
          </span>
          <span data-ttu-id="d4c80-2011">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2011">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span>
          </span>
          <span data-ttu-id="d4c80-2012">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2012">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2013">Wartość zwrócona przez obiekt <see langword="GetAttr" /> to suma następujące wartości wyliczenia: <list type="table"><item><term> wartość </term><description> stałej </description><description> opis </description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normalny.  </description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Tylko do odczytu.  </description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Ukryte.  </description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System plików.  </description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Katalogu lub folderu.  </description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> Plik został zmieniony od czasu ostatniej kopii zapasowej.  </description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> Plik ma inną nazwę.  </description></item></list><block subset="none" type="note"><para> Te wyliczenia są określane za pomocą języka Visual Basic. Nazwy mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.  </para></block></span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2013">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:  <list type="table"><item><term> Value  </term><description> Constant  </description><description> Description  </description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normal.  </description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Read-only.  </description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Hidden.  </description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System file.  </description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Directory or folder.  </description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> File has changed since last backup.  </description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> File has a different name.  </description></item></list><block subset="none" type="note"><para> These enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.  </para></block></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2014">Aby określić, które atrybuty są ustawione, użyj `And` operatora bitowego porównania wartości zwracanej przez `GetAttr` funkcji i wartość wybranego atrybutu pliku chcesz.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2014">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="d4c80-2015">Jeśli wynik nie wynosi zero, ten atrybut jest ustawiony dla wskazanego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2015">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="d4c80-2016">Na przykład, wartość zwracana przez następujące `And` wyrażenie jest zero, jeśli `Archive` nie ustawiono atrybutu:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2016">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="d4c80-2017">Wartość różną od zera jest zwracany, jeśli `Archive` ma ustawioną wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2017">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2018">W tym przykładzie użyto `GetAttr` funkcję, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2018">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2019">
            <paramref name="Pathname" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2019">
              <paramref name="Pathname" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-2020">Plik docelowy nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2020">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2021">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2021">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2022">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2022">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2023">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2023">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2024">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2024">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2025">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2025">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2026">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2026">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2027">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2027">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2028">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2028">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2029">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2029">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2030">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2030">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2031">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2031">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2032">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2032">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2033">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2033">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2034">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2034">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2035">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2035">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2036">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2036">Data</span></span>|<span data-ttu-id="d4c80-2037">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2037">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2038">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2038">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2039">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2039">Empty</span></span>|  
|<span data-ttu-id="d4c80-2040">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2040">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2041">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2041">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2042">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2042">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2043">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2043">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2044">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2044">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2045">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2045">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2046">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2046">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2047">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2047">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2048">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2048">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2049">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2049">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2050">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2050">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2051">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2051">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2052">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2052">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2053">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2053">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2054">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2054">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2055">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2055">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2056">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2056">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2057">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2057">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2058">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2058">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2059">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2059">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2060">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2060">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2061">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2061">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2062">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2062">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2063">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2063">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2064">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2064">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2065">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2065">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2066">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2066">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2067">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2067">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2068">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2068">Data</span></span>|<span data-ttu-id="d4c80-2069">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2069">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2070">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2070">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2071">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2071">Empty</span></span>|  
|<span data-ttu-id="d4c80-2072">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2072">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2073">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2073">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2074">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2074">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2075">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2075">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2076">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2076">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2077">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2077">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2078">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2078">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2079">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2079">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2080">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2080">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2081">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2081">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2082">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2082">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2083">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2083">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2084">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2084">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2085">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2085">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2086">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2086">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2087">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2087">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2088">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2088">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2089">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2089">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2090">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2090">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2091">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2091">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2092">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2092">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2093">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2093">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2094">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2094">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2095">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2095">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2096">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2096">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2097">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2097">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2098">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2098">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2099">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2099">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2100">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2100">Data</span></span>|<span data-ttu-id="d4c80-2101">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2101">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2102">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2102">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2103">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2103">Empty</span></span>|  
|<span data-ttu-id="d4c80-2104">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2104">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2105">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2105">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2106">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2106">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2107">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2107">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2108">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2108">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2109">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2109">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2110">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2110">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2111">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2111">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2112">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2112">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2113">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2113">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2114">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2114">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2115">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2115">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2116">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2116">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2117">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2117">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2118">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2118">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2119">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2119">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2120">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2120">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2121">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2121">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2122">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2122">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2123">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2123">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2124">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2124">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2125">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2125">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2126">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2126">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2127">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2127">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2128">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2128">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2129">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2129">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2130">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2130">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2131">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2131">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2132">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2132">Data</span></span>|<span data-ttu-id="d4c80-2133">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2133">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2134">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2134">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2135">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2135">Empty</span></span>|  
|<span data-ttu-id="d4c80-2136">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2136">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2137">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2137">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2138">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2138">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2139">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2139">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2140">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2140">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2141">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2141">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2142">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2142">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2143">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2143">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2144">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2144">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2145">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2145">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2146">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2146">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2147">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2147">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2148">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2148">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2149">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2149">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2150">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2150">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2151">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2151">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2152">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2152">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2153">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2153">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2154">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2154">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2155">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2155">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2156">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2156">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2157">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2157">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2158">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2158">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2159">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2159">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2160">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2160">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2161">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2161">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2162">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2162">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2163">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2163">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2164">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2164">Data</span></span>|<span data-ttu-id="d4c80-2165">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2165">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2166">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2166">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2167">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2167">Empty</span></span>|  
|<span data-ttu-id="d4c80-2168">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2168">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2169">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2169">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2170">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2170">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2171">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2171">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2172">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2172">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2173">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2173">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2174">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2174">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2175">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2175">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2176">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2176">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2177">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2177">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2178">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2178">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2179">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2179">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2180">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2180">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2181">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2181">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2182">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2182">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2183">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2183">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2184">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2184">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2185">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2185">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2186">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2186">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2187">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2187">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2188">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2188">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2189">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2189">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2190">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2190">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2191">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2191">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2192">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2192">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2193">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2193">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2194">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2194">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2195">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2195">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2196">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2196">Data</span></span>|<span data-ttu-id="d4c80-2197">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2197">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2198">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2198">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2199">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2199">Empty</span></span>|  
|<span data-ttu-id="d4c80-2200">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2200">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2201">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2201">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2202">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2202">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2203">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2203">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2204">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2204">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2205">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2205">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2206">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2206">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2207">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2207">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2208">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2208">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2209">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2209">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2210">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2210">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2211">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2211">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2212">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2212">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2213">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2213">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2214">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2214">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2215">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2215">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2216">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2216">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2217">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2217">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2218">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2218">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2219">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2219">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2220">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2220">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2221">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2221">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2222">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2222">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2223">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2223">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2224">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2224">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2225">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2225">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2226">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2226">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2227">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2227">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2228">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2228">Data</span></span>|<span data-ttu-id="d4c80-2229">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2229">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2230">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2230">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2231">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2231">Empty</span></span>|  
|<span data-ttu-id="d4c80-2232">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2232">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2233">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2233">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2234">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2234">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2235">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2235">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2236">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2236">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2237">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2237">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2238">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2238">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2239">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2239">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2240">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2240">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2241">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2241">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2242">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2242">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2243">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2243">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2244">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2244">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2245">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2245">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2246">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2246">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2247">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2247">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2248">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2248">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2249">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2249">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2250">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2250">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2251">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2251">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2252">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2252">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2253">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2253">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2254">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2254">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2255">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2255">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2256">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2256">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2257">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2257">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2258">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2258">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2259">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2259">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2260">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2260">Data</span></span>|<span data-ttu-id="d4c80-2261">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2261">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2262">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2262">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2263">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2263">Empty</span></span>|  
|<span data-ttu-id="d4c80-2264">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2264">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2265">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2265">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2266">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2266">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2267">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2267">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2268">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2268">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2269">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2269">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2270">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2270">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2271">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2271">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2272">Na przykład w niemieckiej wersji, gdy wejściowe 3,14159, zwraca tylko 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2272">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2273">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2273">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2274">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2274">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2275">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2275">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2276">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2276">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2277">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2277">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2278">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2278">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2279">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2279">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2280">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2280">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2281">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2281">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2282">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2282">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2283">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2283">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2284">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2284">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2285">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2285">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2286">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2286">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2287">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2287">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2288">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2288">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2289">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2289">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2290">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2290">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2291">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2291">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2292">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2292">Data</span></span>|<span data-ttu-id="d4c80-2293">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2293">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2294">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2294">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2295">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2295">Empty</span></span>|  
|<span data-ttu-id="d4c80-2296">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2296">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2297">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2297">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2298">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2298">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2299">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2299">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2300">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2300">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2301">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2301">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2302">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2302">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2303">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2303">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2304">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2304">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2305">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2305">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2306">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2306">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2307">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2307">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2308">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2308">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2309">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2309">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2310">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2310">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2311">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2311">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2312">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2312">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2313">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2313">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2314">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2314">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2315">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2315">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2316">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2316">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2317">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2317">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2318">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2318">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2319">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2319">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2320">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2320">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2321">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2321">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2322">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2322">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2323">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2323">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2324">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2324">Data</span></span>|<span data-ttu-id="d4c80-2325">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2325">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2326">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2326">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2327">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2327">Empty</span></span>|  
|<span data-ttu-id="d4c80-2328">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2328">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2329">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2329">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2330">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2330">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2331">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2331">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2332">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2332">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2333">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2333">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2334">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2334">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2335">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2335">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2336">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2336">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2337">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2337">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2338">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2338">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2339">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2339">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2340">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2340">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2341">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2341">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2342">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2342">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2343">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2343">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2344">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2344">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2345">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2345">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2346">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2346">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2347">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2347">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2348">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2348">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2349">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2349">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2350">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2350">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2351">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2351">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2352">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2352">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2353">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2353">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2354">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2354">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2355">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2355">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2356">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2356">Data</span></span>|<span data-ttu-id="d4c80-2357">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2357">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2358">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2358">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2359">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2359">Empty</span></span>|  
|<span data-ttu-id="d4c80-2360">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2360">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2361">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2361">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2362">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2362">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2363">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2363">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2364">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2364">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2365">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2365">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2366">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2366">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2367">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2367">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2368">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2368">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2369">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2369">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2370">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2370">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2371">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2371">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2372">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2372">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2373">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2373">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2374">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2374">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2375">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2375">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d4c80-2376">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2376">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2377">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2377">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2378">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2378">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2379">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2379">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2380">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2380">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2381">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2381">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2382">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2382">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d4c80-2383">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2383">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2384">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2384">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2385">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2385">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d4c80-2386">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2386">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d4c80-2387">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2387">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d4c80-2388">Dane</span><span class="sxs-lookup"><span data-stu-id="d4c80-2388">Data</span></span>|<span data-ttu-id="d4c80-2389">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d4c80-2389">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d4c80-2390">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d4c80-2390">Delimiting comma or blank line</span></span>|<span data-ttu-id="d4c80-2391">Pusty</span><span class="sxs-lookup"><span data-stu-id="d4c80-2391">Empty</span></span>|  
|<span data-ttu-id="d4c80-2392">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2392">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d4c80-2393">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d4c80-2393">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d4c80-2394">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2394">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d4c80-2395">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d4c80-2395">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d4c80-2396">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d4c80-2396">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d4c80-2397">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2397">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d4c80-2398">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2398">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2399">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2399">The `Input` function is not localized.</span></span> <span data-ttu-id="d4c80-2400">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2400">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2401">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2401">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2402">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2402">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2403">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2403">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d4c80-2404">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2404">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2405">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2405">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberSignature Language="F#" Value="static member InputString : int * int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.InputString (FileNumber, CharCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2406">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2406">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2407">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2407">Any valid file number.</span>
          </span>
        </param>
        <param name="CharCount">
          <span data-ttu-id="d4c80-2408">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2408">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2409">Dowolne prawidłowe wyrażenie liczbowe określającą liczbę znaków do odczytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2409">Any valid numeric expression specifying the number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2410">Zwraca <see langword="String" /> wartość, która zawiera znaki z pliku otwarte w <see langword="Input" /> lub <see langword="Binary" /> trybu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2410">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="d4c80-2411">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2411">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
          <span data-ttu-id="d4c80-2412">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2412">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2413">Zwraca <see langword="String" /> wartość, która zawiera znaki z pliku otwarte w <see langword="Input" /> lub <see langword="Binary" /> trybu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2413">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="d4c80-2414">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2414">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2415">`InputString` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2415">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2416">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2416">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2417">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2417">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2418">Dane odczytane z `InputString` funkcji są zwykle zapisywane w pliku przy użyciu `Print` lub `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2418">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="d4c80-2419">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2419">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="d4c80-2420">W odróżnieniu od `Input` funkcji `InputString` funkcja zwraca wszystkie znaki, zostanie odczytanych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2420">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="d4c80-2421">W tym przecinki, znaki powrotu karetki, wysuwu wiersza, znaki cudzysłowu i spacje.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2421">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="d4c80-2422">W przypadku plików otwartych do `Binary` dostęp do próba odczytania pliku przy użyciu `InputString` działać do momentu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2422">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="d4c80-2423">Użyj `LOF` i `Loc` funkcji zamiast `EOF` podczas odczytu plików binarnych za pomocą `InputString`, lub użyj `FileGet` zastosowania `EOF` — funkcja.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2423">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2424">Podczas odczytu z plików, nie należy wprowadzać zabezpieczeń decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2424">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2425">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2425">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2426">W tym przykładzie użyto `InputString` funkcję, aby przeczytać o jeden znak w czasie z pliku i wydrukuj go do `Output` okna.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2426">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="d4c80-2427">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2427">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2428">
            <paramref name="FileNumber" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2428">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-2429">
            <paramref name="CharCount" /> &lt; 0 lub &gt; 214.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2429">
              <paramref name="CharCount" /> &lt; 0 or &gt; 214.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member Kill : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Kill PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d4c80-2430">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2430">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2431">
            <see langword="String" /> wyrażenie określające jedną lub więcej nazw plików do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2431">
              <see langword="String" /> expression that specifies one or more file names to be deleted.</span>
          </span>
          <span data-ttu-id="d4c80-2432">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2432">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2433">Usuwa pliki z dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2433">Deletes files from a disk.</span>
          </span>
          <span data-ttu-id="d4c80-2434">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Kill" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2434">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span>
          </span>
          <span data-ttu-id="d4c80-2435">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2435">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2436">`Kill` obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2436">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="d4c80-2437">**Uwaga dotycząca zabezpieczeń** w celu wykonania `Kill` funkcja wymaga, aby `Read` i `PathDiscovery` flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2437">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="d4c80-2438">Aby uzyskać więcej informacji, zobacz <xref:System.Security.SecurityException> [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="d4c80-2438">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2439">W tym przykładzie użyto `Kill` funkcję, aby usunąć plik z dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2439">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2440">Otwieranie plików docelowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2440">Target file(s) open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-2441">Nie można odnaleźć plików docelowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2441">Target file(s) not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d4c80-2442">Odmowa uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2442">Permission denied.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LineInput : int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.LineInput FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2443">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2443">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2444">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2444">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2445">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnego i przypisuje go do <see langword="String" /> zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2445">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2446">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnego i przypisuje go do <see langword="String" /> zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2446">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2447">`LineInput` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2447">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2448">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2448">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2449">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2449">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2450">Dane odczytane z `LineInput` są zwykle zapisywane w pliku przy użyciu `Print`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2450">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2451">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2451">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d4c80-2452">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2452">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="d4c80-2453">`LineInput` Funkcja odczytuje z pliku o jeden znak w danym momencie, aż do napotkania znaku powrotu karetki (`Chr(13)`) lub zwrotu/wiersz źródła danych (`Chr(13) + Chr(10)`) sekwencji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2453">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="d4c80-2454">Sekwencje kanału informacyjnego powrotu/wiersza powrotu karetki są pomijane zamiast dołączany do ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2454">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2455">Podczas odczytu z pliku za pomocą `LineInput` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2455">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2456">W tym przykładzie użyto `LineInput` funkcję, aby odczytać wiersz z pliku sekwencyjnego i przypisać ją do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2456">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="d4c80-2457">W tym przykładzie założono, że `TestFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2457">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="d4c80-2458">Osiągnięto koniec pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2458">End of file reached.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2459">
            <paramref name="FileNumber" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2459">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Loc : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Loc FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2460">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2460">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2461">Dowolne, prawidłowe <see langword="Integer" /> pliku numer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2461">Any valid <see langword="Integer" /> file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2462">Zwraca <see langword="Long" /> wartość określającą bieżącą pozycję odczytu/zapisu w otwartego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2462">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2463">Zwraca <see langword="Long" /> wartość określającą bieżącą pozycję odczytu/zapisu w otwartego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2463">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2464">`Loc` Funkcji jest liczony od zera; korzystania z niego pobrać pierwszy bajt w pliku zwróci wartość 0.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2464">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="d4c80-2465">`Loc` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2465">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2466">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2466">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2467">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2467">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2468">Poniżej opisano wartość zwracana przez każdy tryb dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2468">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="d4c80-2469">Tryb</span><span class="sxs-lookup"><span data-stu-id="d4c80-2469">Mode</span></span>|<span data-ttu-id="d4c80-2470">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d4c80-2470">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="d4c80-2471">Numer ostatniego rekordu odczytywany lub zapisywany do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2471">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="d4c80-2472">Bieżące położenie bajtów w pliku podzielona przez 128.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2472">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="d4c80-2473">Jednak informacje zwrócone przez `Loc` dla kolejnych plików nie jest używany ani wymagane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2473">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="d4c80-2474">Położenie ostatniego bajtu zapisu lub odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2474">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2475">W tym przykładzie użyto `Loc` funkcja zwraca bieżącą pozycję odczytu/zapisu w otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2475">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="d4c80-2476">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2476">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2477">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2477">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2478">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2478">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2479">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2479">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2480">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2480">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Lock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2481">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2481">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2482">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2482">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2483">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2483">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2484">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2484">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2485">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2485">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2486">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2486">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d4c80-2487">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2487">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d4c80-2488">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2488">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d4c80-2489">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2489">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d4c80-2490">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2490">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d4c80-2491">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2491">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2492">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2492">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d4c80-2493">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2493">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2494">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2494">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2495">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2495">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2496">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2496">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="d4c80-2497">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2497">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2498">Liczba tylko rekord lub bajt do zablokowania lub odblokowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2498">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2499">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2499">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2500">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2500">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2501">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2501">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2502">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2502">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d4c80-2503">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2503">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d4c80-2504">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2504">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d4c80-2505">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2505">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d4c80-2506">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2506">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d4c80-2507">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2507">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2508">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2508">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d4c80-2509">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2509">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2510">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2510">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2511">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2511">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2512">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2512">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="d4c80-2513">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2513">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2514">Liczba pierwszy rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2514">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="d4c80-2515">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2515">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2516">Liczba ostatnich rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2516">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2517">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2517">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2518">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2518">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2519">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2519">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2520">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2520">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d4c80-2521">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2521">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d4c80-2522">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2522">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d4c80-2523">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2523">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d4c80-2524">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2524">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d4c80-2525">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2525">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2526">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2526">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d4c80-2527">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2527">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2528">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2528">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LOF : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.LOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2529">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2529">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2530">
            <see langword="Integer" /> Zawierający prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2530">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2531">Zwraca <see langword="Long" /> reprezentującą rozmiar w bajtach, w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2531">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2532">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2532">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
          <span data-ttu-id="d4c80-2533">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2533">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2534">Zwraca <see langword="Long" /> reprezentującą rozmiar w bajtach, w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2534">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2535">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2536">Użyj `FileLen` funkcję, aby uzyskać długość pliku, który nie jest otwarty.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2536">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2537">W tym przykładzie użyto `LOF` funkcję, aby określić rozmiar otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2537">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="d4c80-2538">W tym przykładzie założono, że `TestFile` to plik tekstowy, który zawiera przykładowe dane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2538">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2539">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2539">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member MkDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.MkDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="d4c80-2540">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2540">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2541">
            <see langword="String" /> wyrażenie, które identyfikuje katalog, który ma zostać utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2541">
              <see langword="String" /> expression that identifies the directory to be created.</span>
          </span>
          <span data-ttu-id="d4c80-2542">
            <c>Ścieżki</c> mogą obejmować dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2542">The <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="d4c80-2543">Jeśli dysk nie zostanie określony, <see langword="MkDir" /> powoduje utworzenie nowego katalogu na bieżącym dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2543">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2544">Tworzy nowy katalog.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2544">Creates a new directory.</span>
          </span>
          <span data-ttu-id="d4c80-2545">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="MkDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2545">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span>
          </span>
          <span data-ttu-id="d4c80-2546">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2546">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2547">Ta funkcja tworzy nowy katalog.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2547">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2548">W tym przykładzie użyto `MkDir` funkcję, aby utworzyć katalog.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2548">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="d4c80-2549">Jeśli dysk nie zostanie określony, nowy katalog jest tworzony na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2549">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-2550">
            <paramref name="Path" /> nie jest określona lub jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2550">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d4c80-2551">Odmowa uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2551">Permission denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2552">Katalog już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2552">Directory already exists.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Print : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Print (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2553">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2553">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2554">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2554">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d4c80-2555">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2555">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2556">Zero lub więcej rozdzielonych przecinkami wyrażenia, aby zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2556">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="d4c80-2557">
            <c>Dane wyjściowe</c> ustawienia argument to: <see langword="T:System.IO.IOException" />: tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2557">The <c>Output</c> argument settings are:  <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="d4c80-2558">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2558">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2559">Zapisy wyświetlania danych w formacie pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2559">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2560">`Print` i `PrintLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2560">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2561">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2561">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2562">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2562">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2563">`Print` nie ma wiersz na końcu wiersza; jednak `PrintLine` Dołącz wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2563">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="d4c80-2564">Dane zapisane z `Print` są zazwyczaj odczytywane z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2564">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="d4c80-2565">Jeżeli pominięto `Output` dla `PrintLine`, pusty wiersz zostanie wydrukowany do pliku; w przypadku `Print`, nic nie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2565">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="d4c80-2566">Wiele wyrażeń oddzielone przecinkami mają zostać wyrównane na granicach kartę, ale mieszanie przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2566">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="d4c80-2567">Aby uzyskać `Boolean` danych, albo `True` lub `False` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2567">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="d4c80-2568">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2568">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="d4c80-2569">Dane są zapisywane do pliku przy użyciu formatu daty krótkiej standardowa rozpoznany przez system.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2569">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="d4c80-2570">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2570">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="d4c80-2571">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2571">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d4c80-2572">Jednak jeśli `Output` dane listy `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2572">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="d4c80-2573">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2573">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="d4c80-2574">`Error` — Słowo kluczowe nie jest tłumaczony niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2574">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="d4c80-2575">Wszystkie dane zapisane do pliku za pomocą `Print` uwzględnia ustawienia regionalne; oznacza to, dane są poprawnie sformatowane przy użyciu odpowiednich separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2575">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="d4c80-2576">Jeśli użytkownik chce do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2576">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="d4c80-2577">Zapisywanie do pliku za pomocą `Print` lub `PrintLine` functions wymaga `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2577">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2578">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d4c80-2578">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2579">W tym przykładzie użyto `Print` i `PrintLine` funkcje można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2579">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member PrintLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.PrintLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2580">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2580">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2581">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2581">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d4c80-2582">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2582">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2583">Zero lub więcej rozdzielonych przecinkami wyrażenia, aby zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2583">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="d4c80-2584">
            <c>Dane wyjściowe</c> ustawienia argument to: <see langword="T:System.IO.IOException" />: tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2584">The <c>Output</c> argument settings are:  <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="d4c80-2585">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2585">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2586">Zapisy wyświetlania danych w formacie pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2586">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2587">`Print` i `PrintLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2587">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2588">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2588">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2589">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2589">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2590">`Print` nie ma wiersz na końcu wiersza; jednak`PrintLine` Dołącz wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2590">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="d4c80-2591">Dane zapisane z `Print` są zazwyczaj odczytywane z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2591">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="d4c80-2592">Jeżeli pominięto `Output` dla `PrintLine`, pusty wiersz zostanie wydrukowany do pliku; w przypadku `Print`, nic nie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2592">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="d4c80-2593">Wiele wyrażeń oddzielone przecinkami mają zostać wyrównane na granicach kartę, ale mieszanie przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2593">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="d4c80-2594">Aby uzyskać `Boolean` danych, albo `True` lub `False` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2594">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="d4c80-2595">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2595">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="d4c80-2596">Dane są zapisywane do pliku przy użyciu formatu daty krótkiej standardowa rozpoznawane przez system.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2596">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="d4c80-2597">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2597">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="d4c80-2598">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2598">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d4c80-2599">Jednak jeśli `Output` dane listy `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2599">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="d4c80-2600">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2600">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="d4c80-2601">`Error` — Słowo kluczowe nie jest tłumaczony niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2601">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="d4c80-2602">Wszystkie dane zapisane do pliku za pomocą `Print` uwzględnia ustawienia regionalne; oznacza to, dane są poprawnie sformatowane przy użyciu odpowiednich separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2602">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="d4c80-2603">Jeśli użytkownik chce do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2603">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="d4c80-2604">Zapisywanie do pliku za pomocą `Print` lub `PrintLine` functions wymaga `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2604">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2605">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d4c80-2605">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2606">W tym przykładzie użyto `Print` i `PrintLine` funkcje można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2606">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberSignature Language="F#" Value="static member Rename : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Rename (OldPath, NewPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath">
          <span data-ttu-id="d4c80-2607">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2607">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2608">
            <see langword="String" /> wyrażenie określające istniejącej nazwy pliku i lokalizację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2608">
              <see langword="String" /> expression that specifies the existing file name and location.</span>
          </span>
          <span data-ttu-id="d4c80-2609">
            <c>OldPath</c> może zawierać katalogu i dysku w pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2609">
              <c>OldPath</c> may include the directory, and drive, of the file.</span>
          </span>
        </param>
        <param name="NewPath">
          <span data-ttu-id="d4c80-2610">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2610">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2611">
            <see langword="String" /> wyrażenie, które określa nową nazwę pliku i lokalizację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2611">
              <see langword="String" /> expression that specifies the new file name and location.</span>
          </span>
          <span data-ttu-id="d4c80-2612">
            <c>Nowa_ścieżka</c> mogą obejmować katalogu oraz dysk w lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2612">
              <c>NewPath</c> may include directory and drive of the destination location.</span>
          </span>
          <span data-ttu-id="d4c80-2613">Nazwa pliku określona przez <c>Nowa_ścieżka</c> już nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2613">The file name specified by <c>NewPath</c> cannot already exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2614">Zmienia nazwę pliku lub katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2614">Renames a disk file or directory.</span>
          </span>
          <span data-ttu-id="d4c80-2615">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Rename" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2615">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span>
          </span>
          <span data-ttu-id="d4c80-2616">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2616">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2617">`Rename` Funkcji zmieniania nazwy pliku i przenosi je do innego katalogu, jeśli jest to wymagane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2617">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="d4c80-2618">`Rename` Funkcji można przenieść plik na dyskach, ale tylko wtedy można zmienić nazwę istniejącego katalogu podczas zarówno `NewPath` i `OldPath` znajdują się na tym samym dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2618">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="d4c80-2619">`Rename` Nie można utworzyć nowego pliku lub katalogu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2619">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="d4c80-2620">Za pomocą `Rename` generuje błąd, funkcję dla otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2620">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="d4c80-2621">Otwórz plik należy zamknąć przed zmianą nazwy.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2621">You must close an open file before renaming it.</span></span> <span data-ttu-id="d4c80-2622">`Rename` argumenty nie może zawierać wielu znaków (\*) i symboli wieloznacznych pojedynczych znaków (?).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2622">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d4c80-2623">Korzystając z `Rename` do skopiowania pliku niechronionych lokalizacji do chronionej lokalizacji, plik zachowuje mniej ograniczone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2623">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="d4c80-2624">Sprawdź, czy nie są Przedstawiamy zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2624">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2625">W tym przykładzie użyto `Rename` funkcję, aby zmienić nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2625">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="d4c80-2626">Do celów tego przykładu założono, że katalogi, które są określone w już istnieje.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2626">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-2627">Ścieżka jest nieprawidłowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2627">Path is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-2628">
            <paramref name="OldPath" /> plik nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2628">
              <paramref name="OldPath" /> file does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2629">Nie można zmienić nazwy do innego urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2629">Cannot rename to different device.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberSignature Language="F#" Value="static member Reset : unit -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2630">Zamyka wszystkie dysku pliki otwierane przy użyciu <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2630">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2631">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Reset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2631">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span>
          </span>
          <span data-ttu-id="d4c80-2632">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2632">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2633">`Reset` Funkcji spowoduje zamknięcie wszystkich aktywnych plików otwartych przez `FileOpen` działa i ma taką samą funkcję jak `FileClose()` bez żadnych parametrów.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2633">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2634">W tym przykładzie użyto `Reset` funkcję, aby zamknąć wszystkie otwarte pliki i zapisać zawartość wszystkie bufory plików na dysku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2634">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="d4c80-2635">Zwróć uwagę na użycie `Object` zmiennej `FileNumber` zarówno jako ciąg i numeru.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2635">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member RmDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.RmDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="d4c80-2636">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2636">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2637">
            <see langword="String" /> wyrażenie, które identyfikuje katalogu lub folderu, do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2637">
              <see langword="String" /> expression that identifies the directory or folder to be removed.</span>
          </span>
          <span data-ttu-id="d4c80-2638">
            <c>Ścieżka</c> można dołączyć dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2638">
              <c>Path</c> can include the drive.</span>
          </span>
          <span data-ttu-id="d4c80-2639">Jeśli dysk nie zostanie określony, <see langword="RmDir" /> powoduje usunięcie katalogu na bieżącym dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2639">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2640">Usuwa istniejącego katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2640">Removes an existing directory.</span>
          </span>
          <span data-ttu-id="d4c80-2641">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="RmDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2641">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span>
          </span>
          <span data-ttu-id="d4c80-2642">Aby uzyskać więcej informacji, zobacz <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2642">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2643">Błąd występuje, Jeśli spróbujesz użyć `RmDir` w katalogu, który zawiera pliki.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2643">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="d4c80-2644">Użyj `Kill` funkcję, aby usunąć wszystkie pliki, zanim spróbujesz usunąć katalog.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2644">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2645">W tym przykładzie użyto `RmDir` funkcję, aby usunąć istniejący katalog.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2645">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-2646">
            <paramref name="Path" /> nie jest określona lub jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2646">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2647">Katalog docelowy zawiera pliki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2647">Target directory contains files.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4c80-2648">Katalog nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2648">Directory does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2649">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2649">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2650">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2650">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="d4c80-2651">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2651">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Seek : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Seek FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2652">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2652">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2653">
            <see langword="Integer" /> Zawierający prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2653">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2654">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2654">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2655">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2655">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="d4c80-2656">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2656">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2657">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2657">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2658">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (równoważne do 2 ^ 31-1) włącznie.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2658">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="d4c80-2659">Poniżej przedstawiono wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2659">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="d4c80-2660">Tryb</span><span class="sxs-lookup"><span data-stu-id="d4c80-2660">Mode</span></span>|<span data-ttu-id="d4c80-2661">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d4c80-2661">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="d4c80-2662">Liczbę odczytywanych lub zapisywanych następnego rekordu</span><span class="sxs-lookup"><span data-stu-id="d4c80-2662">Number of the next record read or written</span></span>|  
|<span data-ttu-id="d4c80-2663">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2663">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="d4c80-2664">Pozycja bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2664">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="d4c80-2665">Pierwszy bajt w pliku znajduje się na pozycji 1, drugi bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2665">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2666">W tym przykładzie użyto `Seek` funkcja zwraca bieżącą pozycję w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2666">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="d4c80-2667">W przykładzie założono `TestFile` to plik zawierający rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2667">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="d4c80-2668">Do plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2668">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="d4c80-2669">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2669">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d4c80-2670">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2670">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="d4c80-2671">W tym przykładzie użyto `Seek` funkcję, aby ustawić położenie do następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2671">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="d4c80-2672">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2672">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d4c80-2673">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2673">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2674">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2674">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberSignature Language="F#" Value="static member Seek : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Seek (FileNumber, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2675">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2675">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2676">
            <see langword="Integer" /> Zawierający prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2676">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="d4c80-2677">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2677">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2678">Jeśli wystąpią liczbą z zakresu 1 – 2 147 483 647, włącznie, która wskazuje, gdzie następnego odczyt/zapis operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2678">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2679">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2679">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2680">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2680">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="d4c80-2681">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2681">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2682">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (równoważne do 2 ^ 31-1) włącznie.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2682">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="d4c80-2683">Poniżej przedstawiono wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2683">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="d4c80-2684">Tryb</span><span class="sxs-lookup"><span data-stu-id="d4c80-2684">Mode</span></span>|<span data-ttu-id="d4c80-2685">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d4c80-2685">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="d4c80-2686">Liczbę odczytywanych lub zapisywanych następnego rekordu</span><span class="sxs-lookup"><span data-stu-id="d4c80-2686">Number of the next record read or written</span></span>|  
|<span data-ttu-id="d4c80-2687">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="d4c80-2687">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="d4c80-2688">Pozycja bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2688">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="d4c80-2689">Pierwszy bajt w pliku znajduje się na pozycji 1, drugi bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2689">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2690">W tym przykładzie użyto `Seek` funkcja zwraca bieżącą pozycję w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2690">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="d4c80-2691">W przykładzie założono `TestFile` to plik zawierający rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2691">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="d4c80-2692">Do plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2692">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="d4c80-2693">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2693">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d4c80-2694">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2694">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="d4c80-2695">W tym przykładzie użyto `Seek` funkcję, aby ustawić położenie do następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2695">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="d4c80-2696">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2696">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d4c80-2697">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2697">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2698">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2698">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberSignature Language="F#" Value="static member SetAttr : string * Microsoft.VisualBasic.FileAttribute -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.SetAttr (PathName, Attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d4c80-2699">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2699">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2700">
            <see langword="String" /> wyrażenie, które określa nazwę pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2700">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="d4c80-2701">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2701">
              <c>PathName</c> can include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Attributes">
          <span data-ttu-id="d4c80-2702">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2702">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2703">Wyrażenie stałe i liczbowego, w których suma określa atrybuty pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2703">Constant or numeric expression, whose sum specifies file attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2704">Ustawia atrybut informacji dla pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2704">Sets attribute information for a file.</span>
          </span>
          <span data-ttu-id="d4c80-2705">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="SetAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2705">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span>
          </span>
          <span data-ttu-id="d4c80-2706">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2706">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2707">Błąd czasu wykonywania występuje, Jeśli spróbujesz ustawić atrybuty otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2707">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="d4c80-2708">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2708">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="d4c80-2709">Wartość</span><span class="sxs-lookup"><span data-stu-id="d4c80-2709">Value</span></span>|<span data-ttu-id="d4c80-2710">Stała</span><span class="sxs-lookup"><span data-stu-id="d4c80-2710">Constant</span></span>|<span data-ttu-id="d4c80-2711">Opis</span><span class="sxs-lookup"><span data-stu-id="d4c80-2711">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="d4c80-2712">Normalny (domyślnie).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2712">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="d4c80-2713">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2713">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="d4c80-2714">Ukryte.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2714">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="d4c80-2715">System plików.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2715">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="d4c80-2716">Etykieta woluminu</span><span class="sxs-lookup"><span data-stu-id="d4c80-2716">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="d4c80-2717">Katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2717">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="d4c80-2718">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2718">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="d4c80-2719">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2719">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2720">Te wyliczenia są określane za pomocą języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2720">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="d4c80-2721">Nazwy mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2721">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2722">W tym przykładzie użyto `SetAttr` funkcję, aby ustawić atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2722">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4c80-2723">
            <paramref name="Attribute" /> Typ jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2723">
              <paramref name="Attribute" /> type is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberSignature Language="F#" Value="static member SPC : int16 -&gt; Microsoft.VisualBasic.SpcInfo" Usage="Microsoft.VisualBasic.FileSystem.SPC Count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count">
          <span data-ttu-id="d4c80-2724">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2724">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2725">Liczba miejsc do magazynowania, aby wstawić przed wyświetleniem lub drukowanie następnego wyrażenia na liście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2725">The number of spaces to insert before displaying or printing the next expression in a list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2726">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2726">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2727">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2727">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2728">Jeśli `Count` jest mniejsza niż szerokość linii danych wyjściowych, natychmiast następną pozycję wydruku następuje liczba wydrukowanych spacji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2728">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="d4c80-2729">Jeśli`Count` jest większa niż szerokość linii danych wyjściowych, `SPC` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2729">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="d4c80-2730">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="d4c80-2730">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="d4c80-2731">Na przykład, jeśli bieżącej pozycji drukowania jest 24, szerokość linii danych wyjściowych to 80 i określeniu `SPC(90)`, drukowania dalej rozpocznie się od pozycji 34 (bieżącej pozycji drukowania + pozostałą część 90/80).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2731">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="d4c80-2732">Jeśli różnica między bieżącą pozycję wydruku i szerokości linii danych wyjściowych jest mniejsza niż `Count` (lub `Count` `Mod` *szerokość*), `SPC` funkcji nakłada się na początku następnego wiersza i generuje miejsca do magazynowania jest równa `Count` — (*szerokość* — *bieżąca_pozycja_wydruku*).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2732">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` – (*width* – *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2733">Upewnij się, że kolumny tabel są dostatecznie szeroka umożliwić szerokie litery.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2733">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2734">W tym przykładzie użyto `SPC` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2734">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2735">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2735">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberSignature Language="F#" Value="static member TAB : unit -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2736">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2736">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2737">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2737">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2738">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większy niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2738">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="d4c80-2739">Jeśli `Column` jest mniejszy niż 1 `TAB` Przenosi pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2739">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="d4c80-2740">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2740">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="d4c80-2741">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="d4c80-2741">Column Mod width</span></span>  
  
 <span data-ttu-id="d4c80-2742">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, drukowania dalej rozpocznie się w kolumnie 10 (reszta 90/80).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2742">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="d4c80-2743">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania drukowania rozpoczyna się w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2743">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="d4c80-2744">Jeśli obliczonej pozycji drukowania jest większy niż bieżąca pozycja drukowania, drukowanie rozpoczyna się na obliczony wydrukować pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2744">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="d4c80-2745">Skrajnie po lewej stronie pozycji drukowania w wierszu danych wyjściowych ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2745">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="d4c80-2746">Kiedy używasz `Print` lub `PrintLine` funkcji Drukowanie do plików, po prawej stronie pozycji drukowania jest szerokość bieżącego pliku wyjściowego, który można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2746">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="d4c80-2747">`TAB` Funkcji można używać z `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2747">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="d4c80-2748">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2748">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2749">Upewnij się, że kolumny tabel są dostatecznie szeroka, aby zawierać litery szerokości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2749">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2750">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2750">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberSignature Language="F#" Value="static member TAB : int16 -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB Column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column">
          <span data-ttu-id="d4c80-2751">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2751">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2752">Numer kolumny, przenieść przed wyświetleniem lub drukowanie następnego wyrażenia na liście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2752">The column number moved to before displaying or printing the next expression in a list.</span>
          </span>
          <span data-ttu-id="d4c80-2753">W przypadku pominięcia <see langword="TAB" /> przenosi punkt wstawiania do początku następnego strefy drukowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2753">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2754">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2754">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c80-2755">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2755">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2756">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większa niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2756">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="d4c80-2757">Jeśli `Column` jest mniejszy niż 1 `TAB` Przenosi pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2757">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="d4c80-2758">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2758">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="d4c80-2759">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="d4c80-2759">Column Mod width</span></span>  
  
 <span data-ttu-id="d4c80-2760">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, drukowania dalej rozpocznie się w kolumnie 10 (reszta 90/80).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2760">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="d4c80-2761">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania drukowania rozpoczyna się w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2761">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="d4c80-2762">Jeśli obliczonej pozycji drukowania jest większa od bieżącej pozycji drukowania, drukowanie rozpoczyna się na obliczony wydrukować pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2762">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="d4c80-2763">Skrajnie po lewej stronie pozycji drukowania w wierszu danych wyjściowych ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2763">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="d4c80-2764">Kiedy używasz `Print` lub `PrintLine` funkcji Drukowanie do plików, po prawej stronie pozycji drukowania jest szerokość bieżącego pliku wyjściowego, który można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2764">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="d4c80-2765">`TAB` Funkcji można używać z `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2765">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="d4c80-2766">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2766">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4c80-2767">Upewnij się, że kolumny tabel są dostatecznie szeroka, aby zawierać litery szerokości.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2767">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2768">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2768">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c80-2769">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2769">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2770">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2770">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2771">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2771">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Unlock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2772">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2772">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2773">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2773">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2774">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2774">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2775">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2775">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2776">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2776">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2777">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2777">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d4c80-2778">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2778">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d4c80-2779">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2779">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d4c80-2780">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2780">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d4c80-2781">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2781">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d4c80-2782">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2782">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2783">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2783">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d4c80-2784">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2784">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2785">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2785">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2786">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2786">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2787">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2787">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="d4c80-2788">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2788">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2789">Liczba tylko rekord lub bajt do zablokowania lub odblokowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2789">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2790">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2790">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2791">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2791">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2792">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2792">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2793">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2793">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d4c80-2794">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2794">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d4c80-2795">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2795">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d4c80-2796">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2796">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d4c80-2797">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2797">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d4c80-2798">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2798">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2799">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2799">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d4c80-2800">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2800">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2801">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2801">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2802">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2802">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2803">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2803">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="d4c80-2804">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2804">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2805">Liczba pierwszy rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2805">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="d4c80-2806">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2806">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2807">Liczba ostatnich rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2807">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2808">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2808">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d4c80-2809">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2809">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d4c80-2810">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2810">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2811">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2811">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d4c80-2812">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2812">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d4c80-2813">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2813">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d4c80-2814">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2814">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d4c80-2815">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2815">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d4c80-2816">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2816">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2817">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2817">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d4c80-2818">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2818">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2819">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2819">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Write : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Write (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2820">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2820">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2821">
            <see langword="Integer" /> Wyrażenia zawierającego Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2821">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d4c80-2822">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2822">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2823">Co najmniej jednego rozdzielonych przecinkami wyrażenia można zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2823">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2824">Zapisuje dane do pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2824">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="d4c80-2825">Dane zapisane z <see langword="Write" /> są zazwyczaj odczytywane z pliku za pomocą <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2825">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2826">`Write` i `WriteLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2826">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2827">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2827">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2828">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2828">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2829">Jeżeli pominięto `Output`, wydrukowaniu pusty wiersz do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2829">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="d4c80-2830">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2830">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="d4c80-2831">W odróżnieniu od `Print` funkcji `Write` funkcji wstawia przecinkami, między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2831">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="d4c80-2832">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2832">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="d4c80-2833">Gdy `Write` służy do zapisywania danych do pliku, tylko liczbowe, `Boolean`, Data, null, i `Error` formatów danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2833">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="d4c80-2834">Następujące założenia uniwersalne są przestrzegane, dzięki czemu dane mogą zawsze odczytać i poprawnie interpretowany przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2834">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="d4c80-2835">Dane liczbowe są zawsze zapisywane używającego kropki jako separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2835">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="d4c80-2836">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2836">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="d4c80-2837">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2837">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="d4c80-2838">Dane daty są zapisywane do pliku przy użyciu formatu daty uniwersalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2838">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="d4c80-2839">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2839">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="d4c80-2840">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2840">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d4c80-2841">Jednak w przypadku danych o wartości null `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2841">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="d4c80-2842">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2842">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="d4c80-2843">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2843">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="d4c80-2844">`WriteLine` Wstawia znak nowego wiersza (czyli kanału informacyjnego powrotu karetki/wiersza lub `Chr(13) + Chr(10)`) po zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2844">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="d4c80-2845">Możesz osadzić znaki cudzysłowu w ciągu za pomocą podwójnego cudzysłowu lub "".</span><span class="sxs-lookup"><span data-stu-id="d4c80-2845">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="d4c80-2846">Na przykład</span><span class="sxs-lookup"><span data-stu-id="d4c80-2846">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="d4c80-2847">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2847">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="d4c80-2848">Zapisywanie do pliku za pomocą `Write` lub `WriteLine` functions wymaga `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2848">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2849">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d4c80-2849">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2850">W tym przykładzie użyto `Write` funkcji do zapisu danych pierwotnych pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2850">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d4c80-2851">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2851">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.WriteLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d4c80-2852">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2852">Required.</span>
          </span>
          <span data-ttu-id="d4c80-2853">
            <see langword="Integer" /> Wyrażenia zawierającego Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2853">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d4c80-2854">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2854">Optional.</span>
          </span>
          <span data-ttu-id="d4c80-2855">Co najmniej jednego rozdzielonych przecinkami wyrażenia można zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2855">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c80-2856">Zapisuje dane do pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2856">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="d4c80-2857">Dane zapisane z <see langword="Write" /> są zazwyczaj odczytywane z pliku za pomocą <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c80-2857">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c80-2858">`Write` i `WriteLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2858">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d4c80-2859">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2859">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d4c80-2860">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d4c80-2860">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d4c80-2861">Jeżeli pominięto `Output`, wydrukowaniu pusty wiersz do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2861">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="d4c80-2862">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2862">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="d4c80-2863">W odróżnieniu od `Print` funkcji `Write` funkcji wstawia przecinkami, między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2863">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="d4c80-2864">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2864">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="d4c80-2865">Gdy `Write` służy do zapisywania danych do pliku, tylko liczbowe, `Boolean`, Data, null, i `Error` formatów danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2865">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="d4c80-2866">Następujące założenia uniwersalne są przestrzegane, dzięki czemu dane mogą zawsze odczytać i poprawnie interpretowany przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="d4c80-2866">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="d4c80-2867">Dane liczbowe są zawsze zapisywane używającego kropki jako separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2867">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="d4c80-2868">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2868">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="d4c80-2869">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2869">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="d4c80-2870">Dane daty są zapisywane do pliku przy użyciu formatu daty uniwersalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2870">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="d4c80-2871">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2871">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="d4c80-2872">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2872">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d4c80-2873">Jednak w przypadku danych o wartości null `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2873">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="d4c80-2874">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2874">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="d4c80-2875">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2875">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="d4c80-2876">`WriteLine` Wstawia znak nowego wiersza (czyli kanału informacyjnego powrotu karetki/wiersza lub `Chr(13) + Chr(10)`) po zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2876">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="d4c80-2877">Możesz osadzić znaki cudzysłowu w ciągu za pomocą podwójnego cudzysłowu lub "".</span><span class="sxs-lookup"><span data-stu-id="d4c80-2877">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="d4c80-2878">Na przykład</span><span class="sxs-lookup"><span data-stu-id="d4c80-2878">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="d4c80-2879">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2879">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="d4c80-2880">Zapisywanie do pliku za pomocą `Write` lub `WriteLine` functions wymaga `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2880">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d4c80-2881">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d4c80-2881">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4c80-2882">W tym przykładzie użyto `Write` funkcji do zapisu danych pierwotnych pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="d4c80-2882">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
  </Members>
</Type>