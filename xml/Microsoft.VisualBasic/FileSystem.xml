<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b7c28a189e7a483388260d8c8ef4d6b7663033e" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42946751" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d136e-101">
        <see langword="FileSystem" /> Modułu zawiera procedury, które są używane do wykonywania operacji pliku, katalogu lub folderu i systemu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d136e-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span>
      </span>
      <span data-ttu-id="d136e-102">
        <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż przy użyciu <see langword="FileSystem" /> modułu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d136e-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span>
      </span>
      <span data-ttu-id="d136e-103">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d136e-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-104">Ten moduł obsługuje słowa kluczowe języka Visual Basic i elementy członkowskie biblioteki wykonawczej, uzyskujących dostęp do plików i folderów.</span><span class="sxs-lookup"><span data-stu-id="d136e-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-105">W tym przykładzie użyto `GetAttr` funkcję, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d136e-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member ChDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="d136e-106">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-106">Required.</span>
          </span>
          <span data-ttu-id="d136e-107">A <see langword="String" /> wyrażenia, który identyfikuje, które katalogu lub folderu staje się nowego domyślnego katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span>
          </span>
          <span data-ttu-id="d136e-108">
            <c>Ścieżka</c> mogą obejmować dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-108">
              <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="d136e-109">Jeśli dysk nie zostanie określony, <see langword="ChDir" /> zmienia domyślnego katalogu lub folderu na bieżącym dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-110">Zmienia bieżącego katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-110">Changes the current directory or folder.</span>
          </span>
          <span data-ttu-id="d136e-111">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="ChDir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span>
          </span>
          <span data-ttu-id="d136e-112">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-113">`ChDir` Funkcji zmienia domyślnego katalogu, ale nie dysk domyślny.</span><span class="sxs-lookup"><span data-stu-id="d136e-113">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="d136e-114">Na przykład jeśli domyślnym dysku C, następująca instrukcja zmienia domyślny katalog na dysku D, ale C pozostaje dysk domyślny:</span><span class="sxs-lookup"><span data-stu-id="d136e-114">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="d136e-115">Można ustawić względne zmiany w katalogu jest przez wpisanie dwóch kropek w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-115">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-116">`ChDir` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d136e-116">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="d136e-117">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i.</span><span class="sxs-lookup"><span data-stu-id="d136e-117">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-118">W tym przykładzie użyto `ChDir` funkcję, aby zmienić bieżącego katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d136e-118">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-119">
            <paramref name="Path" /> jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-119">
              <paramref name="Path" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-120">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-120">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-121">Zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-121">Changes the current drive.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : char -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="d136e-122">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-122">Required.</span>
          </span>
          <span data-ttu-id="d136e-123">Wyrażenie ciągu, który określa istniejącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-123">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="d136e-124">Jeśli podasz ciągiem o zerowej długości (""), nie zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-124">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="d136e-125">Jeśli <c>dysku</c> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-126">Zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-126">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-127">`ChDrive` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d136e-127">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="d136e-128">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d136e-128">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-129">W tym przykładzie użyto `ChDrive` funkcję, aby zmienić bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="d136e-129">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="d136e-130">Funkcja zgłasza wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d136e-130">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-131">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-131">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="d136e-132">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-132">Required.</span>
          </span>
          <span data-ttu-id="d136e-133">Wyrażenie ciągu, który określa istniejącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-133">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="d136e-134">Jeśli podasz ciągiem o zerowej długości (""), nie zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-134">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="d136e-135">Jeśli <c>dysku</c> argument jest ciąg znaków wielu <see langword="ChDrive" /> używa pierwszą literę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-136">Zmienia bieżący dysk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-136">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-137">`ChDrive` Funkcja wymaga, aby kod niezarządzany uprawnienie, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d136e-137">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="d136e-138">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d136e-138">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-139">W tym przykładzie użyto `ChDrive` funkcję, aby zmienić bieżący dysk.</span><span class="sxs-lookup"><span data-stu-id="d136e-139">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="d136e-140">Funkcja zgłasza wyjątek, jeśli dysk nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d136e-140">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-141">Określono nieprawidłowy dysk lub dysk jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-141">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-142">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-142">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="d136e-143">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="d136e-144">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberSignature Language="F#" Value="static member CurDir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d136e-145">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-145">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="d136e-146">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="d136e-147">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-148">Ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-148">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d136e-149">W tym przykładzie użyto `CurDir` funkcja zwraca bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="d136e-149">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberSignature Language="F#" Value="static member CurDir : char -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="d136e-150">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-150">Optional.</span>
          </span>
          <span data-ttu-id="d136e-151">
            <see langword="Char" /> wyrażenie określające istniejącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-151">
              <see langword="Char" /> expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="d136e-152">Jeśli dysk nie zostanie określony, lub jeśli <c>dysku</c> jest ciągiem o zerowej długości (""), <see langword="CurDir" /> zwraca ścieżkę dla bieżącego dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-153">Zwraca ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-153">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="d136e-154">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="d136e-155">Aby uzyskać więcej informacji, zobacz <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-156">Ciąg reprezentujący bieżącą ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-156">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d136e-157">W tym przykładzie użyto `CurDir` funkcja zwraca bieżącą ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="d136e-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-158">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="d136e-159">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="d136e-160">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberSignature Language="F#" Value="static member Dir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d136e-161">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="d136e-162">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="d136e-163">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-164">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-165">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-165">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="d136e-166">`VbVolume` zwraca etykietę woluminu dysku, zamiast nazwy określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-166">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="d136e-167">Należy podać `PathName` przy pierwszym wywołaniu `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-167">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="d136e-168">Aby pobrać następny element, może wykonać kolejne wywołania `Dir` funkcję bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="d136e-168">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-169">By działała poprawnie, `Dir` funkcja wymaga, aby <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="d136e-169">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="d136e-170">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d136e-170">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="d136e-171">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="d136e-171">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="d136e-172">Wartość</span><span class="sxs-lookup"><span data-stu-id="d136e-172">Value</span></span>|<span data-ttu-id="d136e-173">Stała</span><span class="sxs-lookup"><span data-stu-id="d136e-173">Constant</span></span>|<span data-ttu-id="d136e-174">Opis</span><span class="sxs-lookup"><span data-stu-id="d136e-174">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="d136e-175">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="d136e-175">Default.</span></span> <span data-ttu-id="d136e-176">Określa pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-176">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="d136e-177">Określa pliki tylko do odczytu, a także pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-177">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="d136e-178">Określa ukryte pliki i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-178">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="d136e-179">Określa pliki systemowe i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-179">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="d136e-180">Określa etykietę woluminu; Jeśli inne atrybut jest określony, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="d136e-180">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="d136e-181">Określa katalogi lub foldery i pliki bez atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-181">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="d136e-182">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="d136e-182">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="d136e-183">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d136e-183">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d136e-184">Te wyliczenia są określone przez język Visual Basic i mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="d136e-184">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-185">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją określone pliki i katalogi.</span><span class="sxs-lookup"><span data-stu-id="d136e-185">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string Pathname, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Dir(string Pathname, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (Pathname As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (Pathname, Attributes)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" Index="1" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d136e-186">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-186">Optional.</span>
          </span>
          <span data-ttu-id="d136e-187">
            <see langword="String" /> wyrażenie, które określa nazwę pliku, nazwa katalogu lub folderu lub etykiety woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-187">
              <see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span>
          </span>
          <span data-ttu-id="d136e-188">Ciąg o zerowej długości (<see langword="&quot;&quot;" />) jest zwracany, jeśli <c>PathName</c> nie zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span>
          </span>
        </param>
        <param name="Pathname">To be added.</param>
        <param name="Attributes">
          <span data-ttu-id="d136e-189">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-189">Optional.</span>
          </span>
          <span data-ttu-id="d136e-190">Wyrażenie wyliczenia lub liczbowe, którego wartość określa atrybuty pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-190">Enumeration or numeric expression whose value specifies file attributes.</span>
          </span>
          <span data-ttu-id="d136e-191">W przypadku pominięcia <see langword="Dir" /> zwraca pliki dopasowane <c>PathName</c> , ale nie uwzględniając atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-192">Zwraca ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="d136e-193">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="Dir" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="d136e-194">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-195">Ciąg reprezentujący nazwę pliku, katalogu lub folderu odpowiadającego określonemu wzorcowi, atrybutowi pliku lub etykietom woluminu dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-196">`Dir` Funkcja obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-196">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="d136e-197">`VbVolume` zwraca etykietę woluminu dysku, zamiast nazwy określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-197">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="d136e-198">Należy podać `PathName` przy pierwszym wywołaniu `Dir` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-198">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="d136e-199">Aby pobrać następny element, może wykonać kolejne wywołania `Dir` funkcję bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="d136e-199">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-200">By działała poprawnie, `Dir` funkcja wymaga, aby <xref:System.Security.Permissions.FileIOPermissionAccess.Read> i <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="d136e-200">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="d136e-201">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, i [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d136e-201">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="d136e-202">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="d136e-202">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="d136e-203">Wartość</span><span class="sxs-lookup"><span data-stu-id="d136e-203">Value</span></span>|<span data-ttu-id="d136e-204">Stała</span><span class="sxs-lookup"><span data-stu-id="d136e-204">Constant</span></span>|<span data-ttu-id="d136e-205">Opis</span><span class="sxs-lookup"><span data-stu-id="d136e-205">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="d136e-206">Domyślnie.</span><span class="sxs-lookup"><span data-stu-id="d136e-206">Default.</span></span> <span data-ttu-id="d136e-207">Określa pliki, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-207">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="d136e-208">Określa pliki tylko do odczytu, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-208">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="d136e-209">Określa pliki ukryte, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-209">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="d136e-210">Określa pliki systemowe, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-210">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="d136e-211">Określa etykietę woluminu; Jeśli inne atrybut jest określony, `vbVolume` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="d136e-211">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="d136e-212">Określa katalogi lub foldery, oprócz plików, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="d136e-212">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="d136e-213">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="d136e-213">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="d136e-214">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d136e-214">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d136e-215">Te wyliczenia są określone przez język Visual Basic i mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="d136e-215">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-216">W tym przykładzie użyto `Dir` funkcji w celu sprawdzenia, czy istnieją określone pliki i katalogi.</span><span class="sxs-lookup"><span data-stu-id="d136e-216">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member EOF : int -&gt; bool" Usage="Microsoft.VisualBasic.FileSystem.EOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-217">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-217">Required.</span>
          </span>
          <span data-ttu-id="d136e-218">
            <see langword="Integer" /> Zawierający Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-218">An <see langword="Integer" /> that contains any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-219">Zwraca wartość typu Boolean <see langword="True" /> po otwarciu końca pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-220">Zwraca wartość typu Boolean <see langword="True" /> po otwarciu końca pliku dla <see langword="Random" /> lub kolejnych <see langword="Input" /> został osiągnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-221">Użyj `EOF` w celu uniknięcia błędów generowanych podczas próby pobrania danych wejściowych poza końcem pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-221">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="d136e-222">`EOF` Funkcja zwraca `False` dopóki nie zostanie osiągnięty koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-222">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="d136e-223">W przypadku plików otwartych do `Random` lub `Binary` dostęp, `EOF` zwraca `False` dopóki ostatnio wykonana `FileGet` funkcji nie może odczytać całego rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-223">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="d136e-224">W przypadku plików otwartych do `Binary` dostęp do próba odczytania pliku przy użyciu `Input` działać do momentu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-224">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="d136e-225">Użyj `LOF` i `Loc` funkcji zamiast `EOF` podczas odczytywania plików binarnych z `Input`, lub użyj `Get` przy użyciu `EOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-225">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="d136e-226">W przypadku plików otwartych do `Output`, `EOF` zawsze zwraca `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-226">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-227">W tym przykładzie użyto `EOF` funkcję, aby wykrywać koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-227">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="d136e-228">W tym przykładzie założono, że `Testfile` to plik tekstowy, który zawiera kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d136e-228">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-229">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-229">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member FileAttr : int -&gt; Microsoft.VisualBasic.OpenMode" Usage="Microsoft.VisualBasic.FileSystem.FileAttr FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-230">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-230">Required.</span>
          </span>
          <span data-ttu-id="d136e-231">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-231">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="d136e-232">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-232">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-233">Zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-234">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="FileAttr" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span>
          </span>
          <span data-ttu-id="d136e-235">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-236">Następujące wartości wyliczenia wskazują tryb dostępu do pliku:</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-236">The following enumeration values indicate the file access mode:</span>
          </span>
          <span data-ttu-id="d136e-237">
            <list type="table">
              <item>
                <term> Wartość </term>
                <description> tryb </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <see langword="OpenMode.Input" />
                </description>
              </item>
              <item>
                <term> 2 </term>
                <description>
                  <see langword="OpenMode.Output" />
                </description>
              </item>
              <item>
                <term> 4 </term>
                <description>
                  <see langword="OpenMode.Random" />
                </description>
              </item>
              <item>
                <term> 8  </term>
                <description>
                  <see langword="OpenMode.Append" />
                </description>
              </item>
              <item>
                <term> 32  </term>
                <description>
                  <see langword="OpenMode.Binary" />
                </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-237">
              <list type="table">
                <item>
                  <term> Value  </term>
                  <description> Mode  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <see langword="OpenMode.Input" />
                  </description>
                </item>
                <item>
                  <term> 2  </term>
                  <description>
                    <see langword="OpenMode.Output" />
                  </description>
                </item>
                <item>
                  <term> 4  </term>
                  <description>
                    <see langword="OpenMode.Random" />
                  </description>
                </item>
                <item>
                  <term> 8  </term>
                  <description>
                    <see langword="OpenMode.Append" />
                  </description>
                </item>
                <item>
                  <term> 32  </term>
                  <description>
                    <see langword="OpenMode.Binary" />
                  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-238">Ta funkcja zwraca wyliczenie reprezentującą tryb otwierania plików za pomocą `FileOpen` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-238">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-239">W tym przykładzie użyto `FileAttr` funkcja zwraca tryb pliku otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-239">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberSignature Language="F#" Value="static member FileClose : int[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileClose FileNumbers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers">
          <span data-ttu-id="d136e-240">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-240">Optional.</span>
          </span>
          <span data-ttu-id="d136e-241">Tablica parametrów 0 lub więcej kanałów zostanie zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-241">Parameter array of 0 or more channels to be closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-242">Zawiera wejścia/wyjścia (We/Wy) do pliku, który został otwarty przy użyciu <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-242">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-243">
            <see langword="My" /> zapewnia lepszą szybkość i wydajność operacji We/Wy na plikach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-243">
              <see langword="My" /> gives you better productivity and performance in file I/O operations.</span>
          </span>
          <span data-ttu-id="d136e-244">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-244">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-245">`FileClose` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-245">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-246">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-246">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-247">Aby uzyskać więcej informacji, zobacz [porady: Odczyt tekstu z plików za pomocą StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[jak: pisanie tekstu do plików za pomocą StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), i [wskazówki: manipulowanie plikami i katalogami w Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-247">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="d136e-248">Jeżeli pominięto `FileNumbers`, wszystkie aktywne pliki otwierane przez `FileOpen` funkcji są zamknięte.</span><span class="sxs-lookup"><span data-stu-id="d136e-248">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="d136e-249">Podczas zamykania plików, które zostały otwarte dla `Output` lub `Append`, końcowego bufor wyjściowy jest zapisywany w buforze systemu operacyjnego dla tego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-249">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="d136e-250">Wszystkie ilość miejsca w buforze skojarzone z zamkniętej zwolnienia pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-250">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="d136e-251">Gdy `FileClose` funkcja jest wykonywana, skojarzenia plików za pomocą jego pliku numer kończy się.</span><span class="sxs-lookup"><span data-stu-id="d136e-251">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-252">W tym przykładzie użyto `FileClose` funkcję, aby zamknąć plik otwarty `Input`.</span><span class="sxs-lookup"><span data-stu-id="d136e-252">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-253">
            <paramref name="FileNumber" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-253">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberSignature Language="F#" Value="static member FileCopy : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileCopy (Source, Destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="d136e-254">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-254">Required.</span>
          </span>
          <span data-ttu-id="d136e-255">
            <see langword="String" /> wyrażenie, który określa nazwę pliku, który ma być skopiowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-255">
              <see langword="String" /> expression that specifies the name of the file to be copied.</span>
          </span>
          <span data-ttu-id="d136e-256">
            <c>Źródło</c> może zawierać katalogu lub folderu i dysk z plikiem źródłowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-256">
              <c>Source</c> may include the directory or folder, and drive, of the source file.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="d136e-257">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-257">Required.</span>
          </span>
          <span data-ttu-id="d136e-258">
            <see langword="String" /> wyrażenie, który określa nazwę pliku docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-258">
              <see langword="String" /> expression that specifies the destination file name.</span>
          </span>
          <span data-ttu-id="d136e-259">
            <c>Miejsce docelowe</c> może zawierać katalogu lub folderu i dysk pliku docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-259">
              <c>Destination</c> may include the directory or folder, and drive, of the destination file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-260">Kopiuje plik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-260">Copies a file.</span>
          </span>
          <span data-ttu-id="d136e-261">
            <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> Zapewnia lepszą szybkość i wydajność operacji We/Wy pliku niż <see langword="FileCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-261">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span>
          </span>
          <span data-ttu-id="d136e-262">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-262">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-263">Jeśli spróbujesz użyć `FileCopy` działać na aktualnie otwartego pliku, wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-263">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="d136e-264">`FileCopy` wymaga pełnego zaufania do pracy na dysku lokalnym.</span><span class="sxs-lookup"><span data-stu-id="d136e-264">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-265">W tym przykładzie użyto `FileCopy` funkcji do kopiowania plików do innego.</span><span class="sxs-lookup"><span data-stu-id="d136e-265">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="d136e-266">Dla celów tego przykładu załóżmy, że `SrcFile` jest plikiem, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-266">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-267">
            <paramref name="Source" /> lub <paramref name="Destination" /> jest nieprawidłowy lub nieokreślony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-267">
              <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-268">Plik jest już otwarty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-268">File is already open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-269">Plik nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-269">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileDateTime : string -&gt; DateTime" Usage="Microsoft.VisualBasic.FileSystem.FileDateTime PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d136e-270">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-270">Required.</span>
          </span>
          <span data-ttu-id="d136e-271">
            <see langword="String" /> wyrażenie, które określa nazwę pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-271">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="d136e-272">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-272">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-273">Zwraca <see langword="Date" /> wartość, która wskazuje datę i godzinę, plik został zapisany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-273">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span>
          </span>
          <span data-ttu-id="d136e-274">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-274">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span>
          </span>
          <span data-ttu-id="d136e-275">Aby uzyskać więcej informacji zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-275">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-276">
            <see langword="Date" /> wartość, która wskazuje, daty i godziny pliku utworzenia lub ostatniej modyfikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-276">
              <see langword="Date" /> value that indicates the date and time a file was created or last modified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d136e-277">W tym przykładzie użyto `FileDateTime` funkcję, aby określić datę i godzinę plik został utworzony lub Data ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-277">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="d136e-278">Format daty i godziny widocznej zależy od ustawień regionalnych systemu.</span><span class="sxs-lookup"><span data-stu-id="d136e-278">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-279">
            <paramref name="PathName" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-279">
              <paramref name="PathName" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-280">Plik docelowy nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-280">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-281">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-281">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-282">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-282">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-283">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-283">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-284">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-284">Required.</span>
          </span>
          <span data-ttu-id="d136e-285">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-285">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-286">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-286">Required.</span>
          </span>
          <span data-ttu-id="d136e-287">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-287">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-288">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-288">Optional.</span>
          </span>
          <span data-ttu-id="d136e-289">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-289">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-290">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-290">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-291">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-291">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-292">Aby uzyskać więcej informacji zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-292">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-293">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-293">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-294">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-294">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-295">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-295">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-296">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-296">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-297">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-297">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-298">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-298">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-299">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-299">Random Mode</span></span>  
 <span data-ttu-id="d136e-300">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-300">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-301">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-301">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-302">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-302">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-303">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-303">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-304">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-304">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-305">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-305">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-306">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-306">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-307">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-307">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-308">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-308">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-309">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-309">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-310">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-310">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-311">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-311">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-312">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-312">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-313">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-313">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-314">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-314">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-315">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-315">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-316">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-316">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-317">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-317">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-318">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-318">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-319">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-319">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-320">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-320">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-321">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-321">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-322">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-322">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-323">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-323">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-324">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-324">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-325">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-325">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-326">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-326">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-327">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-327">Binary Mode</span></span>  
 <span data-ttu-id="d136e-328">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-328">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-329">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-329">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-330">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-330">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-331">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-331">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-332">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-332">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-333">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-333">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-334">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-334">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-335">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-335">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-336">Podczas odczytu z pliku za pomocą`FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-336">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-337">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-337">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-338">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-338">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-339">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-339">Required.</span>
          </span>
          <span data-ttu-id="d136e-340">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-340">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-341">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-341">Required.</span>
          </span>
          <span data-ttu-id="d136e-342">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-342">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-343">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-343">Optional.</span>
          </span>
          <span data-ttu-id="d136e-344">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-344">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-345">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-345">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-346">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-346">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-347">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-347">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-348">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-348">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-349">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-349">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-350">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-350">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-351">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-351">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-352">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-352">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-353">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-353">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-354">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-354">Random Mode</span></span>  
 <span data-ttu-id="d136e-355">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-355">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-356">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-356">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-357">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-357">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-358">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-358">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-359">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-359">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-360">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-360">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-361">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-361">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-362">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-362">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-363">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-363">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-364">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-364">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-365">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-365">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-366">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-366">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-367">Jeżeli nie zastosowano deskryptora.</span><span class="sxs-lookup"><span data-stu-id="d136e-367">If the descriptor is not used.</span></span> <span data-ttu-id="d136e-368">Rozmiar i granice tablicy przekazane do, a następnie `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-368">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-369">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-369">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-370">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-370">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-371">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-371">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-372">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-372">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-373">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-373">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-374">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-374">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-375">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-375">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-376">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-376">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-377">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-377">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-378">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-378">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-379">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-379">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-380">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-380">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-381">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-381">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-382">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-382">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-383">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-383">Binary Mode</span></span>  
 <span data-ttu-id="d136e-384">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-384">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-385">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-385">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-386">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-386">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-387">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-387">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-388">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-388">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-389">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-389">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-390">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-390">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-391">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-391">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-392">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-392">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-393">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-393">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-394">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-394">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-395">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-395">Required.</span>
          </span>
          <span data-ttu-id="d136e-396">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-396">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-397">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-397">Required.</span>
          </span>
          <span data-ttu-id="d136e-398">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-398">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-399">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-399">Optional.</span>
          </span>
          <span data-ttu-id="d136e-400">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-400">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-401">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-401">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-402">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-402">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-403">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-403">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-404">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-404">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-405">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-405">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-406">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-406">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-407">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-407">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-408">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-408">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-409">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-409">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-410">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-410">Random Mode</span></span>  
 <span data-ttu-id="d136e-411">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-411">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-412">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-412">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-413">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-413">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-414">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-414">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-415">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-415">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-416">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-416">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-417">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-417">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-418">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-418">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-419">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-419">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-420">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-420">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-421">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-421">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-422">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-422">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-423">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-423">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-424">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-424">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-425">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-425">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-426">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-426">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-427">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-427">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-428">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-428">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-429">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-429">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-430">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-430">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-431">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-431">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-432">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-432">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-433">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-433">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-434">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-434">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-435">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-435">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-436">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-436">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-437">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-437">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-438">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-438">Binary Mode</span></span>  
 <span data-ttu-id="d136e-439">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-439">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-440">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-440">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-441">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-441">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-442">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-442">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-443">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-443">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-444">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-444">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-445">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-445">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-446">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-446">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-447">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-447">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-448">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-448">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-449">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-449">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-450">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-450">Required.</span>
          </span>
          <span data-ttu-id="d136e-451">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-451">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-452">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-452">Required.</span>
          </span>
          <span data-ttu-id="d136e-453">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-453">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-454">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-454">Optional.</span>
          </span>
          <span data-ttu-id="d136e-455">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-455">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-456">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-456">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-457">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-457">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-458">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-458">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-459">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-459">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-460">Dane odczytane z `FileGet` są zwykle zapisywane w pliku z `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-460">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-461">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-461">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-462">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-462">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-463">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-463">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-464">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-464">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-465">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-465">Random Mode</span></span>  
 <span data-ttu-id="d136e-466">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-466">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-467">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji`FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-467">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-468">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-468">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-469">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-469">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-470">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-470">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-471">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-471">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-472">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-472">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-473">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-473">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-474">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-474">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-475">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-475">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-476">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-476">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-477">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-477">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-478">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-478">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-479">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-479">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-480">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-480">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-481">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-481">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-482">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-482">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-483">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-483">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-484">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-484">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-485">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-485">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-486">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-486">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-487">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-487">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-488">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-488">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-489">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-489">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-490">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-490">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-491">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-491">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-492">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-492">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-493">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-493">Binary Mode</span></span>  
 <span data-ttu-id="d136e-494">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-494">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-495">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-495">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-496">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-496">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-497">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-497">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-498">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-498">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-499">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-499">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-500">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-500">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-501">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-501">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-502">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-502">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-503">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-503">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-504">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-504">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-505">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-505">Required.</span>
          </span>
          <span data-ttu-id="d136e-506">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-506">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-507">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-507">Required.</span>
          </span>
          <span data-ttu-id="d136e-508">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-508">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-509">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-509">Optional.</span>
          </span>
          <span data-ttu-id="d136e-510">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-510">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-511">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-511">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-512">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-512">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-513">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-513">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-514">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-514">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-515">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-515">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-516">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-516">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-517">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-517">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-518">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-518">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-519">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-519">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-520">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-520">Random Mode</span></span>  
 <span data-ttu-id="d136e-521">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-521">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-522">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-522">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-523">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-523">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-524">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-524">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-525">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-525">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-526">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-526">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-527">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-527">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-528">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-528">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-529">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-529">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-530">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-530">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-531">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-531">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-532">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-532">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-533">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-533">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-534">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-534">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-535">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-535">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-536">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-536">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-537">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-537">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-538">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-538">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-539">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-539">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-540">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-540">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-541">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-541">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-542">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-542">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-543">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-543">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-544">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-544">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-545">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-545">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-546">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-546">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-547">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-547">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-548">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-548">Binary Mode</span></span>  
 <span data-ttu-id="d136e-549">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-549">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-550">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-550">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-551">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-551">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-552">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-552">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-553">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-553">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-554">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-554">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-555">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-555">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-556">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-556">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-557">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-557">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-558">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-558">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-559">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-559">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-560">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-560">Required.</span>
          </span>
          <span data-ttu-id="d136e-561">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-561">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-562">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-562">Required.</span>
          </span>
          <span data-ttu-id="d136e-563">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-563">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-564">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-564">Optional.</span>
          </span>
          <span data-ttu-id="d136e-565">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-565">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-566">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-566">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-567">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-567">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-568">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-568">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-569">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-569">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-570">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-570">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-571">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-571">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-572">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-572">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-573">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-573">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-574">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-574">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-575">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-575">Random Mode</span></span>  
 <span data-ttu-id="d136e-576">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-576">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-577">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-577">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-578">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-578">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-579">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-579">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-580">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-580">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-581">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-581">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-582">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-582">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-583">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-583">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-584">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-584">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-585">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-585">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-586">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-586">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-587">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-587">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-588">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-588">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-589">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-589">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-590">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-590">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-591">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-591">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-592">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-592">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-593">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-593">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-594">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-594">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-595">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-595">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-596">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-596">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-597">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-597">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-598">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-598">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-599">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-599">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-600">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-600">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-601">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-601">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-602">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-602">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-603">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-603">Binary Mode</span></span>  
 <span data-ttu-id="d136e-604">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-604">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-605">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-605">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-606">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-606">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-607">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-607">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-608">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-608">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-609">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-609">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-610">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-610">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-611">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-611">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-612">Podczas odczytu z pliku za pomocą`FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-612">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-613">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-613">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-614">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-614">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-615">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-615">Required.</span>
          </span>
          <span data-ttu-id="d136e-616">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-616">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-617">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-617">Required.</span>
          </span>
          <span data-ttu-id="d136e-618">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-618">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-619">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-619">Optional.</span>
          </span>
          <span data-ttu-id="d136e-620">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-620">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-621">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-621">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-622">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-622">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-623">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-623">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-624">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-624">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-625">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-625">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-626">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-626">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-627">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-627">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-628">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-628">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-629">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-629">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-630">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-630">Random Mode</span></span>  
 <span data-ttu-id="d136e-631">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-631">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-632">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-632">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-633">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-633">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-634">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-634">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-635">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-635">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-636">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-636">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-637">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-637">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-638">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-638">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-639">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-639">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-640">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-640">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-641">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-641">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-642">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-642">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-643">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-643">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-644">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-644">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-645">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-645">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-646">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-646">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-647">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-647">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-648">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-648">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-649">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-649">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-650">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-650">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-651">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-651">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-652">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-652">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-653">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-653">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-654">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-654">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-655">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-655">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-656">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-656">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-657">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-657">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-658">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-658">Binary Mode</span></span>  
 <span data-ttu-id="d136e-659">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-659">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-660">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-660">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-661">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-661">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-662">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-662">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-663">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-663">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-664">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-664">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-665">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-665">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-666">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-666">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-667">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-667">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-668">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-668">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-669">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-669">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-670">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-670">Required.</span>
          </span>
          <span data-ttu-id="d136e-671">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-671">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-672">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-672">Required.</span>
          </span>
          <span data-ttu-id="d136e-673">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-673">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-674">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-674">Optional.</span>
          </span>
          <span data-ttu-id="d136e-675">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-675">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-676">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-676">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-677">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-677">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-678">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-678">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-679">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-679">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-680">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-680">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-681">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-681">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-682">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-682">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-683">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-683">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-684">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-684">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-685">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-685">Random Mode</span></span>  
 <span data-ttu-id="d136e-686">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-686">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-687">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-687">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-688">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-688">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-689">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-689">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-690">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-690">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-691">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-691">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-692">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-692">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-693">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-693">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-694">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-694">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-695">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-695">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-696">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-696">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-697">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-697">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-698">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-698">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-699">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-699">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-700">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-700">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-701">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-701">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-702">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-702">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-703">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-703">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-704">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-704">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-705">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-705">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-706">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-706">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-707">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-707">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-708">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-708">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-709">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-709">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-710">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-710">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-711">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-711">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-712">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-712">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-713">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-713">Binary Mode</span></span>  
 <span data-ttu-id="d136e-714">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-714">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-715">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-715">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-716">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-716">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-717">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-717">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-718">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-718">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-719">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-719">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-720">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-720">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-721">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-721">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-722">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-722">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-723">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-723">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-724">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-724">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-725">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-725">Required.</span>
          </span>
          <span data-ttu-id="d136e-726">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-726">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-727">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-727">Required.</span>
          </span>
          <span data-ttu-id="d136e-728">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-728">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-729">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-729">Optional.</span>
          </span>
          <span data-ttu-id="d136e-730">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-730">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-731">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-731">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-732">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-732">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-733">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-733">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-734">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-734">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-735">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-735">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-736">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-736">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-737">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-737">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-738">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-738">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-739">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-739">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-740">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-740">Random Mode</span></span>  
 <span data-ttu-id="d136e-741">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-741">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-742">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-742">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-743">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-743">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-744">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-744">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-745">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-745">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-746">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-746">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-747">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-747">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-748">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-748">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-749">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-749">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-750">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-750">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-751">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-751">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-752">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-752">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-753">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-753">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-754">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-754">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-755">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-755">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-756">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-756">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-757">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-757">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-758">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-758">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-759">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-759">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-760">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-760">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-761">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-761">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-762">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-762">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-763">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-763">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-764">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-764">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-765">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-765">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-766">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-766">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-767">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-767">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-768">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-768">Binary Mode</span></span>  
 <span data-ttu-id="d136e-769">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-769">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-770">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-770">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-771">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-771">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-772">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-772">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-773">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-773">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-774">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-774">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-775">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-775">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-776">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-776">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-777">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-777">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-778">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-778">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-779">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-779">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-780">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-780">Required.</span>
          </span>
          <span data-ttu-id="d136e-781">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-781">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-782">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-782">Required.</span>
          </span>
          <span data-ttu-id="d136e-783">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-783">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-784">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-784">Optional.</span>
          </span>
          <span data-ttu-id="d136e-785">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-785">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-786">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-786">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-787">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-787">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-788">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-788">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-789">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-789">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-790">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-790">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-791">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-791">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-792">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-792">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-793">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-793">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-794">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-794">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-795">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-795">Random Mode</span></span>  
 <span data-ttu-id="d136e-796">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-796">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-797">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-797">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-798">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-798">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-799">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-799">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-800">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-800">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-801">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-801">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-802">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-802">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-803">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-803">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-804">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-804">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-805">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-805">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-806">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-806">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-807">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-807">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-808">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-808">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-809">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-809">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-810">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-810">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-811">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-811">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-812">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-812">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-813">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-813">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-814">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-814">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-815">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-815">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-816">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-816">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-817">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-817">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-818">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-818">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-819">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-819">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-820">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-820">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-821">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-821">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-822">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-822">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-823">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-823">Binary Mode</span></span>  
 <span data-ttu-id="d136e-824">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-824">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-825">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-825">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-826">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-826">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-827">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-827">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-828">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-828">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-829">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-829">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-830">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-830">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-831">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-831">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-832">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-832">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-833">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-833">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-834">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-834">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-835">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-835">Required.</span>
          </span>
          <span data-ttu-id="d136e-836">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-836">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-837">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-837">Required.</span>
          </span>
          <span data-ttu-id="d136e-838">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-838">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-839">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-839">Optional.</span>
          </span>
          <span data-ttu-id="d136e-840">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-840">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-841">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-841">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-842">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-842">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-843">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-843">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-844">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-844">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-845">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-845">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-846">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-846">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-847">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-847">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-848">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-848">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-849">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-849">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-850">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-850">Random Mode</span></span>  
 <span data-ttu-id="d136e-851">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-851">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-852">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-852">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-853">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-853">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-854">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-854">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-855">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-855">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-856">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-856">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-857">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-857">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-858">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-858">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-859">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-859">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-860">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-860">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-861">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-861">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-862">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-862">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-863">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-863">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-864">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-864">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-865">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-865">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-866">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-866">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-867">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-867">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-868">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-868">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-869">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-869">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-870">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-870">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-871">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-871">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-872">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-872">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-873">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-873">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-874">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-874">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-875">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-875">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-876">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-876">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-877">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-877">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-878">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-878">Binary Mode</span></span>  
 <span data-ttu-id="d136e-879">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-879">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-880">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-880">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-881">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-881">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-882">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-882">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-883">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-883">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-884">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-884">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-885">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-885">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-886">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-886">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-887">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-887">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-888">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-888">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-889">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-889">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-890">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-890">Required.</span>
          </span>
          <span data-ttu-id="d136e-891">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-891">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-892">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-892">Required.</span>
          </span>
          <span data-ttu-id="d136e-893">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-893">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-894">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-894">Optional.</span>
          </span>
          <span data-ttu-id="d136e-895">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-895">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d136e-896">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-896">Optional.</span>
          </span>
          <span data-ttu-id="d136e-897">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-897">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d136e-898">Określa, czy należy napisać deskryptor dwubajtowy, który ma być ciąg, który opisuje długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-898">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="d136e-899">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-899">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-900">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-900">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-901">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-901">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-902">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-902">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-903">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-903">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-904">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-904">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-905">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-905">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-906">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-906">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-907">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-907">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-908">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-908">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-909">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-909">Random Mode</span></span>  
 <span data-ttu-id="d136e-910">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-910">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-911">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-911">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-912">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-912">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-913">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-913">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-914">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-914">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-915">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-915">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-916">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-916">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-917">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-917">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-918">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-918">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-919">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-919">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-920">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-920">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-921">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-921">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-922">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-922">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-923">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-923">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-924">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-924">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-925">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-925">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-926">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-926">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-927">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-927">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-928">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-928">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-929">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-929">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-930">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-930">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-931">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-931">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-932">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-932">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-933">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-933">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-934">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-934">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-935">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-935">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-936">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-936">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-937">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-937">Binary Mode</span></span>  
 <span data-ttu-id="d136e-938">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-938">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-939">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-939">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-940">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-940">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-941">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-941">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-942">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-942">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-943">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-943">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-944">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-944">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-945">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-945">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-946">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-946">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-947">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-947">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-948">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-948">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-949">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-949">Required.</span>
          </span>
          <span data-ttu-id="d136e-950">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-950">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-951">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-951">Required.</span>
          </span>
          <span data-ttu-id="d136e-952">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-952">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-953">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-953">Optional.</span>
          </span>
          <span data-ttu-id="d136e-954">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-954">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="d136e-955">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-955">Optional.</span>
          </span>
          <span data-ttu-id="d136e-956">Ma zastosowanie tylko wtedy, gdy pisania tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-956">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="d136e-957">Określa, czy tablica jest traktowane jako dynamiczne i czy konieczne jest deskryptora tablicy opisujących rozmiar i granice tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-957">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d136e-958">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-958">Optional.</span>
          </span>
          <span data-ttu-id="d136e-959">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-959">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d136e-960">Określa, czy należy napisać deskryptor dwubajtowy, który ma być ciąg, który opisuje długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-960">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="d136e-961">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-961">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-962">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-962">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-963">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-963">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="d136e-964">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-964">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-965">`FileGet` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-965">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-966">Dane odczytane z `FileGet` są zwykle zapisywane w pliku przy użyciu `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-966">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="d136e-967">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-967">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-968">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji) jest do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-968">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-969">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-969">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-970">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-970">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-971">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-971">Random Mode</span></span>  
 <span data-ttu-id="d136e-972">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-972">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-973">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGet` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-973">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-974">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest dopełniana istniejącą zawartość buforu pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-974">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-975">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-975">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-976">Domyślnie, jeśli zmienna wczytywana jest ciągiem `FileGet` odczytuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-976">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-977">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-977">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-978">Program Visual Basic 6.0 i jego starsze wersje obsługują ciągi o stałej długości; przy wprowadzaniu do pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-978">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-979">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-979">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-980">Jeśli wczytywana zmienna jest tablicą, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-980">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="d136e-981">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-981">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-982">Podczas odczytywania tablicy należy dopasować sposób zapisu tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-982">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="d136e-983">Jeśli został on zapisany z deskryptorem, należy odczytać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-983">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="d136e-984">Jeżeli nie zastosowano deskryptora, rozmiar i granice tablicy przekazane do `FileGet` ustalić, co należy odczytać.</span><span class="sxs-lookup"><span data-stu-id="d136e-984">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="d136e-985">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-985">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-986">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-986">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-987">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-987">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-988">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-988">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="d136e-989">218 bajtów zostało rozdzielonych w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d136e-989">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="d136e-990">18 bajtów w przypadku deskryptora: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="d136e-990">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="d136e-991">200 bajtów w przypadku danych: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-991">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="d136e-992">Jeśli wczytywana zmienna wczytywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FileGet` odczytuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-992">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="d136e-993">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych odczytywanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-993">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-994">`FileGet` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-994">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-995">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePut`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-995">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-996">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="d136e-996">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="d136e-997">Obejmuje to wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-997">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-998">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-998">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-999">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-999">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1000">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1000">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1001">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1001">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1002">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1002">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1003">`FileGet` odczytuje wszystkie zmienne z dysku w sposób ciągły; oznacza to bez dopełnienia między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1003">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1004">Dla tablicy innej niż tablica w strukturze `FileGet` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1004">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="d136e-1005">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1005">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="d136e-1006">`FileGet` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1006">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1007">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1007">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d136e-1008">Podczas odczytu z pliku za pomocą `FileGet` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1008">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1009">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1009">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1010">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1010">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGetObject : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGetObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1011">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1011">Required.</span>
          </span>
          <span data-ttu-id="d136e-1012">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1012">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1013">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1013">Required.</span>
          </span>
          <span data-ttu-id="d136e-1014">Prawidłowa nazwa zmiennej, do której wczytywane są dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1014">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1015">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1015">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1016">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się odczytywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1016">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1017">Wczytuje dane z otwartego pliku dysku do zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1017">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="d136e-1018">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileGetObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1018">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span>
          </span>
          <span data-ttu-id="d136e-1019">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1019">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1020">`FileGetObject` Funkcja jest używana zamiast `FileGet` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` zwracany zamiast innego typu, takie jak `Integer`, `Long`, `Short`, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1020">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="d136e-1021">Jeśli zamierzasz zapisać `Variant` typu `FileGetObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1021">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="d136e-1022">W razie wątpliwości, jeśli używasz obiektu jako drugi parametr, zawsze zaleca się używanie `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1022">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="d136e-1023">`FileGetObject` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1023">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1024">Dane odczytane z `FileGetObject` są zwykle zapisywane z `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1024">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="d136e-1025">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1025">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1026">Jeżeli pominięto `RecordNumber`, `FileGetObject` odczytuje rekord lub bajt po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (albo wskazywany przez ostatnią `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="d136e-1026">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1027">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1027">Random Mode</span></span>  
 <span data-ttu-id="d136e-1028">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1028">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1029">Jeśli długość odczytywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FileGetObject` odczytuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1029">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1030">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest dopełniana istniejącą zawartość buforu pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1030">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1031">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to dobry pomysł, aby mieć długość rekordu jest zgodna z długością odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1031">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="d136e-1032">Jeżeli zmienna wczytywana jest ciągiem, domyślnie `FileGetObject` odczytuje dwubajtowy deskryptor, zawierająca długość ciągu, a następnie odczytuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1032">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1033">W związku z tym, długość rekordu określana przez `RecordLength` klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1033">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1034">Visual Basic 6.0 i starsze wersje obsługują ciągi o stałej długości i podczas odczytu pliku, deskryptor długości nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1034">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="d136e-1035">Jeśli chcesz odczytać ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1035">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1036">Jeśli wczytywana zmienna jest tablicą, długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1036">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1037">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1037">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1038">Jego długość jest równa 2 plus 8 razy liczba wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="d136e-1038">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="d136e-1039">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, gdy tablica jest zapisywany na dysku:</span><span class="sxs-lookup"><span data-stu-id="d136e-1039">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="d136e-1040">218 bajtów są rozpowszechniane w następujący sposób: 18 bajtów w przypadku deskryptora (2 + 8 \* 2), a 100 bajtów danych (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="d136e-1040">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="d136e-1041">`FileGetObject` odczytuje elementy struktury tak, jakby każdy był odczytywany indywidualnie, z tą różnicą, że nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1041">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="d136e-1042">Na dysku tablica dynamiczna w typ zdefiniowany przez użytkownika (napisany z uwzględnieniem `FilePutObject`) jest poprzedzana deskryptorem, którego długość jest równa 2 plus 8 razy liczba wymiarów: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="d136e-1042">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="d136e-1043">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do odczytania pojedynczych elementów, w tym wszystkie tablice i ich deskryptory.</span><span class="sxs-lookup"><span data-stu-id="d136e-1043">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="d136e-1044"><xref:Microsoft.VisualBasic.VBFixedStringAttribute> Klasy mogą być stosowane do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1044">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1045">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1045">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1046">Do plików otwieranych w `Binary` trybie wszystkie `Random` reguły mają zastosowanie, z uwzględnieniem poniższych wyjątków:</span><span class="sxs-lookup"><span data-stu-id="d136e-1046">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="d136e-1047">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1047">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1048">`FileGetObject` odczytuje wszystkie zmienne z dysku w sposób ciągły, oznacza to, za pomocą żadnych uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1048">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1049">Dla tablicy innej niż tablica w strukturze `FileGetObject` odczytuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1049">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="d136e-1050">Deskryptor nie jest odczytywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1050">No descriptor is read.</span></span>  
  
 <span data-ttu-id="d136e-1051">`FileGetObject` odczytuje ciągi o zmiennej długości, które nie są elementami struktury, bez uwzględnienia deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1051">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1052">Liczba bajtów odczytanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1052">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-1053">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1053">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-1054">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-1054">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1055">Poniższy przykład odczytuje rekordu w pliku testu i następnie pobiera go.</span><span class="sxs-lookup"><span data-stu-id="d136e-1055">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileLen : string -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.FileLen PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d136e-1056">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1056">Required.</span>
          </span>
          <span data-ttu-id="d136e-1057">
            <see langword="String" /> wyrażenie, które określa plik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1057">
              <see langword="String" /> expression that specifies a file.</span>
          </span>
          <span data-ttu-id="d136e-1058">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1058">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1059">Zwraca <see langword="Long" /> wartość, która określa długość pliku w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1059">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
          <span data-ttu-id="d136e-1060">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileLen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1060">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span>
          </span>
          <span data-ttu-id="d136e-1061">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1061">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-1062">
            <see langword="Long" /> Wartość określająca długość pliku w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1062">
              <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1063">Jeśli określony plik jest otwarty, kiedy `FileLen` funkcja jest wywoływana, wartość zwracana reprezentuje rozmiar pliku w czasie ostatniego otwarcia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1063">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-1064">Aby uzyskać bieżącą długość otwartego pliku, użyj `LOF` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-1064">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1065">W tym przykładzie użyto `FileLen` funkcja zwraca długość pliku w bajtach.</span><span class="sxs-lookup"><span data-stu-id="d136e-1065">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="d136e-1066">Dla celów tego przykładu załóżmy, że `TestFile` jest plik, który zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1066">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-1067">Plik nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1067">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberSignature Language="F#" Value="static member FileOpen : int * string * Microsoft.VisualBasic.OpenMode * Microsoft.VisualBasic.OpenAccess * Microsoft.VisualBasic.OpenShare * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileOpen (FileNumber, FileName, Mode, Access, Share, RecordLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1068">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1068">Required.</span>
          </span>
          <span data-ttu-id="d136e-1069">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1069">Any valid file number.</span>
          </span>
          <span data-ttu-id="d136e-1070">Użyj <see langword="FreeFile" /> funkcję, aby uzyskać najbliższej liczby plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1070">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span>
          </span>
        </param>
        <param name="FileName">
          <span data-ttu-id="d136e-1071">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1071">Required.</span>
          </span>
          <span data-ttu-id="d136e-1072">
            <see langword="String" /> wyrażenie, które określa nazwę pliku — może obejmować katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1072">
              <see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Mode">
          <span data-ttu-id="d136e-1073">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1073">Required.</span>
          </span>
          <span data-ttu-id="d136e-1074">Wyliczenie opisujące tryb pliku: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, lub <see langword="Random" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1074">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span>
          </span>
          <span data-ttu-id="d136e-1075">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1075">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          </span>
        </param>
        <param name="Access">
          <span data-ttu-id="d136e-1076">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1076">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1077">Wyliczenie opisujące operacje dozwolona dla otwartego pliku: <see langword="Read" />, <see langword="Write" />, lub <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1077">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="d136e-1078">Wartość domyślna to <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1078">Defaults to <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="d136e-1079">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1079">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          </span>
        </param>
        <param name="Share">
          <span data-ttu-id="d136e-1080">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1080">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1081">Wyliczenie opisujące operacje jest niedozwolony otwartego pliku przez inne procesy: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, i <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1081">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="d136e-1082">Wartość domyślna to <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1082">Defaults to <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="d136e-1083">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1083">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          </span>
        </param>
        <param name="RecordLength">
          <span data-ttu-id="d136e-1084">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1084">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1085">Liczbę mniejszą lub równą 32 767 znaków (w bajtach).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1085">Number less than or equal to 32,767 (bytes).</span>
          </span>
          <span data-ttu-id="d136e-1086">Dla plików otwartych do dostępu losowego ta wartość jest długość rekordu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1086">For files opened for random access, this value is the record length.</span>
          </span>
          <span data-ttu-id="d136e-1087">Dla kolejnych plików ta wartość jest liczbą znaków buforowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1087">For sequential files, this value is the number of characters buffered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1088">Otwiera plik dla danych wejściowych lub wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1088">Opens a file for input or output.</span>
          </span>
          <span data-ttu-id="d136e-1089">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1089">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span>
          </span>
          <span data-ttu-id="d136e-1090">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1090">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1091">`FileOpen` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-1091">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-1092">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-1092">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-1093">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-1093">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-1094">Przed wykonaniem wszelkich operacji We/Wy na nim, należy otworzyć plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-1094">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="d136e-1095">`FileOpen` przydziela bufor dla operacji We/Wy do pliku i określa tryb dostępu do używania z buforu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1095">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-1096">Podczas zapisywania do pliku, aplikacja może być konieczne utworzenie pliku, jeśli plik, który próbuje zapisać nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d136e-1096">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="d136e-1097">Aby to zrobić, musi ona uprawnienia dla katalogu, w którym ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-1097">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="d136e-1098">Jednakże jeżeli plik określony przez `FileName` istnieje w zakresie aplikacji `Write` uprawnienia tylko do sam plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-1098">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="d136e-1099">Wszędzie tam, gdzie to możliwe, aby pomóc zwiększyć bezpieczeństwo, tworzyć plik podczas wdrożenia i przyznać `Write` uprawnienie do tego pliku tylko, a nie do całego katalogu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1099">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="d136e-1100">Aby zwiększyć bezpieczeństwo, zapisywać dane do katalogów użytkownika zamiast do katalogu głównego lub katalogu Program Files.</span><span class="sxs-lookup"><span data-stu-id="d136e-1100">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="d136e-1101">Kanał, aby otworzyć znajduje się za pomocą `FreeFile()` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-1101">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-1102">`FileOpen` Funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia, które mogą mieć wpływ na jej wykonanie w sytuacjach częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="d136e-1102">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="d136e-1103">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1103">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1104">Ten przykład ilustruje różne przypadki użycia `FileOpen` funkcję, aby włączyć dane wejściowe i wyjściowe do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1104">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="d136e-1105">Poniższy kod zostanie otwarty plik `TestFile` w `Input` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1105">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="d136e-1106">W tym przykładzie otwiera plik w `Binary` tryb tylko operacje zapisu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1106">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="d136e-1107">W poniższym przykładzie otwierany plik w `Random` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1107">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="d136e-1108">Ten plik zawiera rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1108">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="d136e-1109">Ten przykład kodu otwiera plik w `Output` tryb; wszelkie może procesu Odczyt lub zapis do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1109">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="d136e-1110">Ten przykład kodu otwiera plik w `Binary` trybie do odczytu; inne procesy nie można odczytać pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1110">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1111">Długość rekordu jest ujemna (i nie jest równa -1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1111">Record length is negative (and not equal to -1).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1112">
            <paramref name="FileName" /> jest jeszcze otwarty, lub <paramref name="FileName" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1112">
              <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-1113">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1113">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1114">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1114">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1115">F, aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1115">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * bool * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1116">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1116">Required.</span>
          </span>
          <span data-ttu-id="d136e-1117">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1117">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1118">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1118">Required.</span>
          </span>
          <span data-ttu-id="d136e-1119">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1119">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1120">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1120">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1121">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1121">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1122">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1122">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1123">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1123">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1124">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1124">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1125">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1125">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1126">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1126">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1127">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1127">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1128">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1128">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1129">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1129">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1130">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1130">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1131">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1131">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1132">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1132">Random Mode</span></span>  
 <span data-ttu-id="d136e-1133">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1133">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1134">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1134">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1135">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1135">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1136">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1136">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1137">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1137">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1138">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1138">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1139">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1139">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1140">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1140">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1141">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1141">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1142">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1142">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1143">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1143">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1144">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1144">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1145">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1145">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1146">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1146">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1147">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1147">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1148">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1148">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1149">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1149">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1150">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1150">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1151">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1151">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1152">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1152">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1153">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1153">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1154">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1154">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1155">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1155">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1156">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1156">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1157">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1157">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1158">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1158">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1159">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1159">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1160">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1160">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1161">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1161">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1162">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1162">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1163">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1163">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1164">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1164">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1165">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1165">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1166">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1166">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1167">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1167">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1168">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1168">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1169">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1169">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1170">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1170">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1171">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1171">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1172">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1172">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1173">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1173">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1174">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1174">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * byte * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1175">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1175">Required.</span>
          </span>
          <span data-ttu-id="d136e-1176">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1176">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1177">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1177">Required.</span>
          </span>
          <span data-ttu-id="d136e-1178">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1178">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1179">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1179">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1180">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1180">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1181">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1181">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1182">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1182">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1183">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1183">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1184">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1184">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1185">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1185">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1186">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1186">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1187">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1187">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1188">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1188">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1189">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1189">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1190">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1190">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1191">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1191">Random Mode</span></span>  
 <span data-ttu-id="d136e-1192">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1192">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1193">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1193">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1194">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1194">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1195">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1195">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1196">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1196">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1197">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1197">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1198">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1198">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1199">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1199">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1200">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1200">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1201">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1201">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1202">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1202">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1203">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1203">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1204">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1204">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1205">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1205">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1206">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1206">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1207">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1207">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1208">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1208">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1209">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1209">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1210">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1210">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1211">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1211">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1212">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1212">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1213">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1213">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1214">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1214">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1215">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1215">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1216">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1216">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1217">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1217">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1218">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1218">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1219">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1219">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1220">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1220">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1221">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1221">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1222">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1222">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1223">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1223">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1224">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1224">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1225">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1225">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1226">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1226">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1227">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1227">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1228">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1228">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1229">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1229">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1230">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1230">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1231">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1231">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1232">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1232">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1233">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1233">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * char * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1234">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1234">Required.</span>
          </span>
          <span data-ttu-id="d136e-1235">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1235">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1236">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1236">Required.</span>
          </span>
          <span data-ttu-id="d136e-1237">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1237">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1238">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1238">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1239">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1239">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1240">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1240">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1241">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1241">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1242">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1242">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1243">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1243">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1244">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1244">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1245">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1245">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1246">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1246">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1247">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1247">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1248">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1248">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1249">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1249">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1250">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1250">Random Mode</span></span>  
 <span data-ttu-id="d136e-1251">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1251">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1252">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1252">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1253">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1253">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1254">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1254">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1255">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1255">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1256">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1256">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1257">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1257">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1258">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1258">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1259">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1259">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1260">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1260">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1261">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1261">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1262">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1262">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1263">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1263">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1264">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1264">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1265">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1265">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1266">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1266">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1267">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1267">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1268">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1268">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1269">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1269">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1270">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1270">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1271">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1271">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1272">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1272">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1273">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1273">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1274">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1274">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1275">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1275">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1276">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1276">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1277">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1277">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1278">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1278">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1279">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1279">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1280">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1280">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1281">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1281">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1282">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1282">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1283">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1283">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1284">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1284">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1285">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1285">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1286">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1286">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1287">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1287">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1288">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1288">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1289">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1289">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1290">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1290">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1291">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1291">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1292">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1292">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * DateTime * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1293">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1293">Required.</span>
          </span>
          <span data-ttu-id="d136e-1294">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1294">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1295">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1295">Required.</span>
          </span>
          <span data-ttu-id="d136e-1296">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1296">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1297">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1297">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1298">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1298">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1299">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1299">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1300">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1300">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1301">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1301">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1302">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1302">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1303">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1303">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1304">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1304">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1305">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1305">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1306">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1306">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1307">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1307">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1308">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1308">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1309">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1309">Random Mode</span></span>  
 <span data-ttu-id="d136e-1310">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1310">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1311">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1311">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1312">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1312">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1313">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1313">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1314">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1314">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1315">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1315">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1316">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1316">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1317">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1317">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1318">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1318">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1319">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1319">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1320">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1320">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1321">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1321">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1322">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1322">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1323">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1323">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1324">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1324">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1325">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1325">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1326">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1326">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1327">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1327">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1328">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1328">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1329">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1329">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1330">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1330">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1331">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1331">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1332">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1332">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1333">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1333">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1334">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1334">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1335">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1335">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1336">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1336">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1337">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1337">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1338">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1338">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1339">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1339">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1340">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1340">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1341">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1341">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1342">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1342">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1343">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1343">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1344">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1344">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1345">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1345">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1346">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1346">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1347">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1347">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1348">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1348">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1349">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1349">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1350">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1350">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1351">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1351">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * decimal * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1352">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1352">Required.</span>
          </span>
          <span data-ttu-id="d136e-1353">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1353">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1354">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1354">Required.</span>
          </span>
          <span data-ttu-id="d136e-1355">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1355">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1356">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1356">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1357">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1357">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1358">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1358">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1359">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1359">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1360">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1360">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1361">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1361">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1362">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1362">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1363">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1363">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1364">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1364">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1365">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1365">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1366">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1366">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1367">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1367">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1368">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1368">Random Mode</span></span>  
 <span data-ttu-id="d136e-1369">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1369">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1370">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1370">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1371">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1371">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1372">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1372">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1373">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1373">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1374">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1374">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1375">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1375">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1376">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1376">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1377">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1377">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1378">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1378">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1379">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1379">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1380">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1380">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1381">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1381">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1382">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1382">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1383">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1383">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1384">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1384">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1385">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1385">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1386">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1386">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1387">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1387">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1388">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1388">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1389">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1389">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1390">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1390">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1391">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1391">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1392">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1392">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1393">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1393">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1394">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1394">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1395">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1395">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1396">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1396">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1397">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1397">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1398">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1398">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1399">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1399">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1400">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1400">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1401">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1401">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1402">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1402">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1403">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1403">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1404">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1404">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1405">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1405">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1406">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1406">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1407">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1407">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1408">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1408">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1409">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1409">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1410">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1410">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * double * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1411">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1411">Required.</span>
          </span>
          <span data-ttu-id="d136e-1412">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1412">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1413">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1413">Required.</span>
          </span>
          <span data-ttu-id="d136e-1414">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1414">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1415">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1415">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1416">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1416">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1417">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1417">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1418">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1418">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1419">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1419">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1420">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1420">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1421">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1421">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1422">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1422">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1423">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1423">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1424">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1424">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1425">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1425">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1426">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1426">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1427">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1427">Random Mode</span></span>  
 <span data-ttu-id="d136e-1428">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1428">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1429">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1429">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1430">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1430">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1431">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1431">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1432">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1432">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1433">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1433">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1434">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1434">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1435">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1435">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1436">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1436">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1437">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1437">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1438">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1438">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1439">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1439">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1440">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1440">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1441">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1441">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1442">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1442">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1443">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1443">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1444">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1444">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1445">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1445">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1446">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1446">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1447">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1447">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1448">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1448">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1449">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1449">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1450">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1450">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1451">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1451">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1452">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1452">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1453">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1453">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1454">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1454">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1455">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1455">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1456">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1456">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1457">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1457">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1458">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1458">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1459">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1459">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1460">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1460">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1461">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1461">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1462">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1462">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1463">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1463">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1464">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1464">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1465">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1465">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1466">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1466">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1467">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1467">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1468">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1468">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1469">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1469">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int16 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1470">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1470">Required.</span>
          </span>
          <span data-ttu-id="d136e-1471">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1471">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1472">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1472">Required.</span>
          </span>
          <span data-ttu-id="d136e-1473">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1473">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1474">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1474">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1475">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1475">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1476">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1476">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1477">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1477">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1478">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1478">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1479">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1479">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1480">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1480">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1481">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1481">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1482">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1482">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1483">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1483">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1484">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1484">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1485">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1485">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1486">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1486">Random Mode</span></span>  
 <span data-ttu-id="d136e-1487">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1487">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1488">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1488">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1489">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1489">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1490">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1490">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1491">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1491">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1492">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1492">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1493">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1493">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1494">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1494">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1495">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1495">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1496">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1496">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1497">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący`VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1497">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1498">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1498">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1499">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1499">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1500">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1500">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1501">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1501">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1502">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1502">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1503">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1503">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1504">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1504">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1505">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1505">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1506">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1506">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1507">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1507">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1508">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1508">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1509">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1509">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1510">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1510">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1511">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1511">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1512">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1512">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1513">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1513">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1514">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1514">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1515">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1515">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1516">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1516">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1517">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1517">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1518">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1518">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1519">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1519">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1520">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1520">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1521">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1521">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1522">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1522">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1523">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1523">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1524">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1524">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1525">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1525">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1526">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1526">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1527">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1527">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1528">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1528">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1529">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1529">Required.</span>
          </span>
          <span data-ttu-id="d136e-1530">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1530">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1531">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1531">Required.</span>
          </span>
          <span data-ttu-id="d136e-1532">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1532">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1533">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1533">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1534">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1534">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1535">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1535">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1536">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1536">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1537">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1537">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1538">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1538">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1539">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1539">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1540">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1540">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1541">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1541">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1542">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1542">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1543">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1543">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1544">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1544">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1545">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1545">Random Mode</span></span>  
 <span data-ttu-id="d136e-1546">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1546">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1547">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1547">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1548">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1548">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1549">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1549">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1550">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1550">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1551">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1551">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1552">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1552">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1553">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1553">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1554">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1554">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1555">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1555">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1556">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1556">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1557">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1557">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1558">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1558">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1559">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1559">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1560">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1560">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1561">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1561">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1562">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1562">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1563">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1563">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1564">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1564">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1565">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1565">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1566">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1566">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1567">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1567">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1568">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1568">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1569">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1569">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1570">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1570">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1571">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1571">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1572">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1572">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1573">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1573">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1574">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1574">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1575">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1575">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1576">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1576">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1577">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1577">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1578">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1578">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1579">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1579">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1580">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1580">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1581">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1581">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1582">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1582">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1583">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1583">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1584">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1584">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1585">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1585">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1586">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1586">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1587">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1587">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1588">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1588">Required.</span>
          </span>
          <span data-ttu-id="d136e-1589">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1589">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1590">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1590">Required.</span>
          </span>
          <span data-ttu-id="d136e-1591">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1591">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1592">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1592">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1593">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1593">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1594">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1594">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1595">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1595">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1596">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1596">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1597">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1597">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1598">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1598">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1599">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1599">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1600">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1600">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1601">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1601">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1602">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1602">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1603">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1603">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1604">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1604">Random Mode</span></span>  
 <span data-ttu-id="d136e-1605">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1605">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1606">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1606">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1607">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1607">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1608">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1608">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1609">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1609">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1610">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1610">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1611">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1611">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1612">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1612">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1613">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1613">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1614">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1614">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1615">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1615">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1616">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1616">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1617">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1617">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1618">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1618">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1619">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1619">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1620">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1620">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1621">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1621">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1622">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1622">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1623">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1623">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1624">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1624">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1625">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1625">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1626">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1626">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1627">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1627">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1628">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1628">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1629">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1629">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1630">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1630">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1631">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1631">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1632">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1632">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1633">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1633">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1634">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1634">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1635">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1635">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1636">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1636">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1637">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1637">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1638">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1638">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1639">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1639">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1640">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1640">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1641">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1641">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1642">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1642">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1643">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1643">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1644">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1644">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1645">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1645">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1646">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1646">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * single * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1647">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1647">Required.</span>
          </span>
          <span data-ttu-id="d136e-1648">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1648">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1649">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1649">Required.</span>
          </span>
          <span data-ttu-id="d136e-1650">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1650">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1651">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1651">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1652">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1652">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1653">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1653">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1654">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1654">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1655">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1655">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1656">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1656">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1657">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1657">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1658">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1658">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1659">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1659">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1660">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1660">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1661">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1661">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1662">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1662">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1663">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1663">Random Mode</span></span>  
 <span data-ttu-id="d136e-1664">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1664">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1665">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1665">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1666">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1666">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1667">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1667">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1668">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1668">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1669">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1669">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1670">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1670">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1671">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1671">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1672">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1672">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1673">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1673">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1674">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1674">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1675">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1675">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1676">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1676">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1677">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1677">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1678">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1678">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1679">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1679">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1680">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1680">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1681">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1681">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1682">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1682">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1683">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1683">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1684">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1684">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1685">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1685">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1686">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1686">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1687">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1687">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1688">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1688">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1689">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1689">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1690">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1690">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1691">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1691">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1692">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1692">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1693">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1693">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1694">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1694">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1695">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1695">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1696">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1696">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1697">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1697">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1698">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1698">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1699">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1699">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1700">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1700">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1701">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1701">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1702">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1702">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1703">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1703">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1704">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1704">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1705">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1705">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * ValueType * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1706">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1706">Required.</span>
          </span>
          <span data-ttu-id="d136e-1707">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1707">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1708">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1708">Required.</span>
          </span>
          <span data-ttu-id="d136e-1709">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1709">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1710">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1710">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1711">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1711">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1712">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1712">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1713">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1713">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1714">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1714">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1715">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1715">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1716">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1716">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1717">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1717">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1718">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1718">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1719">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1719">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1720">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1720">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1721">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1721">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1722">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1722">Random Mode</span></span>  
 <span data-ttu-id="d136e-1723">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1723">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1724">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w`RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1724">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1725">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1725">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1726">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1726">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1727">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1727">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1728">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1728">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1729">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1729">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1730">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1730">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1731">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1731">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1732">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1732">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1733">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1733">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1734">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1734">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1735">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1735">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1736">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1736">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1737">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1737">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1738">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1738">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1739">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1739">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1740">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1740">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1741">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1741">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1742">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1742">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1743">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1743">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1744">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1744">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1745">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1745">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1746">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1746">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1747">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1747">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1748">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1748">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1749">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1749">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1750">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1750">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1751">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1751">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1752">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1752">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1753">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1753">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1754">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1754">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1755">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1755">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1756">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1756">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1757">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1757">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1758">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1758">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1759">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1759">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1760">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1760">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1761">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1761">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1762">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1762">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1763">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1763">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1764">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1764">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : obj * obj * obj -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1765">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1765">Required.</span>
          </span>
          <span data-ttu-id="d136e-1766">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1766">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1767">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1767">Required.</span>
          </span>
          <span data-ttu-id="d136e-1768">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1768">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1769">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1769">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1770">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1770">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1771">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1771">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1772">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1772">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1773">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1773">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1774">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1774">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1775">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1775">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1776">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1776">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1777">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1777">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1778">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1778">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1779">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1779">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1780">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1780">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1781">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1781">Random Mode</span></span>  
 <span data-ttu-id="d136e-1782">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1782">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1783">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1783">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1784">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1784">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1785">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1785">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1786">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1786">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1787">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1787">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1788">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1788">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1789">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1789">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1790">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1790">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1791">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1791">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1792">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1792">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1793">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1793">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1794">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1794">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1795">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1795">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1796">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1796">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1797">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1797">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1798">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1798">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1799">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1799">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1800">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1800">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1801">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1801">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1802">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1802">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1803">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1803">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1804">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1804">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1805">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1805">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1806">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1806">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1807">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1807">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1808">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1808">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1809">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1809">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1810">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1810">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1811">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1811">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1812">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1812">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1813">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1813">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1814">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1814">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1815">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1815">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1816">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1816">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1817">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1817">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1818">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1818">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1819">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1819">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1820">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1820">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1821">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1821">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1822">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1822">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1823">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1823">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * string * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1824">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1824">Required.</span>
          </span>
          <span data-ttu-id="d136e-1825">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1825">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1826">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1826">Required.</span>
          </span>
          <span data-ttu-id="d136e-1827">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1827">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1828">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1828">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1829">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1829">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d136e-1830">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1830">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1831">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1831">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d136e-1832">Określa, czy chcesz zapisać ciąg dwubajtowy deskryptor długości ciągu do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1832">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="d136e-1833">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1833">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1834">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1834">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1835">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1835">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1836">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />...</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1836">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1837">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1837">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1838">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1838">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1839">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1839">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1840">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1840">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1841">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1841">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1842">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1842">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1843">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1843">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1844">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1844">Random Mode</span></span>  
 <span data-ttu-id="d136e-1845">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1845">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1846">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1846">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1847">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1847">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1848">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1848">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1849">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1849">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1850">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1850">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1851">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1851">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1852">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1852">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1853">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1853">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1854">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1854">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1855">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1855">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1856">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1856">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1857">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1857">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1858">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1858">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1859">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1859">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1860">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1860">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1861">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1861">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1862">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1862">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1863">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1863">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1864">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1864">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1865">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1865">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1866">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1866">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1867">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1867">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1868">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1868">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1869">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1869">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1870">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1870">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1871">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1871">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1872">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1872">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1873">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1873">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1874">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1874">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1875">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1875">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1876">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1876">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1877">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1877">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1878">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1878">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1879">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1879">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1880">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1880">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1881">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1881">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1882">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1882">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1883">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1883">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1884">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1884">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1885">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1885">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1886">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1886">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * Array * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1887">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1887">Required.</span>
          </span>
          <span data-ttu-id="d136e-1888">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1888">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1889">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1889">Required.</span>
          </span>
          <span data-ttu-id="d136e-1890">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1890">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1891">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1891">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1892">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1892">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="d136e-1893">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1893">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1894">Ma zastosowanie tylko wtedy, gdy pisania tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1894">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="d136e-1895">Określa, czy tablica jest traktowane jako dynamiczne i czy należy napisać deskryptor ciąg, który opisuje długość tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1895">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="d136e-1896">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1896">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1897">Stosuje się tylko przy pisaniu ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1897">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="d136e-1898">Określa, czy chcesz zapisać ciąg dwubajtowy deskryptor długości ciągu do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1898">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="d136e-1899">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1899">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1900">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1900">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1901">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1901">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="d136e-1902">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1902">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1903">`FilePut` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1903">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1904">Dane zapisane z `FilePut` są zazwyczaj odczytywane z pliku za pomocą `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1904">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="d136e-1905">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1905">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1906">Jeżeli pominięto `RecordNumber`, następny rekord lub bajt po ostatniej `FileGet` lub `FilePut` albo wskazany przez ostatnią `Seek` funkcja została napisana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1906">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="d136e-1907">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1907">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1908">`FilePut` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1908">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1909">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePut`, należy wykonać takie same, z `FileGet`, musisz się upewnić, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1909">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1910">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1910">Random Mode</span></span>  
 <span data-ttu-id="d136e-1911">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1911">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1912">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePut` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1912">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1913">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1913">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1914">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest, gdy długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1914">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1915">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1915">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1916">Jeśli zmienna zapisywana jest ciągiem, `FilePut` zapisuje dwubajtowy deskryptor, który zawiera długość ciągu, a następnie zapisuje dane wprowadzane do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1916">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="d136e-1917">W związku z tym, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1917">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="d136e-1918">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePut` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1918">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1919">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePut` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1919">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1920">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1920">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1921">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePut` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1921">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1922">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1922">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1923">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1923">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1924">Jeżeli zapisywaną zmienną jest tablica, można wybrać, czy odczytać deskryptor, by uzyskać informacje o wielkości i wymiarze tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1924">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="d136e-1925">Visual Basic 6.0 i starsze wersje zapisują deskryptor plików dla tablic dynamicznych, bez uwzględniania tablicy o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="d136e-1925">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="d136e-1926">Według domyślnych ustawień programu Visual Basic 2005 deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1926">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="d136e-1927">Aby zapisać deskryptor, ustaw `ArrayIsDynamic` parametr `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1927">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="d136e-1928">Podczas zapisywania tablicy należy dopasować sposób odczytywania tablicy; jeśli będzie odczytywana z deskryptorem, należy napisać deskryptor.</span><span class="sxs-lookup"><span data-stu-id="d136e-1928">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="d136e-1929">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1929">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1930">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1930">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="d136e-1931">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1931">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1932">Na przykład następująca deklaracja tablicy wymaga 218 bajtów, jeśli tablica zapisywana jest na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1932">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="d136e-1933">Jeśli zmienna zapisywana stanowi inny typ zmiennej (nie ciąg znaków o zmiennej długości czy obiekt), `FilePut` zapisuje tylko dane zmienne.</span><span class="sxs-lookup"><span data-stu-id="d136e-1933">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="d136e-1934">Długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa długości danych zapisanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1934">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="d136e-1935">`FilePut` Zapisuje elementy struktury tak, jakby każdy był zapisywany indywidualnie, z wyjątkiem nie ma żadnych uzupełnień między elementami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1935">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="d136e-1936">`VBFixedString` Atrybut można stosować do pól ciągu w strukturach, aby wskazywać wielkość ciągu podczas zapisywania na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1936">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d136e-1937">Pola ciągu, które posiadają większą liczbę bajtów, niż określa `VBFixedString` atrybutu są obcinane w trakcie zapisywania na dysku,</span><span class="sxs-lookup"><span data-stu-id="d136e-1937">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1938">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1938">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1939">Do plików otwieranych w `Binary` tryb, większość `Random` zastosować zasady dotyczące trybu, z pewnymi wyjątkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1939">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="d136e-1940">Następujące reguły dotyczące plików otwarty w `Binary` tryb różnią się od reguł dla `Random` trybu:</span><span class="sxs-lookup"><span data-stu-id="d136e-1940">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="d136e-1941">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1941">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1942">`FilePut` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1942">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="d136e-1943">Dla tablicy innej niż tablica w strukturze `FilePut` zapisuje tylko dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1943">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="d136e-1944">Deskryptor nie jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="d136e-1944">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="d136e-1945">`FilePut` zapisuje ciągi o zmiennej długości, które nie są elementami struktury, bez deskryptora o długości dwóch bajtów.</span><span class="sxs-lookup"><span data-stu-id="d136e-1945">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="d136e-1946">Liczba bajtów zapisanych jest równa liczbie znaków znajdujących się już w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1946">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="d136e-1947">Na przykład poniższe instrukcje zapisują 11 bajtów do pliku numer 1:</span><span class="sxs-lookup"><span data-stu-id="d136e-1947">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="d136e-1948">Zapisywanie do pliku za pomocą `FilePut` funkcja wymaga, aby `Write` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-1948">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1949">W tym przykładzie użyto `FilePut` funkcję, aby zapisywać dane w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1949">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="d136e-1950">Pięć rekordów struktury `Person` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1950">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-1951">
            <paramref name="RecordNumber" /> &lt; 1 i nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1951">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-1952">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1952">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePutObject : int * obj * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePutObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1953">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1953">Required.</span>
          </span>
          <span data-ttu-id="d136e-1954">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1954">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-1955">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1955">Required.</span>
          </span>
          <span data-ttu-id="d136e-1956">Prawidłowa nazwa zmiennej, która zawiera dane zapisane na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1956">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="d136e-1957">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1957">Optional.</span>
          </span>
          <span data-ttu-id="d136e-1958">Numer rekordu (<see langword="Random" /> pliki trybu) lub liczba bajtów (<see langword="Binary" /> pliki trybu) gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1958">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1959">Zapisuje dane ze zmiennej do pliku na dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1959">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="d136e-1960">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FilePutObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1960">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span>
          </span>
          <span data-ttu-id="d136e-1961">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1961">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-1962">`FilePutObject` Funkcja jest używana zamiast `FilePut` Aby uniknąć niejednoznaczności w czasie kompilacji, jeśli typ `Object` jest przekazywany zamiast innego typu, takie jak `Integer`, `Long`, `Short`, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1962">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="d136e-1963">`FilePutObject` zapisuje i odczytuje deskryptory, które opisują obiektu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1963">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="d136e-1964">Jeśli zamierzasz zapisać `Variant` typu `FilePutObject` jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="d136e-1964">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="d136e-1965">W razie wątpliwości, jeśli używasz obiektu jako drugi parametr, firma Microsoft zaleca, aby zawsze używać `FilePutObject` i `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1965">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="d136e-1966">`FilePutObject` jest prawidłowy tylko w `Random` i `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1966">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-1967">Dane zapisane z `FilePutObject` są zazwyczaj odczytywane z pliku za pomocą `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1967">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="d136e-1968">Pierwszy rekord lub bajt w pliku znajduje się na pozycji 1, drugi rekord lub bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1968">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="d136e-1969">Jeżeli pominięto `RecordNumber`, `FilePutObject` zapisuje następny rekord lub bajt po ostatniej `FileGetObject` lub `FilePutObject` — funkcja (lub rekord lub bajt wskazywany przez ostatnią `Seek` funkcji).</span><span class="sxs-lookup"><span data-stu-id="d136e-1969">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="d136e-1970">`StringIsFixedLength` Argument określa, czy funkcja interpretuje ciągi jako zmiennej czy stałej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1970">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="d136e-1971">`FilePutObject` nie wpisuje deskryptora długości, gdy argument jest `True`.</span><span class="sxs-lookup"><span data-stu-id="d136e-1971">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="d136e-1972">Jeśli używasz `StringIsFixedLength`  =  `True` z `FilePutObject`, należy wykonać takie same, z `FileGetObject`, i należy również upewnić się, że ciąg został zainicjowany do oczekiwanej długości.</span><span class="sxs-lookup"><span data-stu-id="d136e-1972">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="d136e-1973">Tryb losowy</span><span class="sxs-lookup"><span data-stu-id="d136e-1973">Random Mode</span></span>  
 <span data-ttu-id="d136e-1974">Do plików otwieranych w `Random` tryb, są stosowane następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="d136e-1974">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="d136e-1975">Jeśli długość zapisywanych danych jest mniejsza niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji `FilePutObject` zapisuje kolejne rekordy w granicach długości rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1975">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="d136e-1976">Odstęp między końcem jednego rekordu a początkiem następnego rekordu jest wypełniany istniejącą zawartością buforu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-1976">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="d136e-1977">Ponieważ ilości danych uzupełniania nie można dokładnie określić, to zazwyczaj dobrze jest mieć długość rekordu jest zgodna z długością zapisanych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-1977">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="d136e-1978">Jeśli długość zapisywanych danych jest większa niż długość określona w `RecordLength` klauzuli `FileOpen` funkcji, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d136e-1978">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="d136e-1979">Jeśli zmienna zapisywana stanowi obiekt, który zawiera typ liczbowy `FilePutObject` zapisuje dwa bajty identyfikujące `VarType` obiektu, a następnie zapisuje zmienną.</span><span class="sxs-lookup"><span data-stu-id="d136e-1979">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="d136e-1980">Na przykład podczas zapisywania obiektu zawierającego liczbę całkowitą z zakresu `FilePutObject` zapisuje sześć bajtów: dwa bajty, które identyfikują obiekt jako `VarType(3)` (`Integer`) i cztery bajty, które zawierają dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-1980">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="d136e-1981">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej dwa bajty większa od rzeczywistej liczby bajtów potrzebnych do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-1981">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="d136e-1982">Jeśli zmienna zapisywana stanowi obiekt, który zawiera ciąg, `FilePutObject` zapisuje deskryptor dwubajtowy identyfikujący `VarType(8)` obiektu, deskryptor dwubajtowy wskazujący długość ciągu, a następnie zapisuje dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1982">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="d136e-1983">Długość rekordu określana przez `RecordLength` parametru w `FileOpen` funkcja musi być co najmniej cztery bajty większa od rzeczywistej długości ciągu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1983">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="d136e-1984">Jeśli chcesz umieścić ciąg bez deskryptora, należy przekazać `True` do `StringIsFixedLength` parametru, a wczytywany ciąg powinien mieć odpowiednią długość.</span><span class="sxs-lookup"><span data-stu-id="d136e-1984">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="d136e-1985">Jeśli zmienna zapisywana jest tablica, długość rekordu określana przez `RecordLength` w klauzuli `FileOpen` funkcja musi być większa lub równa sumie wszystkich bajtów wymaganych do zapisania danych i deskryptora tablicy.</span><span class="sxs-lookup"><span data-stu-id="d136e-1985">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="d136e-1986">Deskryptor określa rangę tablicy, rozmiar i dolne granice dla każdej rangi.</span><span class="sxs-lookup"><span data-stu-id="d136e-1986">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="d136e-1987">Jego długość jest równa 2 plus 8 razy liczba wymiarów: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="d136e-1987">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="d136e-1988">Tryb binarny</span><span class="sxs-lookup"><span data-stu-id="d136e-1988">Binary Mode</span></span>  
 <span data-ttu-id="d136e-1989">Do plików otwieranych w `Binary` trybie wszystkie `Random` zastosować zasady dotyczące trybu, z wyjątkiem:</span><span class="sxs-lookup"><span data-stu-id="d136e-1989">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="d136e-1990">`RecordLength` w klauzuli `FileOpen` funkcja nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="d136e-1990">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="d136e-1991">`FilePutObject` zapisuje wszystkie zmienne na dysku w sposób ciągły, to znaczy bez uzupełnień między rekordami.</span><span class="sxs-lookup"><span data-stu-id="d136e-1991">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-1992">W tym przykładzie użyto `FilePutObject` funkcję, aby zapisać ciąg do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-1992">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberSignature Language="F#" Value="static member FileWidth : int * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileWidth (FileNumber, RecordWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-1993">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1993">Required.</span>
          </span>
          <span data-ttu-id="d136e-1994">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1994">Any valid file number.</span>
          </span>
        </param>
        <param name="RecordWidth">
          <span data-ttu-id="d136e-1995">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1995">Required.</span>
          </span>
          <span data-ttu-id="d136e-1996">Wyrażenie liczbowe w zakresie 0 – 255 włącznie, co oznacza liczbę znaków, są wyświetlane w wierszu, przed rozpoczęciem nowego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1996">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span>
          </span>
          <span data-ttu-id="d136e-1997">Jeśli <c>RecordWidth</c> jest równa 0, nie ma żadnego limitu długości wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1997">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span>
          </span>
          <span data-ttu-id="d136e-1998">Wartością domyślną dla <c>RecordWidth</c> wynosi 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1998">The default value for <c>RecordWidth</c> is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-1999">Przypisuje szerokość linii danych wyjściowych w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-1999">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d136e-2000">W tym przykładzie użyto `FileWidth` funkcję, aby ustawić szerokość linii danych wyjściowych dla pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2000">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2001">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2001">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberSignature Language="F#" Value="static member FreeFile : unit -&gt; int" Usage="Microsoft.VisualBasic.FileSystem.FreeFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2002">Zwraca <see langword="Integer" /> wartość reprezentująca następny dostępny do użytku przez numer pliku <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2002">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2003">Zwraca <see langword="Integer" /> wartość reprezentująca następny dostępny do użytku przez numer pliku <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2003">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2004">Użyj `FreeFile` podawać numer pliku, który nie jest już używana.</span><span class="sxs-lookup"><span data-stu-id="d136e-2004">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2005">W tym przykładzie użyto `FreeFile` funkcja zwraca następny dostępny numer pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2005">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="d136e-2006">Pięć plików są otwarte dla danych wyjściowych w ramach pętli i przykładowe dane są zapisywane do każdego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2006">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2007">Więcej niż 255 pliki są używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2007">More than 255 files are in use.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member GetAttr : string -&gt; Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.FileSystem.GetAttr PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d136e-2008">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2008">Required.</span>
          </span>
          <span data-ttu-id="d136e-2009">
            <see langword="String" /> wyrażenie, który określa nazwę pliku, katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2009">
              <see langword="String" /> expression that specifies a file, directory, or folder name.</span>
          </span>
          <span data-ttu-id="d136e-2010">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2010">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2011">Zwraca <see langword="FileAttribute" /> wartość, która reprezentuje atrybuty pliku, katalogu lub folderu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2011">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span>
          </span>
          <span data-ttu-id="d136e-2012">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="FileAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2012">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span>
          </span>
          <span data-ttu-id="d136e-2013">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2013">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2014">Wartość zwrócona przez obiekt <see langword="GetAttr" /> jest sumą wartości wyliczenia następujące:</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2014">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:</span>
          </span>
          <span data-ttu-id="d136e-2015">
            <list type="table">
              <item>
                <term> Wartość </term>
                <description> stałej </description>
                <description> opis </description>
              </item>
              <item>
                <term>
                  <see langword="Normal" />
                </term>
                <description>
                  <see langword="vbNormal" />
                </description>
                <description> Normalny.  </description>
              </item>
              <item>
                <term>
                  <see langword="ReadOnly" />
                </term>
                <description>
                  <see langword="vbReadOnly" />
                </description>
                <description> Tylko do odczytu.  </description>
              </item>
              <item>
                <term>
                  <see langword="Hidden" />
                </term>
                <description>
                  <see langword="vbHidden" />
                </description>
                <description> Ukryte.  </description>
              </item>
              <item>
                <term>
                  <see langword="System" />
                </term>
                <description>
                  <see langword="vbSystem" />
                </description>
                <description> System plików.  </description>
              </item>
              <item>
                <term>
                  <see langword="Directory" />
                </term>
                <description>
                  <see langword="vbDirectory" />
                </description>
                <description> Katalogu lub folderu.  </description>
              </item>
              <item>
                <term>
                  <see langword="Archive" />
                </term>
                <description>
                  <see langword="vbArchive" />
                </description>
                <description> Plik został zmieniony od czasu ostatniej kopii zapasowej.  </description>
              </item>
              <item>
                <term>
                  <see langword="Alias" />
                </term>
                <description>
                  <see langword="vbAlias" />
                </description>
                <description> Plik ma inną nazwę.  </description>
              </item>
            </list>
            <block subset="none" type="note">
              <para> Te wyliczenia są określane za pomocą języka Visual Basic. Nazwy mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2015">
              <list type="table">
                <item>
                  <term> Value  </term>
                  <description> Constant  </description>
                  <description> Description  </description>
                </item>
                <item>
                  <term>
                    <see langword="Normal" />
                  </term>
                  <description>
                    <see langword="vbNormal" />
                  </description>
                  <description> Normal.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ReadOnly" />
                  </term>
                  <description>
                    <see langword="vbReadOnly" />
                  </description>
                  <description> Read-only.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Hidden" />
                  </term>
                  <description>
                    <see langword="vbHidden" />
                  </description>
                  <description> Hidden.  </description>
                </item>
                <item>
                  <term>
                    <see langword="System" />
                  </term>
                  <description>
                    <see langword="vbSystem" />
                  </description>
                  <description> System file.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Directory" />
                  </term>
                  <description>
                    <see langword="vbDirectory" />
                  </description>
                  <description> Directory or folder.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Archive" />
                  </term>
                  <description>
                    <see langword="vbArchive" />
                  </description>
                  <description> File has changed since last backup.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Alias" />
                  </term>
                  <description>
                    <see langword="vbAlias" />
                  </description>
                  <description> File has a different name.  </description>
                </item>
              </list>
              <block subset="none" type="note">
                <para> These enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.  </para>
              </block>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2016">Aby określić, które atrybuty są ustawione, użyj `And` operatora bitowego porównania wartości zwracanej przez `GetAttr` funkcji i wartość wybranego atrybutu pliku chcesz.</span><span class="sxs-lookup"><span data-stu-id="d136e-2016">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="d136e-2017">Jeśli wynik nie wynosi zero, ten atrybut jest ustawiony dla wskazanego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2017">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="d136e-2018">Na przykład, wartość zwracana przez następujące `And` wyrażenie jest zero, jeśli `Archive` nie ustawiono atrybutu:</span><span class="sxs-lookup"><span data-stu-id="d136e-2018">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="d136e-2019">Wartość różną od zera jest zwracany, jeśli `Archive` ma ustawioną wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2019">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2020">W tym przykładzie użyto `GetAttr` funkcję, aby określić atrybuty pliku i katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2020">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2021">
            <paramref name="Pathname" /> jest nieprawidłowa lub zawiera symbole wieloznaczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2021">
              <paramref name="Pathname" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-2022">Plik docelowy nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2022">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2023">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2023">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2024">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2024">Required.</span>
          </span>
          <span data-ttu-id="d136e-2025">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2025">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2026">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2026">Required.</span>
          </span>
          <span data-ttu-id="d136e-2027">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2027">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2028">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2028">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2029">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2029">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2030">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2030">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2031">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2031">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2032">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2032">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2033">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2033">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2034">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2034">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2035">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2035">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2036">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2036">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2037">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2037">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2038">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2038">Data</span></span>|<span data-ttu-id="d136e-2039">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2039">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2040">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2040">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2041">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2041">Empty</span></span>|  
|<span data-ttu-id="d136e-2042">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2042">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2043">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2043">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2044">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2044">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2045">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2045">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2046">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2046">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2047">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2047">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2048">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2048">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2049">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2049">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2050">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2050">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2051">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2051">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2052">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2052">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2053">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2053">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2054">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2054">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2055">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2055">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2056">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2056">Required.</span>
          </span>
          <span data-ttu-id="d136e-2057">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2057">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2058">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2058">Required.</span>
          </span>
          <span data-ttu-id="d136e-2059">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2059">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2060">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2060">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2061">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2061">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2062">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2062">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2063">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2063">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2064">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2064">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2065">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2065">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2066">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2066">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2067">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2067">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2068">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2068">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2069">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2069">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2070">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2070">Data</span></span>|<span data-ttu-id="d136e-2071">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2071">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2072">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2072">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2073">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2073">Empty</span></span>|  
|<span data-ttu-id="d136e-2074">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2074">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2075">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2075">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2076">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2076">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2077">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2077">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2078">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2078">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2079">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2079">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2080">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2080">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2081">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2081">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2082">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2082">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2083">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2083">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2084">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2084">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2085">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2085">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2086">W tym przykładzie założono, że `TestFile` plik, który ma kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2086">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2087">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2087">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2088">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2088">Required.</span>
          </span>
          <span data-ttu-id="d136e-2089">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2089">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2090">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2090">Required.</span>
          </span>
          <span data-ttu-id="d136e-2091">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2091">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2092">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2092">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2093">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2093">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2094">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2094">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2095">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2095">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2096">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2096">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2097">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2097">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2098">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2098">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2099">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2099">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2100">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2100">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2101">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2101">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2102">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2102">Data</span></span>|<span data-ttu-id="d136e-2103">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2103">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2104">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2104">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2105">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2105">Empty</span></span>|  
|<span data-ttu-id="d136e-2106">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2106">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2107">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2107">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2108">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2108">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2109">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2109">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2110">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2110">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2111">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2111">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2112">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2112">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2113">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2113">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2114">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2114">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2115">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2115">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2116">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2116">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2117">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2117">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2118">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2118">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2119">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2119">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2120">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2120">Required.</span>
          </span>
          <span data-ttu-id="d136e-2121">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2121">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2122">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2122">Required.</span>
          </span>
          <span data-ttu-id="d136e-2123">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2123">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2124">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2124">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2125">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2125">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2126">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2126">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2127">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2127">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2128">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2128">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2129">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2129">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2130">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2130">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2131">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2131">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2132">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2132">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2133">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2133">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2134">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2134">Data</span></span>|<span data-ttu-id="d136e-2135">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2135">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2136">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2136">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2137">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2137">Empty</span></span>|  
|<span data-ttu-id="d136e-2138">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2138">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2139">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2139">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2140">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2140">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2141">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2141">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2142">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2142">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2143">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2143">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2144">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2144">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2145">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2145">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2146">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2146">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2147">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2147">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2148">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2148">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2149">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2149">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2150">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2150">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2151">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2151">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2152">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2152">Required.</span>
          </span>
          <span data-ttu-id="d136e-2153">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2153">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2154">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2154">Required.</span>
          </span>
          <span data-ttu-id="d136e-2155">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2155">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2156">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2156">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2157">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2157">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2158">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2158">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2159">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2159">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2160">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2160">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2161">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2161">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2162">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2162">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2163">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2163">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2164">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2164">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2165">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2165">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2166">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2166">Data</span></span>|<span data-ttu-id="d136e-2167">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2167">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2168">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2168">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2169">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2169">Empty</span></span>|  
|<span data-ttu-id="d136e-2170">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2170">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2171">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2171">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2172">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2172">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2173">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2173">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2174">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2174">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2175">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2175">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2176">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2176">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2177">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2177">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2178">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2178">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2179">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2179">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2180">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2180">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2181">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2181">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2182">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2182">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2183">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2183">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2184">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2184">Required.</span>
          </span>
          <span data-ttu-id="d136e-2185">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2185">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2186">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2186">Required.</span>
          </span>
          <span data-ttu-id="d136e-2187">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2187">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2188">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2188">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2189">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2189">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2190">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2190">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2191">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2191">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2192">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2192">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2193">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2193">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2194">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2194">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2195">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2195">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2196">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2196">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2197">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2197">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2198">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2198">Data</span></span>|<span data-ttu-id="d136e-2199">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2199">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2200">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2200">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2201">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2201">Empty</span></span>|  
|<span data-ttu-id="d136e-2202">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2202">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2203">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2203">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2204">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2204">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2205">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2205">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2206">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2206">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2207">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2207">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2208">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2208">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2209">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2209">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2210">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2210">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2211">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2211">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2212">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2212">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2213">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2213">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2214">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2214">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2215">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2215">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2216">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2216">Required.</span>
          </span>
          <span data-ttu-id="d136e-2217">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2217">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2218">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2218">Required.</span>
          </span>
          <span data-ttu-id="d136e-2219">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2219">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2220">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2220">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2221">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2221">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2222">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2222">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2223">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2223">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2224">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2224">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2225">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2225">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2226">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2226">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2227">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2227">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2228">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2228">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2229">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2229">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2230">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2230">Data</span></span>|<span data-ttu-id="d136e-2231">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2231">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2232">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2232">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2233">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2233">Empty</span></span>|  
|<span data-ttu-id="d136e-2234">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2234">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2235">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2235">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2236">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2236">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2237">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2237">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2238">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2238">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2239">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2239">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2240">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2240">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2241">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2241">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2242">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2242">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2243">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2243">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2244">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2244">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2245">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2245">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2246">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2246">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2247">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2247">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2248">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2248">Required.</span>
          </span>
          <span data-ttu-id="d136e-2249">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2249">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2250">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2250">Required.</span>
          </span>
          <span data-ttu-id="d136e-2251">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2251">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2252">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2252">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2253">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2253">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2254">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2254">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2255">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2255">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2256">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2256">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2257">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2257">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2258">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2258">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2259">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2259">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2260">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2260">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2261">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2261">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2262">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2262">Data</span></span>|<span data-ttu-id="d136e-2263">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2263">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2264">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2264">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2265">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2265">Empty</span></span>|  
|<span data-ttu-id="d136e-2266">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2266">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2267">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2267">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2268">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2268">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2269">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2269">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2270">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2270">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2271">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2271">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2272">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2272">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2273">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2273">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2274">Na przykład w niemieckiej wersji, gdy wejściowe 3,14159, zwraca tylko 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2274">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2275">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2275">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2276">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2276">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2277">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2277">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2278">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2278">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2279">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2279">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2280">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2280">Required.</span>
          </span>
          <span data-ttu-id="d136e-2281">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2281">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2282">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2282">Required.</span>
          </span>
          <span data-ttu-id="d136e-2283">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2283">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2284">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2284">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2285">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2285">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2286">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2286">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2287">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2287">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2288">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2288">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2289">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2289">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2290">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2290">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2291">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2291">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2292">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2292">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2293">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2293">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2294">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2294">Data</span></span>|<span data-ttu-id="d136e-2295">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2295">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2296">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2296">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2297">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2297">Empty</span></span>|  
|<span data-ttu-id="d136e-2298">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2298">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2299">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2299">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2300">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2300">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2301">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2301">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2302">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2302">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2303">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2303">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2304">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2304">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2305">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2305">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2306">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2306">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2307">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2307">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2308">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2308">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2309">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2309">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2310">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2310">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2311">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2311">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2312">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2312">Required.</span>
          </span>
          <span data-ttu-id="d136e-2313">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2313">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2314">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2314">Required.</span>
          </span>
          <span data-ttu-id="d136e-2315">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2315">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2316">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2316">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2317">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2317">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2318">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2318">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2319">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2319">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2320">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2320">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2321">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2321">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2322">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2322">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2323">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2323">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2324">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2324">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2325">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2325">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2326">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2326">Data</span></span>|<span data-ttu-id="d136e-2327">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2327">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2328">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2328">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2329">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2329">Empty</span></span>|  
|<span data-ttu-id="d136e-2330">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2330">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2331">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2331">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2332">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2332">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2333">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2333">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2334">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2334">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2335">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2335">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2336">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2336">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2337">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2337">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2338">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2338">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2339">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2339">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2340">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2340">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2341">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2341">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2342">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2342">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2343">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2343">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2344">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2344">Required.</span>
          </span>
          <span data-ttu-id="d136e-2345">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2345">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2346">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2346">Required.</span>
          </span>
          <span data-ttu-id="d136e-2347">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2347">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2348">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2348">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2349">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2349">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2350">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2350">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2351">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2351">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2352">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2352">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2353">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2353">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2354">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2354">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2355">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2355">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2356">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2356">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2357">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2357">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2358">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2358">Data</span></span>|<span data-ttu-id="d136e-2359">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2359">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2360">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2360">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2361">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2361">Empty</span></span>|  
|<span data-ttu-id="d136e-2362">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2362">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2363">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2363">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2364">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2364">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2365">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2365">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2366">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2366">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2367">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2367">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2368">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2368">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2369">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2369">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2370">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2370">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2371">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2371">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2372">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2372">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2373">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2373">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2374">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2374">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2375">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2375">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2376">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2376">Required.</span>
          </span>
          <span data-ttu-id="d136e-2377">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2377">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="d136e-2378">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2378">Required.</span>
          </span>
          <span data-ttu-id="d136e-2379">Zmienna, której przypisano wartości odczytane z pliku — nie może być zmienną tablicy lub obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2379">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2380">Wczytuje dane z otwartego pliku sekwencyjnego i przypisuje dane do zmiennych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2380">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2381">`Input` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2381">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2382">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2382">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2383">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2383">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2384">Dane odczytane z `Input` są zwykle zapisywane w pliku przy użyciu `Write`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2384">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="d136e-2385">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2385">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2386">Podczas odczytu z plików nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2386">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2387">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="d136e-2387">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="d136e-2388">Podczas odczytu ciąg standardowy lub dane liczbowe przypisywane są do zmiennych bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2388">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="d136e-2389">Następująca tabela ilustruje, jak postępować z innymi danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="d136e-2389">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="d136e-2390">Dane</span><span class="sxs-lookup"><span data-stu-id="d136e-2390">Data</span></span>|<span data-ttu-id="d136e-2391">Wartość przypisana do zmiennej</span><span class="sxs-lookup"><span data-stu-id="d136e-2391">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="d136e-2392">Przecinek rozdzielający lub pusty wiersz</span><span class="sxs-lookup"><span data-stu-id="d136e-2392">Delimiting comma or blank line</span></span>|<span data-ttu-id="d136e-2393">Pusty</span><span class="sxs-lookup"><span data-stu-id="d136e-2393">Empty</span></span>|  
|<span data-ttu-id="d136e-2394">#NULL #</span><span class="sxs-lookup"><span data-stu-id="d136e-2394">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="d136e-2395">#PRAWDA # lub #FAŁSZ #</span><span class="sxs-lookup"><span data-stu-id="d136e-2395">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="d136e-2396">`True` lub `False`</span><span class="sxs-lookup"><span data-stu-id="d136e-2396">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="d136e-2397">Data i/lub godzina reprezentowana przez wyrażenie</span><span class="sxs-lookup"><span data-stu-id="d136e-2397">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="d136e-2398">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="d136e-2398">#ERROR `errornumber`#</span></span>|<span data-ttu-id="d136e-2399">`errornumber` (zmienna jest obiektem oznaczanym jako błąd)</span><span class="sxs-lookup"><span data-stu-id="d136e-2399">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="d136e-2400">Jeśli dojdziesz do końca pliku, w trakcie wprowadzania elementu danych, dane wejściowe zostaną zatrzymane i wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2400">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2401">`Input` Funkcja nie jest lokalizowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2401">The `Input` function is not localized.</span></span> <span data-ttu-id="d136e-2402">Na przykład w wersji niemieckiej wpisanie wartości 3,14159 spowoduje zwrócenie liczby 3, ponieważ przecinek jest traktowany jako separator zmiennej a nie jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="d136e-2402">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2403">Podczas odczytu z pliku za pomocą `Input` funkcja wymaga, aby `Read` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2403">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2404">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2404">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2405">W tym przykładzie użyto `Input` funkcji w celu odczytania danych z pliku do dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2405">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="d136e-2406">W tym przykładzie założono, że `TestFile` to plik zawierający kilka wierszy danych zapisanych przy użyciu `Write` funkcji, każdy wiersz zawiera ciąg w cudzysłowach i liczbę, oddzielone przecinkami, na przykład: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="d136e-2406">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2407">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2407">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberSignature Language="F#" Value="static member InputString : int * int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.InputString (FileNumber, CharCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2408">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2408">Required.</span>
          </span>
          <span data-ttu-id="d136e-2409">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2409">Any valid file number.</span>
          </span>
        </param>
        <param name="CharCount">
          <span data-ttu-id="d136e-2410">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2410">Required.</span>
          </span>
          <span data-ttu-id="d136e-2411">Dowolne prawidłowe wyrażenie liczbowe określającą liczbę znaków do odczytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2411">Any valid numeric expression specifying the number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2412">Zwraca <see langword="String" /> wartość, która zawiera znaki z pliku otwarte w <see langword="Input" /> lub <see langword="Binary" /> trybu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2412">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="d136e-2413">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2413">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
          <span data-ttu-id="d136e-2414">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2414">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2415">Zwraca <see langword="String" /> wartość, która zawiera znaki z pliku otwarte w <see langword="Input" /> lub <see langword="Binary" /> trybu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2415">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="d136e-2416">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2416">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2417">`InputString` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2417">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2418">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2418">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2419">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2419">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2420">Dane odczytane z `InputString` funkcji są zwykle zapisywane w pliku przy użyciu `Print` lub `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2420">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="d136e-2421">Funkcja ta jest widoczny tylko w przypadku plików otwartych w `Input` lub `Binary` trybu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2421">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="d136e-2422">W odróżnieniu od `Input` funkcji `InputString` funkcja zwraca wszystkie znaki, zostanie odczytanych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2422">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="d136e-2423">W tym przecinki, znaki powrotu karetki, wysuwu wiersza, znaki cudzysłowu i spacje.</span><span class="sxs-lookup"><span data-stu-id="d136e-2423">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="d136e-2424">W przypadku plików otwartych do `Binary` dostęp do próba odczytania pliku przy użyciu `InputString` działać do momentu `EOF` zwraca `True` generuje błąd.</span><span class="sxs-lookup"><span data-stu-id="d136e-2424">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="d136e-2425">Użyj `LOF` i `Loc` funkcji zamiast `EOF` podczas odczytu plików binarnych za pomocą `InputString`, lub użyj `FileGet` zastosowania `EOF` — funkcja.</span><span class="sxs-lookup"><span data-stu-id="d136e-2425">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2426">Podczas odczytu z plików, nie należy wprowadzać zabezpieczeń decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2426">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="d136e-2427">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-2427">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2428">W tym przykładzie użyto `InputString` funkcję, aby przeczytać o jeden znak w czasie z pliku i wydrukuj go do `Output` okna.</span><span class="sxs-lookup"><span data-stu-id="d136e-2428">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="d136e-2429">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2429">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2430">
            <paramref name="FileNumber" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2430">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-2431">
            <paramref name="CharCount" /> &lt; 0 lub &gt; 214.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2431">
              <paramref name="CharCount" /> &lt; 0 or &gt; 214.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member Kill : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Kill PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d136e-2432">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2432">Required.</span>
          </span>
          <span data-ttu-id="d136e-2433">
            <see langword="String" /> wyrażenie określające jedną lub więcej nazw plików do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2433">
              <see langword="String" /> expression that specifies one or more file names to be deleted.</span>
          </span>
          <span data-ttu-id="d136e-2434">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2434">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2435">Usuwa pliki z dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2435">Deletes files from a disk.</span>
          </span>
          <span data-ttu-id="d136e-2436">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Kill" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2436">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span>
          </span>
          <span data-ttu-id="d136e-2437">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2437">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2438">`Kill` obsługuje korzystanie z wielu znaków (`*`) i pojedynczych znaków (`?`) symboli wieloznacznych do określenia wielu plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-2438">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="d136e-2439">**Uwaga dotycząca zabezpieczeń** w celu wykonania `Kill` funkcja wymaga, aby `Read` i `PathDiscovery` flagi <xref:System.Security.Permissions.FileIOPermission> mieć uprawnienia do wykonywania kodu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2439">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="d136e-2440">Aby uzyskać więcej informacji, zobacz <xref:System.Security.SecurityException> [uprawnienia dostępu kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="d136e-2440">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2441">W tym przykładzie użyto `Kill` funkcję, aby usunąć plik z dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2441">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2442">Otwieranie plików docelowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2442">Target file(s) open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-2443">Nie można odnaleźć plików docelowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2443">Target file(s) not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d136e-2444">Odmowa uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2444">Permission denied.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LineInput : int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.LineInput FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2445">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2445">Required.</span>
          </span>
          <span data-ttu-id="d136e-2446">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2446">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2447">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnego i przypisuje go do <see langword="String" /> zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2447">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2448">Odczytuje pojedynczy wiersz z otwartego pliku sekwencyjnego i przypisuje go do <see langword="String" /> zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2448">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2449">`LineInput` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2449">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2450">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2450">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2451">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2451">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2452">Dane odczytane z `LineInput` są zwykle zapisywane w pliku przy użyciu `Print`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2452">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2453">Podczas odczytu z plików, nie należy podejmować decyzji dotyczących zawartości pliku na podstawie rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2453">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="d136e-2454">Na przykład plik o nazwie Form1.vb nie może być plikiem źródłowym programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-2454">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="d136e-2455">`LineInput` Funkcja odczytuje z pliku o jeden znak w danym momencie, aż do napotkania znaku powrotu karetki (`Chr(13)`) lub zwrotu/wiersz źródła danych (`Chr(13) + Chr(10)`) sekwencji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2455">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="d136e-2456">Sekwencje kanału informacyjnego powrotu/wiersza powrotu karetki są pomijane zamiast dołączany do ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="d136e-2456">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2457">Podczas odczytu z pliku za pomocą `LineInput` funkcja wymaga, aby `Read` dostęp z <xref:System.Security.Permissions.FileIOPermissionAccess> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2457">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2458">W tym przykładzie użyto `LineInput` funkcję, aby odczytać wiersz z pliku sekwencyjnego i przypisać ją do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="d136e-2458">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="d136e-2459">W tym przykładzie założono, że `TestFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2459">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="d136e-2460">Osiągnięto koniec pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2460">End of file reached.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2461">
            <paramref name="FileNumber" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2461">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Loc : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Loc FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2462">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2462">Required.</span>
          </span>
          <span data-ttu-id="d136e-2463">Dowolne, prawidłowe <see langword="Integer" /> pliku numer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2463">Any valid <see langword="Integer" /> file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2464">Zwraca <see langword="Long" /> wartość określającą bieżącą pozycję odczytu/zapisu w otwartego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2464">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2465">Zwraca <see langword="Long" /> wartość określającą bieżącą pozycję odczytu/zapisu w otwartego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2465">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2466">`Loc` Funkcji jest liczony od zera; korzystania z niego pobrać pierwszy bajt w pliku zwróci wartość 0.</span><span class="sxs-lookup"><span data-stu-id="d136e-2466">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="d136e-2467">`Loc` Funkcja zapewnia zgodność z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2467">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2468">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2468">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2469">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2469">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2470">Poniżej opisano wartość zwracana przez każdy tryb dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="d136e-2470">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="d136e-2471">Tryb</span><span class="sxs-lookup"><span data-stu-id="d136e-2471">Mode</span></span>|<span data-ttu-id="d136e-2472">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d136e-2472">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="d136e-2473">Numer ostatniego rekordu odczytywany lub zapisywany do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2473">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="d136e-2474">Bieżące położenie bajtów w pliku podzielona przez 128.</span><span class="sxs-lookup"><span data-stu-id="d136e-2474">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="d136e-2475">Jednak informacje zwrócone przez `Loc` dla kolejnych plików nie jest używany ani wymagane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2475">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="d136e-2476">Położenie ostatniego bajtu zapisu lub odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2476">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2477">W tym przykładzie użyto `Loc` funkcja zwraca bieżącą pozycję odczytu/zapisu w otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2477">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="d136e-2478">W tym przykładzie założono, że `MyFile` to plik tekstowy, który ma kilka wierszy przykładowych danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2478">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2479">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2479">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2480">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2480">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2481">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2481">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2482">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2482">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Lock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2483">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2483">Required.</span>
          </span>
          <span data-ttu-id="d136e-2484">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2484">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2485">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2485">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2486">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2486">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2487">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2487">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2488">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2488">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d136e-2489">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d136e-2489">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d136e-2490">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d136e-2490">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d136e-2491">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-2491">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d136e-2492">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2492">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d136e-2493">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2493">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2494">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2494">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d136e-2495">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2495">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2496">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2496">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2497">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2497">Required.</span>
          </span>
          <span data-ttu-id="d136e-2498">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2498">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="d136e-2499">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2499">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2500">Liczba tylko rekord lub bajt do zablokowania lub odblokowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2500">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2501">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2501">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2502">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2502">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2503">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2503">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2504">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2504">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d136e-2505">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d136e-2505">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d136e-2506">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d136e-2506">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d136e-2507">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-2507">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d136e-2508">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2508">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d136e-2509">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2509">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2510">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2510">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d136e-2511">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2511">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2512">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2512">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2513">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2513">Required.</span>
          </span>
          <span data-ttu-id="d136e-2514">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2514">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="d136e-2515">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2515">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2516">Liczba pierwszy rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2516">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="d136e-2517">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2517">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2518">Liczba ostatnich rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2518">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2519">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2519">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2520">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2520">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2521">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2521">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2522">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2522">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d136e-2523">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d136e-2523">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d136e-2524">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d136e-2524">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d136e-2525">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-2525">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d136e-2526">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2526">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d136e-2527">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2527">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2528">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2528">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d136e-2529">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2529">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2530">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2530">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LOF : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.LOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2531">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2531">Required.</span>
          </span>
          <span data-ttu-id="d136e-2532">
            <see langword="Integer" /> Zawierający prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2532">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2533">Zwraca <see langword="Long" /> reprezentującą rozmiar w bajtach, w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2533">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2534">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2534">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
          <span data-ttu-id="d136e-2535">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2535">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2536">Zwraca <see langword="Long" /> reprezentującą rozmiar w bajtach, w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2536">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2537">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2537">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2538">Użyj `FileLen` funkcję, aby uzyskać długość pliku, który nie jest otwarty.</span><span class="sxs-lookup"><span data-stu-id="d136e-2538">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2539">W tym przykładzie użyto `LOF` funkcję, aby określić rozmiar otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2539">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="d136e-2540">W tym przykładzie założono, że `TestFile` to plik tekstowy, który zawiera przykładowe dane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2540">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2541">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2541">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member MkDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.MkDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="d136e-2542">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2542">Required.</span>
          </span>
          <span data-ttu-id="d136e-2543">
            <see langword="String" /> wyrażenie, które identyfikuje katalog, który ma zostać utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2543">
              <see langword="String" /> expression that identifies the directory to be created.</span>
          </span>
          <span data-ttu-id="d136e-2544">
            <c>Ścieżki</c> mogą obejmować dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2544">The <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="d136e-2545">Jeśli dysk nie zostanie określony, <see langword="MkDir" /> powoduje utworzenie nowego katalogu na bieżącym dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2545">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2546">Tworzy nowy katalog.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2546">Creates a new directory.</span>
          </span>
          <span data-ttu-id="d136e-2547">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="MkDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2547">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span>
          </span>
          <span data-ttu-id="d136e-2548">Aby uzyskać więcej informacji, zobacz <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2548">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2549">Ta funkcja tworzy nowy katalog.</span><span class="sxs-lookup"><span data-stu-id="d136e-2549">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2550">W tym przykładzie użyto `MkDir` funkcję, aby utworzyć katalog.</span><span class="sxs-lookup"><span data-stu-id="d136e-2550">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="d136e-2551">Jeśli dysk nie zostanie określony, nowy katalog jest tworzony na bieżącym dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2551">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-2552">
            <paramref name="Path" /> nie jest określona lub jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2552">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d136e-2553">Odmowa uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2553">Permission denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2554">Katalog już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2554">Directory already exists.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Print : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Print (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2555">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2555">Required.</span>
          </span>
          <span data-ttu-id="d136e-2556">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2556">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d136e-2557">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2557">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2558">Zero lub więcej rozdzielonych przecinkami wyrażenia, aby zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2558">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="d136e-2559">
            <c>Dane wyjściowe</c> ustawienia argumentu są:</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2559">The <c>Output</c> argument settings are:</span>
          </span>
          <span data-ttu-id="d136e-2560">
            <see langword="T:System.IO.IOException" />: Tryb plik jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2560">
              <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="d136e-2561">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2561">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2562">Zapisy wyświetlania danych w formacie pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2562">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2563">`Print` i `PrintLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2563">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2564">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2564">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2565">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2565">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2566">`Print` nie ma wiersz na końcu wiersza; jednak `PrintLine` Dołącz wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2566">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="d136e-2567">Dane zapisane z `Print` są zazwyczaj odczytywane z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2567">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="d136e-2568">Jeżeli pominięto `Output` dla `PrintLine`, pusty wiersz zostanie wydrukowany do pliku; w przypadku `Print`, nic nie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2568">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="d136e-2569">Wiele wyrażeń oddzielone przecinkami mają zostać wyrównane na granicach kartę, ale mieszanie przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="d136e-2569">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="d136e-2570">Aby uzyskać `Boolean` danych, albo `True` lub `False` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2570">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="d136e-2571">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2571">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="d136e-2572">Dane są zapisywane do pliku przy użyciu formatu daty krótkiej standardowa rozpoznany przez system.</span><span class="sxs-lookup"><span data-stu-id="d136e-2572">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="d136e-2573">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2573">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="d136e-2574">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d136e-2574">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d136e-2575">Jednak jeśli `Output` dane listy `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2575">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="d136e-2576">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2576">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="d136e-2577">`Error` — Słowo kluczowe nie jest tłumaczony niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2577">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="d136e-2578">Wszystkie dane zapisane do pliku za pomocą `Print` uwzględnia ustawienia regionalne; oznacza to, dane są poprawnie sformatowane przy użyciu odpowiednich separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2578">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="d136e-2579">Jeśli użytkownik chce do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2579">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="d136e-2580">Zapisywanie do pliku za pomocą `Print` lub `PrintLine` functions wymaga `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2580">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2581">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d136e-2581">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2582">W tym przykładzie użyto `Print` i `PrintLine` funkcje można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2582">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member PrintLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.PrintLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2583">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2583">Required.</span>
          </span>
          <span data-ttu-id="d136e-2584">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2584">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d136e-2585">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2585">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2586">Zero lub więcej rozdzielonych przecinkami wyrażenia, aby zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2586">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="d136e-2587">
            <c>Dane wyjściowe</c> ustawienia argumentu są:</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2587">The <c>Output</c> argument settings are:</span>
          </span>
          <span data-ttu-id="d136e-2588">
            <see langword="T:System.IO.IOException" />: Tryb plik jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2588">
              <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="d136e-2589">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2589">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2590">Zapisy wyświetlania danych w formacie pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2590">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2591">`Print` i `PrintLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2591">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2592">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2592">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2593">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2593">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2594">`Print` nie ma wiersz na końcu wiersza; jednak`PrintLine` Dołącz wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2594">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="d136e-2595">Dane zapisane z `Print` są zazwyczaj odczytywane z pliku za pomocą `LineInput` lub `Input`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2595">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="d136e-2596">Jeżeli pominięto `Output` dla `PrintLine`, pusty wiersz zostanie wydrukowany do pliku; w przypadku `Print`, nic nie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2596">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="d136e-2597">Wiele wyrażeń oddzielone przecinkami mają zostać wyrównane na granicach kartę, ale mieszanie przecinkami i `TAB` może spowodować niespójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="d136e-2597">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="d136e-2598">Aby uzyskać `Boolean` danych, albo `True` lub `False` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2598">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="d136e-2599">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2599">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="d136e-2600">Dane są zapisywane do pliku przy użyciu formatu daty krótkiej standardowa rozpoznawane przez system.</span><span class="sxs-lookup"><span data-stu-id="d136e-2600">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="d136e-2601">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2601">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="d136e-2602">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d136e-2602">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d136e-2603">Jednak jeśli `Output` dane listy `DBNull`, `Null` są zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2603">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="d136e-2604">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2604">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="d136e-2605">`Error` — Słowo kluczowe nie jest tłumaczony niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2605">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="d136e-2606">Wszystkie dane zapisane do pliku za pomocą `Print` uwzględnia ustawienia regionalne; oznacza to, dane są poprawnie sformatowane przy użyciu odpowiednich separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2606">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="d136e-2607">Jeśli użytkownik chce do wysyłania danych do użycia przez wielu ustawień regionalnych, `Write` powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2607">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="d136e-2608">Zapisywanie do pliku za pomocą `Print` lub `PrintLine` functions wymaga `Write` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2608">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2609">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d136e-2609">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2610">W tym przykładzie użyto `Print` i `PrintLine` funkcje można zapisać danych do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2610">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberSignature Language="F#" Value="static member Rename : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Rename (OldPath, NewPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath">
          <span data-ttu-id="d136e-2611">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2611">Required.</span>
          </span>
          <span data-ttu-id="d136e-2612">
            <see langword="String" /> wyrażenie określające istniejącej nazwy pliku i lokalizację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2612">
              <see langword="String" /> expression that specifies the existing file name and location.</span>
          </span>
          <span data-ttu-id="d136e-2613">
            <c>OldPath</c> może zawierać katalogu i dysku w pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2613">
              <c>OldPath</c> may include the directory, and drive, of the file.</span>
          </span>
        </param>
        <param name="NewPath">
          <span data-ttu-id="d136e-2614">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2614">Required.</span>
          </span>
          <span data-ttu-id="d136e-2615">
            <see langword="String" /> wyrażenie, które określa nową nazwę pliku i lokalizację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2615">
              <see langword="String" /> expression that specifies the new file name and location.</span>
          </span>
          <span data-ttu-id="d136e-2616">
            <c>Nowa_ścieżka</c> mogą obejmować katalogu oraz dysk w lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2616">
              <c>NewPath</c> may include directory and drive of the destination location.</span>
          </span>
          <span data-ttu-id="d136e-2617">Nazwa pliku określona przez <c>Nowa_ścieżka</c> już nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2617">The file name specified by <c>NewPath</c> cannot already exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2618">Zmienia nazwę pliku lub katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2618">Renames a disk file or directory.</span>
          </span>
          <span data-ttu-id="d136e-2619">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Rename" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2619">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span>
          </span>
          <span data-ttu-id="d136e-2620">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2620">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2621">`Rename` Funkcji zmieniania nazwy pliku i przenosi je do innego katalogu, jeśli jest to wymagane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2621">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="d136e-2622">`Rename` Funkcji można przenieść plik na dyskach, ale tylko wtedy można zmienić nazwę istniejącego katalogu podczas zarówno `NewPath` i `OldPath` znajdują się na tym samym dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2622">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="d136e-2623">`Rename` Nie można utworzyć nowego pliku lub katalogu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2623">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="d136e-2624">Za pomocą `Rename` generuje błąd, funkcję dla otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2624">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="d136e-2625">Otwórz plik należy zamknąć przed zmianą nazwy.</span><span class="sxs-lookup"><span data-stu-id="d136e-2625">You must close an open file before renaming it.</span></span> <span data-ttu-id="d136e-2626">`Rename` argumenty nie może zawierać wielu znaków (\*) i symboli wieloznacznych pojedynczych znaków (?).</span><span class="sxs-lookup"><span data-stu-id="d136e-2626">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d136e-2627">Korzystając z `Rename` do skopiowania pliku niechronionych lokalizacji do chronionej lokalizacji, plik zachowuje mniej ograniczone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2627">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="d136e-2628">Sprawdź, czy nie są Przedstawiamy zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="d136e-2628">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2629">W tym przykładzie użyto `Rename` funkcję, aby zmienić nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2629">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="d136e-2630">Do celów tego przykładu założono, że katalogi, które są określone w już istnieje.</span><span class="sxs-lookup"><span data-stu-id="d136e-2630">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-2631">Ścieżka jest nieprawidłowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2631">Path is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-2632">
            <paramref name="OldPath" /> Plik nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2632">
              <paramref name="OldPath" /> file does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2633">Nie można zmienić nazwy do innego urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2633">Cannot rename to different device.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberSignature Language="F#" Value="static member Reset : unit -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2634">Zamyka wszystkie dysku pliki otwierane przy użyciu <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2634">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2635">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Reset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2635">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span>
          </span>
          <span data-ttu-id="d136e-2636">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2636">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2637">`Reset` Funkcji spowoduje zamknięcie wszystkich aktywnych plików otwartych przez `FileOpen` działa i ma taką samą funkcję jak `FileClose()` bez żadnych parametrów.</span><span class="sxs-lookup"><span data-stu-id="d136e-2637">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2638">W tym przykładzie użyto `Reset` funkcję, aby zamknąć wszystkie otwarte pliki i zapisać zawartość wszystkie bufory plików na dysku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2638">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="d136e-2639">Zwróć uwagę na użycie `Object` zmiennej `FileNumber` zarówno jako ciąg i numeru.</span><span class="sxs-lookup"><span data-stu-id="d136e-2639">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member RmDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.RmDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="d136e-2640">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2640">Required.</span>
          </span>
          <span data-ttu-id="d136e-2641">
            <see langword="String" /> wyrażenie, które identyfikuje katalogu lub folderu, do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2641">
              <see langword="String" /> expression that identifies the directory or folder to be removed.</span>
          </span>
          <span data-ttu-id="d136e-2642">
            <c>Ścieżka</c> można dołączyć dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2642">
              <c>Path</c> can include the drive.</span>
          </span>
          <span data-ttu-id="d136e-2643">Jeśli dysk nie zostanie określony, <see langword="RmDir" /> powoduje usunięcie katalogu na bieżącym dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2643">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2644">Usuwa istniejącego katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2644">Removes an existing directory.</span>
          </span>
          <span data-ttu-id="d136e-2645">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="RmDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2645">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span>
          </span>
          <span data-ttu-id="d136e-2646">Aby uzyskać więcej informacji, zobacz <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2646">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2647">Błąd występuje, Jeśli spróbujesz użyć `RmDir` w katalogu, który zawiera pliki.</span><span class="sxs-lookup"><span data-stu-id="d136e-2647">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="d136e-2648">Użyj `Kill` funkcję, aby usunąć wszystkie pliki, zanim spróbujesz usunąć katalog.</span><span class="sxs-lookup"><span data-stu-id="d136e-2648">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2649">W tym przykładzie użyto `RmDir` funkcję, aby usunąć istniejący katalog.</span><span class="sxs-lookup"><span data-stu-id="d136e-2649">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-2650">
            <paramref name="Path" /> nie jest określona lub jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2650">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2651">Katalog docelowy zawiera pliki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2651">Target directory contains files.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d136e-2652">Katalog nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2652">Directory does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2653">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2653">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2654">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2654">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="d136e-2655">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2655">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Seek : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Seek FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2656">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2656">Required.</span>
          </span>
          <span data-ttu-id="d136e-2657">
            <see langword="Integer" /> Zawierający prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2657">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2658">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2658">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2659">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2659">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="d136e-2660">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2660">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2661">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2661">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2662">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (równoważne do 2 ^ 31-1) włącznie.</span><span class="sxs-lookup"><span data-stu-id="d136e-2662">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="d136e-2663">Poniżej przedstawiono wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="d136e-2663">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="d136e-2664">Tryb</span><span class="sxs-lookup"><span data-stu-id="d136e-2664">Mode</span></span>|<span data-ttu-id="d136e-2665">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d136e-2665">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="d136e-2666">Liczbę odczytywanych lub zapisywanych następnego rekordu</span><span class="sxs-lookup"><span data-stu-id="d136e-2666">Number of the next record read or written</span></span>|  
|<span data-ttu-id="d136e-2667">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="d136e-2667">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="d136e-2668">Pozycja bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2668">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="d136e-2669">Pierwszy bajt w pliku znajduje się na pozycji 1, drugi bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-2669">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2670">W tym przykładzie użyto `Seek` funkcja zwraca bieżącą pozycję w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2670">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="d136e-2671">W przykładzie założono `TestFile` to plik zawierający rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2671">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="d136e-2672">Do plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2672">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="d136e-2673">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2673">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d136e-2674">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2674">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="d136e-2675">W tym przykładzie użyto `Seek` funkcję, aby ustawić położenie do następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2675">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="d136e-2676">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2676">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d136e-2677">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2677">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2678">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2678">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberSignature Language="F#" Value="static member Seek : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Seek (FileNumber, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2679">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2679">Required.</span>
          </span>
          <span data-ttu-id="d136e-2680">
            <see langword="Integer" /> Zawierający prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2680">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="d136e-2681">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2681">Required.</span>
          </span>
          <span data-ttu-id="d136e-2682">Jeśli wystąpią liczbą z zakresu 1 – 2 147 483 647, włącznie, która wskazuje, gdzie następnego odczyt/zapis operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2682">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2683">Zwraca <see langword="Long" /> określającą bieżącą pozycję odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji lub ustawia pozycję dla następnej operacji odczytu/zapisu w pliku otwartym za pomocą <see langword="FileOpen" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2683">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2684">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2684">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="d136e-2685">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2685">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2686">`Seek` Zwraca wartość z zakresu od 1 do 2 147 483 647 (równoważne do 2 ^ 31-1) włącznie.</span><span class="sxs-lookup"><span data-stu-id="d136e-2686">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="d136e-2687">Poniżej przedstawiono wartości zwracane dla każdego trybu dostępu do pliku:</span><span class="sxs-lookup"><span data-stu-id="d136e-2687">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="d136e-2688">Tryb</span><span class="sxs-lookup"><span data-stu-id="d136e-2688">Mode</span></span>|<span data-ttu-id="d136e-2689">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d136e-2689">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="d136e-2690">Liczbę odczytywanych lub zapisywanych następnego rekordu</span><span class="sxs-lookup"><span data-stu-id="d136e-2690">Number of the next record read or written</span></span>|  
|<span data-ttu-id="d136e-2691">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="d136e-2691">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="d136e-2692">Pozycja bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2692">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="d136e-2693">Pierwszy bajt w pliku znajduje się na pozycji 1, drugi bajt na pozycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d136e-2693">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2694">W tym przykładzie użyto `Seek` funkcja zwraca bieżącą pozycję w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2694">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="d136e-2695">W przykładzie założono `TestFile` to plik zawierający rekordy struktury `Record`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2695">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="d136e-2696">Do plików otwieranych w `Random` trybie `Seek` zwraca liczbę następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2696">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="d136e-2697">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` zwraca pozycję bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2697">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d136e-2698">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2698">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="d136e-2699">W tym przykładzie użyto `Seek` funkcję, aby ustawić położenie do następnego odczytu lub zapisu w pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2699">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="d136e-2700">W przypadku plików otwartych w trybach innych niż `Random` trybie `Seek` Ustawia położenie bajt, w którym występuje następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2700">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="d136e-2701">Załóżmy `TestFile` jest plikiem zawierającym kilka wierszy tekstu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2701">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2702">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2702">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberSignature Language="F#" Value="static member SetAttr : string * Microsoft.VisualBasic.FileAttribute -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.SetAttr (PathName, Attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="d136e-2703">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2703">Required.</span>
          </span>
          <span data-ttu-id="d136e-2704">
            <see langword="String" /> wyrażenie, które określa nazwę pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2704">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="d136e-2705">
            <c>Nazwa ścieżki</c> może zawierać katalogu lub folderu i dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2705">
              <c>PathName</c> can include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Attributes">
          <span data-ttu-id="d136e-2706">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2706">Required.</span>
          </span>
          <span data-ttu-id="d136e-2707">Wyrażenie stałe i liczbowego, w których suma określa atrybuty pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2707">Constant or numeric expression, whose sum specifies file attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2708">Ustawia atrybut informacji dla pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2708">Sets attribute information for a file.</span>
          </span>
          <span data-ttu-id="d136e-2709">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="SetAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2709">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span>
          </span>
          <span data-ttu-id="d136e-2710">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2710">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2711">Błąd czasu wykonywania występuje, Jeśli spróbujesz ustawić atrybuty otwartego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2711">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="d136e-2712">`Attributes` Wartości wyliczenia argumentów są następujące:</span><span class="sxs-lookup"><span data-stu-id="d136e-2712">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="d136e-2713">Wartość</span><span class="sxs-lookup"><span data-stu-id="d136e-2713">Value</span></span>|<span data-ttu-id="d136e-2714">Stała</span><span class="sxs-lookup"><span data-stu-id="d136e-2714">Constant</span></span>|<span data-ttu-id="d136e-2715">Opis</span><span class="sxs-lookup"><span data-stu-id="d136e-2715">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="d136e-2716">Normalny (domyślnie).</span><span class="sxs-lookup"><span data-stu-id="d136e-2716">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="d136e-2717">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2717">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="d136e-2718">Ukryte.</span><span class="sxs-lookup"><span data-stu-id="d136e-2718">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="d136e-2719">System plików.</span><span class="sxs-lookup"><span data-stu-id="d136e-2719">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="d136e-2720">Etykieta woluminu</span><span class="sxs-lookup"><span data-stu-id="d136e-2720">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="d136e-2721">Katalogu lub folderu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2721">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="d136e-2722">Plik został zmieniony od czasu wykonania ostatniej kopii zapasowej.</span><span class="sxs-lookup"><span data-stu-id="d136e-2722">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="d136e-2723">Plik ma inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d136e-2723">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2724">Te wyliczenia są określane za pomocą języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d136e-2724">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="d136e-2725">Nazwy mogą być używane w dowolnym miejscu w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2725">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2726">W tym przykładzie użyto `SetAttr` funkcję, aby ustawić atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2726">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d136e-2727">
            <paramref name="Attribute" /> Typ jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2727">
              <paramref name="Attribute" /> type is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberSignature Language="F#" Value="static member SPC : int16 -&gt; Microsoft.VisualBasic.SpcInfo" Usage="Microsoft.VisualBasic.FileSystem.SPC Count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count">
          <span data-ttu-id="d136e-2728">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2728">Required.</span>
          </span>
          <span data-ttu-id="d136e-2729">Liczba miejsc do magazynowania, aby wstawić przed wyświetleniem lub drukowanie następnego wyrażenia na liście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2729">The number of spaces to insert before displaying or printing the next expression in a list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2730">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2730">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2731">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> funkcji do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2731">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2732">Jeśli `Count` jest mniejsza niż szerokość linii danych wyjściowych, natychmiast następną pozycję wydruku następuje liczba wydrukowanych spacji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2732">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="d136e-2733">Jeśli`Count` jest większa niż szerokość linii danych wyjściowych, `SPC` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="d136e-2733">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="d136e-2734">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="d136e-2734">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="d136e-2735">Na przykład, jeśli bieżącej pozycji drukowania jest 24, szerokość linii danych wyjściowych to 80 i określeniu `SPC(90)`, drukowania dalej rozpocznie się od pozycji 34 (bieżącej pozycji drukowania + pozostałą część 90/80).</span><span class="sxs-lookup"><span data-stu-id="d136e-2735">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="d136e-2736">Jeśli różnica między bieżącą pozycję wydruku i szerokości linii danych wyjściowych jest mniejsza niż `Count` (lub `Count` `Mod` *szerokość*), `SPC` funkcji nakłada się na początku następnego wiersza i generuje miejsca do magazynowania jest równa `Count` — (*szerokość* — *bieżąca_pozycja_wydruku*).</span><span class="sxs-lookup"><span data-stu-id="d136e-2736">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` – (*width* – *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2737">Upewnij się, że kolumny tabel są dostatecznie szeroka umożliwić szerokie litery.</span><span class="sxs-lookup"><span data-stu-id="d136e-2737">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2738">W tym przykładzie użyto `SPC` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="d136e-2738">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2739">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2739">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberSignature Language="F#" Value="static member TAB : unit -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2740">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2740">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2741">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2741">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2742">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większy niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2742">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="d136e-2743">Jeśli `Column` jest mniejszy niż 1 `TAB` Przenosi pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="d136e-2743">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="d136e-2744">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="d136e-2744">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="d136e-2745">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="d136e-2745">Column Mod width</span></span>  
  
 <span data-ttu-id="d136e-2746">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, drukowania dalej rozpocznie się w kolumnie 10 (reszta 90/80).</span><span class="sxs-lookup"><span data-stu-id="d136e-2746">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="d136e-2747">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania drukowania rozpoczyna się w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="d136e-2747">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="d136e-2748">Jeśli obliczonej pozycji drukowania jest większy niż bieżąca pozycja drukowania, drukowanie rozpoczyna się na obliczony wydrukować pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2748">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="d136e-2749">Skrajnie po lewej stronie pozycji drukowania w wierszu danych wyjściowych ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="d136e-2749">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="d136e-2750">Kiedy używasz `Print` lub `PrintLine` funkcji Drukowanie do plików, po prawej stronie pozycji drukowania jest szerokość bieżącego pliku wyjściowego, który można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2750">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="d136e-2751">`TAB` Funkcji można używać z `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2751">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="d136e-2752">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2752">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2753">Upewnij się, że kolumny tabel są dostatecznie szeroka, aby zawierać litery szerokości.</span><span class="sxs-lookup"><span data-stu-id="d136e-2753">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2754">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="d136e-2754">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberSignature Language="F#" Value="static member TAB : int16 -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB Column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column">
          <span data-ttu-id="d136e-2755">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2755">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2756">Numer kolumny, przenieść przed wyświetleniem lub drukowanie następnego wyrażenia na liście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2756">The column number moved to before displaying or printing the next expression in a list.</span>
          </span>
          <span data-ttu-id="d136e-2757">W przypadku pominięcia <see langword="TAB" /> przenosi punkt wstawiania do początku następnego strefy drukowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2757">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2758">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2758">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d136e-2759">Używane z <see langword="Print" /> lub <see langword="PrintLine" /> do pozycjonowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2759">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2760">Jeśli bieżąca pozycja drukowania w bieżącym wierszu jest większa niż `Column`, `TAB` przejdzie do wartości kolumny równej `Column` w następnym wierszu danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2760">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="d136e-2761">Jeśli `Column` jest mniejszy niż 1 `TAB` Przenosi pozycję wydruku do kolumny 1.</span><span class="sxs-lookup"><span data-stu-id="d136e-2761">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="d136e-2762">Jeśli `Column` jest większa niż szerokość linii danych wyjściowych, `TAB` oblicza następną pozycję wydruku przy użyciu formuły:</span><span class="sxs-lookup"><span data-stu-id="d136e-2762">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="d136e-2763">Mod szerokość kolumny</span><span class="sxs-lookup"><span data-stu-id="d136e-2763">Column Mod width</span></span>  
  
 <span data-ttu-id="d136e-2764">Na przykład jeśli *szerokość* to 80 i określeniu `TAB(90)`, drukowania dalej rozpocznie się w kolumnie 10 (reszta 90/80).</span><span class="sxs-lookup"><span data-stu-id="d136e-2764">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="d136e-2765">Jeśli `Column` jest mniejsza od bieżącej pozycji drukowania drukowania rozpoczyna się w następnym wierszu na obliczonej pozycji drukowania.</span><span class="sxs-lookup"><span data-stu-id="d136e-2765">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="d136e-2766">Jeśli obliczonej pozycji drukowania jest większa od bieżącej pozycji drukowania, drukowanie rozpoczyna się na obliczony wydrukować pozycji w tym samym wierszu.</span><span class="sxs-lookup"><span data-stu-id="d136e-2766">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="d136e-2767">Skrajnie po lewej stronie pozycji drukowania w wierszu danych wyjściowych ma zawsze numer 1.</span><span class="sxs-lookup"><span data-stu-id="d136e-2767">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="d136e-2768">Kiedy używasz `Print` lub `PrintLine` funkcji Drukowanie do plików, po prawej stronie pozycji drukowania jest szerokość bieżącego pliku wyjściowego, który można ustawić za pomocą `FileWidth` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2768">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="d136e-2769">`TAB` Funkcji można używać z `WriteLine` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2769">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="d136e-2770">Nie można używać z <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d136e-2770">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d136e-2771">Upewnij się, że kolumny tabel są dostatecznie szeroka, aby zawierać litery szerokości.</span><span class="sxs-lookup"><span data-stu-id="d136e-2771">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2772">W tym przykładzie użyto `TAB` funkcji do pozycjonowania danych wyjściowych w pliku, a w **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="d136e-2772">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d136e-2773">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2773">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2774">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2774">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2775">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2775">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Unlock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2776">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2776">Required.</span>
          </span>
          <span data-ttu-id="d136e-2777">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2777">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2778">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2778">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2779">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2779">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2780">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2780">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2781">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2781">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d136e-2782">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d136e-2782">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d136e-2783">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d136e-2783">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d136e-2784">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-2784">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d136e-2785">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2785">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d136e-2786">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2786">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2787">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2787">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d136e-2788">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2788">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2789">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2789">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2790">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2790">Required.</span>
          </span>
          <span data-ttu-id="d136e-2791">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2791">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="d136e-2792">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2792">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2793">Liczba tylko rekord lub bajt do zablokowania lub odblokowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2793">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2794">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2794">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2795">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2795">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2796">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2796">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2797">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2797">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d136e-2798">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d136e-2798">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d136e-2799">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d136e-2799">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d136e-2800">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-2800">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d136e-2801">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2801">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d136e-2802">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2802">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2803">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2803">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d136e-2804">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2804">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2805">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2805">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2806">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2806">Required.</span>
          </span>
          <span data-ttu-id="d136e-2807">Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2807">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="d136e-2808">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2808">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2809">Liczba pierwszy rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2809">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="d136e-2810">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2810">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2811">Liczba ostatnich rekord lub bajt, aby zablokować lub odblokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2811">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2812">Służy do sterowania dostępem innych procesów do całości lub części pliku otwartego przy użyciu <see langword="Open" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2812">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="d136e-2813">
            <see langword="My" /> Funkcja zapewnia lepszą szybkość i wydajność w operacjach we/wy pliku niż <see langword="Lock" /> i <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2813">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="d136e-2814">Aby uzyskać więcej informacji, zobacz <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2814">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2815">`Lock` i `Unlock` funkcje są używane w środowiskach, w których kilka procesów wymaga dostępu do tego samego pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2815">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="d136e-2816">`Lock` i `Unlock` funkcje są zawsze używane w parach.</span><span class="sxs-lookup"><span data-stu-id="d136e-2816">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="d136e-2817">Argumenty `Lock` i `Unlock` muszą być identyczne.</span><span class="sxs-lookup"><span data-stu-id="d136e-2817">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="d136e-2818">Jeśli `Record`, lub `FromRecord` i `ToRecord` są nie zostanie podany, blokada obejmie cały plik.</span><span class="sxs-lookup"><span data-stu-id="d136e-2818">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="d136e-2819">Jeśli `Record` samodzielnie zostanie określony pojedynczy rekord zostanie zablokowany/odblokowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2819">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="d136e-2820">Jeśli plik został otwarty do sekwencyjnego danych wejściowych lub wyjściowych, `Lock` i `Unlock` dotyczą całego pliku, niezależnie od tego, w zakresie określonym przez `FromRecord` i`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2820">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2821">Ten przykład ilustruje użycie `Lock` i `Unlock` funkcji.</span><span class="sxs-lookup"><span data-stu-id="d136e-2821">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="d136e-2822">W tym przykładzie założono, że `People.txt` to plik zawierający rekordy struktury `Person`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2822">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2823">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2823">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Write : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Write (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2824">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2824">Required.</span>
          </span>
          <span data-ttu-id="d136e-2825">
            <see langword="Integer" /> Wyrażenia zawierającego Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2825">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d136e-2826">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2826">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2827">Co najmniej jednego rozdzielonych przecinkami wyrażenia można zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2827">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2828">Zapisuje dane do pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2828">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="d136e-2829">Dane zapisane z <see langword="Write" /> są zazwyczaj odczytywane z pliku za pomocą <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2829">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2830">`Write` i `WriteLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2830">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2831">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2831">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2832">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2832">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2833">Jeżeli pominięto `Output`, wydrukowaniu pusty wiersz do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2833">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="d136e-2834">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-2834">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="d136e-2835">W odróżnieniu od `Print` funkcji `Write` funkcji wstawia przecinkami, między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2835">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="d136e-2836">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="d136e-2836">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="d136e-2837">Gdy `Write` służy do zapisywania danych do pliku, tylko liczbowe, `Boolean`, Data, null, i `Error` formatów danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2837">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="d136e-2838">Następujące założenia uniwersalne są przestrzegane, dzięki czemu dane mogą zawsze odczytać i poprawnie interpretowany przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="d136e-2838">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="d136e-2839">Dane liczbowe są zawsze zapisywane używającego kropki jako separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2839">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="d136e-2840">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2840">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="d136e-2841">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2841">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="d136e-2842">Dane daty są zapisywane do pliku przy użyciu formatu daty uniwersalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2842">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="d136e-2843">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2843">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="d136e-2844">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d136e-2844">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d136e-2845">Jednak w przypadku danych o wartości null `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2845">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="d136e-2846">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2846">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="d136e-2847">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2847">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="d136e-2848">`WriteLine` Wstawia znak nowego wiersza (czyli kanału informacyjnego powrotu karetki/wiersza lub `Chr(13) + Chr(10)`) po zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2848">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="d136e-2849">Możesz osadzić znaki cudzysłowu w ciągu za pomocą podwójnego cudzysłowu lub "".</span><span class="sxs-lookup"><span data-stu-id="d136e-2849">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="d136e-2850">Na przykład</span><span class="sxs-lookup"><span data-stu-id="d136e-2850">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="d136e-2851">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2851">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="d136e-2852">Zapisywanie do pliku za pomocą `Write` lub `WriteLine` functions wymaga `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2852">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2853">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d136e-2853">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2854">W tym przykładzie użyto `Write` funkcji do zapisu danych pierwotnych pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2854">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d136e-2855">Tryb pliku jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2855">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.WriteLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="d136e-2856">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2856">Required.</span>
          </span>
          <span data-ttu-id="d136e-2857">
            <see langword="Integer" /> Wyrażenia zawierającego Dowolna prawidłowa liczba plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2857">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="d136e-2858">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2858">Optional.</span>
          </span>
          <span data-ttu-id="d136e-2859">Co najmniej jednego rozdzielonych przecinkami wyrażenia można zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2859">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d136e-2860">Zapisuje dane do pliku sekwencyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2860">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="d136e-2861">Dane zapisane z <see langword="Write" /> są zazwyczaj odczytywane z pliku za pomocą <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d136e-2861">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d136e-2862">`Write` i `WriteLine` funkcje są zapewniane dla zgodności z poprzednimi wersjami i może mieć wpływ na wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2862">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="d136e-2863">W przypadku aplikacji innych niż ZASTANE `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="d136e-2863">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="d136e-2864">Aby uzyskać więcej informacji, zobacz [dostęp do plików za pomocą Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="d136e-2864">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="d136e-2865">Jeżeli pominięto `Output`, wydrukowaniu pusty wiersz do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2865">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="d136e-2866">Wiele wyrażeń mogą być oddzielone przecinkami.</span><span class="sxs-lookup"><span data-stu-id="d136e-2866">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="d136e-2867">W odróżnieniu od `Print` funkcji `Write` funkcji wstawia przecinkami, między elementami i ciągi w cudzysłowie, ponieważ są one zapisywane do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2867">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="d136e-2868">Nie trzeba umieścić jawne ograniczniki na liście.</span><span class="sxs-lookup"><span data-stu-id="d136e-2868">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="d136e-2869">Gdy `Write` służy do zapisywania danych do pliku, tylko liczbowe, `Boolean`, Data, null, i `Error` formatów danych są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2869">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="d136e-2870">Następujące założenia uniwersalne są przestrzegane, dzięki czemu dane mogą zawsze odczytać i poprawnie interpretowany przy użyciu `Input`, niezależnie od ustawień regionalnych:</span><span class="sxs-lookup"><span data-stu-id="d136e-2870">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="d136e-2871">Dane liczbowe są zawsze zapisywane używającego kropki jako separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2871">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="d136e-2872">Aby uzyskać `Boolean` danych, albo `#TRUE#` lub `#FALSE#` zostanie wydrukowany.</span><span class="sxs-lookup"><span data-stu-id="d136e-2872">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="d136e-2873">`True` i `False` słowa kluczowe nie są przekształcane, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2873">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="d136e-2874">Dane daty są zapisywane do pliku przy użyciu formatu daty uniwersalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2874">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="d136e-2875">Gdy składnik daty lub godziny jest nieobecny lub równy zero, tylko podana część jest zapisywana do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2875">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="d136e-2876">Jeśli nic nie jest zapisywane w pliku `Output` danych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="d136e-2876">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="d136e-2877">Jednak w przypadku danych o wartości null `#NULL#` są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="d136e-2877">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="d136e-2878">Aby uzyskać `Error` dane wyjściowe są wyświetlane jako `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2878">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="d136e-2879">`Error` — Słowo kluczowe nie są tłumaczone, niezależnie od ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="d136e-2879">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="d136e-2880">`WriteLine` Wstawia znak nowego wiersza (czyli kanału informacyjnego powrotu karetki/wiersza lub `Chr(13) + Chr(10)`) po zapisane ostatni znak `Output` do pliku.</span><span class="sxs-lookup"><span data-stu-id="d136e-2880">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="d136e-2881">Możesz osadzić znaki cudzysłowu w ciągu za pomocą podwójnego cudzysłowu lub "".</span><span class="sxs-lookup"><span data-stu-id="d136e-2881">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="d136e-2882">Na przykład</span><span class="sxs-lookup"><span data-stu-id="d136e-2882">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="d136e-2883">Zwraca ciąg zawierający wartość `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="d136e-2883">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="d136e-2884">Zapisywanie do pliku za pomocą `Write` lub `WriteLine` functions wymaga `Append` dostęp z `FileIOPermissionAccess` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d136e-2884">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="d136e-2885">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.FileIOPermissionAccess> .</span><span class="sxs-lookup"><span data-stu-id="d136e-2885">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d136e-2886">W tym przykładzie użyto `Write` funkcji do zapisu danych pierwotnych pliku sekwencyjnego.</span><span class="sxs-lookup"><span data-stu-id="d136e-2886">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
  </Members>
</Type>