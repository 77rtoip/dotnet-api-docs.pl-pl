<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a7b7d-101"><see langword="Strings" /> Moduł zawiera procedury używany do wykonywania operacji na ciągach.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-102">Ten moduł obsługuje słów kluczowych języka Visual Basic i elementy członkowskie biblioteki wykonawczej, które manipulowania ciągami.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-103">W poniższym przykładzie pokazano, jak podzielić ciąg na jego spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-104">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-104">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="a7b7d-105">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-105">Required.</span></span> <span data-ttu-id="a7b7d-106">Wszystkie prawidłowe <see langword="Char" /> lub <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-106">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="a7b7d-107">Jeśli <c>ciąg</c> jest <see langword="String" /> wyrażenie, pierwszego znaku ciągu jest używane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-107">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="a7b7d-108">Jeśli <c>ciąg</c> jest <see langword="Nothing" /> lub nie zawiera znaków, <see cref="T:System.ArgumentException" /> wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-108">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="a7b7d-109">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-109">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-110">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-110">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-111">`Asc` Zwraca *punktem kodu*, lub kod znaku, wprowadzany znak.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-111">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a7b7d-112">To mogą być wartości od 0 do 255 znaków jednobajtowych (SBCS) w zestawie oraz wartości od -32768 do 32767 znaków dwubajtowych (znaków DBCS) w zestawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-112">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a7b7d-113">`AscW` Zwraca punkt kodu Unicode dla znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-113">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a7b7d-114">Może to być od 0 do 65535.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-114">This can be 0 through 65535.</span></span> <span data-ttu-id="a7b7d-115">Zwrócona wartość jest niezależna od ustawień strony kultury i kodowej dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-115">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-116">`AscB` Funkcja wcześniejszych wersji programu Visual Basic zwraca kod znaku, a nie typu byte.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-116">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a7b7d-117">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-117">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-118">Wszystkie ciągi Visual Basic 2005 są w formacie Unicode, i `AscB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-118">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-119">W poniższym przykładzie użyto `Asc` funkcja zwracająca `Integer` kody odpowiadający pierwszej litery każdego ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-119">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="a7b7d-120">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-120">Required.</span></span> <span data-ttu-id="a7b7d-121">Wszystkie prawidłowe <see langword="Char" /> lub <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-121">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="a7b7d-122">Jeśli <c>ciąg</c> jest <see langword="String" /> wyrażenie, pierwszego znaku ciągu jest używane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-122">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="a7b7d-123">Jeśli <c>ciąg</c> jest <see langword="Nothing" /> lub nie zawiera znaków, <see cref="T:System.ArgumentException" /> wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-123">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="a7b7d-124">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-124">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-125">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-125">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-126">`Asc` Zwraca *punktem kodu*, lub kod znaku, wprowadzany znak.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-126">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a7b7d-127">To mogą być wartości od 0 do 255 znaków jednobajtowych (SBCS) w zestawie oraz wartości od -32768 do 32767 znaków dwubajtowych (znaków DBCS) w zestawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-127">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a7b7d-128">`AscW` Zwraca punkt kodu Unicode dla znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-128">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a7b7d-129">Może to być od 0 do 65535.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-129">This can be 0 through 65535.</span></span> <span data-ttu-id="a7b7d-130">Zwrócona wartość jest niezależna od ustawień strony kultury i kodowej dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-130">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-131">`AscB` Funkcja wcześniejszych wersji programu Visual Basic zwraca kod znaku, a nie typu byte.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-131">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a7b7d-132">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-132">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-133">Wszystkie ciągi Visual Basic 2005 są w formacie Unicode, i `AscB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-133">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-134">W poniższym przykładzie użyto `Asc` funkcja zwracająca `Integer` kody odpowiadający pierwszej litery każdego ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-134">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-135">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-135">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="a7b7d-136">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-136">Required.</span></span> <span data-ttu-id="a7b7d-137">Wszystkie prawidłowe <see langword="Char" /> lub <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-137">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="a7b7d-138">Jeśli <c>ciąg</c> jest <see langword="String" /> wyrażenie, pierwszego znaku ciągu jest używane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-138">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="a7b7d-139">Jeśli <c>ciąg</c> jest <see langword="Nothing" /> lub nie zawiera znaków, <see cref="T:System.ArgumentException" /> wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-139">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="a7b7d-140">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-140">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-141">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-141">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-142">`Asc` Zwraca *punktem kodu*, lub kod znaku, wprowadzany znak.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-142">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a7b7d-143">To mogą być wartości od 0 do 255 znaków jednobajtowych (SBCS) w zestawie oraz wartości od -32768 do 32767 znaków dwubajtowych (znaków DBCS) w zestawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-143">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a7b7d-144">`AscW` Zwraca punkt kodu Unicode dla znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-144">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a7b7d-145">Może to być od 0 do 65535.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-145">This can be 0 through 65535.</span></span> <span data-ttu-id="a7b7d-146">Zwrócona wartość jest niezależna od ustawień strony kultury i kodowej dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-146">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-147">`AscB` Funkcja wcześniejszych wersji programu Visual Basic zwraca kod znaku, a nie typu byte.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-147">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a7b7d-148">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-148">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-149">Wszystkie ciągi Visual Basic 2005 są w formacie Unicode, i `AscB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-149">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-150">W poniższym przykładzie użyto `Asc` funkcja zwracająca `Integer` kody odpowiadający pierwszej litery każdego ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-150">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="a7b7d-151">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-151">Required.</span></span> <span data-ttu-id="a7b7d-152">Wszystkie prawidłowe <see langword="Char" /> lub <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-152">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="a7b7d-153">Jeśli <c>ciąg</c> jest <see langword="String" /> wyrażenie, pierwszego znaku ciągu jest używane dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-153">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="a7b7d-154">Jeśli <c>ciąg</c> jest <see langword="Nothing" /> lub nie zawiera znaków, <see cref="T:System.ArgumentException" /> wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-154">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="a7b7d-155">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-155">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-156">Zwraca <see langword="Integer" /> wartość reprezentującą kod znaku odpowiadający znakowi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-156">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-157">`Asc` Zwraca *punktem kodu*, lub kod znaku, wprowadzany znak.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-157">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a7b7d-158">To mogą być wartości od 0 do 255 znaków jednobajtowych (SBCS) w zestawie oraz wartości od -32768 do 32767 znaków dwubajtowych (znaków DBCS) w zestawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-158">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a7b7d-159">`AscW` Zwraca punkt kodu Unicode dla znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-159">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a7b7d-160">Może to być od 0 do 65535.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-160">This can be 0 through 65535.</span></span> <span data-ttu-id="a7b7d-161">Zwrócona wartość jest niezależna od ustawień strony kultury i kodowej dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-161">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-162">`AscB` Funkcja wcześniejszych wersji programu Visual Basic zwraca kod znaku, a nie typu byte.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-162">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a7b7d-163">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-163">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-164">Wszystkie ciągi Visual Basic 2005 są w formacie Unicode, i `AscB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-164">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-165">W poniższym przykładzie użyto `Asc` funkcja zwracająca `Integer` kody odpowiadający pierwszej litery każdego ciągu znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-165">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="a7b7d-166">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-166">Required.</span></span> <span data-ttu-id="a7b7d-167"><see langword="Integer" /> Reprezentujący wyrażenie <c>punktem kodu</c>, lub kodu, znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-167">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="a7b7d-168">Zwraca znak skojarzony z podanym kodem znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-168">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-169">Zwraca znak skojarzony z podanym kodem znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-169">Returns the character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-170">Zaakceptowane asymetrycznego zakresu `CharCode` kompensuje magazynu różnice między `Short` i `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-170">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="a7b7d-171">Na przykład jest-29183 `Short` , ale jest +36353 `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-171">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="a7b7d-172">Ułatwia to również zgodność z Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-172">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="a7b7d-173">`Chr` używa <xref:System.Text.Encoding> klasy w <xref:System.Text?displayProperty=nameWithType> przestrzeni nazw, aby określić, czy bieżący wątek używa zestaw znaków jednobajtowych (SBCS) lub znaków dwubajtowych Ustaw (DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-173">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="a7b7d-174">Następnie przyjmuje `CharCode` jako kod punktów w odpowiednim zestawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-174">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="a7b7d-175">Może on zawierać cyfry od 0 do 255 znaków SBCS i -32768 do 65535 znaków zestawów znaków Dwubajtowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-175">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="a7b7d-176">Zwracana wartość zależy od strony kodowej dla bieżącego wątku, który jest zawarty w <xref:System.Globalization.TextInfo.ANSICodePage%2A> właściwość <xref:System.Globalization.TextInfo> klasy w <xref:System.Globalization> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-176">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="a7b7d-177">Możesz uzyskać <xref:System.Globalization.TextInfo.ANSICodePage%2A> , określając `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-177">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="a7b7d-178">`ChrW` Trwa `CharCode` jako Unicode punktem kodu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-178">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="a7b7d-179">Zakres jest niezależne od kultury i kod ustawień strony dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-179">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="a7b7d-180">Wartości od -32768 do-1 są traktowane identycznie do wartości w zakresie +32768 za pośrednictwem +65535.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-180">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="a7b7d-181">Cyfry z przedziału od 0 do 31 są takie same jak standardowe niedrukowalne kodów ASCII.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-181">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="a7b7d-182">Na przykład `Chr(10)` zwraca znak wysuwu wiersza.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-182">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-183">`ChrB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca pojedynczy bajt.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-183">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="a7b7d-184">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-184">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-185">Wszystkie ciągi w Visual Basic i .NET Framework są w formacie Unicode, i `ChrB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-185">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-186">W poniższym przykładzie użyto `Chr` funkcja zwraca znak skojarzony z podanym kodem znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-186">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-187"><paramref name="CharCode" /> &lt; 0 lub &gt; 255 dla <see langword="Chr" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-187"><paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="a7b7d-188">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-188">Required.</span></span> <span data-ttu-id="a7b7d-189"><see langword="Integer" /> Reprezentujący wyrażenie <c>punktem kodu</c>, lub kodu, znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-189">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="a7b7d-190">Zwraca znak skojarzony z podanym kodem znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-190">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-191">Zwraca znak skojarzony z podanym kodem znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-191">Returns the character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-192">Zaakceptowane asymetrycznego zakresu `CharCode` kompensuje magazynu różnice między `Short` i `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-192">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="a7b7d-193">Na przykład jest-29183 `Short` , ale jest +36353 `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-193">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="a7b7d-194">Ułatwia to również zgodność z Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-194">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="a7b7d-195">`Chr` używa <xref:System.Text.Encoding> klasy w <xref:System.Text?displayProperty=nameWithType> przestrzeni nazw, aby określić, czy bieżący wątek używa zestaw znaków jednobajtowych (SBCS) lub znaków dwubajtowych Ustaw (DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-195">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="a7b7d-196">Następnie przyjmuje `CharCode` jako kod punktów w odpowiednim zestawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-196">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="a7b7d-197">Może on zawierać cyfry od 0 do 255 znaków SBCS i -32768 do 65535 znaków zestawów znaków Dwubajtowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-197">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="a7b7d-198">Zwracana wartość zależy od strony kodowej dla bieżącego wątku, który jest zawarty w <xref:System.Globalization.TextInfo.ANSICodePage%2A> właściwość <xref:System.Globalization.TextInfo> klasy w <xref:System.Globalization> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-198">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="a7b7d-199">Możesz uzyskać <xref:System.Globalization.TextInfo.ANSICodePage%2A> , określając `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-199">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="a7b7d-200">`ChrW` Trwa `CharCode` jako Unicode punktem kodu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-200">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="a7b7d-201">Zakres jest niezależne od kultury i kod ustawień strony dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-201">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="a7b7d-202">Wartości od -32768 do-1 są traktowane identycznie do wartości w zakresie +32768 za pośrednictwem +65535.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-202">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="a7b7d-203">Cyfry z przedziału od 0 do 31 są takie same jak standardowe niedrukowalne kodów ASCII.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-203">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="a7b7d-204">Na przykład `Chr(10)` zwraca znak wysuwu wiersza.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-204">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-205">`ChrB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca pojedynczy bajt.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-205">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="a7b7d-206">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-206">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-207">Wszystkie ciągi w Visual Basic i .NET Framework są w formacie Unicode, i `ChrB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-207">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-208">W poniższym przykładzie użyto `Chr` funkcja zwraca znak skojarzony z podanym kodem znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-208">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-209"><paramref name="CharCode" /> &lt; -32768 lub &gt; 65535 dla <see langword="ChrW" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-209"><paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-210">Zwraca tablicę wartości nieujemnych zawierającą podzbiór <see langword="String" /> tablicy oparciu o określone kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-210">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="a7b7d-211">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-211">Required.</span></span> <span data-ttu-id="a7b7d-212">Jednowymiarowa tablica ciągów do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-212">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="a7b7d-213">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-213">Required.</span></span> <span data-ttu-id="a7b7d-214">Ciąg do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-214">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="a7b7d-215">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-215">Optional.</span></span> <span data-ttu-id="a7b7d-216"><see langword="Boolean" /> Wartość wskazująca, czy mają być zwracane podciągów Dołącz lub Wyklucz <c>dopasowania</c>.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-216"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <c>Match</c>.</span></span> <span data-ttu-id="a7b7d-217">Jeśli <c>Include</c> jest <see langword="True" />, <see langword="Filter" /> funkcja zwraca podzbiór tablicy, która zawiera <c>dopasowania</c> jako podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-217">If <c>Include</c> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <c>Match</c> as a substring.</span></span> <span data-ttu-id="a7b7d-218">Jeśli <c>Include</c> jest <see langword="False" />, <see langword="Filter" /> funkcja zwraca podzbiór tablicy, która nie zawiera <c>dopasowania</c> jako podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-218">If <c>Include</c> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <c>Match</c> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-219">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-219">Optional.</span></span> <span data-ttu-id="a7b7d-220">Wartość liczbowa określająca sposób porównywania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-220">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="a7b7d-221">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-221">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-222">Zwraca tablicę wartości nieujemnych zawierającą podzbiór <see langword="String" /> tablicy oparciu o określone kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-222">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-223">Zwraca tablicę wartości nieujemnych zawierającą podzbiór <see langword="String" /> tablicy oparciu o określone kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-223">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-224">Jeśli nie dopasowania `Match` znajdują się w obrębie `Source`, `Filter` funkcja zwraca pustą tablicę.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-224">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="a7b7d-225">Jeśli wystąpi błąd `Source` ma ustawioną wartość `Nothing` lub nie jest tablicą jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-225">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="a7b7d-226">Tablica zwrócona przez `Filter` funkcja zawiera tylko za mało elementów zawiera Liczba pasujących elementów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-226">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="a7b7d-227">`Compare` Argument może mieć następujące wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-227">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a7b7d-228">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-228">Constant</span></span>|<span data-ttu-id="a7b7d-229">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-229">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a7b7d-230">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-230">Constant</span></span>|<span data-ttu-id="a7b7d-231">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-231">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="a7b7d-232">Wykonuje porównanie binarne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-232">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="a7b7d-233">Wykonuje porównanie tekstowe</span><span class="sxs-lookup"><span data-stu-id="a7b7d-233">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-234">W tym przykładzie przedstawiono użycie `Filter` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-234">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-235"><paramref name="Source" /> jest <see langword="Nothing" /> lub nie jest tablicą jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-235"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="a7b7d-236">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-236">Required.</span></span> <span data-ttu-id="a7b7d-237">Jednowymiarowa tablica ciągów do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-237">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="a7b7d-238">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-238">Required.</span></span> <span data-ttu-id="a7b7d-239">Ciąg do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-239">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="a7b7d-240">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-240">Optional.</span></span> <span data-ttu-id="a7b7d-241"><see langword="Boolean" /> Wartość wskazująca, czy mają być zwracane podciągów Dołącz lub Wyklucz <c>dopasowania</c>.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-241"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <c>Match</c>.</span></span> <span data-ttu-id="a7b7d-242">Jeśli <c>Include</c> jest <see langword="True" />, <see langword="Filter" /> funkcja zwraca podzbiór tablicy, która zawiera <c>dopasowania</c> jako podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-242">If <c>Include</c> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <c>Match</c> as a substring.</span></span> <span data-ttu-id="a7b7d-243">Jeśli <c>Include</c> jest <see langword="False" />, <see langword="Filter" /> funkcja zwraca podzbiór tablicy, która nie zawiera <c>dopasowania</c> jako podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-243">If <c>Include</c> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <c>Match</c> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-244">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-244">Optional.</span></span> <span data-ttu-id="a7b7d-245">Wartość liczbowa określająca sposób porównywania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-245">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="a7b7d-246">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-246">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-247">Zwraca tablicę wartości nieujemnych zawierającą podzbiór <see langword="String" /> tablicy oparciu o określone kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-247">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-248">Zwraca tablicę wartości nieujemnych zawierającą podzbiór <see langword="String" /> tablicy oparciu o określone kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-248">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-249">Jeśli nie dopasowania `Match` znajdują się w obrębie `Source`, `Filter` funkcja zwraca pustą tablicę.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-249">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="a7b7d-250">Jeśli wystąpi błąd `Source` ma ustawioną wartość `Nothing` lub nie jest tablicą jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-250">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="a7b7d-251">Tablica zwrócona przez `Filter` funkcja zawiera tylko za mało elementów zawiera Liczba pasujących elementów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-251">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="a7b7d-252">`Compare` Argument może mieć następujące wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-252">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a7b7d-253">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-253">Constant</span></span>|<span data-ttu-id="a7b7d-254">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-254">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="a7b7d-255">Wykonuje porównanie binarne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-255">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="a7b7d-256">Wykonuje porównanie tekstowe</span><span class="sxs-lookup"><span data-stu-id="a7b7d-256">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-257">W tym przykładzie przedstawiono użycie `Filter` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-257">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-258"><paramref name="Source" /> jest <see langword="Nothing" /> lub nie jest tablicą jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-258"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-259">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-259">Required.</span></span> <span data-ttu-id="a7b7d-260">Dowolne prawidłowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-260">Any valid expression.</span></span></param>
        <param name="Style"><span data-ttu-id="a7b7d-261">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-261">Optional.</span></span> <span data-ttu-id="a7b7d-262">Nieprawidłowy format nazwanych lub zdefiniowanej przez użytkownika <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-262">A valid named or user-defined format <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-263">Zwraca ciąg sformatowany zgodnie z instrukcjami zawartymi w formacie <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-263">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-264">Zwraca ciąg sformatowany zgodnie z instrukcjami zawartymi w formacie <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-264">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-265"><xref:System.String.Format%2A?displayProperty=nameWithType> Metody również oferuje podobne funkcje.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-265">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="a7b7d-266">Formatowania niezlokalizowanej ciągu numerycznego, aby mieć pewność, że odpowiedni wygląd należy używać zdefiniowane przez użytkownika format liczbowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-266">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="a7b7d-267">Jeśli spróbujesz formatowanie liczby bez określania `Style`, `Format` funkcja udostępnia funkcjonalność podobną do `Str` działanie, mimo że uwzględnia ustawienia regionalne.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-267">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="a7b7d-268">Jednak liczby dodatnie w formacie ciągów za pomocą `Format` funkcja nie zawierają zarezerwowanej na znak spacje początkowe wartości, te konwertowane przy użyciu `Str` funkcja zachować spacje wiodące.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-268">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="a7b7d-269">Różne formaty dla różnych wartości liczbowych</span><span class="sxs-lookup"><span data-stu-id="a7b7d-269">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="a7b7d-270">Wyrażenie zdefiniowane przez użytkownika format liczb może mieć od jednej do trzech sekcje oddzielone średnikami.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-270">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="a7b7d-271">Jeśli `Style` argument `Format` funkcja zawiera jeden z wstępnie zdefiniowanych formatów liczbowych, jest dozwolona tylko jedna sekcja.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-271">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="a7b7d-272">Jeśli używasz</span><span class="sxs-lookup"><span data-stu-id="a7b7d-272">If you use</span></span>|<span data-ttu-id="a7b7d-273">Jest to wynik</span><span class="sxs-lookup"><span data-stu-id="a7b7d-273">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="a7b7d-274">Tylko jedną sekcję</span><span class="sxs-lookup"><span data-stu-id="a7b7d-274">One section only</span></span>|<span data-ttu-id="a7b7d-275">Wyrażenie formatu ma zastosowanie do wszystkich wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-275">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="a7b7d-276">Dwie sekcje</span><span class="sxs-lookup"><span data-stu-id="a7b7d-276">Two sections</span></span>|<span data-ttu-id="a7b7d-277">Pierwsza część dotyczy wartości dodatnie i zer; druga stosuje się do wartości ujemnych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-277">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="a7b7d-278">Trzy sekcje</span><span class="sxs-lookup"><span data-stu-id="a7b7d-278">Three sections</span></span>|<span data-ttu-id="a7b7d-279">Pierwsza część dotyczy wartości dodatnie, druga stosuje się do wartości ujemnych i trzeci ma zastosowanie do zera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-279">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="a7b7d-280">W poniższym przykładzie przedstawiono dwie sekcje: pierwszy definiuje format wartości dodatnie i zer; Druga sekcja definiuje format wartości ujemnych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-280">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="a7b7d-281">Ponieważ `Style` argument `Format` funkcja przyjmuje ciąg, jest ujęta w cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-281">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="a7b7d-282">Jeśli dołączysz średnikami bez żadnych składników między nimi, Brak sekcji jest drukowany w formacie wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-282">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="a7b7d-283">Na przykład następujący format wyświetla dodatnie i ujemne wartości w formacie w pierwszej sekcji i wyświetla `Zero` Jeśli wartość wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-283">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="a7b7d-284">Wstępnie zdefiniowane formaty liczbowe</span><span class="sxs-lookup"><span data-stu-id="a7b7d-284">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="a7b7d-285">W poniższej tabeli przedstawiono nazwy formatu liczbowego wstępnie zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-285">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="a7b7d-286">Te mogą być używane przez nazwę jako `Style` argument `Format` funkcji:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-286">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="a7b7d-287">Nazwa formatu</span><span class="sxs-lookup"><span data-stu-id="a7b7d-287">Format name</span></span>|<span data-ttu-id="a7b7d-288">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-288">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a7b7d-289">`General Number`, `G`, lub `g`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-289">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="a7b7d-290">Wyświetla liczbę bez separatora tysięcy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-290">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="a7b7d-291">Na przykład `Format(&H3FA, "g")` zwraca `1018`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-291">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="a7b7d-292">`Currency`, `C`, lub `c`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-292">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="a7b7d-293">Wyświetla liczbę z separatorem tysięcy, jeśli są one; Wyświetla dwóch cyfr z prawej strony separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-293">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="a7b7d-294">Dane wyjściowe zależy od ustawień regionalnych systemu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-294">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="a7b7d-295">Na przykład `Format(1234567, "c")` zwraca `$1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-295">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="a7b7d-296">`Fixed`, `F`, lub `f`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-296">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="a7b7d-297">Wyświetla co najmniej jedną cyfrę w lewo i dwóch cyfr z prawej strony separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-297">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a7b7d-298">Na przykład `Format(1234567, "f")` zwraca `1234567.00`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-298">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="a7b7d-299">`Standard`, `N`, lub `n`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-299">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="a7b7d-300">Wyświetla liczbę z separatorem tysięcy, co najmniej jedną cyfrę z lewej strony i dwie cyfry z prawej strony separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-300">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a7b7d-301">Na przykład `Format(1234567, "n")` zwraca `1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-301">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="a7b7d-302">Wyświetla liczbę pomnożona przez 100 z znaku procentu (%) dołączona od razu po prawej stronie; zawsze wyświetla dwóch cyfr z prawej strony separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-302">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a7b7d-303">Na przykład `Format(0.4744, "Percent")` zwraca `47.44%`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-303">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="a7b7d-304">`P`, lub `p`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-304">`P`, or `p`</span></span>|<span data-ttu-id="a7b7d-305">Wyświetla liczbę z separatorem tysięczne pomnożona przez 100 z znaku procentu (%) dołączona do prawej i rozdzielonych przez pojedyncze spacje; zawsze wyświetla dwóch cyfr z prawej strony separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-305">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a7b7d-306">Na przykład `Format(0.80345, "p")` zwraca `80.35 %`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-306">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="a7b7d-307">Używa standardowych notacji naukowej, zapewniając dwóch cyfr znaczących.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-307">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="a7b7d-308">Na przykład `Format(1234567, "Scientific")` zwraca `1.23E+06`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-308">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="a7b7d-309">`E`, lub `e`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-309">`E`, or `e`</span></span>|<span data-ttu-id="a7b7d-310">Używa standardowych notacji naukowej, zapewniając sześć cyfr znaczących.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-310">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="a7b7d-311">Na przykład `Format(1234567, "e")` zwraca `1.234567e+006`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-311">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="a7b7d-312">`D`, lub `d`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-312">`D`, or `d`</span></span>|<span data-ttu-id="a7b7d-313">Wyświetla liczbę jako ciąg, który zawiera wartość numeru w formacie dziesiętnym (o podstawie 10).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-313">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="a7b7d-314">Ta opcja jest obsługiwana w przypadku typów całkowitych (`Byte`, `Short`, `Integer`, `Long`) tylko.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-314">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="a7b7d-315">Na przykład `Format(&H7F, "d")` zwraca `127`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-315">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="a7b7d-316">`X`, lub `x`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-316">`X`, or `x`</span></span>|<span data-ttu-id="a7b7d-317">Wyświetla liczbę jako ciąg, który zawiera wartość numeru w formacie szesnastkowym (podstawa 16).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-317">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="a7b7d-318">Ta opcja jest obsługiwana w przypadku typów całkowitych (`Byte`, `Short`, `Integer`, `Long`) tylko.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-318">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="a7b7d-319">Na przykład `Format(127, "x")` zwraca `7f`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-319">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="a7b7d-320">Wyświetla `No` Jeśli liczba jest 0; w przeciwnym razie, wyświetla `Yes`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-320">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="a7b7d-321">Na przykład `Format(0, "Yes/No")` zwraca `No`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-321">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="a7b7d-322">Wyświetla `False` Jeśli liczba jest 0; w przeciwnym razie, wyświetla `True`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-322">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="a7b7d-323">Na przykład `Format(1, "True/False")` zwraca `True`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-323">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="a7b7d-324">Wyświetla `Off` Jeśli liczba jest 0; w przeciwnym razie, wyświetla `On`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-324">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="a7b7d-325">Na przykład `Format(1, "On/Off")` zwraca `On`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-325">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-326">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-326">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-327">`Yes/No`, `True/False`, I `On/Off` formaty nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-327">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="a7b7d-328">Zdefiniowane przez użytkownika formaty liczbowe</span><span class="sxs-lookup"><span data-stu-id="a7b7d-328">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="a7b7d-329">Poniższa tabela zawiera znaki, które umożliwia utworzenie zdefiniowanej przez użytkownika formatów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-329">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="a7b7d-330">Te mogą służyć do tworzenia `Style` argument `Format` funkcji:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-330">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="a7b7d-331">Znak</span><span class="sxs-lookup"><span data-stu-id="a7b7d-331">Character</span></span>|<span data-ttu-id="a7b7d-332">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-332">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a7b7d-333">Brak</span><span class="sxs-lookup"><span data-stu-id="a7b7d-333">None</span></span>|<span data-ttu-id="a7b7d-334">Wyświetla liczbę bez formatowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-334">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="a7b7d-335">(`0`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-335">(`0`)</span></span>|<span data-ttu-id="a7b7d-336">Symbol zastępczy cyfry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-336">Digit placeholder.</span></span> <span data-ttu-id="a7b7d-337">Wyświetla cyfrę lub zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-337">Displays a digit or a zero.</span></span> <span data-ttu-id="a7b7d-338">Jeśli wyrażenie ma cyfrę w miejscu, w którym pojawi się zero w ciągu formatu, wyświetl ją; w przeciwnym razie wyświetla wartość zero, w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-338">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="a7b7d-339">Jeśli liczba ma mniej cyfr niż dostępne są zer (po obu stronach dziesiętnego) w wyrażeniu format wyświetla początkowe lub końcowe zera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-339">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="a7b7d-340">Jeśli kod zawiera więcej cyfr z prawej strony separatora dziesiętnego niż jest zer z prawej strony separatora dziesiętnego w wyrażeniu format zaokrąglenie do liczby miejsc dziesiętnych są zer.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-340">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="a7b7d-341">Jeśli liczba ma więcej cyfr w lewą stronę separatora dziesiętnego niż Brak zerami z lewej strony separatora dziesiętnego w wyrażeniu format wyświetla dodatkowe cyfry bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-341">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="a7b7d-342">(`#`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-342">(`#`)</span></span>|<span data-ttu-id="a7b7d-343">Symbol zastępczy cyfry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-343">Digit placeholder.</span></span> <span data-ttu-id="a7b7d-344">Wyświetla cyfry lub jej brak.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-344">Displays a digit or nothing.</span></span> <span data-ttu-id="a7b7d-345">Jeśli wyrażenie ma cyfry na pozycji gdzie `#` znak pojawia się w ciągu formatu wyświetla go; w przeciwnym razie nie wyświetla żadnego obrazu w tej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-345">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="a7b7d-346">Ten symbol działa jak `0` symbol zastępczy cyfry, z wyjątkiem który zera wiodące i końcowe nie są wyświetlane, jeśli liczba ma mniejszą liczbę cyfr, niż jest `#` znaki po obu stronach z separatorem dziesiętnym w wyrażeniu formatu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-346">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="a7b7d-347">(`.`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-347">(`.`)</span></span>|<span data-ttu-id="a7b7d-348">Decimal — symbol zastępczy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-348">Decimal placeholder.</span></span> <span data-ttu-id="a7b7d-349">Dziesiętny symbol zastępczy określa liczbę cyfr są wyświetlane w lewo i prawo z separatorem dziesiętnym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-349">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="a7b7d-350">Jeśli wyrażenie formatu zawiera tylko `#` znaków z lewej strony tego symbolu; mniejszy niż 1 zaczynać separator dziesiętny liczb.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-350">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="a7b7d-351">Aby wyświetlić zerem wyświetlony z liczbami ułamkowymi, użyj wartości zero jako pierwszy symbol zastępczy cyfry z lewej strony separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-351">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="a7b7d-352">W kilku lokalizacjach przecinek jest używany jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-352">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="a7b7d-353">Rzeczywiste znak używany jako element zastępczy dziesiętne w sformatowane wyniki zależy od liczby rozpoznany przez system.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-353">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="a7b7d-354">W związku z tym należy używać okresu jako dziesiętne symbol zastępczy w formatach z nawet jeśli znajdują się w ustawień regionalnych, których używa przecinka jako symbol zastępczy dziesiętną.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-354">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="a7b7d-355">Ciąg sformatowany będą wyświetlane w formacie poprawne dla ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-355">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="a7b7d-356">(`%`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-356">(`%`)</span></span>|<span data-ttu-id="a7b7d-357">Symbol zastępczy procentu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-357">Percent placeholder.</span></span> <span data-ttu-id="a7b7d-358">Mnoży wyrażenie przez 100.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-358">Multiplies the expression by 100.</span></span> <span data-ttu-id="a7b7d-359">Znaku procentu (`%`) dodaje się w miejscu, gdzie jest dostępny w ciągu formatu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-359">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="a7b7d-360">(`,`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-360">(`,`)</span></span>|<span data-ttu-id="a7b7d-361">Separator tysięcy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-361">Thousand separator.</span></span> <span data-ttu-id="a7b7d-362">Separator tysięcy oddziela tysiące od setek w liczba, która ma cztery lub więcej miejsca po lewej stronie separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-362">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="a7b7d-363">Określono standardowego stosowania separator tysięcy czy format zawiera separator tysięcy otoczona cyfr (`0` lub `#`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-363">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="a7b7d-364">Separator tysięcy natychmiast po lewej stronie separatora dziesiętnego (czy wartości dziesiętnej określono) lub jako ostatni znak w ciągu oznacza "skalować liczbę przez podzielenie go przez 1000, zaokrąglania zgodnie z potrzebami."</span><span class="sxs-lookup"><span data-stu-id="a7b7d-364">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="a7b7d-365">Liczby mniejsze niż 1000, ale większa lub równa 500 są wyświetlane jako `1`i numery mniejszych niż 500 są wyświetlane jako `0`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-365">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="a7b7d-366">Skalowanie dwóch sąsiadujących ze sobą separatory tysięcy w tym miejscu przez współczynnik 1 milion i dodatkowy czynnik 1000 dla każdego dodatkowego separatora.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-366">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="a7b7d-367">Wiele separatorów w dowolnym miejscu innym niż bezpośrednio po lewej stronie separatora dziesiętnego lub po prawej stronie pozycji w ciągu są traktowane jako sposób wykorzystania separator tysięcy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-367">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="a7b7d-368">W kilku lokalizacjach okres jest używany jako separator tysięcy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-368">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="a7b7d-369">Rzeczywiste znak używany jako separator tysięcy sformatowanych danych wyjściowych zależy od formatu numer rozpoznany przez system.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-369">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="a7b7d-370">W związku z tym należy używać przecinek jako separator tysięcy w formatach sieci, nawet jeśli znajdują się w ustawieniach regionalnych okres jako separator tysięcy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-370">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="a7b7d-371">Ciąg sformatowany będą wyświetlane w formacie poprawne dla ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-371">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="a7b7d-372">Rozważmy na przykład trzy następujące ciągi formatu:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-372">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="a7b7d-373">-   `"#,0."`, które separator tysięcy używa liczbę 100 milionów w formacie ciągu "100 000 000".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-373">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="a7b7d-374">-   `"#0,."`, który używa skalowania przez współczynnik tysiąca Aby sformatować liczbę 100 milionów jako ciąg "100000".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-374">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="a7b7d-375">-   `"#,0,."`, które separator tysięcy używa i skalować przez tysiąca Aby sformatować liczbę 100 milionów jako ciąg "100 000".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-375">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="a7b7d-376">(`:`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-376">(`:`)</span></span>|<span data-ttu-id="a7b7d-377">Separator czasu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-377">Time separator.</span></span> <span data-ttu-id="a7b7d-378">W kilku lokalizacjach innych znaków może być używany do reprezentowania separator godziny.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-378">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="a7b7d-379">Separator godziny oddziela godziny, minuty i sekundy podczas formatowania wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-379">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="a7b7d-380">Rzeczywiste znak używany jako separator godziny w danych wyjściowych sformatowany zależy od ustawień systemu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-380">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="a7b7d-381">(`/`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-381">(`/`)</span></span>|<span data-ttu-id="a7b7d-382">Separator daty.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-382">Date separator.</span></span> <span data-ttu-id="a7b7d-383">W kilku lokalizacjach innych znaków może być używany do reprezentowania separatora daty.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-383">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="a7b7d-384">Separator daty oddziela dzień, miesiąc i rok, gdy wartości daty sformatowane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-384">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="a7b7d-385">Rzeczywiste znak używany jako separator daty w danych wyjściowych sformatowany zależy od ustawień systemu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-385">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="a7b7d-386">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-386">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="a7b7d-387">Notacja naukowa.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-387">Scientific format.</span></span> <span data-ttu-id="a7b7d-388">Jeśli wyrażenie formatu zawiera co najmniej jeden symbol zastępczy cyfry (`0` lub `#`) z lewej strony `E-`, `E+`, `e-`, lub `e+`, liczba jest wyświetlana w formatu naukowe i `E` lub `e` dodaje się pomiędzy jego wykładnik.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-388">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="a7b7d-389">Liczba cyfr po lewej stronie określa liczbę cyfr wykładnika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-389">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="a7b7d-390">Użyj `E-` lub `e-` można umieścić znakiem minus obok wykładniki ujemna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-390">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="a7b7d-391">Użyj `E+` lub `e+` do umieszczania znakiem minus obok ujemna wykładniki i znakiem plus obok wykładniki dodatnią.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-391">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="a7b7d-392">Należy również uwzględnić pozycje cyfr z prawej strony tego symbolu uzyskać poprawny formatowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-392">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="a7b7d-393">`-` `+` `$` ( )</span><span class="sxs-lookup"><span data-stu-id="a7b7d-393">`-` `+` `$` ( )</span></span>|<span data-ttu-id="a7b7d-394">Literał znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-394">Literal characters.</span></span> <span data-ttu-id="a7b7d-395">Następujące znaki są wyświetlane dokładnie tak jak w ciągu formatu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-395">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="a7b7d-396">Aby wyświetlić znak inną niż wymienione, należy poprzedzić go znakiem kreski ułamkowej odwróconej (`\`) lub ująć w podwójny cudzysłów ("").</span><span class="sxs-lookup"><span data-stu-id="a7b7d-396">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="a7b7d-397">(`\`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-397">(`\`)</span></span>|<span data-ttu-id="a7b7d-398">Przedstawia następny znak w ciągu formatu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-398">Displays the next character in the format string.</span></span> <span data-ttu-id="a7b7d-399">Aby wyświetlić znak, który ma specjalne znaczenie jako znak literałowy, należy poprzedzić go znakiem kreski ułamkowej odwróconej (`\`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-399">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="a7b7d-400">Ukośnik odwrotny, sam nie są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-400">The backslash itself isn't displayed.</span></span> <span data-ttu-id="a7b7d-401">Przy użyciu ukośnik odwrotny jest taka sama jak otaczającej następny znak w podwójny cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-401">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="a7b7d-402">Aby wyświetlić ukośnik odwrotny, użyj dwóch kresek ułamkowych odwróconych (`\\`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-402">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="a7b7d-403">Przykłady znaków, których nie można wyświetlić jako literał znaków są formatowania daty i czasu, formatowanie znaków (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, i `:`), znaków formatowanie liczbowe (`#`, `0`, `%`, `E`, `e`, przecinkami i okres) i formatowania ciągu znaków (`@`, `&`, `<`, `>`, i `!`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-403">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="a7b7d-404">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-404">(`"``ABC``"`)</span></span>|<span data-ttu-id="a7b7d-405">Wyświetla ciąg w podwójny cudzysłów ("").</span><span class="sxs-lookup"><span data-stu-id="a7b7d-405">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="a7b7d-406">Aby dołączyć ciąg argument stylu z kodem, należy użyć `Chr(34)` należy ująć tekst (`34` jest kod znaku cudzysłowu (")).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-406">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="a7b7d-407">Przykład starszego kodu</span><span class="sxs-lookup"><span data-stu-id="a7b7d-407">Legacy Code Example</span></span>  
 <span data-ttu-id="a7b7d-408">Poniższa tabela zawiera niektóre przykładowe wyrażenia format liczb.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-408">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="a7b7d-409">(Te przykłady dają zakładać, że ustawień regionalnych systemu jest angielski-US) Pierwsza kolumna zawiera ciągi formatu dla `Style` argumentu `Format` funkcji; innych kolumn, które zawierają dane wyjściowe, jeśli sformatowanych danych ma wartość podana w nagłówki kolumn.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-409">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="a7b7d-410">Format (`Style`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-410">Format (`Style`)</span></span>|<span data-ttu-id="a7b7d-411">"5" w formacie</span><span class="sxs-lookup"><span data-stu-id="a7b7d-411">"5" formatted as</span></span>|<span data-ttu-id="a7b7d-412">"-5" w formacie</span><span class="sxs-lookup"><span data-stu-id="a7b7d-412">"-5" formatted as</span></span>|<span data-ttu-id="a7b7d-413">"0,5" w formacie</span><span class="sxs-lookup"><span data-stu-id="a7b7d-413">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="a7b7d-414">Wstępnie zdefiniowane formaty daty/godziny</span><span class="sxs-lookup"><span data-stu-id="a7b7d-414">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="a7b7d-415">Poniższa tabela zawiera wstępnie zdefiniowane daty i czasu nazwy formatu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-415">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="a7b7d-416">Te mogą być używane przez nazwę jako argument stylu `Format` funkcji:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-416">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="a7b7d-417">Nazwa formatu</span><span class="sxs-lookup"><span data-stu-id="a7b7d-417">Format Name</span></span>|<span data-ttu-id="a7b7d-418">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-418">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a7b7d-419">`General Date`, lub `G`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-419">`General Date`, or `G`</span></span>|<span data-ttu-id="a7b7d-420">Wyświetla datę i/lub godzinę.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-420">Displays a date and/or time.</span></span> <span data-ttu-id="a7b7d-421">Na przykład `3/12/2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-421">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="a7b7d-422">Wyświetlanie dat zależy od wartości bieżącej kultury aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-422">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="a7b7d-423">`Long Date`, `Medium Date`, lub `D`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-423">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="a7b7d-424">Wyświetla datę ustawioną w formacie daty długiej bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-424">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="a7b7d-425">Na przykład `Wednesday, March 12, 2008`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-425">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="a7b7d-426">`Short Date`, lub `d`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-426">`Short Date`, or `d`</span></span>|<span data-ttu-id="a7b7d-427">Wyświetla datę w formacie daty krótkiej bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-427">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="a7b7d-428">Na przykład `3/12/2008`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-428">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="a7b7d-429">`d` Znak Wyświetla dzień w formacie daty zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-429">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="a7b7d-430">`Long Time`, `Medium Time`, lub `T`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-430">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="a7b7d-431">Godzina w formacie bieżącej kultury długi czas; zwykle obejmuje godziny, minuty, sekundy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-431">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="a7b7d-432">Na przykład `11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-432">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="a7b7d-433">`Short Time` lub `t`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-433">`Short Time` or `t`</span></span>|<span data-ttu-id="a7b7d-434">Wyświetla czas, w formacie godziny krótkiej bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-434">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="a7b7d-435">Na przykład `11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-435">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="a7b7d-436">`t` Znak Wyświetla `AM` lub `PM` wartości dla ustawień regionalnych wykorzystujących 12-godzinnym, w formacie czasu zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-436">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="a7b7d-437">Wyświetla daty długiej i godziny krótkiej zgodnie z formacie bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-437">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="a7b7d-438">Na przykład `Wednesday, March 12, 2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-438">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="a7b7d-439">Wyświetla daty długiej i długi czas zgodnie z formacie bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-439">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="a7b7d-440">Na przykład `Wednesday, March 12, 2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-440">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="a7b7d-441">Wyświetla daty krótkiej i godziny krótkiej zgodnie z formacie bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-441">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="a7b7d-442">Na przykład `3/12/2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-442">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="a7b7d-443">`M`, `m`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-443">`M`, `m`</span></span>|<span data-ttu-id="a7b7d-444">Wyświetla miesiąc i dzień daty.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-444">Displays the month and the day of a date.</span></span> <span data-ttu-id="a7b7d-445">Na przykład `March 12`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-445">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="a7b7d-446">`M` Znak Wyświetla miesiąca w formacie daty zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-446">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="a7b7d-447">`m` Znak Wyświetla minut w formacie czasu zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-447">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="a7b7d-448">`R`, `r`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-448">`R`, `r`</span></span>|<span data-ttu-id="a7b7d-449">Formaty daty, zgodnie z <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-449">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="a7b7d-450">Na przykład `Wed, 12 Mar 2008 11:07:31 GMT`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-450">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="a7b7d-451">Daty sformatowane nie Dostosuj wartość daty i godziny.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-451">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="a7b7d-452">Należy dostosować wartość daty/godziny GMT przed wywołaniem `Format` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-452">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="a7b7d-453">Formaty daty i godziny jako indeks sortowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-453">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="a7b7d-454">Na przykład `2008-03-12T11:07:31`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-454">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="a7b7d-455">`s` Znak Wyświetla sekund w formacie czasu zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-455">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="a7b7d-456">Formaty daty i godziny jako indeks sortowania GMT.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-456">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="a7b7d-457">Na przykład `2008-03-12 11:07:31Z`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-457">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="a7b7d-458">Formaty daty i godziny długie i długi czas jako GMT.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-458">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="a7b7d-459">Na przykład `Wednesday, March 12, 2008 6:07:31 PM`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-459">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="a7b7d-460">`Y`, `y`</span><span class="sxs-lookup"><span data-stu-id="a7b7d-460">`Y`, `y`</span></span>|<span data-ttu-id="a7b7d-461">Formaty daty w postaci rok i miesiąc.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-461">Formats the date as the year and month.</span></span> <span data-ttu-id="a7b7d-462">Na przykład `March, 2008`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-462">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="a7b7d-463">`Y` i `y` znaków wyświetlania roku w formacie daty zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-463">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="a7b7d-464">Aby uzyskać więcej informacji o aplikacji bieżącej kultury, zobacz [jak kultury wpływa na ciągi w Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-464">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="a7b7d-465">Zdefiniowane przez użytkownika formaty daty/godziny</span><span class="sxs-lookup"><span data-stu-id="a7b7d-465">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="a7b7d-466">W poniższej tabeli przedstawiono znaki, których można użyć do utworzenia formaty daty/godziny zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-466">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="a7b7d-467">W odróżnieniu od we wcześniejszych wersjach programu Visual Basic, te znaki format jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-467">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="a7b7d-468">Znak</span><span class="sxs-lookup"><span data-stu-id="a7b7d-468">Character</span></span>|<span data-ttu-id="a7b7d-469">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-469">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a7b7d-470">(`:`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-470">(`:`)</span></span>|<span data-ttu-id="a7b7d-471">Separator czasu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-471">Time separator.</span></span> <span data-ttu-id="a7b7d-472">W kilku lokalizacjach innych znaków może być używany do reprezentowania separator godziny.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-472">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="a7b7d-473">Separator godziny oddziela godziny, minuty i sekundy podczas formatowania wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-473">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="a7b7d-474">Rzeczywiste znak, który jest używany jako separator godziny sformatowane danych wyjściowych jest określany przez wartości bieżącej kultury aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-474">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="a7b7d-475">(`/`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-475">(`/`)</span></span>|<span data-ttu-id="a7b7d-476">Separator daty.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-476">Date separator.</span></span> <span data-ttu-id="a7b7d-477">W kilku lokalizacjach innych znaków może być używany do reprezentowania separatora daty.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-477">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="a7b7d-478">Separator daty oddziela dzień, miesiąc i rok, gdy wartości daty sformatowane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-478">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="a7b7d-479">Rzeczywiste znak, który jest używany jako separator daty w danych wyjściowych sformatowany zależy od bieżącej kultury aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-479">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="a7b7d-480">(`%`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-480">(`%`)</span></span>|<span data-ttu-id="a7b7d-481">Służy do wskazania, że następujący znak są odczytywane formacie pojedynczego litery niezależnie od wszelkich końcowych litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-481">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="a7b7d-482">Również służy do wskazania, że format litery jednym jest do odczytu jako zdefiniowane przez użytkownika format.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-482">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="a7b7d-483">Zobacz, co następuje, aby uzyskać dodatkowe szczegóły.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-483">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="a7b7d-484">Wyświetla dzień w postaci liczby bez zerem (na przykład `1`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-484">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="a7b7d-485">Użyj `%d` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-485">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="a7b7d-486">Wyświetla dzień w postaci liczby z zerem (na przykład `01`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-486">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="a7b7d-487">Wyświetla dzień w postaci skrótu (na przykład `Sun`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-487">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="a7b7d-488">Wyświetla dzień w postaci pełnej nazwy (na przykład `Sunday`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-488">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="a7b7d-489">Wyświetla liczbę bez zerem miesiąca (na przykład stycznia jest reprezentowany jako `1`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-489">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="a7b7d-490">Użyj `%M` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-490">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="a7b7d-491">Wyświetla miesiąc w postaci liczby z zerem (na przykład `01/12/01`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-491">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="a7b7d-492">Wyświetla miesiąc w postaci skrótu (na przykład `Jan`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-492">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="a7b7d-493">Wyświetla nazwę pełny miesiąc miesiąca (na przykład `January`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-493">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="a7b7d-494">Wyświetla ciąg okresu/era (na przykład `A.D.`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-494">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="a7b7d-495">Wyświetla godzinę jako liczbę bez zerami 12-godzinnym (na przykład `1:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-495">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="a7b7d-496">Użyj `%h` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-496">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="a7b7d-497">Wyświetla godzinę jako liczbę z zerami 12-godzinnym (na przykład `01:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-497">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="a7b7d-498">Wyświetla godzinę jako liczbę bez zerami 24-godzinnym (na przykład `1:15:15`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-498">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="a7b7d-499">Użyj `%H` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-499">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="a7b7d-500">Wyświetla godzinę jako liczbę z zerami 24-godzinnym (na przykład `01:15:15`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-500">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="a7b7d-501">Wyświetla minuty w postaci liczby bez zerami (na przykład `12:1:15`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-501">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="a7b7d-502">Użyj `%m` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-502">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="a7b7d-503">Wyświetla minuty w postaci liczby zerami prowadzącymi (na przykład `12:01:15`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-503">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="a7b7d-504">Wyświetla drugi w postaci liczby bez zerami (na przykład `12:15:5`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-504">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="a7b7d-505">Użyj `%s` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-505">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="a7b7d-506">Wyświetla drugi w postaci liczby zerami prowadzącymi (na przykład `12:15:05`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-506">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="a7b7d-507">Wyświetla części sekundy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-507">Displays fractions of seconds.</span></span> <span data-ttu-id="a7b7d-508">Na przykład `ff` Wyświetla setnych sekund, podczas gdy `ffff` wyświetla 10-000 sekund.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-508">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="a7b7d-509">Można użyć do siedmiu `f` symbole w formacie programu zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-509">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="a7b7d-510">Użyj `%f` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-510">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="a7b7d-511">Używa 12-godzinnym i wyświetla wielką `A` dla dowolnego godziny przed południe; Wyświetla wielką `P` wszystkie godziny między południe i 11:59 PM</span><span class="sxs-lookup"><span data-stu-id="a7b7d-511">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="a7b7d-512">Użyj `%t` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-512">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="a7b7d-513">Dla ustawień regionalnych, które używają 12-godzinnym, wyświetla wielką `AM` z dowolnym godzina przed południe; Wyświetla wielką `PM` z dowolnym godziny między południe i 11:59 PM</span><span class="sxs-lookup"><span data-stu-id="a7b7d-513">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="a7b7d-514">Dla ustawień regionalnych, korzystających z 24-godzinnym Wyświetla nothing.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-514">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="a7b7d-515">Wyświetla liczbę roku (0 – 9) bez zerami.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-515">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="a7b7d-516">Użyj `%y` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-516">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="a7b7d-517">Wyświetla roku w formacie liczbowym dwucyfrowe z zerem, jeśli ma to zastosowanie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-517">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="a7b7d-518">Wyświetla roku w formacie liczbowym czterech cyfr.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-518">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="a7b7d-519">Wyświetla roku w formacie liczbowym czterech cyfr.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-519">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="a7b7d-520">Wyświetla przesunięcie strefy czasowej bez zerem (na przykład `-8`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-520">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="a7b7d-521">Użyj `%z` Jeśli jest to tylko znak w zdefiniowanych przez użytkownika format liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-521">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="a7b7d-522">Wyświetla przesunięcie strefy czasowej z zerem (na przykład `-08`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-522">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="a7b7d-523">Wyświetla przesunięcie strefy czasowej Pełna (na przykład `-08:00`)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-523">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="a7b7d-524">Przykład starszego kodu</span><span class="sxs-lookup"><span data-stu-id="a7b7d-524">Legacy Code Example</span></span>  
 <span data-ttu-id="a7b7d-525">Poniżej przedstawiono przykłady zdefiniowane przez użytkownika formaty daty i godziny dla `December 7, 1958, 8:50 PM, 35 seconds`:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-525">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="a7b7d-526">Format</span><span class="sxs-lookup"><span data-stu-id="a7b7d-526">Format</span></span>|<span data-ttu-id="a7b7d-527">Wyświetla</span><span class="sxs-lookup"><span data-stu-id="a7b7d-527">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-528">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-528">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-529">Minimalny czas rozwiązania dla urządzenia jest określana przez producenta urządzenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-529">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="a7b7d-530">Jeśli rozdzielczość czasu dla urządzenia jest wystarczająco, grubą `f` format znak zwraca 0 uruchamianych na tym urządzeniu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-530">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-531">W tym przykładzie pokazano różnych zastosowań `Format` funkcji, aby obie wartości formatu `String` formaty i formaty zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-531">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="a7b7d-532">Separatora daty (`/`), czas separatora (`:`) oraz wskaźniki AM/PM (`t` i `tt`), rzeczywiste sformatowane wyniki wyświetlane w systemie zależy od ustawień regionalnych jest przy użyciu kodu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-532">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="a7b7d-533">Gdy godziny i daty są wyświetlane w środowisku programistycznym, format godziny krótkiej i format daty krótkiej kod ustawień regionalnych są używane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-533">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-534">Dla ustawień regionalnych, korzystających z 24-godzinnym, wskaźniki AM/PM (`t` i `tt`) wyświetlić pustą.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-534">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-535">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-535">Required.</span></span> <span data-ttu-id="a7b7d-536">wyrażenie, które ma być sformatowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-536">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="a7b7d-537">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-537">Optional.</span></span> <span data-ttu-id="a7b7d-538">Wartość liczbowa wskazujący, ile miejsca są wyświetlane z prawej strony dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-538">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="a7b7d-539">Wartość domyślna to 1, co wskazuje, że używane są ustawienia regionalne tego komputera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-539">Default value is –1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="a7b7d-540">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-540">Optional.</span></span> <span data-ttu-id="a7b7d-541"><see cref="T:Microsoft.VisualBasic.TriState" /> Wyliczenie wskazującą, czy jest wyświetlana zerem ułamkowa.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-541"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span></span> <span data-ttu-id="a7b7d-542">Wartości można znaleźć w temacie "Uwagi".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-542">See "Remarks" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="a7b7d-543">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-543">Optional.</span></span> <span data-ttu-id="a7b7d-544"><see cref="T:Microsoft.VisualBasic.TriState" /> wyliczenie, która wskazuje, czy należy umieścić wartości ujemnych wewnątrz nawiasów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-544"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="a7b7d-545">Wartości można znaleźć w temacie "Uwagi".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-545">See "Remarks" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="a7b7d-546">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-546">Optional.</span></span> <span data-ttu-id="a7b7d-547"><see cref="T:Microsoft.VisualBasic.TriState" /> wyliczenie, która wskazuje, czy numery są grupowane przy użyciu określonego w ustawieniach regionalnych komputera ogranicznik grupy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-547"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span></span> <span data-ttu-id="a7b7d-548">Wartości można znaleźć w temacie "Uwagi".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-548">See "Remarks" for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-549">Zwraca wyrażenie sformatowane jako wartość walutowa używająca symbolu waluty zdefiniowanego w Panelu sterowania systemu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-549">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-550">Zwraca wyrażenie sformatowane jako wartość walutowa używająca symbolu waluty zdefiniowanego w Panelu sterowania systemu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-550">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-551">Gdy jeden lub więcej argumentów opcjonalnych zostaną pominięte, pasujących wartości ustawienia regionalne tego komputera są używane zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-551">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="a7b7d-552">Pozycja symbolu waluty względem wartości walutowej zależy od ustawień regionalnych systemu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-552">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-553">Wszystkie informacje o ustawieniach pochodzi z ustawieniami regionalnymi aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-553">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="a7b7d-554">Domyślnie, który będzie ustawieniami regionalnymi w Panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-554">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="a7b7d-555">Jednak może zostać zmieniona programowo przy użyciu programu .NET Framework, z wyjątkiem zerem, która pochodzi z `Number` kartę.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-555">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="a7b7d-556">`IncludeLeadingDigit`, `UseParensForNegativeNumbers`, I `GroupDigits` argumenty przyjmować następujące wartości wyliczenia trzy stany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-556">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="a7b7d-557">Wartość</span><span class="sxs-lookup"><span data-stu-id="a7b7d-557">Value</span></span>|<span data-ttu-id="a7b7d-558">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-558">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="a7b7d-559">True</span><span class="sxs-lookup"><span data-stu-id="a7b7d-559">True</span></span>|  
|`TriState.False`|<span data-ttu-id="a7b7d-560">False</span><span class="sxs-lookup"><span data-stu-id="a7b7d-560">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="a7b7d-561">Ustawienia regionalne tego komputera</span><span class="sxs-lookup"><span data-stu-id="a7b7d-561">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-562">Poniższy przykład przedstawia użycie `FormatCurrency` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-562">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a7b7d-563">Liczba cyfr po punkcie dziesiętnym jest większa niż 99.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-563">Number of digits after decimal point is greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a7b7d-564">Typ nie jest liczbą.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-564">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-565">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-565">Required.</span></span> <span data-ttu-id="a7b7d-566"><see langword="Date" /> wyrażenie, które ma być sformatowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-566"><see langword="Date" /> expression to be formatted.</span></span></param>
        <param name="NamedFormat"><span data-ttu-id="a7b7d-567">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-567">Optional.</span></span> <span data-ttu-id="a7b7d-568">Liczbowa wartość, która wskazuje format daty i godziny używany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-568">Numeric value that indicates the date/time format used.</span></span> <span data-ttu-id="a7b7d-569">Pominięcie <see langword="DateFormat.GeneralDate" /> jest używany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-569">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span></span></param>
        <summary><span data-ttu-id="a7b7d-570">Zwraca ciąg reprezentujący wartość daty/godziny.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-570">Returns a string expression representing a date/time value.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-571">Zwraca ciąg reprezentujący wartość daty/godziny.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-571">Returns a string expression representing a date/time value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-572">`Date` — Typ danych zawsze zawiera informacje zarówno datę i godzinę.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-572">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="a7b7d-573">W celu konwersji typu, Visual Basic uwzględnia 1/1/1 (1 stycznia roku, 1) być neutralne wartość daty i 00:00:00 (północ) jako neutralny wartość po raz.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-573">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="a7b7d-574">Po sformatowaniu `Date` wartość jako ciąg daty i godziny `FormatDateTime` nie ma wartości neutralne w ciągu wynikowym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-574">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="a7b7d-575">Na przykład, jeśli Konwertuj #1/1/0001 9:30:00 # na ciąg, wynik jest "9:30:00 AM"; informacje o dacie zostało pominięte.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-575">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="a7b7d-576">Jednak informacje o dacie jest nadal znajdują się w oryginalnym `Date` wartości i może zostać przywrócona z funkcji takich jak `DatePart`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-576">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-577">W przypadku przekazania `Expression` argument jako `String` literału, `FormatDateTime` zinterpretuje ją zgodnie z <xref:System.Globalization.CultureInfo.CurrentCulture%2A> ustawienie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-577">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="a7b7d-578">Jednak w przypadku przekazania go jako `Date` literału, użyj formatu #mm/dd/rrrr # ponieważ `FormatDateTime` zawsze będą interpretowane przez `Date` literału zgodnie z kulturą języka angielskiego (US).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-578">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="a7b7d-579">Jest to konieczne, ponieważ, jeśli aplikacja jest opracowany i zakodowane przy użyciu `Date` literały z jednego kultury, ale następnie jest wykonywane na platformie z inną kulturę, `Date` literały może być analizowana niepoprawnie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-579">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="a7b7d-580">`NamedFormat` Argument ma następujące ustawienia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-580">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="a7b7d-581">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-581">Constant</span></span>|<span data-ttu-id="a7b7d-582">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-582">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="a7b7d-583">Wyświetla datę i/lub godzinę.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-583">Display a date and/or time.</span></span> <span data-ttu-id="a7b7d-584">Część daty są wyświetlane jako daty krótkiej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-584">Display a date part as a short date.</span></span> <span data-ttu-id="a7b7d-585">W przypadku część czasu, wyświetl ją jako dużo czasu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-585">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="a7b7d-586">Jeśli jest obecny, Wyświetl obie części.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-586">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="a7b7d-587">Wyświetla datę w formacie daty długiej określonego w ustawieniach regionalnych komputera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-587">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="a7b7d-588">Wyświetla datę w formacie daty krótkiej określonego w ustawieniach regionalnych komputera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-588">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="a7b7d-589">Wyświetla godzinę w formacie czasu określonego w ustawieniach regionalnych komputera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-589">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="a7b7d-590">Wyświetla godzinę w formacie 24-godzinnym (gg: mm).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-590">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-591">W tym przykładzie przedstawiono użycie `FormatDateTime` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-591">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-592"><paramref name="NamedFormat" /> ustawienie jest nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-592"><paramref name="NamedFormat" /> setting is not valid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-593">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-593">Required.</span></span> <span data-ttu-id="a7b7d-594">wyrażenie, które ma być sformatowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-594">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="a7b7d-595">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-595">Optional.</span></span> <span data-ttu-id="a7b7d-596">Wartość liczbowa wskazujący, ile miejsca są wyświetlane z prawej strony dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-596">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="a7b7d-597">Wartość domyślna to 1, co wskazuje, że używane są ustawienia regionalne tego komputera.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-597">The default value is –1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="a7b7d-598">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-598">Optional.</span></span> <span data-ttu-id="a7b7d-599"><see cref="T:Microsoft.VisualBasic.TriState" /> Stała, która wskazuje, czy cyfry 0 nie będą wyświetlane wartości ułamkowych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-599"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span></span> <span data-ttu-id="a7b7d-600">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-600">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="a7b7d-601">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-601">Optional.</span></span> <span data-ttu-id="a7b7d-602"><see cref="T:Microsoft.VisualBasic.TriState" /> Stała, która wskazuje, czy można umieścić wartości ujemnych wewnątrz nawiasów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-602"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span></span> <span data-ttu-id="a7b7d-603">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-603">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="a7b7d-604">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-604">Optional.</span></span> <span data-ttu-id="a7b7d-605"><see cref="T:Microsoft.VisualBasic.TriState" /> Stała, która wskazuje, czy numery są grupowane przy użyciu określonego w ustawieniach regionalnych ogranicznik grupy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-605"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="a7b7d-606">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-606">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-607">Zwraca wyrażenie sformatowane jako liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-607">Returns an expression formatted as a number.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-608">Zwraca wyrażenie sformatowane jako liczby.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-608">Returns an expression formatted as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-609">Gdy jeden lub więcej argumentów opcjonalnych zostały pominięte wartości pominiętych argumentów są dostarczane przez ustawienia regionalne.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-609">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-610">Wszystkie informacje o ustawieniach pochodzi z ustawieniami regionalnymi aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-610">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="a7b7d-611">Domyślnie, który będzie ustawieniami regionalnymi w Panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-611">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="a7b7d-612">Jednak może zostać zmieniona programowo przy użyciu programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-612">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="a7b7d-613">`IncludeLeadingDigit`, `UseParensForNegativeNumbers`, I `GroupDigits` argumenty mają następujące ustawienia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-613">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="a7b7d-614">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-614">Constant</span></span>|<span data-ttu-id="a7b7d-615">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-615">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="a7b7d-616">True</span><span class="sxs-lookup"><span data-stu-id="a7b7d-616">True</span></span>|  
|`TriState.False`|<span data-ttu-id="a7b7d-617">False</span><span class="sxs-lookup"><span data-stu-id="a7b7d-617">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="a7b7d-618">Ustawienia regionalne tego komputera</span><span class="sxs-lookup"><span data-stu-id="a7b7d-618">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-619">W tym przykładzie przedstawiono `FormatNumber` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-619">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a7b7d-620">Typ nie jest liczbą.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-620">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-621">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-621">Required.</span></span> <span data-ttu-id="a7b7d-622">wyrażenie, które ma być sformatowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-622">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="a7b7d-623">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-623">Optional.</span></span> <span data-ttu-id="a7b7d-624">Wartość liczbowa wskazująca liczbę miejsc po prawej stronie dziesiętnego są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-624">Numeric value indicating how many places to the right of the decimal are displayed.</span></span> <span data-ttu-id="a7b7d-625">Wartość domyślna to 1, co wskazuje, że ustawienia regionalne są używane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-625">Default value is –1, which indicates that the locale settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="a7b7d-626">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-626">Optional.</span></span> <span data-ttu-id="a7b7d-627"><see cref="T:Microsoft.VisualBasic.TriState" /> Stała, wskazującą, czy zerem przedstawia ułamkowa.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-627"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span></span> <span data-ttu-id="a7b7d-628">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-628">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="a7b7d-629">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-629">Optional.</span></span> <span data-ttu-id="a7b7d-630"><see cref="T:Microsoft.VisualBasic.TriState" /> Stała, która wskazuje, czy należy umieścić wartości ujemnych wewnątrz nawiasów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-630"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="a7b7d-631">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-631">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="a7b7d-632">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-632">Optional.</span></span> <span data-ttu-id="a7b7d-633"><see cref="T:Microsoft.VisualBasic.TriState" /> Stała, która wskazuje, czy numery są grupowane przy użyciu określonego w ustawieniach regionalnych ogranicznik grupy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-633"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="a7b7d-634">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-634">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-635">Zwraca wyrażenie sformatowane jako wartość procentowa (tzn. pomnożona przez 100) znakiem %.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-635">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-636">Zwraca wyrażenie sformatowane jako wartość procentowa (tzn. pomnożona przez 100) znakiem %.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-636">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-637">Jeśli jeden lub więcej argumentów opcjonalnych zostaną pominięte, wartości pominiętych argumentów są dostarczane przez ustawienia regionalne.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-637">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-638">Wszystkie informacje o ustawieniach pochodzi z ustawieniami regionalnymi aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-638">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="a7b7d-639">Domyślnie, który będzie ustawieniami regionalnymi w Panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-639">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="a7b7d-640">Jednak może zostać zmieniona programowo przy użyciu programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-640">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="a7b7d-641">`IncludeLeadingDigit`, `UseParensForNegativeNumbers`, I `GroupDigits` argumenty mają następujące ustawienia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-641">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="a7b7d-642">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-642">Constant</span></span>|<span data-ttu-id="a7b7d-643">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-643">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="a7b7d-644">True</span><span class="sxs-lookup"><span data-stu-id="a7b7d-644">True</span></span>|  
|`TriState.False`|<span data-ttu-id="a7b7d-645">False</span><span class="sxs-lookup"><span data-stu-id="a7b7d-645">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="a7b7d-646">Ustawienia regionalne tego komputera</span><span class="sxs-lookup"><span data-stu-id="a7b7d-646">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-647">W tym przykładzie przedstawiono użycie `FormatPercent` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-647">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a7b7d-648">Typ nie jest liczbą.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-648">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-649">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-649">Required.</span></span> <span data-ttu-id="a7b7d-650">Wszystkie prawidłowe <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-650">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Index"><span data-ttu-id="a7b7d-651">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-651">Required.</span></span> <span data-ttu-id="a7b7d-652"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-652"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-653">Indeks (w oparciu o 1) po znaku <c>str</c> ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-653">The (1-based) index of the character in <c>str</c> to be returned.</span></span></param>
        <summary><span data-ttu-id="a7b7d-654">Zwraca <see langword="Char" /> wartość reprezentującą znak ze wskazanego miejsca w podanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-654">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></summary>
        <returns>
          <span data-ttu-id="a7b7d-655"><see langword="Char" /> wartość reprezentującą znak ze wskazanego miejsca w podanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-655"><see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-656">Jeśli `Index` jest mniejszy niż 1 lub większą niż indeksu po ostatnim znaku `str`, `ArgumentException` jest generowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-656">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-657">Ten przykład przedstawia sposób użycia `GetChar` funkcja zwraca znak z określonym indeksem `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-657">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-658"><paramref name="str" /> jest <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, lub <paramref name="Index" /> jest większa niż indeksu ostatni znak <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-658"><paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-659">Zwraca liczbę całkowitą określającą początkowe położenie pierwszego wystąpienia jednego ciągu w innym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-659">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span>  <span data-ttu-id="a7b7d-660">Liczba całkowita jest indeks jedynki, przypadku znalezienia dopasowania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-660">The integer is a one-based index if a match is found.</span></span>  <span data-ttu-id="a7b7d-661">Jeśli nie znaleziono, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-661">If no match is found, the function returns zero.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="a7b7d-662">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-662">Required.</span></span> <span data-ttu-id="a7b7d-663"><see langword="String" /> wyrażenie jest przeszukiwany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-663"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="a7b7d-664">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-664">Required.</span></span> <span data-ttu-id="a7b7d-665"><see langword="String" /> szukane wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-665"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-666">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-666">Optional.</span></span> <span data-ttu-id="a7b7d-667">Określa typ porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-667">Specifies the type of string comparison.</span></span> <span data-ttu-id="a7b7d-668">Jeśli <c>porównania</c> zostanie pominięty, <see langword="Option Compare" /> ustawienie określa typ porównania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-668">If <c>Compare</c> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="a7b7d-669">Zwraca liczbę całkowitą określającą początkowe położenie pierwszego wystąpienia jednego ciągu w innym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-669">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns>
          <list type="table">
            <item>
              <term> <span data-ttu-id="a7b7d-670">IF</span><span class="sxs-lookup"><span data-stu-id="a7b7d-670">If</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-671">InStr zwraca</span><span class="sxs-lookup"><span data-stu-id="a7b7d-671">InStr returns</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-672"><paramref name="String1" /> ma zerową długość lub <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-672"><paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-673">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-673">0</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-674"><paramref name="String2" /> ma zerową długość lub <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-674"><paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-675">Pozycja początkowa wyszukiwania, która domyślnie Określa pierwszą pozycję znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-675">The starting position for the search, which defaults to the first character position.</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-676"><paramref name="String2" /> Nie znaleziono</span><span class="sxs-lookup"><span data-stu-id="a7b7d-676"><paramref name="String2" /> is not found</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-677">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-677">0</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-678"><paramref name="String2" /> zostanie znaleziony w <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-678"><paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-679">Położenie, w którym rozpoczyna się niezgodne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-679">Position where match begins</span></span>  
  
 </description>
            </item>
            <item>
              <term></term>
              <description></description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-680">Zazwyczaj `InStr` funkcja jest używana podczas analizowania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-680">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-681">`InStrB` Funkcji w poprzednich wersjach programu Visual Basic zwraca liczbę bajtów, a nie w pozycji znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-681">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="a7b7d-682">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-682">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-683">Wszystkie ciągi Visual Basic 2005 są w formacie Unicode, i `InStrB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-683">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="a7b7d-684">`Compare` Ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-684">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="a7b7d-685">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-685">Constant</span></span>|<span data-ttu-id="a7b7d-686">Wartość</span><span class="sxs-lookup"><span data-stu-id="a7b7d-686">Value</span></span>|<span data-ttu-id="a7b7d-687">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-687">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="a7b7d-688">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-688">0</span></span>|<span data-ttu-id="a7b7d-689">Wykonuje porównanie binarne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-689">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="a7b7d-690">1</span><span class="sxs-lookup"><span data-stu-id="a7b7d-690">1</span></span>|<span data-ttu-id="a7b7d-691">Przeprowadza porównanie tekstu</span><span class="sxs-lookup"><span data-stu-id="a7b7d-691">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-692">W tym przykładzie użyto `InStr` funkcja zwraca pozycję pierwszego wystąpienia jednego ciągu w innym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-692">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="a7b7d-693">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-693">Optional.</span></span> <span data-ttu-id="a7b7d-694">Wyrażenie liczbowe, która ustawia pozycję początkową każdego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-694">Numeric expression that sets the starting position for each search.</span></span> <span data-ttu-id="a7b7d-695">Pominięcie wyszukiwanie rozpoczyna się od pozycji pierwszego znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-695">If omitted, search begins at the first character position.</span></span> <span data-ttu-id="a7b7d-696">Indeks początkowy jest oparte na 1.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-696">The start index is 1-based.</span></span></param>
        <param name="String1"><span data-ttu-id="a7b7d-697">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-697">Required.</span></span> <span data-ttu-id="a7b7d-698"><see langword="String" /> wyrażenie jest przeszukiwany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-698"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="a7b7d-699">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-699">Required.</span></span> <span data-ttu-id="a7b7d-700"><see langword="String" /> szukane wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-700"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-701">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-701">Optional.</span></span> <span data-ttu-id="a7b7d-702">Określa typ porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-702">Specifies the type of string comparison.</span></span> <span data-ttu-id="a7b7d-703">Jeśli <c>porównania</c> zostanie pominięty, <see langword="Option Compare" /> ustawienie określa typ porównania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-703">If <c>Compare</c> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="a7b7d-704">Zwraca liczbę całkowitą określającą początkowe położenie pierwszego wystąpienia jednego ciągu w innym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-704">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns>
          <list type="table">
            <item>
              <term> <span data-ttu-id="a7b7d-705">IF</span><span class="sxs-lookup"><span data-stu-id="a7b7d-705">If</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-706">InStr zwraca</span><span class="sxs-lookup"><span data-stu-id="a7b7d-706">InStr returns</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-707"><paramref name="String1" /> ma zerową długość lub <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-707"><paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-708">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-708">0</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-709"><paramref name="String2" /> ma zerową długość lub <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-709"><paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description>
                <paramref name="start" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-710"><paramref name="String2" /> Nie znaleziono</span><span class="sxs-lookup"><span data-stu-id="a7b7d-710"><paramref name="String2" /> is not found</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-711">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-711">0</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-712"><paramref name="String2" /> zostanie znaleziony w <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-712"><paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-713">Położenie, w którym rozpoczyna się niezgodne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-713">Position where match begins</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-714"><paramref name="Start" /> &gt; długość <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-714"><paramref name="Start" /> &gt; length of <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-715">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-715">0</span></span>  
  
 </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-716">Zazwyczaj `InStr` funkcja jest używana podczas analizowania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-716">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-717">`InStrB` Funkcji w poprzednich wersjach programu Visual Basic zwraca liczbę bajtów, a nie w pozycji znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-717">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="a7b7d-718">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-718">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-719">Wszystkie ciągi Visual Basic 2005 są w formacie Unicode, i `InStrB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-719">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="a7b7d-720">`Compare` Ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-720">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="a7b7d-721">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-721">Constant</span></span>|<span data-ttu-id="a7b7d-722">Wartość</span><span class="sxs-lookup"><span data-stu-id="a7b7d-722">Value</span></span>|<span data-ttu-id="a7b7d-723">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-723">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="a7b7d-724">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-724">0</span></span>|<span data-ttu-id="a7b7d-725">Wykonuje porównanie binarne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-725">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="a7b7d-726">1</span><span class="sxs-lookup"><span data-stu-id="a7b7d-726">1</span></span>|<span data-ttu-id="a7b7d-727">Przeprowadza porównanie tekstu</span><span class="sxs-lookup"><span data-stu-id="a7b7d-727">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-728">W tym przykładzie użyto `InStr` funkcja zwraca pozycję pierwszego wystąpienia jednego ciągu w innym.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-728">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-729"><paramref name="Start" /> &lt; 1.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-729"><paramref name="Start" /> &lt; 1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" />
        <Parameter Name="StringMatch" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck"><span data-ttu-id="a7b7d-730">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-730">Required.</span></span> <span data-ttu-id="a7b7d-731">Przeszukiwany wyrażenia ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-731">String expression being searched.</span></span></param>
        <param name="StringMatch"><span data-ttu-id="a7b7d-732">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-732">Required.</span></span> <span data-ttu-id="a7b7d-733">Wyszukane wyrażenia ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-733">String expression being searched for.</span></span></param>
        <param name="Start"><span data-ttu-id="a7b7d-734">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-734">Optional.</span></span> <span data-ttu-id="a7b7d-735">Wyrażenie liczbowe, ustawienie pozycja początkowa jedynki każdego wyszukiwania, zaczynając od lewego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-735">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span></span> <span data-ttu-id="a7b7d-736">Jeśli <c>Start</c> zostanie pominięty, zostanie użyta -1, co oznacza wyszukiwanie rozpoczyna się od ostatniej pozycji znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-736">If <c>Start</c> is omitted then –1 is used, meaning the search begins at the last character position.</span></span> <span data-ttu-id="a7b7d-737">Wyszukiwanie następnie rozpoczynające się od prawej do lewej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-737">Search then proceeds from right to left.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-738">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-738">Optional.</span></span> <span data-ttu-id="a7b7d-739">Wartość liczbowa wskazujący rodzaj porównywania podczas podciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-739">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="a7b7d-740">Pominięcie odbywa się porównanie binarne.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-740">If omitted, a binary comparison is performed.</span></span> <span data-ttu-id="a7b7d-741">Wartości można znaleźć w temacie Ustawienia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-741">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-742">Zwraca pozycję pierwszego wystąpienia jednego ciągu w innym, licząc od prawego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-742">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span></span></summary>
        <returns>
          <list type="table">
            <item>
              <term> <span data-ttu-id="a7b7d-743">IF</span><span class="sxs-lookup"><span data-stu-id="a7b7d-743">If</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-744">Zwraca InStrRev</span><span class="sxs-lookup"><span data-stu-id="a7b7d-744">InStrRev returns</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-745"><paramref name="StringCheck" /> jest o zerowej długości</span><span class="sxs-lookup"><span data-stu-id="a7b7d-745"><paramref name="StringCheck" /> is zero-length</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-746">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-746">0</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-747"><paramref name="StringMatch" /> jest o zerowej długości</span><span class="sxs-lookup"><span data-stu-id="a7b7d-747"><paramref name="StringMatch" /> is zero-length</span></span>  
  
 </term>
              <description>
                <paramref name="Start" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-748"><paramref name="StringMatch" /> Nie znaleziono</span><span class="sxs-lookup"><span data-stu-id="a7b7d-748"><paramref name="StringMatch" /> is not found</span></span>  
  
 </term>
              <description> <span data-ttu-id="a7b7d-749">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-749">0</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-750"><paramref name="StringMatch" /> zostanie znaleziony w <paramref name="StringCheck" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-750"><paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-751">Pozycja jaką pierwszego dopasowania zostanie znaleziony, począwszy od prawego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-751">Position at which the first match is found, starting with the right side of the string.</span></span>  
  
 </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a7b7d-752"><paramref name="Start" /> jest większa niż długość <paramref name="StringMatch" /></span><span class="sxs-lookup"><span data-stu-id="a7b7d-752"><paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></span></span></term>
              <description> <span data-ttu-id="a7b7d-753">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-753">0</span></span>  
  
 </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-754">Należy pamiętać, że składnia `InStrRev` funkcja nie jest taka sama składnia `InStr` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-754">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="a7b7d-755">`Compare` Argument może mieć następujące wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-755">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a7b7d-756">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-756">Constant</span></span>|<span data-ttu-id="a7b7d-757">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-757">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="a7b7d-758">Przeprowadza porównanie binarne.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-758">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="a7b7d-759">Przeprowadza porównanie tekstowe.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-759">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-760">W tym przykładzie przedstawiono użycie `InStrRev` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-760">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-761"><paramref name="Start" /> = 0 lub <paramref name="Start" /> &lt; -1.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-761"><paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-762">Zwraca ciąg powstały z połączenia kilku podciągów zawartych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-762">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="a7b7d-763">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-763">Required.</span></span> <span data-ttu-id="a7b7d-764">Jednowymiarowa tablica zawierająca podciągi ma zostać umieszczony.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-764">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="a7b7d-765">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-765">Optional.</span></span> <span data-ttu-id="a7b7d-766">Dowolny ciąg używany do rozdzielania podciągów w zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-766">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="a7b7d-767">Pominięcie znak spacji ("") jest używany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-767">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="a7b7d-768">Jeśli <c>ogranicznik</c> jest ciągiem o zerowej długości ("") lub <see langword="Nothing" />, wszystkie elementy na liście są połączone z ogranicznikami nie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-768">If <c>Delimiter</c> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="a7b7d-769">Zwraca ciąg powstały z połączenia kilku podciągów zawartych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-769">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-770">Zwraca ciąg powstały z połączenia kilku podciągów zawartych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-770">Returns a string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-771">Występuje parzystość między `Join` i `Split` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-771">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="a7b7d-772">`Join` Funkcja pobiera tablicę ciągów i dołącza je za pomocą ciągu ogranicznik, aby zwrócić pojedynczy ciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-772">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="a7b7d-773">`Split` Funkcji ciąg znaków i oddziela go na ogranicznik, aby zwracało tablicę ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-773">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="a7b7d-774">Jednak klucza różnicą jest to, że `Join` można ciągów z dowolnego ciągu ogranicznik `Split` tylko rozdzielić ciągów za pomocą pojedynczy znak ogranicznika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-774">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-775">W poniższym przykładzie pokazano sposób użycia `Join` funkcja umożliwia utworzenie listy z kilku ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-775">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-776"><paramref name="SourceArray" /> nie jest jedną wymiarów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-776"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="a7b7d-777">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-777">Required.</span></span> <span data-ttu-id="a7b7d-778">Jednowymiarowa tablica zawierająca podciągi ma zostać umieszczony.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-778">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="a7b7d-779">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-779">Optional.</span></span> <span data-ttu-id="a7b7d-780">Dowolny ciąg używany do rozdzielania podciągów w zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-780">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="a7b7d-781">Pominięcie znak spacji ("") jest używany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-781">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="a7b7d-782">Jeśli <c>ogranicznik</c> jest ciągiem o zerowej długości ("") lub <see langword="Nothing" />, wszystkie elementy na liście są połączone z ogranicznikami nie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-782">If <c>Delimiter</c> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="a7b7d-783">Zwraca ciąg powstały z połączenia kilku podciągów zawartych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-783">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-784">Zwraca ciąg powstały z połączenia kilku podciągów zawartych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-784">Returns a string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-785">Występuje parzystość między `Join` i `Split` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-785">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="a7b7d-786">`Join` Funkcja pobiera tablicę ciągów i dołącza je za pomocą ciągu ogranicznik, aby zwrócić pojedynczy ciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-786">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="a7b7d-787">`Split` Funkcji ciąg znaków i oddziela go na ogranicznik, aby zwracało tablicę ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-787">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="a7b7d-788">Jednak klucza różnicą jest to, że `Join` można ciągów z dowolnego ciągu ogranicznik `Split` tylko rozdzielić ciągów za pomocą pojedynczy znak ogranicznika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-788">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-789">W poniższym przykładzie pokazano sposób użycia `Join` funkcja umożliwia utworzenie listy z kilku ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-789">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-790"><paramref name="SourceArray" /> nie jest jedną wymiarów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-790"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-791">Zwraca ciąg lub znak przekonwertowany na małe litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-791">Returns a string or character converted to lowercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="a7b7d-792">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-792">Required.</span></span> <span data-ttu-id="a7b7d-793">Wszystkie prawidłowe <see langword="String" /> lub <see langword="Char" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-793">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-794">Zwraca ciąg lub znak przekonwertowany na małe litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-794">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-795">Zwraca ciąg lub znak przekonwertowany na małe litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-795">Returns a string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-796">Wyłącznie z wielkich liter są konwertowane na małe litery; wszystkie znaki niebędące znaki i małe litery pozostają niezmienione.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-796">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a7b7d-797">Ta funkcja używa informacji o kulturze aplikacji w trakcie manipulowania ciągiem tak, aby zmiany sprawy odpowiadały ustawieniom regionalnym, w ramach których aplikacja jest używana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-797">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7b7d-798">Jeśli aplikacji podejmowania decyzji w procesie zabezpieczeń na podstawie wyniku porównania lub operacji w przypadku zmiany, a następnie należy użyć operacji <xref:System.String.Compare%2A?displayProperty=nameWithType> — metoda i przekazać <xref:System.StringComparison.Ordinal> lub <xref:System.StringComparison.OrdinalIgnoreCase> dla `comparisonType` argumentu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-798">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a7b7d-799">Aby uzyskać więcej informacji, zobacz [jak kultury wpływa na ciągi w Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-799">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-800">W tym przykładzie użyto `LCase` funkcja zwraca wersję małe litery w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-800">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="a7b7d-801">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-801">Required.</span></span> <span data-ttu-id="a7b7d-802">Wszystkie prawidłowe <see langword="String" /> lub <see langword="Char" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-802">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-803">Zwraca ciąg lub znak przekonwertowany na małe litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-803">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-804">Zwraca ciąg lub znak przekonwertowany na małe litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-804">Returns a string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-805">Wyłącznie z wielkich liter są konwertowane na małe litery; wszystkie znaki niebędące znaki i małe litery pozostają niezmienione.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-805">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a7b7d-806">Ta funkcja używa informacji o kulturze aplikacji w trakcie manipulowania ciągiem tak, aby zmiany sprawy odpowiadały ustawieniom regionalnym, w ramach których aplikacja jest używana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-806">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7b7d-807">Jeśli aplikacji podejmowania decyzji w procesie zabezpieczeń na podstawie wyniku porównania lub operacji w przypadku zmiany, a następnie należy użyć operacji <xref:System.String.Compare%2A?displayProperty=nameWithType> — metoda i przekazać <xref:System.StringComparison.Ordinal> lub <xref:System.StringComparison.OrdinalIgnoreCase> dla `comparisonType` argumentu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-807">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a7b7d-808">Aby uzyskać więcej informacji, zobacz [jak kultury wpływa na ciągi w Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-808">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-809">W tym przykładzie użyto `LCase` funkcja zwraca wersję małe litery w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-809">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-810">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-810">Required.</span></span> <span data-ttu-id="a7b7d-811"><see langword="String" /> wyrażenie, z którego są zwracane po lewej stronie znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-811"><see langword="String" /> expression from which the leftmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="a7b7d-812">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-812">Required.</span></span> <span data-ttu-id="a7b7d-813"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-813"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-814">Wyrażenie liczbowe wskazujący, ile znaków ma być zwracanych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-814">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="a7b7d-815">Jeśli jest to 0, ciąg o zerowej długości ("") jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-815">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="a7b7d-816">Jeśli większa lub równa liczbie znaków <c>str</c>, zostanie zwrócony cały ciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-816">If greater than or equal to the number of characters in <c>str</c>, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="a7b7d-817">Zwraca ciąg zawierający określoną liczbę znaków od lewego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-817">Returns a string containing a specified number of characters from the left side of a string.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-818">Zwraca ciąg zawierający określoną liczbę znaków od lewego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-818">Returns a string containing a specified number of characters from the left side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-819">Aby określić liczbę znaków w `str`, użyj `Len` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-819">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="a7b7d-820">Jeśli używana w aplikacji formularzy systemu Windows lub klasy, która ma `Left` właściwości, użytkownik musi pełnej kwalifikacji funkcji z `Microsoft.VisualBasic.Left`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-820">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-821">`LeftB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca ciąg w bajtach zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-821">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="a7b7d-822">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-822">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-823">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LeftB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-823">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-824">W tym przykładzie przedstawiono użycie `Left` funkcja zwraca podciąg z danym `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-824">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="a7b7d-825">W klasie, która ma `Left` właściwości, może być konieczne do pełnej kwalifikacji `Left` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-825">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-826"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-826"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-827">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-827">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-828">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-828">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-829">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-829">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-830">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-830">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-831">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-831">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-832">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-832">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-833">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-833">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-834">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-834">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-835">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-835">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-836">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-836">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-837">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-837">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-838">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-838">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-839">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-839">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-840">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-840">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-841">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-841">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-842">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-842">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-843">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-843">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-844">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-844">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-845">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-845">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-846">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-846">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-847">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-847">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-848">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-848">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-849">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-849">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-850">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-850">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-851">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-851">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-852">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-852">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-853">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-853">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-854">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-854">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-855">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-855">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-856">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-856">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-857">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-857">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-858">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-858">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-859">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-859">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-860">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-860">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-861">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-861">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-862">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-862">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-863">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-863">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-864">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-864">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-865">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-865">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-866">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-866">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-867">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-867">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-868">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-868">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-869">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-869">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-870">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-870">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-871">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-871">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-872">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-872">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-873">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-873">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-874">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-874">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-875">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-875">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-876">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-876">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-877">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-877">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-878">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-878">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-879">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-879">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-880">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-880">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-881">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-881">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-882">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-882">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-883">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-883">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-884">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-884">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-885">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-885">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-886">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-886">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-887">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-887">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-888">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-888">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-889">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-889">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-890">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-890">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-891">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-891">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-892">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-892">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-893">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-893">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-894">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-894">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-895">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-895">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-896">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-896">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-897">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-897">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-898">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-898">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-899">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-899">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-900">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-900">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-901">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-901">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-902">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-902">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-903">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-903">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-904">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-904">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-905">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-905">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-906">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-906">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-907">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-907">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-908">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-908">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-909">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-909">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-910">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-910">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-911">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-911">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-912">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-912">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-913">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-913">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-914">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-914">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-915">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-915">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-916">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-916">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-917">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-917">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-918">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-918">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-919">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-919">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-920">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-920">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-921">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-921">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-922">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-922">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-923">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-923">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-924">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-924">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-925">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-925">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-926">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-926">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-927">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-927">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-928">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-928">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-929">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-929">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-930">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-930">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-931">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-931">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-932">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-932">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-933">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-933">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-934">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-934">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-935">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-935">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-936">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-936">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-937">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-937">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-938">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-938">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-939">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-939">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-940">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-940">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-941">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-941">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-942">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-942">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-943">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-943">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-944">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-944">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-945">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-945">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-946">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-946">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-947">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-947">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-948">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-948">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-949">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-949">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-950">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-950">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-951">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-951">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-952">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-952">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-953">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-953">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-954">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-954">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-955">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-955">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-956">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-956">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-957">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-957">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-958">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-958">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-959">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-959">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-960">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-960">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-961">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-961">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-962">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-962">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-963">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-963">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-964">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-964">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-965">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-965">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-966">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-966">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-967">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-967">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-968">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-968">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-969">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-969">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-970">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-970">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-971">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-971">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-972">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-972">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-973">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-973">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-974">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-974">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-975">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-975">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-976">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-976">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-977">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-977">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-978">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-978">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-979">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-979">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-980">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-980">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-981">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-981">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-982">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-982">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-983">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-983">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-984">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-984">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-985">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-985">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-986">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-986">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-987">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-987">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-988">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-988">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-989">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-989">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-990">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-990">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-991">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-991">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-992">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-992">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-993">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-993">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-994">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-994">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-995">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-995">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-996">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-996">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-997">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-997">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-998">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-998">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-999">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-999">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1000">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1000">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1001">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1001">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1002">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1002">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1003">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1003">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1004">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1004">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1005">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1005">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1006">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1006">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1007">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1007">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1008">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1008">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1009">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1009">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1010">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1010">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1011">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1011">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1012">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1012">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1013">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1013">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1014">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1014">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1015">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1015">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1016">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1016">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1017">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1017">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1018">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1018">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1019">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1019">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1020">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1020">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1021">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1021">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1022">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1022">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1023">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1023">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1024">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1024">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1025">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1025">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1026">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1026">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1027">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1027">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1028">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1028">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1029">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1029">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1030">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1030">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1031">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1031">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1032">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1032">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1033">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1033">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1034">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1034">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1035">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1035">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1036">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1036">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1037">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1037">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1038">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1038">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1039">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1039">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1040">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1040">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1041">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1041">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1042">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1042">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1043">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1043">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1044">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1044">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1045">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1045">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1046">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1046">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1047">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1047">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1048">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1048">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1049">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1049">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1050">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1050">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1051">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1051">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1052">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1052">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1053">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1053">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1054">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1054">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1055">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1055">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1056">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1056">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1057">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1057">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1058">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1058">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1059">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1059">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1060">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1060">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1061">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1061">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1062">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1062">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1063">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1063">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1064">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1064">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1065">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1065">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1066">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1066">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1067">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1067">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1068">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1068">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1069">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1069">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1070">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1070">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1071">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1071">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1072">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1072">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1073">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1073">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1074">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1074">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1075">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1075">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1076">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1076">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1077">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1077">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1078">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1078">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1079">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1079">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1080">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1080">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1081">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1081">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1082">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1082">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1083">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1083">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1084">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1084">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1085">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1085">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1086">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1086">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1087">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1087">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1088">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1088">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1089">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1089">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1090">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1090">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1091">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1091">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1092">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1092">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1093">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1093">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1094">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1094">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1095">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1095">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1096">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1096">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1097">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1097">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1098">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1098">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1099">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1099">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1100">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1100">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1101">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1101">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1102">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1102">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1103">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1103">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1104">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1104">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1105">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1105">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1106">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1106">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1107">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1107">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1108">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1108">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1109">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1109">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1110">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1110">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1111">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1111">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1112">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1112">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1113">Wszystkie prawidłowe <see langword="String" /> nazwę wyrażenia lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1113">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="a7b7d-1114">Jeśli <c>wyrażenie</c> jest typu <see langword="Object" />, <see langword="Len" /> funkcja zwraca rozmiar będą zapisywane do pliku przez <see langword="FilePut" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1114">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1115">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1115">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1116">Zwraca liczbę całkowitą zawierającą liczbę znaków w ciągu lub liczbę nominalną bajtów potrzebną do przechowania zmiennej.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1116">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1117">Typy zdefiniowane przez użytkownika i `Object` zmiennych, `Len` funkcja zwraca rozmiar będą zapisywane do pliku przez `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1117">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a7b7d-1118">Jeśli `Object` zawiera `String`, zwróci długość ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1118">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a7b7d-1119">Jeśli `Object` zawiera innego typu, jak będą zapisywane do pliku przez zwróci rozmiar obiektu `FilePut` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1119">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1120">`VBFixedString` Atrybut można stosować do pól ciągów w obiektach, aby wskazać rozmiar ciągu w bajtach, gdy zapisywane na dysku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1120">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a7b7d-1121">`Len` Używa `VBFixedString` atrybut, jeśli jest dostępny, podczas określania rozmiaru `Object` zmiennych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1121">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1122">`Len` Funkcja może nie być możliwe ustalenie rzeczywistą liczbę bajtów pamięci masowej wymagane w przypadku użycia z ciągów o zmiennej długości w typy danych zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1122">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1123">`LenB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca liczbę bajtów w ciąg zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1123">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a7b7d-1124">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1124">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1125">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `LenB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1125">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a7b7d-1126">Uwagi dla deweloperów inteligentnych urządzeń</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1126">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a7b7d-1127">`Len` Funkcja akceptuje tylko `String` i `Object` zmienne jako parametry.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1127">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a7b7d-1128">Jeśli `Object` zawiera `String`, zwróci długość `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1128">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a7b7d-1129">Jeśli parametr ma wartość NULL `Object` odwołanie, funkcja zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1129">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a7b7d-1130">Jeśli `Object` zawiera innego typu, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1130">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1131">W tym przykładzie użyto `Len` do zwrócenia liczbę znaków w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1131">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="a7b7d-1132">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1132">Required.</span></span> <span data-ttu-id="a7b7d-1133"><see langword="String" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1133"><see langword="String" /> expression.</span></span> <span data-ttu-id="a7b7d-1134">Nazwa zmiennej ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1134">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="a7b7d-1135">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1135">Required.</span></span> <span data-ttu-id="a7b7d-1136"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1136"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1137">Długość ciągu zwróconego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1137">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1138">Zwraca ciąg wyrównany do lewej zawierający podany ciąg skorygowany do zadanej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1138">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1139">Zwraca ciąg wyrównany do lewej zawierający podany ciąg skorygowany do zadanej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1139">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1140">Jeśli określony ciąg jest dłuższy niż określony czas, zwrócony ciąg jest obcinana do określonej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1140">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="a7b7d-1141">Jeśli określonego ciągu jest mniejszy niż określony czas, spacje są dodawane do prawego końca zwracany ciąg do utworzenia odpowiednich długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1141">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1142">W tym przykładzie przedstawiono użycie `LSet` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1142">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1143">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1143">Required.</span></span> <span data-ttu-id="a7b7d-1144">Wszystkie prawidłowe <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1144">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1145">Zwraca ciąg zawierający kopię podanego ciągu bez spacji początkowych (<see langword="LTrim" />), nie spacji końcowych (<see langword="RTrim" />), lub nie początkowe lub końcowe spacje (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1145">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1146">Zwraca ciąg zawierający kopię podanego ciągu bez spacji początkowych (<see langword="LTrim" />), nie spacji końcowych (<see langword="RTrim" />), lub nie początkowe lub końcowe spacje (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1146">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1147">`LTrim`, `RTrim`, I `Trim` funkcji Usuń spacje z końców ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1147">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1148">W tym przykładzie użyto `LTrim` funkcji spacje początkowe i `RTrim` funkcji końcowe spacje ze zmienną typu string.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1148">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="a7b7d-1149">Używa `Trim` funkcji obu typów spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1149">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-1150">Zwraca ciąg zawierający znaki z określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1150">Returns a string that contains characters from a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1151">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1151">Required.</span></span> <span data-ttu-id="a7b7d-1152"><see langword="String" /> wyrażenie, z którego są zwracane znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1152"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="a7b7d-1153">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1153">Required.</span></span> <span data-ttu-id="a7b7d-1154"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1154"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1155">Położenie początkowe zwracanych znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1155">Starting position of the characters to return.</span></span> <span data-ttu-id="a7b7d-1156">Jeśli <c>Start</c> jest większa niż liczba znaków w <c>str</c>, <see langword="Mid" /> funkcja zwraca ciąg o zerowej długości ("").</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1156">If <c>Start</c> is greater than the number of characters in <c>str</c>, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="a7b7d-1157"><c>Uruchom</c> jest oparta na jeden.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1157"><c>Start</c> is one-based.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1158">Zwraca ciąg zawierający znaki, zaczynając od określonej pozycji w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1158">Returns a string that contains all the characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1159">Ciąg, który zawiera wszystkie znaki, zaczynając od określonej pozycji w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1159">A string that consists of all the characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1160">Aby określić liczbę znaków w `str`, użyj `Len` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1160">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1161">Visual Basic ma `Mid` funkcji i `Mid` instrukcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1161">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="a7b7d-1162">Te elementy jednocześnie działać na określoną liczbę znaków w ciągu, ale `Mid` funkcja zwraca znaków podczas `Mid` instrukcji zastępuje znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1162">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="a7b7d-1163">Aby uzyskać więcej informacji, zobacz [Mid — instrukcja](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1163">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1164">`MidB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca ciąg w bajtach zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1164">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="a7b7d-1165">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1165">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1166">Wszystkie ciągi Visual Basic są w formacie Unicode, i `MidB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1166">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1167">Ostatni wiersz w tym przykładzie używa tego przeciążenia `Mid` funkcja zwracająca piątego do kolejnych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1167">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1168"><paramref name="Start" /> &lt;= 0 lub <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1168"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1169">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1169">Required.</span></span> <span data-ttu-id="a7b7d-1170"><see langword="String" /> wyrażenie, z którego są zwracane znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1170"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="a7b7d-1171">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1171">Required.</span></span> <span data-ttu-id="a7b7d-1172"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1172"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1173">Położenie początkowe zwracanych znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1173">Starting position of the characters to return.</span></span> <span data-ttu-id="a7b7d-1174">Jeśli <c>Start</c> jest większa niż liczba znaków w <c>str</c>, <see langword="Mid" /> funkcja zwraca ciąg o zerowej długości ("").</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1174">If <c>Start</c> is greater than the number of characters in <c>str</c>, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="a7b7d-1175"><c>Uruchom</c> jednej podstawie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1175"><c>Start</c> is one based.</span></span></param>
        <param name="Length"><span data-ttu-id="a7b7d-1176">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1176">Optional.</span></span> <span data-ttu-id="a7b7d-1177"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1177"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1178">Liczba znaków do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1178">Number of characters to return.</span></span> <span data-ttu-id="a7b7d-1179">Pominięcie lub, jeśli jest dostępnych mniej niż <c>długość</c> znaków w tekście (w tym znak na pozycji <c>Start</c>), zwracane są wszystkie znaki od pozycji początkowej na końcu ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1179">If omitted or if there are fewer than <c>Length</c> characters in the text (including the character at position <c>Start</c>), all characters from the start position to the end of the string are returned.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1180">Zwraca ciąg zawierający określoną liczbę znaków od określonej pozycji w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1180">Returns a string that contains a specified number of characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1181">Ciąg, który składa się z określoną liczbę znaków, zaczynając od określonej pozycji w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1181">A string that consists of the specified number of characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1182">Aby określić liczbę znaków w `str`, użyj `Len` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1182">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="a7b7d-1183">Visual Basic ma `Mid` funkcji i `Mid` instrukcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1183">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="a7b7d-1184">Te elementy jednocześnie działać na określoną liczbę znaków w ciągu, ale `Mid` funkcja zwraca znaków podczas `Mid` instrukcji zastępuje znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1184">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="a7b7d-1185">Aby uzyskać więcej informacji, zobacz [Mid — instrukcja](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1185">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1186">`MidB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca ciąg w bajtach zamiast znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1186">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="a7b7d-1187">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1187">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1188">Wszystkie ciągi Visual Basic są w formacie Unicode, i `MidB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1188">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1189">Pierwsze dwie `Mid` funkcji w tym przykładzie zwraca określoną liczbę znaków z ciągu, zaczynając od danej pozycji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1189">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="a7b7d-1190">(Przedstawiono ostatniej funkcji <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> przeciążenia i tylko określa punkt początkowy wyodrębniania ciąg.)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1190">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1191"><paramref name="Start" /> &lt;= 0 lub <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1191"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Find" Type="System.String" />
        <Parameter Name="Replacement" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Count" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1192">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1192">Required.</span></span> <span data-ttu-id="a7b7d-1193">Ciąg zawierający podciąg, aby zastąpić wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1193">String expression containing substring to replace.</span></span></param>
        <param name="Find"><span data-ttu-id="a7b7d-1194">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1194">Required.</span></span> <span data-ttu-id="a7b7d-1195">Poszukiwany podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1195">Substring being searched for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="a7b7d-1196">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1196">Required.</span></span> <span data-ttu-id="a7b7d-1197">Zastąpienie podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1197">Replacement substring.</span></span></param>
        <param name="Start"><span data-ttu-id="a7b7d-1198">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1198">Optional.</span></span> <span data-ttu-id="a7b7d-1199">Umieść w <c>wyrażenie</c> zaczynającym się ciąg używany do zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1199">Position within <c>Expression</c> that starts a substring used for replacement.</span></span> <span data-ttu-id="a7b7d-1200">Wartość zwracana <see langword="Replace" /> jest ciągiem, który rozpoczyna się od <c>Start</c>, z odpowiednie zmiany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1200">The return value of <see langword="Replace" /> is a string that begins at <c>Start</c>, with appropriate substitutions.</span></span> <span data-ttu-id="a7b7d-1201">Jeśli pominięta, przyjmowana jest wartość 1.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1201">If omitted, 1 is assumed.</span></span></param>
        <param name="Count"><span data-ttu-id="a7b7d-1202">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1202">Optional.</span></span> <span data-ttu-id="a7b7d-1203">Liczba zamian podciągów do wykonania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1203">Number of substring substitutions to perform.</span></span> <span data-ttu-id="a7b7d-1204">W przypadku pominięcia będzie używana wartość domyślna to 1, co oznacza "wykonanie wszystkich możliwych zamian".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1204">If omitted, the default value is –1, which means "make all possible substitutions."</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-1205">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1205">Optional.</span></span> <span data-ttu-id="a7b7d-1206">Wartość liczbowa wskazujący rodzaj porównywania podczas podciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1206">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="a7b7d-1207">Wartości można znaleźć w temacie Ustawienia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1207">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1208">Zwraca wartość typu ciąg, w której określony podciąg został zamieniony na inny podciąg określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1208">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span></span></summary>
        <returns>
          <span data-ttu-id="a7b7d-1209"><see langword="Replace" /> zwraca następujące wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1209"><see langword="Replace" /> returns the following values.</span></span>  
  
 <span data-ttu-id="a7b7d-1210"><list type="table"><item><term> Jeśli</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1210"><list type="table"><item><term> If</span></span>  
  
 <span data-ttu-id="a7b7d-1211"></term><description> Zwraca Zamień</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1211"></term><description> Replace returns</span></span>  
  
 <span data-ttu-id="a7b7d-1212"></description></item><item><term><paramref name="Find" /> jest pusty lub <see langword="Nothing" /> </term> <description> kopię <paramref name="Expression" /> </description> </item> <item> <term> <paramref name="Replace" /> jest o zerowej długości</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1212"></description></item><item><term><paramref name="Find" /> is zero-length or <see langword="Nothing" /></term><description> Copy of <paramref name="Expression" /></description></item><item><term><paramref name="Replace" /> is zero-length</span></span>  
  
 <span data-ttu-id="a7b7d-1213"></term><description> Kopię <paramref name="Expression" /> z nie wystąpień <paramref name="Find" /> </description> </item> <item> <term> <paramref name="Expression" /> jest pusty lub <see langword="Nothing" />, lub <paramref name="Start" /> jest większa niż długość <paramref name="Expression" /> </term> <description> <see langword="Nothing" /> </description> </item> <item> <term> <paramref name="Count" /> wynosi 0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1213"></term><description> Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></description></item><item><term><paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></term><description><see langword="Nothing" /></description></item><item><term><paramref name="Count" /> is 0</span></span>  
  
 <span data-ttu-id="a7b7d-1214"></term><description> Kopię <paramref name="Expression" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1214"></term><description> Copy of <paramref name="Expression" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1215">Wartość zwracana `Replace` funkcji jest ciągiem, który rozpoczyna się od pozycji określony przez `Start` i kończy się na końcu `Expression` ciąg z podstawień wprowadzone określone przez `Find` i `Replace` wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1215">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="a7b7d-1216">`Compare` Argument może mieć następujące wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1216">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a7b7d-1217">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1217">Constant</span></span>|<span data-ttu-id="a7b7d-1218">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1218">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="a7b7d-1219">Wykonuje porównanie binarne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1219">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="a7b7d-1220">Wykonuje porównanie tekstowe</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1220">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1221">W tym przykładzie przedstawiono `Replace` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1221">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1222"><paramref name="Count" /> &lt; -1 lub <paramref name="Start" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1222"><paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1223">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1223">Required.</span></span> <span data-ttu-id="a7b7d-1224"><see langword="String" /> wyrażenie, z którego są zwracane po prawej stronie znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1224"><see langword="String" /> expression from which the rightmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="a7b7d-1225">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1225">Required.</span></span> <span data-ttu-id="a7b7d-1226"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1226"><see langword="Integer" />.</span></span> <span data-ttu-id="a7b7d-1227">Wyrażenie liczbowe wskazujący, ile znaków ma być zwracanych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1227">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="a7b7d-1228">Jeśli jest to 0, ciąg o zerowej długości ("") jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1228">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="a7b7d-1229">Jeśli większa lub równa liczbie znaków <c>str</c>, zostanie zwrócony cały ciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1229">If greater than or equal to the number of characters in <c>str</c>, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1230">Zwraca ciąg zawierający określoną liczbę znaków od prawego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1230">Returns a string containing a specified number of characters from the right side of a string.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1231">Zwraca ciąg zawierający określoną liczbę znaków od prawego końca ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1231">Returns a string containing a specified number of characters from the right side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1232">Aby określić liczbę znaków w `str`, użyj `Len` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1232">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="a7b7d-1233">Jeśli używana w formularzu systemu Windows lub klasy, która ma `Right` właściwości, użytkownik musi pełnej kwalifikacji funkcji z `Microsoft.VisualBasic.Strings.Right`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1233">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1234">`RightB` Funkcja we wcześniejszych wersjach programu Visual Basic zwraca ciąg znaków, a nie w bajtach.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1234">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="a7b7d-1235">Służy przede wszystkim do konwersji ciągów w aplikacjach z zestawami dwubajtowych znaków (znaków DBCS).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1235">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a7b7d-1236">Wszystkie bieżące ciągi Visual Basic są w formacie Unicode, i `RightB` nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1236">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1237">W tym przykładzie przedstawiono użycie `Right` funkcja zwraca podciąg z danym `String`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1237">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="a7b7d-1238">W klasie, która ma `Right` właściwości, może być konieczne do pełnej kwalifikacji `Right` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1238">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1239"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1239"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="a7b7d-1240">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1240">Required.</span></span> <span data-ttu-id="a7b7d-1241"><see langword="String" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1241"><see langword="String" /> expression.</span></span> <span data-ttu-id="a7b7d-1242">Nazwa zmiennej ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1242">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="a7b7d-1243">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1243">Required.</span></span> <span data-ttu-id="a7b7d-1244"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1244"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1245">Długość ciągu zwróconego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1245">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1246">Zwraca ciąg wyrównany do prawej zawierający podany ciąg skorygowany do zadanej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1246">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1247">Zwraca ciąg wyrównany do prawej zawierający podany ciąg skorygowany do zadanej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1247">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1248">Jeśli `Source` jest dłuższa niż `Length`, `RSet` umieszcza tylko po lewej stronie znaków, maksymalnie do długości `Source`, w zwracanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1248">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="a7b7d-1249">Jeśli określonego ciągu jest mniejszy niż określony czas, spacje są dodawane do lewego końca ciągu do utworzenia odpowiednich długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1249">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="a7b7d-1250">Jeśli określony ciąg jest dłuższy niż określony czas, jest obcinana do zadanej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1250">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1251">W tym przykładzie przedstawiono użycie `RSet` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1251">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1252">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1252">Required.</span></span> <span data-ttu-id="a7b7d-1253">Wszystkie prawidłowe <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1253">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1254">Zwraca ciąg zawierający kopię podanego ciągu bez spacji początkowych (<see langword="LTrim" />), nie spacji końcowych (<see langword="RTrim" />), lub nie początkowe lub końcowe spacje (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1254">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1255">Zwraca ciąg zawierający kopię podanego ciągu bez spacji początkowych (<see langword="LTrim" />), nie spacji końcowych (<see langword="RTrim" />), lub nie początkowe lub końcowe spacje (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1255">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1256">`LTrim`, `RTrim`, I `Trim` funkcji Usuń spacje z końców ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1256">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1257">W tym przykładzie użyto `LTrim` funkcji spacje początkowe i `RTrim` funkcji końcowe spacje ze zmienną typu string.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1257">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="a7b7d-1258">Używa `Trim` funkcji obu typów spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1258">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="a7b7d-1259">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1259">Required.</span></span> <span data-ttu-id="a7b7d-1260"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1260"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1261">Liczba spacji, w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1261">The number of spaces you want in the string.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1262">Zwraca ciąg zawierający podaną liczbę spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1262">Returns a string consisting of the specified number of spaces.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1263">Zwraca ciąg zawierający podaną liczbę spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1263">Returns a string consisting of the specified number of spaces.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1264">`Space` Funkcja jest przydatna do formatowania danych wyjściowych i czyszczenia danych w ciągi o stałej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1264">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1265">W tym przykładzie użyto `Space` funkcja zwraca ciąg zawierający podaną liczbę spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1265">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1266"><paramref name="Number" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1266"><paramref name="Number" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Delimiter" Type="System.String" />
        <Parameter Name="Limit" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1267">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1267">Required.</span></span> <span data-ttu-id="a7b7d-1268"><see langword="String" /> wyrażenie zawierające podciągi i ograniczniki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1268"><see langword="String" /> expression containing substrings and delimiters.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="a7b7d-1269">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1269">Optional.</span></span> <span data-ttu-id="a7b7d-1270">Dowolny pojedynczy znak używany do identyfikowania limity podciąg.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1270">Any single character used to identify substring limits.</span></span> <span data-ttu-id="a7b7d-1271">Jeśli <c>ogranicznik</c> zostanie pominięty, znak spacji ("") jest zakłada się, że ogranicznikiem.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1271">If <c>Delimiter</c> is omitted, the space character (" ") is assumed to be the delimiter.</span></span></param>
        <param name="Limit"><span data-ttu-id="a7b7d-1272">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1272">Optional.</span></span> <span data-ttu-id="a7b7d-1273">Maksymalna liczba podciągów, w których można podzielić ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1273">Maximum number of substrings into which the input string should be split.</span></span> <span data-ttu-id="a7b7d-1274">Wartość domyślna -1, wskazuje, czy ciąg wejściowy powinny być podzielone przy każdym wystąpieniu <c>ogranicznik</c> ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1274">The default, –1, indicates that the input string should be split at every occurrence of the <c>Delimiter</c> string.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-1275">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1275">Optional.</span></span> <span data-ttu-id="a7b7d-1276">Wartość liczbowa wskazujący porównywania podczas podciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1276">Numeric value indicating the comparison to use when evaluating substrings.</span></span> <span data-ttu-id="a7b7d-1277">W przypadku wartości zobacz sekcję „Ustawienia".</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1277">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1278">Zwraca nieujemną jednowymiarową tablicę zawierającą podaną liczbę podciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1278">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span></span></summary>
        <returns>
          <span data-ttu-id="a7b7d-1279"><see langword="String" /> Tablica.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1279"><see langword="String" /> array.</span></span> <span data-ttu-id="a7b7d-1280">Jeśli <paramref name="Expression" /> jest ciągiem o zerowej długości (""), <see langword="Split" /> zwraca tablicę pojedynczego elementu zawierającą ciąg o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1280">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span></span> <span data-ttu-id="a7b7d-1281">Jeśli <paramref name="Delimiter" /> jest ciągiem o zerowej długości lub jeśli on nie występować w dowolnym miejscu na w <paramref name="Expression" />, <see langword="Split" /> zwraca tablicę pojedynczego elementu zawierającego pełny <paramref name="Expression" /> ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1281">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1282">Domyślnie lub gdy `Limit` równa -1, `Split` funkcja dzieli ciąg wejściowy przy każdym wystąpieniu ogranicznika ciągu i zwraca podciągów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1282">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="a7b7d-1283">Podczas `Limit` parametru jest większa od zera, `Split` funkcja dzieli ciąg przy pierwszym `Limit`wystąpienia ogranicznik,-1 i zwraca tablicę z wynikowy podciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1283">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="a7b7d-1284">Na przykład `Split("a:b:c", ":")` zwraca tablicę `{"a", "b", "c"}`, podczas gdy `Split("a:b:c", ":", 2)` zwraca tablicę `{"a", "b:c"}`.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1284">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="a7b7d-1285">Gdy `Split` funkcja napotka dwa ograniczniki w wierszu lub ogranicznik na początku lub na końcu ciągu, interpretuje je jako otaczającego ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1285">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="a7b7d-1286">Na przykład `Split("xx", "x")` zwraca tablicę zawierającą trzy puste ciągi: jeden znajdujące początku ciąg i pierwszy "x", co znajdujące dwa "ciągi x", a drugi znajdujące ostatniego "x" i na końcu ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1286">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="a7b7d-1287">Ta tabela pokazuje, jak opcjonalny `Delimiter`, `Limit`, i `Compare` parametrów można zmienić zachowanie `Split` funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1287">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="a7b7d-1288">Wywołanie podziału</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1288">Split Call</span></span>|<span data-ttu-id="a7b7d-1289">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1289">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="a7b7d-1290">{"42,", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1290">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="a7b7d-1291">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1291">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="a7b7d-1292">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1292">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="a7b7d-1293">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1293">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="a7b7d-1294">{"Alicja i Robert"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1294">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="a7b7d-1295">{"Alicja", "Bob"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1295">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="a7b7d-1296">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1296">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="a7b7d-1297">{"ktoś", "example.com"}</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1297">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="a7b7d-1298">`Compare` Argument może mieć następujące wartości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1298">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a7b7d-1299">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1299">Constant</span></span>|<span data-ttu-id="a7b7d-1300">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1300">Description</span></span>|<span data-ttu-id="a7b7d-1301">Wartość</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1301">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="a7b7d-1302">Wykonuje porównanie binarne</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1302">Performs a binary comparison</span></span>|<span data-ttu-id="a7b7d-1303">0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1303">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="a7b7d-1304">Wykonuje porównanie tekstowe</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1304">Performs a textual comparison</span></span>|<span data-ttu-id="a7b7d-1305">1</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1305">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1306">W poniższym przykładzie pokazano, jak podzielić ciąg na jego spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1306">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="a7b7d-1307">W poniższym przykładzie pokazano sposób dzielenie ciągów z wieloma ograniczniki w wierszu i odfiltrować puste ciągi.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1307">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="a7b7d-1308">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1308">Required.</span></span> <span data-ttu-id="a7b7d-1309">Wszystkie prawidłowe <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1309">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="String2"><span data-ttu-id="a7b7d-1310">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1310">Required.</span></span> <span data-ttu-id="a7b7d-1311">Wszystkie prawidłowe <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1311">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Compare"><span data-ttu-id="a7b7d-1312">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1312">Optional.</span></span> <span data-ttu-id="a7b7d-1313">Określa typ porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1313">Specifies the type of string comparison.</span></span> <span data-ttu-id="a7b7d-1314">Jeśli <c>porównania</c> zostanie pominięty, <see langword="Option Compare" /> ustawienie określa typ porównania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1314">If <c>Compare</c> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1315">Zwraca wartość -1, 0 lub 1, na podstawie wyniku porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1315">Returns -1, 0, or 1, based on the result of a string comparison.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1316"><see langword="StrComp" /> Funkcja ma następujące wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1316">The <see langword="StrComp" /> function has the following return values.</span></span>  
  
 <span data-ttu-id="a7b7d-1317"><list type="table"><item><term> Jeśli</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1317"><list type="table"><item><term> If</span></span>  
  
 <span data-ttu-id="a7b7d-1318"></term><description> Zwraca StrComp</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1318"></term><description> StrComp returns</span></span>  
  
 <span data-ttu-id="a7b7d-1319"></description></item><item><term><paramref name="String1" /> Sortuje wyprzedzenia <paramref name="String2" /> </term> <description> -1</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1319"></description></item><item><term><paramref name="String1" /> sorts ahead of <paramref name="String2" /></term><description> -1</span></span>  
  
 <span data-ttu-id="a7b7d-1320"></description></item><item><term><paramref name="String1" /> jest równa <paramref name="String2" /> </term> <description> 0</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1320"></description></item><item><term><paramref name="String1" /> is equal to <paramref name="String2" /></term><description> 0</span></span>  
  
 <span data-ttu-id="a7b7d-1321"></description></item><item><term><paramref name="String1" /> Sortuje po <paramref name="String2" /> </term> <description> 1</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1321"></description></item><item><term><paramref name="String1" /> sorts after <paramref name="String2" /></term><description> 1</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1322">Ciągi są porównywane przez wartości alfanumeryczne sortowania, począwszy od pierwszego znaku.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1322">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="a7b7d-1323">Aby uzyskać więcej informacji na temat binarne porównania i porównania tekstową i kolejność sortowania, zobacz [instrukcji porównanie opcji](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1323">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 <span data-ttu-id="a7b7d-1324">`Compare` Ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1324">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="a7b7d-1325">Stała</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1325">Constant</span></span>|<span data-ttu-id="a7b7d-1326">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1326">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="a7b7d-1327">Przeprowadza porównanie binarne, w oparciu o porządek sortowania, pochodzi z wewnętrznego reprezentacje binarne znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1327">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="a7b7d-1328">Przeprowadza porównanie tekstu, na podstawie kolejności sortowania bez uwzględniania wielkości liter tekstu, określony przez dany system `LocaleID` wartość.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1328">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1329">W tym przykładzie użyto `StrComp` funkcja zwraca wyniki porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1329">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1330"><paramref name="Compare" /> wartość jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1330"><paramref name="Compare" /> value is not valid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" />
        <Parameter Name="LocaleID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1331">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1331">Required.</span></span> <span data-ttu-id="a7b7d-1332"><see langword="String" /> wyrażenie, które ma zostać przekonwertowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1332"><see langword="String" /> expression to be converted.</span></span></param>
        <param name="Conversion"><span data-ttu-id="a7b7d-1333">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1333">Required.</span></span> <span data-ttu-id="a7b7d-1334"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> element członkowski.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1334"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span></span> <span data-ttu-id="a7b7d-1335">Wartość wyliczenia określenie typu konwersji do wykonania.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1335">The enumeration value specifying the type of conversion to perform.</span></span></param>
        <param name="LocaleID"><span data-ttu-id="a7b7d-1336">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1336">Optional.</span></span> <span data-ttu-id="a7b7d-1337"><see langword="LocaleID" /> Wartość, jeśli jest inny niż system <see langword="LocaleID" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1337">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span></span> <span data-ttu-id="a7b7d-1338">(System <see langword="LocaleID" /> wartość jest wartością domyślną.)</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1338">(The system <see langword="LocaleID" /> value is the default.)</span></span></param>
        <summary><span data-ttu-id="a7b7d-1339">Zwraca ciąg przekonwertowany WE wskazany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1339">Returns a string converted as specified.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1340">Zwraca ciąg przekonwertowany WE wskazany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1340">Returns a string converted as specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1341">Stałe `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, i `VbStrConv.Hiragana` może powodować błędy środowiska wykonawczego stosowania ustawień regionalnych, których nie mają zastosowania, ale nie zawsze: stałe `VbStrConv.Katakana` i `VbStrConv.Hiragana`może być używany w systemie nie japoński z zainstalowany pakiet języka japońskiego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1341">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="a7b7d-1342">Ponadto używać stałych `VbStrConv.Wide` i `VbStrConv.Narrow` jest obsługiwana w każdym systemie o wschodnioazjatyckich język zainstalowany.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1342">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="a7b7d-1343">Ta funkcja używa informacji o kulturze aplikacji w trakcie manipulowania ciągiem tak, aby zmiany sprawy odpowiadały ustawieniom regionalnym, w ramach których aplikacja jest używana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1343">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7b7d-1344">Jeśli aplikacji podejmowania decyzji w procesie zabezpieczeń na podstawie wyniku porównania lub operacji w przypadku zmiany, a następnie należy użyć operacji <xref:System.String.Compare%2A?displayProperty=nameWithType> — metoda i przekazać <xref:System.StringComparison.Ordinal> lub <xref:System.StringComparison.OrdinalIgnoreCase> dla `comparisonType` argumentu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1344">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a7b7d-1345">Aby uzyskać więcej informacji, zobacz [jak kultury wpływa na ciągi w Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1345">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
 <span data-ttu-id="a7b7d-1346">`Conversion` Ustawienia argumentu są:</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1346">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="a7b7d-1347">Element członkowski wyliczenia</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1347">Enumeration member</span></span>|<span data-ttu-id="a7b7d-1348">Opis</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1348">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="a7b7d-1349">Wykonuje bez konwersji</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1349">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="a7b7d-1350">Stosuje się reguły językowe wielkości liter, a nie systemu plików (ustawienie domyślne).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1350">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="a7b7d-1351">Prawidłowe `VbStrConv.UpperCase` i `VbStrConv.LowerCase` tylko.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1351">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="a7b7d-1352">Konwertuje ciąg na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1352">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="a7b7d-1353">Konwertuje ciąg na małe litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1353">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="a7b7d-1354">Zamienia pierwszą literę każdego wyrazu w ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1354">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="a7b7d-1355">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1355">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="a7b7d-1356">Konwertuje wąskie znaków (połówkowej szerokości) w ciągu znaków całej (pełnej szerokości).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1356">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="a7b7d-1357">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1357">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="a7b7d-1358">Konwertuje znaki całej (pełnej szerokości) w ciągu, aby zawęzić zakres znaków (połówkowej szerokości).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1358">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="a7b7d-1359">`VbStrConv.Katakana` <sup>**</sup></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1359">`VbStrConv.Katakana` <sup>**</sup></span></span>|<span data-ttu-id="a7b7d-1360">Konwertuje znaki Hiragana w ciągu znakami Katakana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1360">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="a7b7d-1361">`VbStrConv.Hiragana` <sup>**</sup></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1361">`VbStrConv.Hiragana` <sup>**</sup></span></span>|<span data-ttu-id="a7b7d-1362">Konwertuje znaki Hiragana znakami Katakana w ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1362">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="a7b7d-1363">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1363">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="a7b7d-1364">Konwertuje znaki języka chińskiego tradycyjnego języka chińskiego uproszczonego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1364">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="a7b7d-1365">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a7b7d-1365">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="a7b7d-1366">Konwertuje znaki języka chińskiego uproszczonego języka chińskiego tradycyjnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1366">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="a7b7d-1367"><sup>\*</sup> Zastosowanie ustawień regionalnych Azji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1367"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="a7b7d-1368"><sup>**</sup> Dotyczy tylko Japonii.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1368"><sup>**</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7b7d-1369">Te stałe są określone w .NET Framework środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1369">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="a7b7d-1370">W związku z tym użyciem dowolnego miejsca w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1370">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="a7b7d-1371">Większość można łączyć (na przykład `UpperCase + Wide`), z wyjątkiem przypadków, gdy są one wykluczają się wzajemnie (na przykład `VbStrConv.Wide + VbStrConv.Narrow`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1371">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="a7b7d-1372">Poniżej przedstawiono separatorach wyrazów prawidłowe dla odpowiednich wielkości liter: Null (`Chr$(0)`), tabulator poziomy (`Chr$(9)`), wiersz źródła danych (`Chr$(10)`), tabulator pionowy (`Chr$(11)`), Nowa strona (`Chr$(12)`), znaków powrotu karetki (`Chr$(13)`), miejsce ( zestaw znaków jednobajtowych) (`Chr$(32)`).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1372">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="a7b7d-1373">Rzeczywista wartość z parzystością, co może być pełny lub pełnej szerokości, jest zależna od kraju/regionu, dla kultury wschodnioazjatyckim.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1373">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1374">W tym przykładzie konwertuje tekst małych liter.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1374">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a7b7d-1375">Nieobsługiwany <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 lub &gt; 2048 lub nieobsługiwany konwersji dla określonych ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1375">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-1376">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1376">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="a7b7d-1377">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1377">Required.</span></span> <span data-ttu-id="a7b7d-1378"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1378"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1379">Długość ciągu ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1379">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="a7b7d-1380">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1380">Required.</span></span> <span data-ttu-id="a7b7d-1381">Wszystkie prawidłowe <see langword="Char" />, <see langword="String" />, lub <see langword="Object" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1381">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="a7b7d-1382">Pierwszy znak wyrażenie, które będą używane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1382">Only the first character of the expression will be used.</span></span> <span data-ttu-id="a7b7d-1383">Jeśli znak jest typu <see langword="Object" />, musi zawierać element <see langword="Char" /> lub <see langword="String" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1383">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1384">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1384">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1385">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1385">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1386">Ta funkcja zwraca `String` składają się z powtarzające się znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1386">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="a7b7d-1387">Znak, który stanowi ciąg to pierwszy znak w `Character` jest zduplikowany argument, a `Number` liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1387">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1388">W tym przykładzie użyto `StrDup` zduplikowane, funkcja zwraca ciąg znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1388">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1389"><paramref name="Number" /> jest mniejsza niż 0 lub <paramref name="Character" /> typ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1389"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a7b7d-1390"><paramref name="Character" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1390"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="a7b7d-1391">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1391">Required.</span></span> <span data-ttu-id="a7b7d-1392"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1392"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1393">Długość ciągu ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1393">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="a7b7d-1394">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1394">Required.</span></span> <span data-ttu-id="a7b7d-1395">Wszystkie prawidłowe <see langword="Char" />, <see langword="String" />, lub <see langword="Object" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1395">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="a7b7d-1396">Pierwszy znak wyrażenie, które będą używane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1396">Only the first character of the expression will be used.</span></span> <span data-ttu-id="a7b7d-1397">Jeśli znak jest typu <see langword="Object" />, musi zawierać element <see langword="Char" /> lub <see langword="String" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1397">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1398">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1398">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1399">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1399">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1400">Ta funkcja zwraca `String` składają się z powtarzające się znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1400">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="a7b7d-1401">Znak, który stanowi ciąg to pierwszy znak w `Character` jest zduplikowany argument, a `Number` liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1401">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1402">W tym przykładzie użyto `StrDup` zduplikowane, funkcja zwraca ciąg znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1402">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1403"><paramref name="Number" /> jest mniejsza niż 0 lub <paramref name="Character" /> typ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1403"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a7b7d-1404"><paramref name="Character" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1404"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="a7b7d-1405">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1405">Required.</span></span> <span data-ttu-id="a7b7d-1406"><see langword="Integer" /> Wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1406"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="a7b7d-1407">Długość ciągu ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1407">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="a7b7d-1408">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1408">Required.</span></span> <span data-ttu-id="a7b7d-1409">Wszystkie prawidłowe <see langword="Char" />, <see langword="String" />, lub <see langword="Object" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1409">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="a7b7d-1410">Pierwszy znak wyrażenie, które będą używane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1410">Only the first character of the expression will be used.</span></span> <span data-ttu-id="a7b7d-1411">Jeśli znak jest typu <see langword="Object" />, musi zawierać element <see langword="Char" /> lub <see langword="String" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1411">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1412">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1412">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1413">Zwraca ciąg lub obiekt zawierający podany znak powtórzony określoną liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1413">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1414">Ta funkcja zwraca `String` składają się z powtarzające się znaki.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1414">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="a7b7d-1415">Znak, który stanowi ciąg to pierwszy znak w `Character` jest zduplikowany argument, a `Number` liczbę razy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1415">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1416">W tym przykładzie użyto `StrDup` zduplikowane, funkcja zwraca ciąg znaków.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1416">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7b7d-1417"><paramref name="Number" /> jest mniejsza niż 0 lub <paramref name="Character" /> typ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1417"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a7b7d-1418"><paramref name="Character" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1418"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a7b7d-1419">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1419">Required.</span></span> <span data-ttu-id="a7b7d-1420">Wyrażenia ciągu, którego znaki mają zostać wycofane.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1420">String expression whose characters are to be reversed.</span></span> <span data-ttu-id="a7b7d-1421">Jeśli <c>wyrażenie</c> jest ciągiem o zerowej długości (""), zostanie zwrócony ciąg o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1421">If <c>Expression</c> is a zero-length string (""), a zero-length string is returned.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1422">Zwraca wartość typu ciąg, w którym została odwrócona kolejność znaków określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1422">Returns a string in which the character order of a specified string is reversed.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1423">Zwraca wartość typu ciąg, w którym została odwrócona kolejność znaków określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1423">Returns a string in which the character order of a specified string is reversed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1424">`StrReverse` Funkcja zwraca ciąg, który zawiera te same znaki jako `Expression`, w przeciwnym kolejności.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1424">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a7b7d-1425">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1425">Required.</span></span> <span data-ttu-id="a7b7d-1426">Wszystkie prawidłowe <see langword="String" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1426">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1427">Zwraca ciąg zawierający kopię podanego ciągu bez spacji początkowych (<see langword="LTrim" />), nie spacji końcowych (<see langword="RTrim" />), lub nie początkowe lub końcowe spacje (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1427">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1428">Zwraca ciąg zawierający kopię podanego ciągu bez spacji początkowych (<see langword="LTrim" />), nie spacji końcowych (<see langword="RTrim" />), lub nie początkowe lub końcowe spacje (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1428">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1429">`LTrim`, `RTrim`, I `Trim` funkcji Usuń spacje z końców ciągów.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1429">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1430">W tym przykładzie użyto `LTrim` funkcji spacje początkowe i `RTrim` funkcji końcowe spacje ze zmienną typu string.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1430">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="a7b7d-1431">Używa `Trim` funkcji obu typów spacji.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1431">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7b7d-1432">Zwraca ciąg lub znak odpowiadający wybranemu ciągowi po konwersji na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1432">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="a7b7d-1433">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1433">Required.</span></span> <span data-ttu-id="a7b7d-1434">Wszystkie prawidłowe <see langword="String" /> lub <see langword="Char" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1434">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1435">Zwraca ciąg lub znak odpowiadający wybranemu ciągowi po konwersji na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1435">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1436">Zwraca ciąg lub znak odpowiadający wybranemu ciągowi po konwersji na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1436">Returns a string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1437">Tylko małe litery są konwertowane na wielkie litery; wszystkie znaki niebędące znaki i wielkich liter pozostają niezmienione.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1437">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a7b7d-1438">Ta funkcja używa informacji o kulturze aplikacji w trakcie manipulowania ciągiem tak, aby zmiany sprawy odpowiadały ustawieniom regionalnym, w ramach których aplikacja jest używana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1438">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7b7d-1439">Jeśli aplikacji podejmowania decyzji w procesie zabezpieczeń na podstawie wyniku porównania lub operacji w przypadku zmiany, a następnie należy użyć operacji <xref:System.String.Compare%2A?displayProperty=nameWithType> — metoda i przekazać <xref:System.StringComparison.Ordinal> lub <xref:System.StringComparison.OrdinalIgnoreCase> dla `comparisonType` argumentu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1439">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a7b7d-1440">Aby uzyskać więcej informacji, zobacz [jak kultury wpływa na ciągi w Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1440">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1441">W tym przykładzie użyto `UCase` funkcja zwracająca wielkie wersji ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1441">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="a7b7d-1442">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1442">Required.</span></span> <span data-ttu-id="a7b7d-1443">Wszystkie prawidłowe <see langword="String" /> lub <see langword="Char" /> wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1443">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="a7b7d-1444">Zwraca ciąg lub znak odpowiadający wybranemu ciągowi po konwersji na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1444">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="a7b7d-1445">Zwraca ciąg lub znak odpowiadający wybranemu ciągowi po konwersji na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1445">Returns a string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7b7d-1446">Tylko małe litery są konwertowane na wielkie litery; wszystkie znaki niebędące znaki i wielkich liter pozostają niezmienione.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1446">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a7b7d-1447">Ta funkcja używa informacji o kulturze aplikacji w trakcie manipulowania ciągiem tak, aby zmiany sprawy odpowiadały ustawieniom regionalnym, w ramach których aplikacja jest używana.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1447">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7b7d-1448">Jeśli aplikacji podejmowania decyzji w procesie zabezpieczeń na podstawie wyniku porównania lub operacji w przypadku zmiany, a następnie należy użyć operacji <xref:System.String.Compare%2A?displayProperty=nameWithType> — metoda i przekazać <xref:System.StringComparison.Ordinal> lub <xref:System.StringComparison.OrdinalIgnoreCase> dla `comparisonType` argumentu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1448">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a7b7d-1449">Aby uzyskać więcej informacji, zobacz [jak kultury wpływa na ciągi w Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1449">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7b7d-1450">W tym przykładzie użyto `UCase` funkcja zwracająca wielkie wersji ciągu.</span><span class="sxs-lookup"><span data-stu-id="a7b7d-1450">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
      </Docs>
    </Member>
  </Members>
</Type>