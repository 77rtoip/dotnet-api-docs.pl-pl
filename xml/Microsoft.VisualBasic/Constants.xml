<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19200239d269a1d599f6ab5da2ce916308d7e3c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36659349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <TypeSignature Language="F#" Value="type Constants = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4703-101">
        <see langword="Constants" /> Moduł zawiera różne stałe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4703-101">The <see langword="Constants" /> module contains miscellaneous constants.</span>
      </span>
      <span data-ttu-id="c4703-102">Te stałych można używać w dowolnym miejscu w kodzie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4703-102">These constants can be used anywhere in your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-103">Ten moduł obsługuje stałe języka Visual Basic, które odpowiadają członkami wielu wyliczenia Visual Basic:</span><span class="sxs-lookup"><span data-stu-id="c4703-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbAbort : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-104">Oznacza to, że <see langword="Abort" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-104">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-105">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-105">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-106">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-106">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-107">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-107">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbAbortRetryIgnore : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-108">Oznacza to, że <see langword="Abort" />, <see langword="Retry" />, i <see langword="Ignore" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-108">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-109">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-109">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-110">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-110">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbApplicationModal : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-111">Wskazuje, czy okno komunikatu będzie wyświetlany jako modalne okno dialogowe dialogowe <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-111">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-112">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-112">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-113">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-113">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbArchive : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-114">Wskazuje, że plik został zmieniony od momentu ostatniej operacji tworzenia kopii zapasowej dla funkcji dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-114">Indicates that the file has changed since the last backup operation for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-115">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-115">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-116">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-116">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-117">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-117">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-118">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-118">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberSignature Language="F#" Value="val mutable vbArray : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbArray" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-119">Wskazuje, że typ obiektu variant jest tablicą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-119">Indicates that the type of a variant object is an array.</span>
          </span>
          <span data-ttu-id="c4703-120">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-120">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-121">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-121">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-122">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-122">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-123">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-123">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberSignature Language="F#" Value="val mutable vbBack : string" Usage="Microsoft.VisualBasic.Constants.vbBack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-124">Reprezentuje backspace znak do drukowania i Wyświetl funkcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-124">Represents a backspace character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbBinaryCompare : Microsoft.VisualBasic.CompareMethod" Usage="Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-125">Określa, że porównanie binarne należy wykonać wywołanego porównanie funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-125">Specifies that a binary comparison should be performed when comparison functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-126">Podczas wywoływania funkcji porównania można użyć <xref:Microsoft.VisualBasic.CompareMethod> wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-126">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-127">`Compare` Przyjmuje argument `CompareMethod` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-127">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-128">Dla porównania pliku binarnego i tekstu, zobacz [instrukcji porównanie opcji](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c4703-128">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberSignature Language="F#" Value="val mutable vbBoolean : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-129">Oznacza, że typ obiektu variant <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-129">Indicates that the type of a variant object is <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="c4703-130">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-130">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-131">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-131">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-132">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-132">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-133">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-133">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberSignature Language="F#" Value="val mutable vbByte : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbByte" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-134">Oznacza, że typ obiektu variant <see langword="Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-134">Indicates that the type of a variant object is <see langword="Byte" />.</span>
          </span>
          <span data-ttu-id="c4703-135">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-135">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-136">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-137">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-138">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbCancel : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-139">Oznacza to, że <see langword="Cancel" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-139">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-140">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-140">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-141">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-141">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-142">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-142">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberSignature Language="F#" Value="val mutable vbCr : string" Usage="Microsoft.VisualBasic.Constants.vbCr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-143">Reprezentuje powrotu karetki znak do drukowania i Wyświetl funkcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-143">Represents a carriage-return character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbCritical : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-144">Wskazuje, że ikona krytyczny komunikat będzie wyświetlany, kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-144">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-145">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-145">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-146">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-146">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberSignature Language="F#" Value="val mutable vbCrLf : string" Usage="Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-147">Reprezentuje połączone z znak wysuwu wiersza do drukowania i wyświetlania działa znak powrotu karetki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-147">Represents a carriage-return character combined with a linefeed character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbCurrency : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-148">Oznacza, że typ obiektu variant <see langword="Currency" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-148">Indicates that the type of a variant object is <see langword="Currency" />.</span>
          </span>
          <span data-ttu-id="c4703-149">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-149">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-150">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-150">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-151">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-151">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-152">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-152">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbDate : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-153">Oznacza, że typ obiektu variant <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-153">Indicates that the type of a variant object is <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="c4703-154">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-154">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-155">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-155">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-156">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-156">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-157">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-157">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberSignature Language="F#" Value="val mutable vbDecimal : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-158">Oznacza, że typ obiektu variant <see langword="Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-158">Indicates that the type of a variant object is <see langword="Decimal" />.</span>
          </span>
          <span data-ttu-id="c4703-159">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-159">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-160">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-160">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-161">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-161">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-162">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-162">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton1 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-163">Wskazuje, że lewy przycisk jest wybrany jako przycisk domyślny, gdy zostanie wyświetlone okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-163">Indicates that the leftmost button is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-164">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-164">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-165">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-165">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton2 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-166">Wskazuje, że drugi przycisk z lewej strony jest wybrany jako przycisk domyślny, gdy pojawi się okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-166">Indicates that the second button from the left is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-167">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-167">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-168">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-168">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton3 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-169">Wskazuje, że trzeci przycisk z lewej strony jest wybrany jako przycisk domyślny, gdy zostanie wyświetlone okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-169">Indicates that the third button from the left is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-170">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-170">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-171">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-171">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbDirectory : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-172">Wskazuje, że plik jest katalogiem lub folderu dla funkcji dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-172">Indicates that the file is a directory or folder for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-173">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-173">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-174">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-174">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-175">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-175">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-176">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-176">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbDouble : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-177">Oznacza, że typ obiektu variant <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-177">Indicates that the type of a variant object is <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="c4703-178">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-178">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-179">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-179">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-180">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-180">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-181">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-181">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbEmpty : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-182">Oznacza, że typ obiektu variant <see langword="Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-182">Indicates that the type of a variant object is <see langword="Empty" />.</span>
          </span>
          <span data-ttu-id="c4703-183">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-183">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-184">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-184">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-185">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-185">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-186">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-186">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="F#" Value="val mutable vbExclamation : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-187">Wskazuje, że ikoną wykrzyknika będzie wyświetlany, kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-187">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-188">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-188">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-189">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-189">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbFalse : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-190">Oznacza to, że <see langword="Boolean" /> wartość <see langword="False" /> powinien być używany podczas formatowania numer funkcje są wywoływane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-190">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-191">Podczas formatowania liczby wywołań funkcji, które służy następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-191">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstFourDays : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-192">Wskazuje, że która pierwszy tydzień roku, który ma co najmniej czterech dni powinna być używana wywołanego funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-192">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-193">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-193">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-194">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-194">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-195">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-195">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-196">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-196">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstFullWeek : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-197">Wskazuje, że pierwszy pełny tydzień roku powinny być używane, wywołanego funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-197">Indicates that the first full week of the year should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-198">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-198">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-199">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-199">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-200">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-200">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-201">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-201">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstJan1 : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-202">Oznacza to, że tydzień roku, w którym 1 stycznia występuje powinien być używany wywołanego funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-202">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-203">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-203">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-204">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-204">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-205">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-205">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-206">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-206">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberSignature Language="F#" Value="val mutable vbFormFeed : string" Usage="Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-207">Reprezentuje znak wysuwu funkcje drukowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-207">Represents a form-feed character for print functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbFriday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-208">Określa, że piątek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-208">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-209">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-209">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-210">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-210">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-211">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-211">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-212">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-212">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-213">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-213">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbGeneralDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-214">Wskazuje, że ogólny format daty dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-214">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-215">Podczas wywoływania `FormatDateTime` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-215">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4703-216">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikonę w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="c4703-216">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbGet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbGet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-217">Określa, czy wartość właściwości powinny być pobierane, gdy <see langword="CallByName" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-217">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-218">Podczas wywoływania `CallByName` funkcji, można użyć następujących `CallType` elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-218">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-219">`UseCallType` Przyjmuje argument `CallType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-219">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbHidden : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-220">Wskazuje, że plik jest ukryty plik dla funkcji dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-220">Indicates that the file is a hidden file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-221">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-221">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-222">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-222">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-223">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-223">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-224">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-224">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbHide : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbHide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-225">Wskazuje, czy styl okna jest ukryty dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-225">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-226">Podczas wystawiania `Shell` polecenia, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-226">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-227">`Style` Przyjmuje argument `AppWinStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-227">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbHiragana : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-228">Wskazuje znakami Hiragana powinny być konwertowane na Katakana znaków, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-228">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-229">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-229">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-230">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-230">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbIgnore : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-231">Oznacza to, że <see langword="Ignore" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-231">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-232">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-232">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-233">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-233">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-234">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-234">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="F#" Value="val mutable vbInformation : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-235">Wskazuje, że ikona informacje będą wyświetlane podczas <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-235">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-236">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-236">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-237">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-237">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbInteger : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-238">Oznacza, że typ obiektu variant <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-238">Indicates that the type of a variant object is <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="c4703-239">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-239">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-240">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-240">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-241">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-241">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-242">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-242">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbKatakana : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-243">Wskazuje Katakana znaki powinny być konwertowane na Hiragana znaków, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-243">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-244">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-244">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-245">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-245">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbLet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbLet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-246">Wskazuje, że wartość właściwości powinna być równa obiektu wystąpienia, kiedy <see langword="CallByName" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-246">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-247">Podczas wywoływania `CallByName` funkcji, można użyć następujących `CallType` elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-247">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-248">`UseCallType` Przyjmuje argument `CallType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-248">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberSignature Language="F#" Value="val mutable vbLf : string" Usage="Microsoft.VisualBasic.Constants.vbLf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-249">Reprezentuje wysuwu wiersza znak do drukowania i Wyświetl funkcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-249">Represents a linefeed character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="F#" Value="val mutable vbLinguisticCasing : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-250">Wskazuje, czy znaki powinny być konwertowane na Użyj reguł językowe dla wielkości liter, zamiast pliku reguł systemowych dla wielkości liter o tym, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-250">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-251">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-251">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-252">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-252">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberSignature Language="F#" Value="val mutable vbLong : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbLong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-253">Wskazuje typ wariantu obiektu <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-253">Indicates the type of a variant object is <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="c4703-254">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-254">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-255">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-255">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-256">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-256">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-257">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-257">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbLongDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-258">Wskazuje, że format daty długiej dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-258">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-259">Podczas wywoływania `FormatDateTime` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-259">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4703-260">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikonę w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="c4703-260">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbLongTime : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-261">Wskazuje, że format godziny długiej dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-261">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-262">Podczas wywoływania `FormatDateTime` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-262">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4703-263">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikonę w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="c4703-263">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbLowerCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-264">Wskazuje, czy znaki powinny być konwertowane na małe litery, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-264">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-265">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-265">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-266">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-266">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbMaximizedFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-267">Wskazuje, czy styl okna jest zmaksymalizowane z fokusem dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-267">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-268">Podczas wystawiania `Shell` polecenia, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-268">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-269">`Style` Przyjmuje argument `AppWinStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-269">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbMethod : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-270">Określa, że metoda powinna być wywoływana podczas <see langword="CallByName" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-270">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-271">Podczas wywoływania `CallByName` funkcji, można użyć następujących `CallType` elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-271">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-272">`UseCallType` Przyjmuje argument `CallType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-272">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbMinimizedFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-273">Wskazuje, czy styl okna jest zminimalizowany z fokusem dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-273">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-274">Podczas wystawiania `Shell` polecenia, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-274">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-275">`Style` Przyjmuje argument `AppWinStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-275">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbMinimizedNoFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-276">Wskazuje, czy styl okna jest zminimalizowany bez fokusu dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-276">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-277">Podczas wystawiania `Shell` polecenia, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-277">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-278">`Style` Przyjmuje argument `AppWinStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-278">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbMonday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-279">Określa, że poniedziałek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-279">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-280">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-281">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-282">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-282">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-283">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-283">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-284">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-284">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxHelp : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-285">Oznacza to, że <see langword="Help" /> przycisk będzie wyświetlany, kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-285">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-286">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-286">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-287">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-287">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxRight : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-288">Wskazuje, czy tekst będzie być wyrównany do prawej kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-288">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-289">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-289">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-290">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-290">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxRtlReading : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-291">Wskazuje, że odczytywanie tekstu od prawej do lewej (systemy hebrajski i arabski) będzie wyświetlany, kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-291">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-292">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-292">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-293">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-293">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxSetForeground : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-294">Wskazuje, że w oknie komunikat zostanie wyświetlony na pierwszym planie, podczas <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-294">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-295">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-295">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-296">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-296">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbNarrow : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-297">Wskazuje, czy znaki szerokie (dwubajtowe) powinny być konwertowane Aby zawęzić (jednobajtowe) znaki, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-297">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-298">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-298">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-299">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-299">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberSignature Language="F#" Value="val mutable vbNewLine : string" Usage="Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-300">Reprezentuje nowego wiersza znak do drukowania i Wyświetl funkcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-300">Represents a newline character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbNo : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-301">Oznacza to, że <see langword="No" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-301">Indicates that the <see langword="No" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-302">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-302">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-303">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-303">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-304">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-304">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbNormal : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-305">Wskazuje, czy plik jest plikiem normalne funkcje dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-305">Indicates that the file is a normal file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-306">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-306">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-307">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-307">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-308">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-308">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-309">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-309">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbNormalFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-310">Wskazuje, że styl okna jest normalne z fokusem dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-310">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-311">Podczas wystawiania `Shell` polecenia, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-311">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-312">`Style` Przyjmuje argument `AppWinStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-312">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbNormalNoFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-313">Wskazuje, że styl okna jest normalne bez fokusu dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-313">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-314">Podczas wystawiania `Shell` polecenia, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-314">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-315">`Style` Przyjmuje argument `AppWinStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-315">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbNull : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-316">Oznacza, że typ obiektu variant <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-316">Indicates that the type of a variant object is <see langword="Nothing" />.</span>
          </span>
          <span data-ttu-id="c4703-317">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-317">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-318">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-318">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-319">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-319">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-320">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-320">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberSignature Language="F#" Value="val mutable vbNullChar : string" Usage="Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-321">Reprezentuje wartość null znak do drukowania i Wyświetl funkcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-321">Represents a null character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberSignature Language="F#" Value="val mutable vbNullString : string" Usage="Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-322">Reprezentuje o zerowej długości ciągu dla drukowania i funkcji, wyświetlania i wywoływania procedur zewnętrznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-322">Represents a zero-length string for print and display functions, and for calling external procedures.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberSignature Language="F#" Value="val mutable vbObject : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-323">Oznacza, że typ obiektu variant <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-323">Indicates that the type of a variant object is <see langword="Object" />.</span>
          </span>
          <span data-ttu-id="c4703-324">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-324">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-325">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-325">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-326">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-326">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-327">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-327">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberSignature Language="F#" Value="val mutable vbObjectError : int" Usage="Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-328">Reprezentuje obiekt numer błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-328">Represents the object error number.</span>
          </span>
          <span data-ttu-id="c4703-329">Numery błąd użytkownika powinna być większa niż wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-329">User-defined error numbers should be greater than this value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbOK : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbOK" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-330">Oznacza to, że <see langword="OK" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-330">Indicates that the <see langword="OK" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-331">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-331">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-332">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-332">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-333">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-333">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbOKCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-334">Oznacza to, że <see langword="OK" /> i <see langword="Cancel" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-334">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-335">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-335">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-336">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-336">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbOKOnly : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-337">Wskazuje, że tylko <see langword="OK" /> przycisk będzie wyświetlany, kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-337">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-338">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-338">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-339">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-339">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbProperCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-340">Wskazuje, że pierwszą literę każdego wyrazu w ciągu powinny być konwertowane na wielkie litery i pozostałych znaki na małe litery w przypadku <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-340">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-341">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-341">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-342">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-342">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbQuestion : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-343">Wskazuje, że ikona zapytania będzie wyświetlany, kiedy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-343">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-344">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-344">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-345">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-345">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbReadOnly : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-346">Wskazuje, że plik jest plikiem tylko do odczytu dla funkcji dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-346">Indicates that the file is a read-only file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-347">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-347">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-348">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-348">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-349">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-349">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-350">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-350">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbRetry : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-351">Oznacza to, że <see langword="Retry" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-351">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-352">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-352">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-353">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-353">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-354">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-354">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbRetryCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-355">Oznacza to, że <see langword="Retry" /> i <see langword="Cancel" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-355">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-356">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-356">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-357">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-357">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbSaturday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-358">Określa, że sobota powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-358">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-359">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-359">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-360">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-360">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-361">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-361">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-362">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-362">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-363">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-363">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbSet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-364">Wskazuje, że wartość właściwości powinny być ustawiane podczas <see langword="CallByName" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-364">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-365">Podczas wywoływania `CallByName` funkcji, można użyć następujących `CallType` elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-365">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-366">`UseCallType` Przyjmuje argument `CallType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-366">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbShortDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-367">Wskazuje, że format daty krótkiej dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-367">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-368">Podczas wywoływania `FormatDateTime` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-368">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4703-369">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikonę w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="c4703-369">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbShortTime : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-370">Wskazuje, że format godziny krótkiej dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-370">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-371">Podczas wywoływania `FormatDateTime` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-371">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4703-372">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikonę w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="c4703-372">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="F#" Value="val mutable vbSimplifiedChinese : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-373">Wskazuje, czy znaki powinny być konwertowane na język chiński uproszczony podczas <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-373">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-374">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-374">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-375">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-375">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbSingle : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-376">Oznacza, że typ obiektu variant <see langword="Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-376">Indicates that the type of a variant object is <see langword="Single" />.</span>
          </span>
          <span data-ttu-id="c4703-377">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-377">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-378">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-379">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-380">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbString : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-381">Oznacza, że typ obiektu variant <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-381">Indicates that the type of a variant object is <see langword="String" />.</span>
          </span>
          <span data-ttu-id="c4703-382">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-382">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-383">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-383">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-384">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-384">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-385">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-385">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbSunday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-386">Określa, czy niedziela powinna być używana jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-386">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-387">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-387">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-388">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-388">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-389">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-389">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-390">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-390">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-391">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-391">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbSystem : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-392">Wskazuje, że plik jest plikiem systemu dla funkcji dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-392">Indicates that the file is a system file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-393">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-393">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-394">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-394">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-395">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-395">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-396">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-396">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="F#" Value="val mutable vbSystemModal : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-397">Wskazuje, czy okno komunikatu będzie wyświetlany jako modalne okno dialogowe dialogowe <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-397">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-398">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-398">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-399">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-399">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberSignature Language="F#" Value="val mutable vbTab : string" Usage="Microsoft.VisualBasic.Constants.vbTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-400">Reprezentuje kartę znak do drukowania i Wyświetl funkcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-400">Represents a tab character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbTextCompare : Microsoft.VisualBasic.CompareMethod" Usage="Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-401">Wskazuje, że porównanie tekst można wykonać wywołanego porównanie funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-401">Indicates that a text comparison should be performed when comparison functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-402">Podczas wywoływania funkcji porównania można użyć <xref:Microsoft.VisualBasic.CompareMethod> wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-402">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-403">`Compare` Przyjmuje argument `CompareMethod` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-403">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-404">Aby uzyskać więcej informacji na temat więcej informacji na temat pliku binarnego i tekstu porównań, zobacz [instrukcji porównanie opcji](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c4703-404">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbThursday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-405">Określa, że czwartek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-405">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-406">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-406">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-407">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-407">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-408">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-408">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-409">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-409">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-410">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-410">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="F#" Value="val mutable vbTraditionalChinese : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-411">Wskazuje, czy znaki powinny być konwertowane na języka chińskiego tradycyjnego w przypadku <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-411">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-412">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-412">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-413">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-413">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberSignature Language="F#" Value="val mutable vbTrue : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-414">Oznacza to, że <see langword="Boolean" /> wartość <see langword="True" /> powinien być używany podczas formatowania numer funkcje są wywoływane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-414">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-415">Podczas formatowania liczby wywołań funkcji, które służy następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-415">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbTuesday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-416">Określa, że wtorek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-416">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-417">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-417">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-418">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-418">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-419">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-419">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-420">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-420">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-421">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-421">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbUpperCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-422">Wskazuje, czy znaki powinny być konwertowane na wielkie litery, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-422">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-423">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-423">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-424">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-424">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberSignature Language="F#" Value="val mutable vbUseDefault : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-425">Oznacza to, że wartość domyślna <see langword="Boolean" /> wywołanego formatowania numer funkcje należy użyć wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-425">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-426">Podczas formatowania liczby wywołań funkcji, które służy następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-426">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="F#" Value="val mutable vbUserDefinedType : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-427">Wskazuje, że typ wariantu obiektu jest typ zdefiniowany przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-427">Indicates that the type of a variant object is a user-defined type.</span>
          </span>
          <span data-ttu-id="c4703-428">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-428">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-429">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-429">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-430">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-430">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-431">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-431">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbUseSystem : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-432">Wskazuje, że tygodnia określić przez system jak powinny być używane w pierwszym tygodniu roku, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-432">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-433">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-433">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-434">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-434">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-435">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-435">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-436">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-436">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbUseSystemDayOfWeek : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-437">Wskazuje, że dzień określić w systemie jako pierwszego dnia tygodnia powinny używać kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-437">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-438">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-438">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-439">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-439">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-440">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-440">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-441">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-441">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-442">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-442">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberSignature Language="F#" Value="val mutable vbVariant : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-443">Oznacza, że typ obiektu variant <see langword="Variant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-443">Indicates that the type of a variant object is <see langword="Variant" />.</span>
          </span>
          <span data-ttu-id="c4703-444">Zwrócony przez <see langword="VarType" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-444">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-445">Podczas wywoływania `VarType` funkcji, można użyć elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-445">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-446">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania dostępnych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="c4703-446">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c4703-447">W poniższej tabeli wymieniono `VariantType` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-447">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberSignature Language="F#" Value="val mutable vbVerticalTab : string" Usage="Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-448">Reprezentuje znak powrotu karetki dla funkcji drukowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-448">Represents a carriage-return character for print functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbVolume : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-449">Określa atrybut pliku etykietę woluminu dla funkcji dostępu do plików.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-449">Indicates the volume label file attribute for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-450">Ten atrybut jest nieprawidłowy dla `SetAttr` funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-450">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="c4703-451">Podczas wywoływania `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-451">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-452">`Attributes` Przyjmuje argument `FileAttribute` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-452">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-453">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiektu zapewnia większą wydajność i łatwość użycia niż plik starszej wersji metod we/wy.</span><span class="sxs-lookup"><span data-stu-id="c4703-453">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c4703-454">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4703-454">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbWednesday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-455">Określa, że środa powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-455">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-456">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-456">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-457">Niektóre funkcje związane z datą pobierać `DayOfWeek` argumentu, `WeekOfYear` argument lub oba.</span><span class="sxs-lookup"><span data-stu-id="c4703-457">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c4703-458">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwe wartości zwracane z funkcji.</span><span class="sxs-lookup"><span data-stu-id="c4703-458">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c4703-459">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-459">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c4703-460">Funkcje związane z datą także zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="c4703-460">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbWide : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbWide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-461">Wskazuje, czy znaki wąskie (jednobajtowe) powinny być konwertowane na znaki szerokie (dwubajtowe), kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-461">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-462">Podczas wywoływania `StrConv` funkcji, można użyć następujące elementy członkowskie wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-462">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-463">`Conversion` Przyjmuje argument `VbStrConv` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-463">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbYes : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-464">Oznacza to, że <see langword="Yes" /> przycisk został kliknięty w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-464">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c4703-465">Zwrócony przez <see langword="MsgBox" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-465">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-466">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-466">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c4703-467">`MsgBox` Funkcja zwraca `MsgBoxResult` wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-467">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbYesNo : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-468">Oznacza to, że <see langword="Yes" /> i <see langword="No" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-468">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-469">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-469">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-470">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-470">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbYesNoCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4703-471">Oznacza to, że <see langword="Yes" />, <see langword="No" />, i <see langword="Cancel" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4703-471">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4703-472">Podczas wywoływania `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="c4703-472">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c4703-473">`Buttons` Przyjmuje argument `MsgBoxStyle` elementy członkowskie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c4703-473">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>