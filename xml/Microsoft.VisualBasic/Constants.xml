<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b33a22dea5873e57ac7532fbc2d5779f953d57b" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56069832" /></Metadata><TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <TypeSignature Language="F#" Value="type Constants = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-uwp-10.0">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="53c93-101"><see langword="Constants" /> Moduł zawiera różne stałe.</span><span class="sxs-lookup"><span data-stu-id="53c93-101">The <see langword="Constants" /> module contains miscellaneous constants.</span></span> <span data-ttu-id="53c93-102">Te stałych można używać w dowolnym miejscu w kodzie.</span><span class="sxs-lookup"><span data-stu-id="53c93-102">These constants can be used anywhere in your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-103">Ten moduł obsługuje stałe języka Visual Basic, które odnoszą się do elementów członkowskich wiele wyliczenia języka Visual Basic:</span><span class="sxs-lookup"><span data-stu-id="53c93-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-104">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-104">Constants and Enumerations (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="53c93-105">Słowa kluczowe (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="53c93-106">Elementy członkowskie biblioteki wykonawczej języka Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbAbort : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-107">Oznacza to, że <see langword="Abort" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-107">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-108">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-108">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-109">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-109">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-110">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-110">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-111">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-111">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-112">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-112">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-113">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-113">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbAbortRetryIgnore : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-114">Oznacza to, że <see langword="Abort" />, <see langword="Retry" />, i <see langword="Ignore" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-114">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-115">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-115">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-116">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-116">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-117">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-117">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-118">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-118">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-119">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-119">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbApplicationModal : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-120">Wskazuje, że okno komunikatu pojawi się jako modalne okno dialogowe przypadku <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-120">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-121">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-121">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-122">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-122">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-123">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-123">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-124">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-124">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-125">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-125">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbArchive : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-126">Wskazuje, że plik został zmieniony od czasu ostatniej operacji tworzenia kopii zapasowej dla funkcji dostępu do plików.</span><span class="sxs-lookup"><span data-stu-id="53c93-126">Indicates that the file has changed since the last backup operation for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-127">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-127">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-128">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-128">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-129">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-129">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-130">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-130">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-131">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-131">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-132">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-132">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-133">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-133">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberSignature Language="F#" Value="val mutable vbArray : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbArray" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-134">Wskazuje, czy typ variant — obiekt jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="53c93-134">Indicates that the type of a variant object is an array.</span></span> <span data-ttu-id="53c93-135">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-135">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-136">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-137">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-138">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-139">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-139">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-140">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-140">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-141">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-141">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberSignature Language="F#" Value="val mutable vbBack : string" Usage="Microsoft.VisualBasic.Constants.vbBack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-142">Reprezentuje backspace, znak do drukowania i wyświetlić funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-142">Represents a backspace character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-143">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-143">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-144">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-144">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbBinaryCompare : Microsoft.VisualBasic.CompareMethod" Usage="Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-145">Określa, czy należy przeprowadzić porównanie binarne, wywołanego funkcje porównania.</span><span class="sxs-lookup"><span data-stu-id="53c93-145">Specifies that a binary comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-146">Po wywołaniu funkcji porównywania, możesz użyć <xref:Microsoft.VisualBasic.CompareMethod> wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-146">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-147">`Compare` Przyjmuje argument `CompareMethod` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-147">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-148">Dla porównania binarnych i tekstowych, patrz [instrukcji porównanie opcji](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="53c93-148">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-149">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-149">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-150">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-150">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-151">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-151">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberSignature Language="F#" Value="val mutable vbBoolean : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-152">Wskazuje, że typ obiektu variant <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-152">Indicates that the type of a variant object is <see langword="Boolean" />.</span></span> <span data-ttu-id="53c93-153">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-153">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-154">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-154">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-155">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-155">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-156">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-156">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-157">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-157">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-158">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-158">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-159">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-159">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberSignature Language="F#" Value="val mutable vbByte : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbByte" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-160">Wskazuje, że typ obiektu variant <see langword="Byte" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-160">Indicates that the type of a variant object is <see langword="Byte" />.</span></span> <span data-ttu-id="53c93-161">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-161">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-162">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-162">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-163">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-163">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-164">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-164">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-165">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-165">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-166">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-166">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-167">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-167">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbCancel : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-168">Oznacza to, że <see langword="Cancel" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-168">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-169">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-169">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-170">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-170">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-171">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-171">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-172">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-172">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-173">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-173">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-174">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-174">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberSignature Language="F#" Value="val mutable vbCr : string" Usage="Microsoft.VisualBasic.Constants.vbCr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-175">Reprezentuje powrotu karetki, znaków do drukowania i wyświetlić funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-175">Represents a carriage-return character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-176">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-176">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-177">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-177">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbCritical : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-178">Wskazuje, że ikona krytyczny komunikat będzie wyświetlany, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-178">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-179">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-179">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-180">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-180">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-181">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-181">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-182">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-182">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-183">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-183">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberSignature Language="F#" Value="val mutable vbCrLf : string" Usage="Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-184">Reprezentuje znak powrotu karetki, za pomocą znaku wysuwu wiersza do drukowania i wyświetlania działa w połączeniu.</span><span class="sxs-lookup"><span data-stu-id="53c93-184">Represents a carriage-return character combined with a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-185">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-185">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-186">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-186">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbCurrency : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-187">Wskazuje, że typ obiektu variant <see langword="Currency" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-187">Indicates that the type of a variant object is <see langword="Currency" />.</span></span> <span data-ttu-id="53c93-188">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-188">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-189">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-189">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-190">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-190">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-191">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-191">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-192">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-192">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-193">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-193">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-194">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-194">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbDate : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-195">Wskazuje, że typ obiektu variant <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-195">Indicates that the type of a variant object is <see langword="Date" />.</span></span> <span data-ttu-id="53c93-196">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-196">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-197">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-197">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-198">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-198">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-199">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-199">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-200">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-200">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-201">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-201">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-202">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-202">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberSignature Language="F#" Value="val mutable vbDecimal : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-203">Wskazuje, że typ obiektu variant <see langword="Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-203">Indicates that the type of a variant object is <see langword="Decimal" />.</span></span> <span data-ttu-id="53c93-204">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-204">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-205">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-205">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-206">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-206">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-207">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-207">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-208">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-208">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-209">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-209">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-210">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-210">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton1 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-211">Wskazuje, że lewy przycisk jest wybrany jako przycisk domyślny, gdy pojawi się okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-211">Indicates that the leftmost button is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-212">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-212">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-213">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-213">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-214">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-214">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-215">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-215">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-216">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-216">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton2 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-217">Wskazuje, że drugi przycisk z lewej strony jest wybrany jako przycisk domyślny, gdy pojawi się okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-217">Indicates that the second button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-218">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-218">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-219">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-219">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-220">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-220">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-221">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-221">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-222">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-222">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton3 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-223">Wskazuje, że trzeci przycisk z lewej strony jest wybrany jako przycisk domyślny, gdy pojawi się okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-223">Indicates that the third button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-224">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-224">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-225">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-225">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-226">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-226">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-227">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-227">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-228">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-228">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbDirectory : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-229">Wskazuje, że plik jest katalogu lub folderu dla funkcji dostępu do plików.</span><span class="sxs-lookup"><span data-stu-id="53c93-229">Indicates that the file is a directory or folder for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-230">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-230">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-231">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-231">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-232">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-232">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-233">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-233">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-234">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-234">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-235">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-235">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-236">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-236">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbDouble : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-237">Wskazuje, że typ obiektu variant <see langword="Double" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-237">Indicates that the type of a variant object is <see langword="Double" />.</span></span> <span data-ttu-id="53c93-238">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-238">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-239">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-239">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-240">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-240">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-241">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-241">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-242">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-242">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-243">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-243">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-244">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-244">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbEmpty : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-245">Wskazuje, że typ obiektu variant <see langword="Empty" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-245">Indicates that the type of a variant object is <see langword="Empty" />.</span></span> <span data-ttu-id="53c93-246">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-246">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-247">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-247">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-248">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-248">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-249">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-249">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-250">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-250">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-251">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-251">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-252">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-252">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="F#" Value="val mutable vbExclamation : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-253">Wskazuje, że ikona wykrzyknika będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-253">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-254">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-254">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-255">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-255">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-256">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-256">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-257">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-257">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-258">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-258">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbFalse : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-259">Oznacza to, że <see langword="Boolean" /> wartość <see langword="False" /> powinno być używane podczas formatowania liczby funkcje są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="53c93-259">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-260">Formatowanie liczby wywołań funkcji, użytkownik może korzystając następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-260">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-261">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-261">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-262">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-262">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstFourDays : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-263">Wskazuje, że która pierwszy tydzień roku, który ma co najmniej cztery dni powinna być używana wywołanego funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-263">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-264">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-264">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-265">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-265">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-266">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-266">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-267">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-267">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-268">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-268">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-269">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-269">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-270">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-270">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstFullWeek : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-271">Wskazuje, że pełna pierwszy tydzień roku powinien być używany, wywołanego funkcje dotyczące dat.</span><span class="sxs-lookup"><span data-stu-id="53c93-271">Indicates that the first full week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-272">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-272">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-273">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-273">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-274">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-274">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-275">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-275">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-276">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-276">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-277">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-277">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-278">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-278">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstJan1 : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-279">Wskazuje, że tydzień roku, w którym występuje dzień 1 stycznia powinien być używany podczas funkcje dotyczące dat są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="53c93-279">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-280">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-281">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-282">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-282">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-283">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-283">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-284">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-284">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-285">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-285">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-286">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-286">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberSignature Language="F#" Value="val mutable vbFormFeed : string" Usage="Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-287">Reprezentuje znak wysuwu funkcji drukowania.</span><span class="sxs-lookup"><span data-stu-id="53c93-287">Represents a form-feed character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-288">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-288">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-289">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-289">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbFriday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-290">Określa, że piątek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-290">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-291">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-291">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-292">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-292">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-293">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-293">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-294">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-294">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-295">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-295">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-296">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-296">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-297">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-297">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-298">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-298">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbGeneralDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-299">Wskazuje, że ogólny format daty dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-299">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-300">Gdy wywołujesz `FormatDateTime` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-300">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53c93-301">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikony w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="53c93-301">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="53c93-302">Ciągi formatów niestandardowych daty/godziny</span><span class="sxs-lookup"><span data-stu-id="53c93-302">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-303">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-303">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-304">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-304">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbGet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbGet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-305">Określa, że wartość właściwości powinny być pobierane, gdy <see langword="CallByName" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-305">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-306">Gdy wywołujesz `CallByName` funkcji, można użyć następujących `CallType` elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-306">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-307">`UseCallType` Przyjmuje argument `CallType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-307">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-308">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-308">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-309">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-309">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-310">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-310">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbHidden : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-311">Wskazuje, że plik jest ukryty plik dla funkcji dostępu do plików.</span><span class="sxs-lookup"><span data-stu-id="53c93-311">Indicates that the file is a hidden file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-312">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-312">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-313">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-313">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-314">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-314">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-315">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-315">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-316">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-316">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-317">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-317">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-318">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-318">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbHide : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbHide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-319">Wskazuje, czy styl okna jest ukryty dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-319">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-320">Po wykonaniu `Shell` polecenia, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-320">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-321">`Style` Przyjmuje argument `AppWinStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-321">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-322">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-322">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-323">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-323">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-324">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-324">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbHiragana : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-325">Wskazuje znaków Hiragana powinny być konwertowane na znaki Katakana znaków, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-325">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-326">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-326">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-327">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-327">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-328">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-328">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-329">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-329">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-330">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-330">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-331">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-331">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbIgnore : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-332">Oznacza to, że <see langword="Ignore" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-332">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-333">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-333">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-334">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-334">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-335">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-335">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-336">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-336">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-337">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-337">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-338">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-338">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="F#" Value="val mutable vbInformation : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-339">Wskazuje, że ikony informacji będą wyświetlane podczas <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-339">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-340">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-340">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-341">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-341">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-342">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-342">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-343">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-343">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-344">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-344">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbInteger : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-345">Wskazuje, że typ obiektu variant <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-345">Indicates that the type of a variant object is <see langword="Integer" />.</span></span> <span data-ttu-id="53c93-346">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-346">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-347">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-347">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-348">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-348">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-349">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-349">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-350">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-350">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-351">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-351">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-352">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-352">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbKatakana : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-353">Określa Katakana powinny być konwertowane znaków Hiragana znaków, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-353">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-354">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-354">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-355">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-355">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-356">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-356">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-357">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-357">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-358">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-358">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-359">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-359">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbLet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbLet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-360">Wskazuje, że wartość właściwości powinna być równa obiektu wystąpienia, gdy <see langword="CallByName" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-360">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-361">Gdy wywołujesz `CallByName` funkcji, można użyć następujących `CallType` elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-361">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-362">`UseCallType` Przyjmuje argument `CallType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-362">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-363">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-363">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-364">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-364">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-365">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-365">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberSignature Language="F#" Value="val mutable vbLf : string" Usage="Microsoft.VisualBasic.Constants.vbLf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-366">Reprezentuje wysuwu wiersza znaku do drukowania i wyświetlić funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-366">Represents a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-367">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-367">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-368">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-368">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="F#" Value="val mutable vbLinguisticCasing : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-369">Wskazuje, że znaki powinny być konwertowane na użytek reguły językowej wielkość liter w wyrazie zamiast pliku zasady systemowe na wielkość liter w wyrazie o tym, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-369">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-370">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-370">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-371">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-371">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-372">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-372">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-373">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-373">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-374">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-374">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-375">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-375">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberSignature Language="F#" Value="val mutable vbLong : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbLong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-376">Wskazuje typ wariantu obiektu jest <see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-376">Indicates the type of a variant object is <see langword="Long" />.</span></span> <span data-ttu-id="53c93-377">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-377">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-378">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-379">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-380">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-381">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-381">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-382">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-382">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-383">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-383">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbLongDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-384">Wskazuje, że powinna być w formacie daty długiej dla bieżącej kultury używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-384">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-385">Gdy wywołujesz `FormatDateTime` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-385">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53c93-386">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikony w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="53c93-386">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="53c93-387">Ciągi formatów niestandardowych daty/godziny</span><span class="sxs-lookup"><span data-stu-id="53c93-387">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-388">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-388">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-389">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-389">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbLongTime : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-390">Wskazuje, że format godziny długiej dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-390">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-391">Gdy wywołujesz `FormatDateTime` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-391">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53c93-392">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikony w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="53c93-392">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="53c93-393">Ciągi formatów niestandardowych daty/godziny</span><span class="sxs-lookup"><span data-stu-id="53c93-393">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-394">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-394">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-395">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-395">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbLowerCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-396">Wskazuje, że znaki powinny być konwertowane na małe litery, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-396">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-397">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-397">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-398">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-398">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-399">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-399">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-400">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-400">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-401">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-401">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-402">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-402">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbMaximizedFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-403">Wskazuje, czy styl okna jest zmaksymalizowane, fokus dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-403">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-404">Po wykonaniu `Shell` polecenia, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-404">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-405">`Style` Przyjmuje argument `AppWinStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-405">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-406">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-406">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-407">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-407">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-408">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-408">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbMethod : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-409">Określa, że metoda powinna być wywoływana gdy <see langword="CallByName" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-409">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-410">Gdy wywołujesz `CallByName` funkcji, można użyć następujących `CallType` elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-410">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-411">`UseCallType` Przyjmuje argument `CallType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-411">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-412">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-412">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-413">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-413">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-414">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-414">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbMinimizedFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-415">Wskazuje, czy styl okna jest zminimalizowany fokus dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-415">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-416">Po wykonaniu `Shell` polecenia, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-416">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-417">`Style` Przyjmuje argument `AppWinStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-417">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-418">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-418">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-419">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-419">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-420">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-420">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbMinimizedNoFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-421">Wskazuje, czy styl okna jest zminimalizowany bez fokusu dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-421">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-422">Po wykonaniu `Shell` polecenia, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-422">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-423">`Style` Przyjmuje argument `AppWinStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-423">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-424">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-424">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-425">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-425">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-426">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-426">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbMonday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-427">Określa, że poniedziałek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-427">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-428">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-428">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-429">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-429">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-430">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-430">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-431">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-431">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-432">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-432">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-433">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-433">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-434">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-434">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-435">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-435">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxHelp : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-436">Oznacza to, że <see langword="Help" /> przycisk będzie wyświetlany, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-436">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-437">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-437">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-438">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-438">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-439">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-439">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-440">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-440">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-441">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-441">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxRight : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-442">Wskazuje, czy tekst będzie być wyrównany do prawej po <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-442">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-443">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-443">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-444">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-444">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-445">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-445">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-446">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-446">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-447">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-447">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxRtlReading : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-448">Wskazuje, że odczytywanie tekstu od prawej do lewej (systemy języków hebrajskiego i arabskiego) będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-448">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-449">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-449">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-450">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-450">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-451">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-451">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-452">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-452">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-453">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-453">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxSetForeground : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-454">Wskazuje, że na pierwszym planie wyświetli okno komunikatu podczas <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-454">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-455">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-455">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-456">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-456">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-457">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-457">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-458">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-458">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-459">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-459">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbNarrow : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-460">Wskazuje, że znaków dwubajtowych (dwubajtowe) powinny być konwertowane do zawężenia (pojedynczych bajtów) znaki, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-460">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-461">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-461">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-462">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-462">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-463">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-463">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-464">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-464">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-465">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-465">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-466">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-466">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberSignature Language="F#" Value="val mutable vbNewLine : string" Usage="Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-467">Reprezentuje nowy wiersz znaków do drukowania i wyświetlić funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-467">Represents a newline character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-468">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-468">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-469">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-469">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbNo : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-470">Oznacza to, że <see langword="No" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-470">Indicates that the <see langword="No" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-471">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-471">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-472">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-472">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-473">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-473">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-474">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-474">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-475">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-475">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-476">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-476">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbNormal : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-477">Wskazuje, że plik jest plikiem normalny dostęp do plików funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-477">Indicates that the file is a normal file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-478">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-478">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-479">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-479">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-480">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-480">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-481">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-481">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-482">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-482">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-483">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-483">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-484">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-484">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbNormalFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-485">Wskazuje, że styl okna jest normalne fokus dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-485">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-486">Po wykonaniu `Shell` polecenia, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-486">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-487">`Style` Przyjmuje argument `AppWinStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-487">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-488">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-488">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-489">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-489">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-490">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-490">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbNormalNoFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-491">Wskazuje, że styl okna jest normalne bez fokusu dla wywołanej programów, kiedy <see langword="Shell" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-491">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-492">Po wykonaniu `Shell` polecenia, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-492">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-493">`Style` Przyjmuje argument `AppWinStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-493">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-494">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-494">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-495">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-495">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-496">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-496">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbNull : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-497">Wskazuje, że typ obiektu variant <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-497">Indicates that the type of a variant object is <see langword="Nothing" />.</span></span> <span data-ttu-id="53c93-498">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-498">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-499">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-499">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-500">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-500">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-501">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-501">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-502">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-502">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-503">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-503">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-504">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-504">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberSignature Language="F#" Value="val mutable vbNullChar : string" Usage="Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-505">Reprezentuje wartość null znak do drukowania i wyświetlić funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-505">Represents a null character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-506">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-506">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-507">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-507">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberSignature Language="F#" Value="val mutable vbNullString : string" Usage="Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-508">Reprezentuje o zerowej długości ciągu do drukowania i funkcji, wyświetlania i wywoływania procedur zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-508">Represents a zero-length string for print and display functions, and for calling external procedures.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-509">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-509">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-510">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-510">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberSignature Language="F#" Value="val mutable vbObject : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-511">Wskazuje, że typ obiektu variant <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-511">Indicates that the type of a variant object is <see langword="Object" />.</span></span> <span data-ttu-id="53c93-512">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-512">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-513">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-513">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-514">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-514">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-515">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-515">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-516">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-516">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-517">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-517">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-518">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-518">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberSignature Language="F#" Value="val mutable vbObjectError : int" Usage="Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-519">Reprezentuje obiekt numer błędu.</span><span class="sxs-lookup"><span data-stu-id="53c93-519">Represents the object error number.</span></span> <span data-ttu-id="53c93-520">Numery błędach zdefiniowane przez użytkownika powinna być większa od tej wartości.</span><span class="sxs-lookup"><span data-stu-id="53c93-520">User-defined error numbers should be greater than this value.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-521">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-521">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-522">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-522">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbOK : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbOK" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-523">Oznacza to, że <see langword="OK" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-523">Indicates that the <see langword="OK" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-524">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-524">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-525">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-525">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-526">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-526">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-527">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-527">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-528">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-528">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-529">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-529">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbOKCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-530">Oznacza to, że <see langword="OK" /> i <see langword="Cancel" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-530">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-531">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-531">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-532">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-532">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-533">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-533">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-534">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-534">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-535">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-535">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbOKOnly : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-536">Wskazuje, że tylko <see langword="OK" /> przycisk będzie wyświetlany, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-536">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-537">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-537">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-538">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-538">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-539">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-539">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-540">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-540">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-541">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-541">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbProperCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-542">Wskazuje, że pierwszą literę każdego wyrazu w ciągu powinny być konwertowane na wielkie litery, a pozostałe znaki na małe litery, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-542">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-543">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-543">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-544">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-544">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-545">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-545">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-546">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-546">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-547">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-547">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-548">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-548">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbQuestion : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-549">Wskazuje, że ikona pytania będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-549">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-550">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-550">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-551">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-551">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-552">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-552">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-553">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-553">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-554">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-554">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbReadOnly : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-555">Wskazuje, że plik jest plikiem tylko do odczytu dla funkcji dostępu do plików.</span><span class="sxs-lookup"><span data-stu-id="53c93-555">Indicates that the file is a read-only file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-556">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-556">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-557">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-557">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-558">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-558">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-559">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-559">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-560">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-560">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-561">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-561">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-562">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-562">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbRetry : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-563">Oznacza to, że <see langword="Retry" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-563">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-564">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-564">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-565">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-565">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-566">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-566">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-567">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-567">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-568">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-568">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-569">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-569">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbRetryCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-570">Oznacza to, że <see langword="Retry" /> i <see langword="Cancel" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-570">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-571">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-571">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-572">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-572">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-573">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-573">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-574">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-574">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-575">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-575">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbSaturday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-576">Określa, że sobota powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-576">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-577">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-577">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-578">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-578">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-579">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-579">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-580">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-580">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-581">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-581">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-582">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-582">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-583">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-583">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-584">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-584">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbSet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-585">Wskazuje, czy właściwość powinna być ustawiona wartość kiedy <see langword="CallByName" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-585">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-586">Gdy wywołujesz `CallByName` funkcji, można użyć następujących `CallType` elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-586">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-587">`UseCallType` Przyjmuje argument `CallType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-587">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-588">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-588">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-589">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-589">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-590">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-590">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbShortDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-591">Wskazuje, że powinna być w formacie daty krótkiej dla bieżącej kultury używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-591">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-592">Gdy wywołujesz `FormatDateTime` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-592">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53c93-593">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikony w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="53c93-593">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="53c93-594">Ciągi formatów niestandardowych daty/godziny</span><span class="sxs-lookup"><span data-stu-id="53c93-594">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-595">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-595">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-596">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-596">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbShortTime : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-597">Wskazuje, że format godziny krótkiej dla bieżącej kultury powinny być używane podczas <see langword="FormatDateTime" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-597">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-598">Gdy wywołujesz `FormatDateTime` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-598">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53c93-599">Dostęp do ustawień regionalnych komputera przez dwukrotne kliknięcie **Opcje regionalne** ikony w **Panelu sterowania**.</span><span class="sxs-lookup"><span data-stu-id="53c93-599">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="53c93-600">Ciągi formatów niestandardowych daty/godziny</span><span class="sxs-lookup"><span data-stu-id="53c93-600">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-601">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-601">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-602">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-602">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="F#" Value="val mutable vbSimplifiedChinese : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-603">Wskazuje, że znaki powinny być konwertowane na chiński (uproszczony) podczas <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-603">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-604">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-604">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-605">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-605">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-606">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-606">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-607">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-607">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-608">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-608">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-609">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-609">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbSingle : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-610">Wskazuje, że typ obiektu variant <see langword="Single" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-610">Indicates that the type of a variant object is <see langword="Single" />.</span></span> <span data-ttu-id="53c93-611">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-611">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-612">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-612">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-613">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-613">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-614">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-614">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-615">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-615">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-616">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-616">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-617">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-617">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbString : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-618">Wskazuje, że typ obiektu variant <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-618">Indicates that the type of a variant object is <see langword="String" />.</span></span> <span data-ttu-id="53c93-619">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-619">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-620">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-620">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-621">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-621">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-622">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-622">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-623">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-623">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-624">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-624">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-625">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-625">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbSunday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-626">Określa, że niedziela powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-626">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-627">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-627">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-628">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-628">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-629">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-629">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-630">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-630">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-631">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-631">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-632">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-632">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-633">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-633">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-634">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-634">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbSystem : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-635">Wskazuje, że plik jest plikiem systemu dla funkcji dostępu do plików.</span><span class="sxs-lookup"><span data-stu-id="53c93-635">Indicates that the file is a system file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-636">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-636">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-637">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-637">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-638">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-638">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-639">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-639">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-640">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-640">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-641">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-641">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-642">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-642">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="F#" Value="val mutable vbSystemModal : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-643">Wskazuje, że okno komunikatu pojawi się jako modalne okno dialogowe przypadku <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-643">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-644">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-644">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-645">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-645">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-646">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-646">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-647">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-647">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-648">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-648">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberSignature Language="F#" Value="val mutable vbTab : string" Usage="Microsoft.VisualBasic.Constants.vbTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-649">Reprezentuje kartę znak do drukowania i wyświetlić funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-649">Represents a tab character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-650">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-650">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-651">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-651">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbTextCompare : Microsoft.VisualBasic.CompareMethod" Usage="Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-652">Wskazuje, że porównanie tekstu, należy wykonać, wywołanego funkcje porównania.</span><span class="sxs-lookup"><span data-stu-id="53c93-652">Indicates that a text comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-653">Po wywołaniu funkcji porównywania, możesz użyć <xref:Microsoft.VisualBasic.CompareMethod> wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-653">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-654">`Compare` Przyjmuje argument `CompareMethod` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-654">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-655">Aby uzyskać więcej informacji na temat więcej informacji na temat porównań binarnych i tekstowych, zobacz [instrukcji porównanie opcji](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="53c93-655">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-656">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-656">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-657">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-657">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-658">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-658">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbThursday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-659">Określa, że czwartek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-659">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-660">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-660">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-661">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-661">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-662">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-662">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-663">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-663">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-664">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-664">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-665">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-665">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-666">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-666">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-667">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-667">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="F#" Value="val mutable vbTraditionalChinese : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-668">Wskazuje, że znaki powinny być konwertowane na gdy chiński tradycyjny <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-668">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-669">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-669">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-670">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-670">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-671">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-671">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-672">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-672">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-673">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-673">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-674">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-674">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberSignature Language="F#" Value="val mutable vbTrue : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-675">Oznacza to, że <see langword="Boolean" /> wartość <see langword="True" /> powinno być używane podczas formatowania liczby funkcje są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="53c93-675">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-676">Formatowanie liczby wywołań funkcji, użytkownik może korzystając następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-676">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-677">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-677">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-678">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-678">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbTuesday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-679">Określa, że wtorek powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-679">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-680">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-680">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-681">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-681">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-682">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-682">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-683">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-683">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-684">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-684">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-685">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-685">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-686">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-686">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-687">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-687">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbUpperCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-688">Wskazuje, że znaki powinny być konwertowane na wielkie litery, kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-688">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-689">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-689">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-690">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-690">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-691">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-691">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-692">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-692">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-693">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-693">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-694">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-694">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberSignature Language="F#" Value="val mutable vbUseDefault : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-695">Oznacza to, że wartość domyślna <see langword="Boolean" /> wartości powinny być używane, gdy formatowanie liczby funkcje są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="53c93-695">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-696">Formatowanie liczby wywołań funkcji, użytkownik może korzystając następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-696">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-697">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-697">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-698">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-698">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="F#" Value="val mutable vbUserDefinedType : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-699">Wskazuje, że typ wariantu obiektu jest typem zdefiniowanym przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="53c93-699">Indicates that the type of a variant object is a user-defined type.</span></span> <span data-ttu-id="53c93-700">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-700">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-701">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-701">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-702">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-702">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-703">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-703">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-704">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-704">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-705">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-705">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-706">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-706">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbUseSystem : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-707">Wskazuje, że tygodnia określony przez system jako pierwszy tydzień roku powinien być używany. kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-707">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-708">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-708">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-709">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-709">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-710">`FirstWeekOfYear` Wyliczenie określa prawidłowe wartości dla `WeekOfYear` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-710">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-711">`WeekOfYear` Przyjmuje argument `FirstWeekOfYear` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-711">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-712">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-712">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-713">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-713">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-714">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-714">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbUseSystemDayOfWeek : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-715">Wskazuje, że dzień określony przez system jako pierwszy dzień tygodnia, należy używać kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-715">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-716">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-716">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-717">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-717">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-718">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-718">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-719">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-719">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-720">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-720">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-721">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-721">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-722">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-722">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-723">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-723">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberSignature Language="F#" Value="val mutable vbVariant : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-724">Wskazuje, że typ obiektu variant <see langword="Variant" />.</span><span class="sxs-lookup"><span data-stu-id="53c93-724">Indicates that the type of a variant object is <see langword="Variant" />.</span></span> <span data-ttu-id="53c93-725">Zwrócone przez <see langword="VarType" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-725">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-726">Gdy wywołujesz `VarType` funkcji elementów członkowskich wyliczenia można użyć w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-726">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-727">`VariantType` Wyliczenie definiuje stałe używane do identyfikowania możliwych `Variant` typów.</span><span class="sxs-lookup"><span data-stu-id="53c93-727">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="53c93-728">W poniższej tabeli wymieniono `VariantType` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-728">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-729">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-729">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-730">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-730">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-731">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-731">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberSignature Language="F#" Value="val mutable vbVerticalTab : string" Usage="Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53c93-732">Reprezentuje znak powrotu karetki funkcji drukowania.</span><span class="sxs-lookup"><span data-stu-id="53c93-732">Represents a carriage-return character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-733">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-733">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="53c93-734">Stałe — Przegląd</span><span class="sxs-lookup"><span data-stu-id="53c93-734">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbVolume : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-735">Określa atrybut pliku etykiety woluminu, aby uzyskać dostęp do plików funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-735">Indicates the volume label file attribute for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-736">Ten atrybut nie jest prawidłowy dla `SetAttr` funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-736">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="53c93-737">Gdy wywołujesz `Dir`, `GetAttr`, lub `SetAttr` funkcji, można użyć `FileAttribute` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-737">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-738">`Attributes` Przyjmuje argument `FileAttribute` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-738">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-739">Podczas wykonywania operacji We/Wy pliku `My.Computer.FileSystem` obiekt zapewnia lepszą wydajność i łatwość użytkowania niż starsze plik metody operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="53c93-739">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="53c93-740">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.FileSystem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="53c93-740">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-741">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-741">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-742">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-742">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-743">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-743">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbWednesday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-744">Określa, że środę powinien być używany jako pierwszy dzień tygodnia, kiedy są wywoływane funkcje związane z datami.</span><span class="sxs-lookup"><span data-stu-id="53c93-744">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-745">Gdy zostaną wywołane funkcje dotyczące dat, w kodzie zamiast wartości faktycznych można używać następujących elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-745">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-746">Niektóre funkcje związane z datą przyjmują `DayOfWeek` argument `WeekOfYear` argument lub obu.</span><span class="sxs-lookup"><span data-stu-id="53c93-746">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="53c93-747">`FirstDayOfWeek` Wyliczenie określa prawidłowe wartości dla `DayOfWeek` argumentów, a także możliwych wartości zwracanych przez funkcje.</span><span class="sxs-lookup"><span data-stu-id="53c93-747">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="53c93-748">`DayOfWeek` Przyjmuje argument `FirstDayOfWeek` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-748">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="53c93-749">Funkcje dotyczące dat również zwracać `FirstDayOfWeek` wartości (z wyjątkiem `System`).</span><span class="sxs-lookup"><span data-stu-id="53c93-749">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-750">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-750">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-751">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-751">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-752">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-752">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbWide : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbWide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-753">Wskazuje, że wąskie znaków (pojedynczych bajtów) powinny być konwertowane do znaków dwubajtowych (dwubajtowe), kiedy <see langword="StrConv" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-753">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-754">Gdy wywołujesz `StrConv` funkcji, można użyć następujących elementów członkowskich wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-754">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-755">`Conversion` Przyjmuje argument `VbStrConv` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-755">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-756">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-756">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-757">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-757">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-758">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-758">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="53c93-759">Wprowadzenie do ciągów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="53c93-759">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbYes : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-760">Oznacza to, że <see langword="Yes" /> przycisk został kliknięty w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="53c93-760">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span></span> <span data-ttu-id="53c93-761">Zwrócone przez <see langword="MsgBox" /> funkcji.</span><span class="sxs-lookup"><span data-stu-id="53c93-761">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-762">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxResult` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-762">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="53c93-763">`MsgBox` Funkcja zwraca `MsgBoxResult` wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-763">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-764">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-764">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-765">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-765">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-766">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-766">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbYesNo : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-767">Oznacza to, że <see langword="Yes" /> i <see langword="No" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-767">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-768">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-768">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-769">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-769">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-770">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-770">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-771">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-771">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-772">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-772">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbYesNoCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53c93-773">Oznacza to, że <see langword="Yes" />, <see langword="No" />, i <see langword="Cancel" /> przyciski będą wyświetlane, gdy <see langword="MsgBox" /> funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="53c93-773">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53c93-774">Gdy wywołujesz `MsgBox` funkcji, można użyć `MsgBoxStyle` wyliczenia w kodzie zamiast wartości faktycznych.</span><span class="sxs-lookup"><span data-stu-id="53c93-774">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="53c93-775">`Buttons` Przyjmuje argument `MsgBoxStyle` elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="53c93-775">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="53c93-776">Stałe i wyliczenia (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53c93-776">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="53c93-777">Kiedy stosować wyliczanie</span><span class="sxs-lookup"><span data-stu-id="53c93-777">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="53c93-778">Instrukcje: Odnoszą się do elementu członkowskiego wyliczenia</span><span class="sxs-lookup"><span data-stu-id="53c93-778">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>