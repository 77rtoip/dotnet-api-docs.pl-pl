<Type Name="VBCodeProvider" FullName="Microsoft.VisualBasic.VBCodeProvider">
  <TypeSignature Language="C#" Value="public class VBCodeProvider : System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VBCodeProvider extends System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class VBCodeProvider&#xA;Inherits CodeDomProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBCodeProvider : System::CodeDom::Compiler::CodeDomProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.Compiler.CodeDomProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55fb2-101">Zapewnia dostęp do wystąpień generator kodu języka Visual Basic i kompilatora kodu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-101">Provides access to instances of the Visual Basic code generator and code compiler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55fb2-102">Ta klasa dostarcza metody, których można użyć do pobrania wystąpienia programu Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> i <xref:System.CodeDom.Compiler.ICodeCompiler> implementacji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-102">This class provides methods that can be used to retrieve instances of the Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55fb2-103">Ta klasa zawiera żądanie łącza i dziedziczenia na poziomie klasy stosowane do wszystkich składowych.</span><span class="sxs-lookup"><span data-stu-id="55fb2-103">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="55fb2-104">A <xref:System.Security.SecurityException> jest generowany, gdy bezpośredniego obiektu wywołującego lub Klasa pochodna nie ma uprawnienia pełnego zaufania.</span><span class="sxs-lookup"><span data-stu-id="55fb2-104">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55fb2-105">W poniższym przykładzie użyto C# lub Visual Basic dostawcy kodu do kompilowania pliku źródłowego.</span><span class="sxs-lookup"><span data-stu-id="55fb2-105">The following example uses either the C# or Visual Basic code provider to compile a source file.</span></span> <span data-ttu-id="55fb2-106">W przykładzie sprawdza rozszerzenie pliku wejściowego i używa odpowiadającego <xref:Microsoft.CSharp.CSharpCodeProvider> lub <xref:Microsoft.VisualBasic.VBCodeProvider> dla kompilacji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-106">The example checks the input file extension and uses the corresponding <xref:Microsoft.CSharp.CSharpCodeProvider> or <xref:Microsoft.VisualBasic.VBCodeProvider> for compilation.</span></span>  <span data-ttu-id="55fb2-107">Plik wejściowy jest kompilowany do pliku wykonywalnego, a w konsoli są wyświetlane błędy kompilacji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-107">The input file is compiled into an executable file, and any compilation errors are displayed to the console.</span></span>  
  
 [!code-csharp[CodeDom_CodeProviders#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CodeProviders/CS/source.cs#2)]
 [!code-vb[CodeDom_CodeProviders#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CodeProviders/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="55fb2-108">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="55fb2-108">for full trust for the immediate caller.</span></span> <span data-ttu-id="55fb2-109">Nie można użyć tej klasy w kodzie częściowo zaufanym.</span><span class="sxs-lookup"><span data-stu-id="55fb2-109">This class cannot be used by partially trusted code.</span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="55fb2-110">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="55fb2-110">for full trust for inheritors.</span></span> <span data-ttu-id="55fb2-111">Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="55fb2-111">This class cannot be inherited by partially trusted code.</span></span></permission>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
    <altmember cref="N:System.CodeDom" />
    <altmember cref="N:System.CodeDom.Compiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55fb2-112">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="55fb2-112">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VBCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55fb2-113">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="55fb2-113">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="55fb2-114">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="55fb2-114">for full trust for the immediate caller.</span></span> <span data-ttu-id="55fb2-115">Nie można użyć tej klasy w kodzie częściowo zaufanym.</span><span class="sxs-lookup"><span data-stu-id="55fb2-115">This class cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="55fb2-116">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="55fb2-116">for full trust for inheritors.</span></span> <span data-ttu-id="55fb2-117">Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="55fb2-117">This class cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerOptions As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VBCodeProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="providerOptions"><span data-ttu-id="55fb2-118">A <see cref="T:System.Collections.Generic.IDictionary`2" /> obiekt, który zawiera opcje dostawcy z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-118">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the provider options from the configuration file.</span></span></param>
        <summary><span data-ttu-id="55fb2-119">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> przy użyciu opcji określonego dostawcy.</span><span class="sxs-lookup"><span data-stu-id="55fb2-119">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class by using the specified provider options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55fb2-120">Wartość `providerOptions` są uzyskiwane z elementu w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-120">The value for `providerOptions` is obtained from the  element in the configuration file.</span></span> <span data-ttu-id="55fb2-121">Można zidentyfikować wersji <xref:Microsoft.VisualBasic.VBCodeProvider> ma być używany przez określenie `<providerOption>` elementu, podając "CompilerVersion" jako nazwa opcji i dostarczanie numer wersji (na przykład, "v3.5") jako wartość opcji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-121">You can identify the version of the <xref:Microsoft.VisualBasic.VBCodeProvider> you want to use by specifying the `<providerOption>` element, supplying "CompilerVersion" as the option name, and supplying the version number (for example, "v3.5") as the option value.</span></span> <span data-ttu-id="55fb2-122">Należy poprzedzić numer wersji z małe litery "v".</span><span class="sxs-lookup"><span data-stu-id="55fb2-122">You must precede the version number with a lower case "v".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55fb2-123">W poniższym przykładzie plik konfiguracji pokazano, jak określić tej wersji 3.5 powinien być używany dostawca kodu języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="55fb2-123">The following configuration file example demonstrates how to specify that version 3.5 of the Visual Basic code provider should be used.</span></span>  
  
```  
<configuration>  
  <system.codedom>  
    <compilers>  
      <!-- zero or more compiler elements -->  
      <compiler  
          language="vb;VisualBasic"  
          extension=".vb"  
          type="Microsoft.VisualBasic.VBCodeProvider, System,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b77a5c561934e089"  
          compilerOptions="/optimize"  
          warningLevel="1" >  
          <providerOption  
            name="CompilerVersion"  
            value="v3.5" />  
        </compiler>  
    </compilers>  
  </system.codedom>  
</configuration>  
```  
  
 <span data-ttu-id="55fb2-124">Poniższy przykład przedstawia sposób Określ wersję kompilatora, tworząc nowe wystąpienie klasy <xref:Microsoft.VisualBasic.VBCodeProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="55fb2-124">The following example shows how to specify the compiler version when creating a new instance of the <xref:Microsoft.VisualBasic.VBCodeProvider> class.</span></span>  
  
 [!code-vb[VBProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/vbprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55fb2-125"><paramref name="providerOptions" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55fb2-125"><paramref name="providerOptions" /> is <see langword="null" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="55fb2-126">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="55fb2-126">for full trust for the immediate caller.</span></span> <span data-ttu-id="55fb2-127">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="55fb2-127">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55fb2-128">Pobiera wystąpienie elementu kompilator kodu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="55fb2-128">Gets an instance of the Visual Basic code compiler.</span></span></summary>
        <returns><span data-ttu-id="55fb2-129">Wystąpienie programu Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-129">An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55fb2-130">Pobiera wystąpienie elementu generator kodu języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="55fb2-130">Gets an instance of the Visual Basic code generator.</span></span></summary>
        <returns><span data-ttu-id="55fb2-131">Wystąpienie programu Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="55fb2-131">An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.VBCodeProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55fb2-132">Pobiera rozszerzenie nazwy pliku do użycia podczas tworzenia plików kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="55fb2-132">Gets the file name extension to use when creating source code files.</span></span></summary>
        <value><span data-ttu-id="55fb2-133">Rozszerzenie nazwy pliku do użycia na potrzeby wygenerowanych plików kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="55fb2-133">The file name extension to use for generated source code files.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55fb2-134">To rozszerzenie nazwy pliku jest zwykle rozszerzenia używane przez pliki kodu źródłowego języka.</span><span class="sxs-lookup"><span data-stu-id="55fb2-134">This file name extension is usually the extension used by the language's source code files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="55fb2-135">A <see cref="T:System.CodeDom.CodeTypeMember" /> do generowania kodu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-135">A <see cref="T:System.CodeDom.CodeTypeMember" /> to generate code for.</span></span></param>
        <param name="writer"><span data-ttu-id="55fb2-136"><see cref="T:System.IO.TextWriter" /> Do zapisu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-136">The <see cref="T:System.IO.TextWriter" /> to write to.</span></span></param>
        <param name="options"><span data-ttu-id="55fb2-137"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> Do użycia podczas generowania kodu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-137">The <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> to use when generating the code.</span></span></param>
        <summary><span data-ttu-id="55fb2-138">Generuje kod dla elementu członkowskiego klasy określonego za pomocą określonym składniku zapisywania tekstu i opcje generatora kodu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-138">Generates code for the specified class member using the specified text writer and code generator options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55fb2-139">Elementy członkowskie są generowane, inaczej w zależności od ich kontekstu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-139">Members are generated differently depending on their context.</span></span> <span data-ttu-id="55fb2-140">Na przykład metoda w interfejsie lub pola w wyliczeniu jest generowany inaczej niż metoda lub pole w klasie.</span><span class="sxs-lookup"><span data-stu-id="55fb2-140">For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.</span></span>  <span data-ttu-id="55fb2-141">Ta implementacja generuje kod dla elementu członkowskiego w kontekście klasy.</span><span class="sxs-lookup"><span data-stu-id="55fb2-141">This implementation generates code for a member in the class context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55fb2-142">W poniższym przykładzie pokazano sposób użycia <xref:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember%2A> metodę w celu utworzenia fragmentu kodu do użycia w wykresu CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="55fb2-142">The following code example shows the use of the <xref:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember%2A> method to create a code fragment to be used in a CodeDOM graph.</span></span> <span data-ttu-id="55fb2-143">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> metody <xref:System.CodeDom.Compiler.CodeDomProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="55fb2-143">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method of the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="55fb2-144">Typ obiektu do pobrania dla konwertera typu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-144">The type of object to retrieve a type converter for.</span></span></param>
        <summary><span data-ttu-id="55fb2-145">Pobiera <see cref="T:System.ComponentModel.TypeConverter" /> dla określonego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-145">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type of object.</span></span></summary>
        <returns><span data-ttu-id="55fb2-146">A <see cref="T:System.ComponentModel.TypeConverter" /> dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="55fb2-146">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55fb2-147">Klasy pochodne mogą przesłaniać tę metodę zapewnienie określonych rodzajów typy konwerterów dla określonych typów danych.</span><span class="sxs-lookup"><span data-stu-id="55fb2-147">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.VBCodeProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55fb2-148">Pobiera identyfikator funkcji języka.</span><span class="sxs-lookup"><span data-stu-id="55fb2-148">Gets a language features identifier.</span></span></summary>
        <value><span data-ttu-id="55fb2-149">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> wskazujące specjalnych funkcji języka.</span><span class="sxs-lookup"><span data-stu-id="55fb2-149">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.LanguageOptions" />
      </Docs>
    </Member>
  </Members>
</Type>