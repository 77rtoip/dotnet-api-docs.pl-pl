<Type Name="Collection" FullName="Microsoft.VisualBasic.Collection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5347d5c8039df45d4a22ad4c9c33925b67ae00a2" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57941077" /></Metadata><TypeSignature Language="C#" Value="public sealed class Collection : System.Collections.IList, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Collection extends System.Object implements class System.Collections.ICollection, class System.Collections.IList, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Collection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Collection&#xA;Implements IDeserializationCallback, IList, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Collection sealed : System::Collections::IList, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Collection = class&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Collection/CollectionDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7e61b-101">W języku Visual Basic <see langword="Collection" /> jest uporządkowany zestaw elementów, które mogą być określane jako jednostka.</span><span class="sxs-lookup"><span data-stu-id="7e61b-101">A Visual Basic <see langword="Collection" /> is an ordered set of items that can be referred to as a unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7e61b-102">Jeśli to możliwe, należy używać ogólnych kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw lub <xref:System.Collections.Concurrent> przestrzeni nazw, a nie w języku Visual Basic `Collection`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-102">Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`.</span></span> <span data-ttu-id="7e61b-103">Aby uzyskać więcej informacji, zobacz [kolekcje](https://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span><span class="sxs-lookup"><span data-stu-id="7e61b-103">For more information, see [Collections](https://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span></span>  
  
 <span data-ttu-id="7e61b-104">Visual Basic `Collection` obiekt zapewnia wygodny sposób odwoływania się do powiązanej grupy elementów jako pojedynczy obiekt.</span><span class="sxs-lookup"><span data-stu-id="7e61b-104">The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object.</span></span> <span data-ttu-id="7e61b-105">Elementy, lub *elementy*w kolekcji tylko potrzebne związane z faktem, że istnieją one w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-105">The items, or *elements*, in a collection need only be related by the fact that they exist in the collection.</span></span> <span data-ttu-id="7e61b-106">Elementy kolekcji nie należy udostępniać tego samego typu danych.</span><span class="sxs-lookup"><span data-stu-id="7e61b-106">Elements of a collection do not have to share the same data type.</span></span>  
  
 <span data-ttu-id="7e61b-107">Można utworzyć kolekcję na taki sam sposób utworzyć inne obiekty, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="7e61b-107">You can create a collection the same way you create other objects, as the following example illustrates.</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="7e61b-108">Po utworzeniu kolekcji, możesz wykonać dowolną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="7e61b-108">Once you have created a collection, you can do any of the following:</span></span>  
  
-   <span data-ttu-id="7e61b-109">Dodaj element z <xref:Microsoft.VisualBasic.Collection.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e61b-109">Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="7e61b-110">Usuń element z <xref:Microsoft.VisualBasic.Collection.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e61b-110">Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.</span></span>  
  
-   <span data-ttu-id="7e61b-111">Usuń wszystkie elementy z <xref:Microsoft.VisualBasic.Collection.Clear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e61b-111">Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="7e61b-112">Dowiedz się, jak wiele elementów, które zawiera kolekcję <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-112">Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="7e61b-113">Sprawdź, czy określony element jest obecny przy użyciu <xref:Microsoft.VisualBasic.Collection.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e61b-113">Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.</span></span>  
  
-   <span data-ttu-id="7e61b-114">Zwraca określony element z kolekcji przy użyciu <xref:Microsoft.VisualBasic.Collection.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-114">Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.</span></span>  
  
-   <span data-ttu-id="7e61b-115">Iterację całą kolekcję z [For Each... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="7e61b-115">Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="7e61b-116">Mimo że Visual Basic `Collection` obiekt ma funkcjonalność jest taka sama jak `Collection` obiektu w Visual Basic 6.0, dwa nie może współpracować w środowisku COM.</span><span class="sxs-lookup"><span data-stu-id="7e61b-116">Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</span></span>  
  
    > [!CAUTION]
    >  <span data-ttu-id="7e61b-117">Iteracji w Visual Basic `Collection` nie jest procedurą odporną.</span><span class="sxs-lookup"><span data-stu-id="7e61b-117">Iterating through a Visual Basic `Collection` is not a thread-safe procedure.</span></span> <span data-ttu-id="7e61b-118">Nawet jeśli kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować kolekcji, powodując modułu wyliczającego do zgłoszenia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7e61b-118">Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</span></span> <span data-ttu-id="7e61b-119">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, zablokować kolekcję albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątki.</span><span class="sxs-lookup"><span data-stu-id="7e61b-119">To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="7e61b-120">Aby uzyskać więcej informacji na temat blokowania elementu programistycznego, zobacz [SyncLock — instrukcja](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span><span class="sxs-lookup"><span data-stu-id="7e61b-120">For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-121">Poniższy przykład tworzy `Collection` obiektu `names` i okno dialogowe, za pomocą którego użytkownik może dodawać obiekty (nazwy) w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-121">The following example creates the `Collection` object `names` and a dialog box with which a user can add objects (names) to the collection.</span></span> <span data-ttu-id="7e61b-122">Następnie wyświetla nazwy w kolekcji, a na koniec opróżnia kolekcji bez usuwania `Collection` sam obiekt.</span><span class="sxs-lookup"><span data-stu-id="7e61b-122">It then displays the names in the collection, and finally empties the collection without disposing of the `Collection` object itself.</span></span>  
  
 <span data-ttu-id="7e61b-123">Aby zobaczyć, jak to działa, wybierz **Dodaj klasę** polecenia **projektu** menu i Zadeklaruj zmienną publicznego o nazwie `instanceName` na poziomie modułu `nameClass` (typ `Public instanceName`) do przechowywania nazwy poszczególnych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="7e61b-123">To see how this works, choose the **Add Class** command from the **Project** menu and declare a public variable called `instanceName` at the module level of `nameClass` (type `Public instanceName`) to hold the names of each instance.</span></span> <span data-ttu-id="7e61b-124">Pozostaw nazwę domyślną `nameClass`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-124">Leave the default name as `nameClass`.</span></span> <span data-ttu-id="7e61b-125">Skopiuj i wklej następujący kod do **ogólne** części innego modułu, a następnie uruchom go z instrukcją `classNamer` w innej procedury.</span><span class="sxs-lookup"><span data-stu-id="7e61b-125">Copy and paste the following code into the **General** section of another module, and then start it with the statement `classNamer` in another procedure.</span></span> <span data-ttu-id="7e61b-126">(Ten przykład działa tylko w przypadku aplikacji hosta obsługujących klasy).</span><span class="sxs-lookup"><span data-stu-id="7e61b-126">(This example works only with host applications that support classes.)</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e61b-127">Tworzy i zwraca nowy języka Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-127">Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-128">Kolekcji Visual Basic, zwrócony przez ten konstruktor jest pusta i nie ma żadnych pojemność przydzielone.</span><span class="sxs-lookup"><span data-stu-id="7e61b-128">The Visual Basic collection returned by this constructor is empty and does not have any initial capacity allocated.</span></span>  
  
 <span data-ttu-id="7e61b-129">Kolekcje w języku Visual Basic nie są zgodne z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] dostępne w kolekcji <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, i <xref:System.Collections.Specialized?displayProperty=nameWithType> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="7e61b-129">Visual Basic collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, and <xref:System.Collections.Specialized?displayProperty=nameWithType> namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-130">Poniższy przykład tworzy nową kolekcję języka Visual Basic, a następnie przypisuje go do zmiennej `coll`:</span><span class="sxs-lookup"><span data-stu-id="7e61b-130">The following example creates a new Visual Basic collection and assigns it to the variable `coll`:</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="7e61b-131">To `Collection` obiekt jest jednobazowa, co oznacza, że wartości indeksów elementów zakresu od 1 do wartości `Count` właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-131">This `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span> <span data-ttu-id="7e61b-132">Visual Basic kolekcje przechowują elementów typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="7e61b-132">Visual Basic collections hold elements of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object Item, string Key = null, object Before = null, object After = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Add(object Item, string Key, object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Item As Object, Optional Key As String = null, Optional Before As Object = null, Optional After As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Add : obj * string * obj * obj -&gt; unit" Usage="collection.Add (Item, Key, Before, After)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Item"><span data-ttu-id="7e61b-133">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="7e61b-133">Required.</span></span> <span data-ttu-id="7e61b-134">Obiekt dowolnego typu, który określa element do dodania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-134">An object of any type that specifies the element to add to the collection.</span></span></param>
        <param name="Key"><span data-ttu-id="7e61b-135">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="7e61b-135">Optional.</span></span> <span data-ttu-id="7e61b-136">Unikatowy <see langword="String" /> wyrażenie, które określa klucza parametry, których można używać zamiast pozycyjne indeksu umożliwiają dostęp do tego nowego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-136">A unique <see langword="String" /> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</span></span></param>
        <param name="Before"><span data-ttu-id="7e61b-137">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="7e61b-137">Optional.</span></span> <span data-ttu-id="7e61b-138">Wyrażenie, który określa względne położenie w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-138">An expression that specifies a relative position in the collection.</span></span> <span data-ttu-id="7e61b-139">Element, który ma zostać dodany zostanie umieszczony w kolekcji przed elementem identyfikowane przez <paramref name="Before" /> argumentu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-139">The element to be added is placed in the collection before the element identified by the <paramref name="Before" /> argument.</span></span> <span data-ttu-id="7e61b-140">Jeśli <paramref name="Before" /> jest wyrażeniem numeryczne, musi być liczba z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-140">If <paramref name="Before" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span> <span data-ttu-id="7e61b-141">Jeśli <paramref name="Before" /> jest <see langword="String" /> wyrażenia, jego musi odpowiadać ciąg klucza określone, gdy element przywoływanego została dodana do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-141">If <paramref name="Before" /> is a <see langword="String" /> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</span></span> <span data-ttu-id="7e61b-142">Nie można określić zarówno <paramref name="Before" /> i <paramref name="After" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-142">You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="7e61b-143">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="7e61b-143">Optional.</span></span> <span data-ttu-id="7e61b-144">Wyrażenie, który określa względne położenie w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-144">An expression that specifies a relative position in the collection.</span></span> <span data-ttu-id="7e61b-145">Element, który ma zostać dodany zostanie umieszczony w kolekcji po elemencie identyfikowane przez <paramref name="After" /> argumentu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-145">The element to be added is placed in the collection after the element identified by the <paramref name="After" /> argument.</span></span> <span data-ttu-id="7e61b-146">Jeśli <paramref name="After" /> jest wyrażeniem numeryczne, musi być liczba z przedziału od 1 do wartości kolekcji <see langword="Count" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-146">If <paramref name="After" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see langword="Count" /> property.</span></span> <span data-ttu-id="7e61b-147">Jeśli <paramref name="After" /> jest <see langword="String" /> wyrażenia, jego musi odpowiadać ciąg klucza określone, gdy element przywoływany została dodana do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-147">If <paramref name="After" /> is a <see langword="String" /> expression, it must correspond to the key string specified when the element referred to was added to the collection.</span></span> <span data-ttu-id="7e61b-148">Nie można określić zarówno <paramref name="Before" /> i <paramref name="After" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-148">You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</span></span></param>
        <summary><span data-ttu-id="7e61b-149">Dodaje element do <see langword="Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-149">Adds an element to a <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-150">`Before` Lub `After` argumentu musi odwoływać się do istniejącego elementu kolekcji; w przeciwnym razie wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="7e61b-150">The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.</span></span>  
  
 <span data-ttu-id="7e61b-151">Jeśli oba `Before` i `After` argumenty są pomijane, nowy obiekt zostanie dodany na końcu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-151">If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="7e61b-152">Błąd występuje także w przypadku określonego `Key` wartość jest zgodny z kluczem dla istniejącego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-152">An error also occurs if a specified `Key` value matches the key for an existing element of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-153">W poniższym przykładzie użyto `Add` metody w celu dodania `child` obiektów - wystąpienia klasy o nazwie `child` zawierający `Public` właściwość `name` — do kolekcji o nazwie `family`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-153">The following example uses the `Add` method to add `child` objects - instances of a class called `child` containing a `Public` property `name` - to a collection called `family`.</span></span> <span data-ttu-id="7e61b-154">Aby zobaczyć, jak to działa, Utwórz <xref:System.Windows.Forms.Form> przy użyciu dwóch <xref:System.Windows.Forms.Button> kontrolek i ustaw ich <xref:System.Windows.Forms.Control.Text%2A> właściwości `Add` i `List`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-154">To see how this works, create a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.Button> controls and set their <xref:System.Windows.Forms.Control.Text%2A> properties to `Add` and `List`.</span></span> <span data-ttu-id="7e61b-155">Dodaj `child` definicji klasy i `family` deklaracji w kodzie formularza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-155">Add the `child` class definition and the `family` declaration to the form code.</span></span> <span data-ttu-id="7e61b-156">Modyfikowanie `_Click` programy obsługi zdarzeń dla **Dodaj** i **listy** przyciski, jak pokazano.</span><span class="sxs-lookup"><span data-stu-id="7e61b-156">Modify the `_Click` event handlers for the **Add** and **List** buttons as shown.</span></span> <span data-ttu-id="7e61b-157">**Dodaj** przycisk służy do dodawania elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="7e61b-157">The **Add** button allows you to add children.</span></span> <span data-ttu-id="7e61b-158">**Listy** przycisku Wyświetla nazwy wszystkich elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="7e61b-158">The **List** button displays the names of all the children.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e61b-159">Usuwa wszystkie elementy w języku Visual Basic <see langword="Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-159">Deletes all elements of a Visual Basic <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-160">`Clear` Metoda kolekcji opróżnia i resetuje jego <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwości na wartość 0.</span><span class="sxs-lookup"><span data-stu-id="7e61b-160">The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Contains(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (Key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="collection.Contains Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="7e61b-161">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="7e61b-161">Required.</span></span> <span data-ttu-id="7e61b-162">A <see langword="String" /> wyrażenie określające klucz do wyszukania elementów kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-162">A <see langword="String" /> expression that specifies the key for which to search the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="7e61b-163">Zwraca wartość wskazującą, czy w języku Visual Basic <see langword="Collection" /> obiekt zawiera element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="7e61b-163">Returns a value that indicates whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span></span></summary>
        <returns><span data-ttu-id="7e61b-164"><see langword="true" /> Jeśli języka Visual Basic <see langword="Collection" /> obiekt zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-164"><see langword="true" /> if Visual Basic <see langword="Collection" /> object contains an element with a specific key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-165">`Contains` Zwraca `True` Jeśli kolekcja zawiera element z kluczem dokładnie pasujących `Key`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-165">`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`.</span></span> <span data-ttu-id="7e61b-166">W przeciwnym razie `Contains` zwraca `False`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-166">Otherwise, `Contains` returns `False`.</span></span> <span data-ttu-id="7e61b-167">Wielkość liter jest ignorowana podczas dopasowywania wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-167">Case is ignored when matching key values.</span></span>  
  
 <span data-ttu-id="7e61b-168">W języku Visual Basic `Collection` może zawierać pewne elementy, które mają klucze i inne elementy bez kluczy.</span><span class="sxs-lookup"><span data-stu-id="7e61b-168">A Visual Basic `Collection` can hold some elements that have keys and other elements without keys.</span></span> <span data-ttu-id="7e61b-169">To zależy od tego, czy wywołanie <xref:Microsoft.VisualBasic.Collection.Add%2A> metoda dostarcza argumentu opcjonalnego `Key` parametru.</span><span class="sxs-lookup"><span data-stu-id="7e61b-169">This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#4)]  
  
 <span data-ttu-id="7e61b-170">Jeśli zamierzasz wyszukiwania kolekcji dla elementów przy użyciu ich kluczy, pamiętaj, aby podać `Key` argument za każdym razem, gdy wywołujesz `Add` metody.</span><span class="sxs-lookup"><span data-stu-id="7e61b-170">If you intend to search the collection for elements using their keys, remember to supply the `Key` argument every time you call the `Add` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.VisualBasic.Collection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e61b-171">Pobiera liczbę elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-171">Gets the number of elements in a collection.</span></span></summary>
        <value><span data-ttu-id="7e61b-172">Liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-172">The number of elements in a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-173">Użyj `Count` właściwości, aby określić liczbę elementów w `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-173">Use the `Count` property to determine the number of elements in a `Collection` object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-174">Ten przykład ilustruje użycie `Count` właściwość, aby wyświetlić liczbę elementów w <xref:Microsoft.VisualBasic.Collection> obiektu w zmiennej `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-174">This example illustrates the use of the `Count` property to display the number of elements in a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#6)]  
  
 <span data-ttu-id="7e61b-175">`Collection` Obiekt jest jednobazowa, co oznacza, że wartości indeksów elementów zakresu od 1 do wartości `Count` właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-175">The `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e61b-176">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-176">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="7e61b-177">Moduł wyliczający, który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-177">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-178">[For Each... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) wywołania `GetEnumerator` uzyskać obiekt modułu wyliczającego do obsługi iteracji przez elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-178">The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements.</span></span> <span data-ttu-id="7e61b-179">Zazwyczaj używasz `For Each`... `Next` przechodzenia kolekcji lub tablicy w pętli i nie trzeba wywoływać `GetEnumerator` jawnie.</span><span class="sxs-lookup"><span data-stu-id="7e61b-179">Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.</span></span>  
  
 <span data-ttu-id="7e61b-180">Jeśli potrzebujesz ściślejszej kontroli nad iteracji niż `For Each`... `Next` zapewniają instrukcji, można użyć `GetEnumerator` metodę w celu przechodzenia dostosowane.</span><span class="sxs-lookup"><span data-stu-id="7e61b-180">If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal.</span></span> <span data-ttu-id="7e61b-181">Poniżej przedstawiono niektóre przypadki, w których konieczne może być to zrobić.</span><span class="sxs-lookup"><span data-stu-id="7e61b-181">The following are some cases in which you might need to do this.</span></span>  
  
-   <span data-ttu-id="7e61b-182">Możesz chcieć powrotu do kolekcji i uruchomić ponownie iteracji, przed zakończeniem.</span><span class="sxs-lookup"><span data-stu-id="7e61b-182">You might want to return to the beginning of the collection and start the iteration again before it is finished.</span></span>  
  
-   <span data-ttu-id="7e61b-183">Można pominąć jeden lub więcej elementów z różnych powodów.</span><span class="sxs-lookup"><span data-stu-id="7e61b-183">You might want to skip over one or more elements for a variety of reasons.</span></span>  
  
-   <span data-ttu-id="7e61b-184">Może być konieczne zmiany elementów kolekcji w trakcie przechodzenia.</span><span class="sxs-lookup"><span data-stu-id="7e61b-184">You might need to change the elements of the collection in the middle of a traversal.</span></span> <span data-ttu-id="7e61b-185">W takim przypadku musisz uzyskać nowy obiekt modułu wyliczającego, ponieważ poprzednia zostaje unieważniony.</span><span class="sxs-lookup"><span data-stu-id="7e61b-185">In this case you must obtain a new enumerator object because the previous one is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-186">Poniższy przykład pokazuje, jak używać `GetEnumerator` można pobrać wszystkie elementy `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-186">The following example shows how to use `GetEnumerator` to retrieve all the elements of a `Collection` object.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#7)]  
  
 <span data-ttu-id="7e61b-187">`GetEnumerator` Tworzy i zwraca obiekt modułu wyliczającego, która implementuje <xref:System.Collections.IEnumerator> interfejsu <xref:System.Collections> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="7e61b-187">`GetEnumerator` constructs and returns an enumerator object, which implements the <xref:System.Collections.IEnumerator> interface of the <xref:System.Collections> namespace.</span></span> <span data-ttu-id="7e61b-188">Obiekt modułu wyliczającego udostępnia <xref:System.Collections.IEnumerator.Current%2A> właściwości i <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e61b-188">The enumerator object exposes the <xref:System.Collections.IEnumerator.Current%2A> property and the <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span> <span data-ttu-id="7e61b-189">Aby uzyskać więcej informacji, zobacz [For Each... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="7e61b-189">For more information, see [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e61b-190">Pobiera określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-190">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="7e61b-191">Wyrażenie liczbowe, która określa położenie elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-191">A numeric expression that specifies the position of an element of the collection.</span></span> <span data-ttu-id="7e61b-192"><paramref name="Index" /> musi być liczbą z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-192"><paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span> <span data-ttu-id="7e61b-193">Lub (B) <see langword="Object" /> wyrażenie, które określa ciąg pozycji lub klucza elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-193">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span></span></param>
        <summary><span data-ttu-id="7e61b-194">Pobiera określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-194">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
        <value><span data-ttu-id="7e61b-195">Określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-195">A specific element of a <see langword="Collection" /> object either by position or by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-196">Jeśli `Index` typu `Object`, `Item` próbuje go traktować jako właściwość `String`, `Char`, `Char` tablicy lub liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="7e61b-196">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="7e61b-197">Jeśli `Item` nie można przekonwertować `Index` do `String` lub `Integer`, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7e61b-197">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="7e61b-198">`Item` Właściwość jest właściwością domyślną dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-198">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="7e61b-199">W związku z tym następujące wiersze kodu są równoważne.</span><span class="sxs-lookup"><span data-stu-id="7e61b-199">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-200">W poniższym przykładzie użyto `Item` właściwość, aby pobrać odwołanie do obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-200">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="7e61b-201">Tworzy `birthdays` jako `Collection` obiektu, a następnie pobiera obiekt reprezentujący datę urodzin na rachunku, przy użyciu klucza `"Bill"` jako `Index` argumentu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-201">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="7e61b-202">Należy zauważyć, że pierwsze wywołanie jawnie określa `Item` właściwości, ale druga nie.</span><span class="sxs-lookup"><span data-stu-id="7e61b-202">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="7e61b-203">Oba wywołania działa, ponieważ `Item` właściwość jest domyślną właściwością `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-203">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="7e61b-204">Wyrażenie liczbowe, która określa położenie elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-204">A numeric expression that specifies the position of an element of the collection.</span></span> <span data-ttu-id="7e61b-205"><paramref name="Index" /> musi być liczbą z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-205"><paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span> <span data-ttu-id="7e61b-206">Lub (B) <see langword="Object" /> wyrażenie, które określa ciąg pozycji lub klucza elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-206">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span></span></param>
        <summary><span data-ttu-id="7e61b-207">Pobiera określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-207">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
        <value><span data-ttu-id="7e61b-208">Określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-208">A specific element of a <see langword="Collection" /> object either by position or by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-209">Jeśli `Index` typu `Object`, `Item` próbuje go traktować jako właściwość `String`, `Char`, `Char` tablicy lub liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="7e61b-209">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="7e61b-210">Jeśli `Item` nie można przekonwertować `Index` do `String` lub `Integer`, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7e61b-210">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="7e61b-211">`Item` Właściwość jest właściwością domyślną dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-211">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="7e61b-212">W związku z tym następujące wiersze kodu są równoważne.</span><span class="sxs-lookup"><span data-stu-id="7e61b-212">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-213">W poniższym przykładzie użyto `Item` właściwość, aby pobrać odwołanie do obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-213">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="7e61b-214">Tworzy `birthdays` jako `Collection` obiektu, a następnie pobiera obiekt reprezentujący datę urodzin na rachunku, przy użyciu klucza `"Bill"` jako `Index` argumentu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-214">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="7e61b-215">Należy zauważyć, że pierwsze wywołanie jawnie określa `Item` właściwości, ale druga nie.</span><span class="sxs-lookup"><span data-stu-id="7e61b-215">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="7e61b-216">Oba wywołania działa, ponieważ `Item` właściwość jest domyślną właściwością `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-216">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string Key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ Key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="7e61b-217">Unikatowy <see langword="String" /> wyrażenie określające klucza ciąg, który pozwala, zamiast indeksu pozycyjne, uzyskiwanie dostępu do elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-217">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span></span> <span data-ttu-id="7e61b-218"><paramref name="Key" /> musi odpowiadać <paramref name="Key" /> argument określony, gdy element został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-218"><paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</span></span></param>
        <summary><span data-ttu-id="7e61b-219">Pobiera określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-219">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
        <value><span data-ttu-id="7e61b-220">Określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span><span class="sxs-lookup"><span data-stu-id="7e61b-220">A specific element of a <see langword="Collection" /> object either by position or by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-221">Jeśli `Index` typu `Object`, `Item` próbuje go traktować jako właściwość `String`, `Char`, `Char` tablicy lub liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="7e61b-221">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="7e61b-222">Jeśli `Item` nie można przekonwertować `Index` do `String` lub `Integer`, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7e61b-222">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="7e61b-223">`Item` Właściwość jest właściwością domyślną dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-223">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="7e61b-224">W związku z tym następujące wiersze kodu są równoważne.</span><span class="sxs-lookup"><span data-stu-id="7e61b-224">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-225">W poniższym przykładzie użyto `Item` właściwość, aby pobrać odwołanie do obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-225">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="7e61b-226">Tworzy `birthdays` jako `Collection` obiektu, a następnie pobiera obiekt reprezentujący datę urodzin na rachunku, przy użyciu klucza `"Bill"` jako `Index` argumentu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-226">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="7e61b-227">Należy zauważyć, że pierwsze wywołanie jawnie określa `Item` właściwości, ale druga nie.</span><span class="sxs-lookup"><span data-stu-id="7e61b-227">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="7e61b-228">Oba wywołania działa, ponieważ `Item` właściwość jest domyślną właściwością `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-228">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e61b-229">Usuwa element z <see langword="Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-229">Removes an element from a <see langword="Collection" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int Index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="collection.Remove Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="7e61b-230">Wyrażenie liczbowe, która określa położenie elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-230">A numeric expression that specifies the position of an element of the collection.</span></span> <span data-ttu-id="7e61b-231"><paramref name="Index" /> musi być liczbą z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e61b-231"><paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span></param>
        <summary><span data-ttu-id="7e61b-232">Usuwa element z <see langword="Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-232">Removes an element from a <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-233">Gdy `Remove` usuwa element z kolekcji, jego zmniejsza kolekcji <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="7e61b-233">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="7e61b-234">On również zmniejsza `Index` wartość każdego elementu, która wcześniej usuniętego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-234">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="7e61b-235">Jeśli element został dodany do kolekcji bez `Key`, należy użyć jego `Index` go usunąć.</span><span class="sxs-lookup"><span data-stu-id="7e61b-235">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-236">Ten przykład ilustruje użycie `Remove` metodę, aby usunąć obiekty <xref:Microsoft.VisualBasic.Collection> obiektu w zmiennej `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-236">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="7e61b-237">Następujące cztery wywołania `Add` metody `Count` właściwość zawiera 4, element `"Bill"` ma indeks o wartości 1 i element `"Pete"` ma wartość indeksu 4.</span><span class="sxs-lookup"><span data-stu-id="7e61b-237">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="7e61b-238">Po pierwsze wywołanie `Remove`, `Count` to 3, element `"Bill"` zostanie usunięty i elementu `"Pete"` ma wartość indeksu 3.</span><span class="sxs-lookup"><span data-stu-id="7e61b-238">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="7e61b-239">Po drugie wywołanie `Remove`, `Count` 2, element `"Mike"` zostanie usunięty, a element `"Pete"` ma wartość indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="7e61b-239">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="collection.Remove Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="7e61b-240">Unikatowy <see langword="String" /> wyrażenie określające klucza ciąg, który pozwala, zamiast indeksu pozycyjne, uzyskiwanie dostępu do elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-240">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span></span> <span data-ttu-id="7e61b-241"><paramref name="Key" /> musi odpowiadać <paramref name="Key" /> argument określony, gdy element został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-241"><paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</span></span></param>
        <summary><span data-ttu-id="7e61b-242">Usuwa element z <see langword="Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-242">Removes an element from a <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-243">Gdy `Remove` usuwa element z kolekcji, jego zmniejsza kolekcji <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="7e61b-243">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="7e61b-244">On również zmniejsza `Index` wartość każdego elementu, która wcześniej usuniętego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-244">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="7e61b-245">Jeśli element został dodany do kolekcji bez `Key`, należy użyć jego `Index` go usunąć.</span><span class="sxs-lookup"><span data-stu-id="7e61b-245">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e61b-246">Ten przykład ilustruje użycie `Remove` metodę, aby usunąć obiekty <xref:Microsoft.VisualBasic.Collection> obiektu w zmiennej `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-246">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="7e61b-247">Następujące cztery wywołania `Add` metody `Count` właściwość zawiera 4, element `"Bill"` ma indeks o wartości 1 i element `"Pete"` ma wartość indeksu 4.</span><span class="sxs-lookup"><span data-stu-id="7e61b-247">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="7e61b-248">Po pierwsze wywołanie `Remove`, `Count` to 3, element `"Bill"` zostanie usunięty i elementu `"Pete"` ma wartość indeksu 3.</span><span class="sxs-lookup"><span data-stu-id="7e61b-248">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="7e61b-249">Po drugie wywołanie `Remove`, `Count` 2, element `"Mike"` zostanie usunięty, a element `"Pete"` ma wartość indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="7e61b-249">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo" ExplicitInterfaceMemberName="ICollectionCopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void ICollectionCopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void ICollectionCopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="7e61b-250">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-250">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span> <span data-ttu-id="7e61b-251"><see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span><span class="sxs-lookup"><span data-stu-id="7e61b-251">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="7e61b-252">Liczony od zera indeks w <paramref name="array" /> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="7e61b-252">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="7e61b-253">Kopiuje elementy ze <see cref="T:Microsoft.VisualBasic.Collection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-253">Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-254">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający iterację <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-254">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 <span data-ttu-id="7e61b-255">Ta metoda jest O (`n`) operacji, gdzie `n` są uzyskiwane z <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span><span class="sxs-lookup"><span data-stu-id="7e61b-255">This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e61b-256"><paramref name="array" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-256"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7e61b-257"><paramref name="index" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="7e61b-257"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e61b-258"><paramref name="array" /> ma charakter wielowymiarowy.</span><span class="sxs-lookup"><span data-stu-id="7e61b-258"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="7e61b-259">—lub—</span><span class="sxs-lookup"><span data-stu-id="7e61b-259">-or-</span></span> 
<span data-ttu-id="7e61b-260">Liczba elementów w źródle <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt jest większy niż dostępna ilość miejsca od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-260">The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7e61b-261">Typ źródła <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu nie można automatycznie rzutować na typ docelowej tablicy <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-261">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count" ExplicitInterfaceMemberName="ICollectionCount">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ICollectionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionCount As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e61b-262">Pobiera liczbę elementów w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-262">Gets the number of items in this collection.</span></span></summary>
        <value><span data-ttu-id="7e61b-263">Liczba elementów w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-263">The number of items in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized" ExplicitInterfaceMemberName="ICollectionIsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ICollectionIsSynchronized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionIsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionIsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e61b-264">Pobiera wartość wskazującą, czy dostęp do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu jest synchronizowany (bezpieczna wątkowo).</span><span class="sxs-lookup"><span data-stu-id="7e61b-264">Gets a value that indicates whether access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="7e61b-265"><see langword="true" /> Jeśli dostęp do <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt jest zsynchronizowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-265"><see langword="true" /> if access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot" ExplicitInterfaceMemberName="ICollectionSyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ICollectionSyncRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionSyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionSyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e61b-266">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-266">Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <value><span data-ttu-id="7e61b-267">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-267">An object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="ICollectionGetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance class System.Collections.IEnumerator ICollectionGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function ICollectionGetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ ICollectionGetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e61b-268">Pobiera moduł wyliczający, który iteruje po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-268">Gets an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="7e61b-269"><see cref="T:System.Collections.IEnumerator" /> Obiekt, który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-269">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-270">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="7e61b-270">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="7e61b-271">`foreach` Instrukcja języka C# (`for each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="7e61b-271">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="7e61b-272">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="7e61b-272">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="7e61b-273">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="7e61b-273">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="7e61b-274">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-274">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="7e61b-275"><xref:System.Collections.IEnumerator.Reset%2A> Metoda przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-275">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="7e61b-276">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="7e61b-276">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="7e61b-277">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> metody wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e61b-277">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="7e61b-278"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="7e61b-278"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="7e61b-279"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-279"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="7e61b-280">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-280">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="7e61b-281">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="7e61b-281">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="7e61b-282">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="7e61b-282">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="7e61b-283">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e61b-283">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="7e61b-284">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="7e61b-284">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="7e61b-285">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="7e61b-285">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="7e61b-286">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="7e61b-286">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="7e61b-287">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="7e61b-287">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="7e61b-288">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="7e61b-288">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add" ExplicitInterfaceMemberName="IListAdd">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear" ExplicitInterfaceMemberName="IListClear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListClear" />
      <MemberSignature Language="VB.NET" Value="Sub IListClear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListClear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e61b-289">Usuwa wszystkie elementy z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-289">Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-290">Ta metoda usuwa wszystkie elementy z <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-290">This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e61b-291"><see cref="T:System.Collections.IList" /> Jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-291">The <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.Hashtable.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains" ExplicitInterfaceMemberName="IListContains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance bool IListContains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListContains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool IListContains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7e61b-292"><see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-292">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="7e61b-293">Określa, czy <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt zawiera określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="7e61b-293">Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="7e61b-294">Zwraca <see langword="True" /> Jeśli <see cref="T:System.Object" /> znajduje się w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-294">Returns <see langword="True" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-295">Ta metoda określa, czy <xref:Microsoft.VisualBasic.Collection> obiekt zawiera określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="7e61b-295">This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf" ExplicitInterfaceMemberName="IListIndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListIndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListIndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7e61b-296"><see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-296">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="7e61b-297">Określa indeks konkretny element w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-297">Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <returns><span data-ttu-id="7e61b-298">Indeks <paramref name="value" /> Jeśli w kolekcji; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="7e61b-298">The index of <paramref name="value" /> if found in the collection; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-299">Ta metoda określa indeks konkretny element w <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-299">This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert" ExplicitInterfaceMemberName="IListInsert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListInsert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListInsert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="7e61b-300">Liczony od zera indeks, w którym <paramref name="value" /> powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="7e61b-300">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="7e61b-301"><see cref="T:System.Object" /> Do wstawienia do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-301">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="7e61b-302">Wstawia element do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="7e61b-302">Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-303">Jeśli `index` jest równa liczbie elementów w <xref:Microsoft.VisualBasic.Collection> obiektu następnie `value` jest dołączany na końcu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-303">If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="7e61b-304">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="7e61b-304">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="7e61b-305">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="7e61b-305">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="7e61b-306">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="7e61b-306">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7e61b-307"><paramref name="index" /> nie jest prawidłowym indeksem w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-307"><paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e61b-308"><see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-308">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span>  
  
<span data-ttu-id="7e61b-309">—lub—</span><span class="sxs-lookup"><span data-stu-id="7e61b-309">-or-</span></span> 
<span data-ttu-id="7e61b-310"><see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="7e61b-310">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="7e61b-311"><paramref name="value" /> to odwołanie o wartości null w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-311"><paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize" ExplicitInterfaceMemberName="IListIsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsFixedSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e61b-312">Pobiera wartość wskazującą, czy <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="7e61b-312">Gets a value that indicates whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="7e61b-313"><see langword="true" /> Jeśli <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt ma stały rozmiar; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-313"><see langword="true" /> if the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly" ExplicitInterfaceMemberName="IListIsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e61b-314">Pobiera wartość wskazującą, czy <see cref="T:Microsoft.VisualBasic.Collection" /> jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="7e61b-314">Gets a value that indicates whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object is.</span></span></summary>
        <value><span data-ttu-id="7e61b-315"><see langword="true" /> Jeśli <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e61b-315"><see langword="true" /> if the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item" ExplicitInterfaceMemberName="IListItem">
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.System#Collections#IList#Item(System.Int32)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object IListItem(int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.Item" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="7e61b-316">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="7e61b-316">The zero-based index of the element to get or set.</span></span></param>
        <param name="index">To be added.</param>
        <summary><span data-ttu-id="7e61b-317">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="7e61b-317">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="7e61b-318">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="7e61b-318">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7e61b-319"><paramref name="index" /> nie jest prawidłowym indeksem w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-319"><paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e61b-320">Właściwość została ustawiona i <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-320">The property is set and the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove" ExplicitInterfaceMemberName="IListRemove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7e61b-321"><see cref="T:System.Object" /> Do usunięcia z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-321">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="7e61b-322">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-322">Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-323">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="7e61b-323">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="7e61b-324">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="7e61b-324">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="7e61b-325">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="7e61b-325">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="7e61b-326">Jeśli `value` nie zostanie znaleziony w <xref:Microsoft.VisualBasic.Collection> obiektu <xref:Microsoft.VisualBasic.Collection> obiektu pozostaje bez zmian i jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7e61b-326">If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e61b-327"><see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-327">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span>  
  
<span data-ttu-id="7e61b-328">—lub—</span><span class="sxs-lookup"><span data-stu-id="7e61b-328">-or-</span></span> 
<span data-ttu-id="7e61b-329"><see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="7e61b-329">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt" ExplicitInterfaceMemberName="IListRemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="7e61b-330">Liczony od zera indeks elementu, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="7e61b-330">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="7e61b-331">Usuwa <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="7e61b-331">Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-332">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="7e61b-332">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="7e61b-333">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="7e61b-333">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="7e61b-334">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="7e61b-334">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7e61b-335"><paramref name="index" /> nie jest prawidłowym indeksem w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-335"><paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e61b-336"><see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-336">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span>  
  
<span data-ttu-id="7e61b-337">—lub—</span><span class="sxs-lookup"><span data-stu-id="7e61b-337">-or-</span></span> 
<span data-ttu-id="7e61b-338"><see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="7e61b-338">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization" ExplicitInterfaceMemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="7e61b-339">Obiekt, który zainicjował wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="7e61b-339">The object that initiated the callback.</span></span></param>
        <summary><span data-ttu-id="7e61b-340">Jest uruchamiany po całej <see cref="T:Microsoft.VisualBasic.Collection" /> wykonać deserializacji wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-340">Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-341">Ta metoda jest wywoływana po całej <xref:Microsoft.VisualBasic.Collection> wykonać deserializacji wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-341">This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
        <altmember cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData" ExplicitInterfaceMemberName="GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7e61b-342">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekt zawierający informacje wymagane do wykonywania serializacji <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-342">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="7e61b-343">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> obiekt zawierający źródłowe i docelowe serializowanym strumieniu skojarzone z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-343">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="7e61b-344">Zwraca dane potrzebne do serializacji <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-344">Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e61b-345">Ta metoda zwraca dane potrzebne do serializacji <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e61b-345">This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>