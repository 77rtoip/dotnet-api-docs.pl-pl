<Type Name="Collection" FullName="Microsoft.VisualBasic.Collection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="167891d3fb96efca609d32aa6260a2a2c3fea1b6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39791491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Collection : System.Collections.IList, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Collection extends System.Object implements class System.Collections.ICollection, class System.Collections.IList, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Collection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Collection&#xA;Implements IDeserializationCallback, IList, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Collection sealed : System::Collections::IList, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Collection = class&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Collection/CollectionDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ff3d1-101">W języku Visual Basic <see langword="Collection" /> jest uporządkowany zestaw elementów, które mogą być określane jako jednostka.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff3d1-101">A Visual Basic <see langword="Collection" /> is an ordered set of items that can be referred to as a unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ff3d1-102">Jeśli to możliwe, należy używać ogólnych kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw lub <xref:System.Collections.Concurrent> przestrzeni nazw, a nie w języku Visual Basic `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-102">Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`.</span></span> <span data-ttu-id="ff3d1-103">Aby uzyskać więcej informacji, zobacz [kolekcje](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span><span class="sxs-lookup"><span data-stu-id="ff3d1-103">For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span></span>  
  
 <span data-ttu-id="ff3d1-104">Visual Basic `Collection` obiekt zapewnia wygodny sposób odwoływania się do powiązanej grupy elementów jako pojedynczy obiekt.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-104">The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object.</span></span> <span data-ttu-id="ff3d1-105">Elementy, lub *elementy*w kolekcji tylko potrzebne związane z faktem, że istnieją one w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-105">The items, or *elements*, in a collection need only be related by the fact that they exist in the collection.</span></span> <span data-ttu-id="ff3d1-106">Elementy kolekcji nie należy udostępniać tego samego typu danych.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-106">Elements of a collection do not have to share the same data type.</span></span>  
  
 <span data-ttu-id="ff3d1-107">Można utworzyć kolekcję na taki sam sposób utworzyć inne obiekty, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-107">You can create a collection the same way you create other objects, as the following example illustrates.</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="ff3d1-108">Po utworzeniu kolekcji, możesz wykonać dowolną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="ff3d1-108">Once you have created a collection, you can do any of the following:</span></span>  
  
-   <span data-ttu-id="ff3d1-109">Dodaj element z <xref:Microsoft.VisualBasic.Collection.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-109">Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="ff3d1-110">Usuń element z <xref:Microsoft.VisualBasic.Collection.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-110">Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.</span></span>  
  
-   <span data-ttu-id="ff3d1-111">Usuń wszystkie elementy z <xref:Microsoft.VisualBasic.Collection.Clear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-111">Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="ff3d1-112">Dowiedz się, jak wiele elementów, które zawiera kolekcję <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-112">Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="ff3d1-113">Sprawdź, czy określony element jest obecny przy użyciu <xref:Microsoft.VisualBasic.Collection.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-113">Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.</span></span>  
  
-   <span data-ttu-id="ff3d1-114">Zwraca określony element z kolekcji przy użyciu <xref:Microsoft.VisualBasic.Collection.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-114">Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.</span></span>  
  
-   <span data-ttu-id="ff3d1-115">Iterację całą kolekcję z [For Each... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="ff3d1-115">Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ff3d1-116">Mimo że Visual Basic `Collection` obiekt ma funkcjonalność jest taka sama jak `Collection` obiektu w Visual Basic 6.0, dwa nie może współpracować w środowisku COM.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-116">Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</span></span>  
  
    > [!CAUTION]
    >  <span data-ttu-id="ff3d1-117">Iteracji w Visual Basic `Collection` nie jest procedurą odporną.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-117">Iterating through a Visual Basic `Collection` is not a thread-safe procedure.</span></span> <span data-ttu-id="ff3d1-118">Nawet jeśli kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować kolekcji, powodując modułu wyliczającego do zgłoszenia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-118">Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</span></span> <span data-ttu-id="ff3d1-119">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, zablokować kolekcję albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątki.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-119">To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="ff3d1-120">Aby uzyskać więcej informacji na temat blokowania elementu programistycznego, zobacz [SyncLock — instrukcja](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span><span class="sxs-lookup"><span data-stu-id="ff3d1-120">For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-121">Poniższy przykład tworzy `Collection` obiektu `names` i okno dialogowe, za pomocą którego użytkownik może dodawać obiekty (nazwy) w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-121">The following example creates the `Collection` object `names` and a dialog box with which a user can add objects (names) to the collection.</span></span> <span data-ttu-id="ff3d1-122">Następnie wyświetla nazwy w kolekcji, a na koniec opróżnia kolekcji bez usuwania `Collection` sam obiekt.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-122">It then displays the names in the collection, and finally empties the collection without disposing of the `Collection` object itself.</span></span>  
  
 <span data-ttu-id="ff3d1-123">Aby zobaczyć, jak to działa, wybierz **Dodaj klasę** polecenia **projektu** menu i Zadeklaruj zmienną publicznego o nazwie `instanceName` na poziomie modułu `nameClass` (typ `Public instanceName`) do przechowywania nazwy poszczególnych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-123">To see how this works, choose the **Add Class** command from the **Project** menu and declare a public variable called `instanceName` at the module level of `nameClass` (type `Public instanceName`) to hold the names of each instance.</span></span> <span data-ttu-id="ff3d1-124">Pozostaw nazwę domyślną `nameClass`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-124">Leave the default name as `nameClass`.</span></span> <span data-ttu-id="ff3d1-125">Skopiuj i wklej następujący kod do **ogólne** części innego modułu, a następnie uruchom go z instrukcją `classNamer` w innej procedury.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-125">Copy and paste the following code into the **General** section of another module, and then start it with the statement `classNamer` in another procedure.</span></span> <span data-ttu-id="ff3d1-126">(Ten przykład działa tylko w przypadku aplikacji hosta obsługujących klasy).</span><span class="sxs-lookup"><span data-stu-id="ff3d1-126">(This example works only with host applications that support classes.)</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-127">Tworzy i zwraca nowy języka Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-127">Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-128">Kolekcji Visual Basic, zwrócony przez ten konstruktor jest pusta i nie ma żadnych pojemność przydzielone.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-128">The Visual Basic collection returned by this constructor is empty and does not have any initial capacity allocated.</span></span>  
  
 <span data-ttu-id="ff3d1-129">Kolekcje w języku Visual Basic nie są zgodne z [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] dostępne w kolekcji <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, i <xref:System.Collections.Specialized?displayProperty=nameWithType> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-129">Visual Basic collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, and <xref:System.Collections.Specialized?displayProperty=nameWithType> namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-130">Poniższy przykład tworzy nową kolekcję języka Visual Basic, a następnie przypisuje go do zmiennej `coll`:</span><span class="sxs-lookup"><span data-stu-id="ff3d1-130">The following example creates a new Visual Basic collection and assigns it to the variable `coll`:</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="ff3d1-131">To `Collection` obiekt jest jednobazowa, co oznacza, że wartości indeksów elementów zakresu od 1 do wartości `Count` właściwości.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-131">This `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span> <span data-ttu-id="ff3d1-132">Visual Basic kolekcje przechowują elementów typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-132">Visual Basic collections hold elements of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object Item, string Key = null, object Before = null, object After = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Add(object Item, string Key, object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Item As Object, Optional Key As String = null, Optional Before As Object = null, Optional After As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Add : obj * string * obj * obj -&gt; unit" Usage="collection.Add (Item, Key, Before, After)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Item">
          <span data-ttu-id="ff3d1-133">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-133">Required.</span>
          </span>
          <span data-ttu-id="ff3d1-134">Obiekt dowolnego typu, który określa element do dodania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-134">An object of any type that specifies the element to add to the collection.</span>
          </span>
        </param>
        <param name="Key">
          <span data-ttu-id="ff3d1-135">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-135">Optional.</span>
          </span>
          <span data-ttu-id="ff3d1-136">Unikatowy <see langword="String" /> wyrażenie, które określa klucza parametry, których można używać zamiast pozycyjne indeksu umożliwiają dostęp do tego nowego elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-136">A unique <see langword="String" /> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</span>
          </span>
        </param>
        <param name="Before">
          <span data-ttu-id="ff3d1-137">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-137">Optional.</span>
          </span>
          <span data-ttu-id="ff3d1-138">Wyrażenie, który określa względne położenie w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-138">An expression that specifies a relative position in the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-139">Element, który ma zostać dodany zostanie umieszczony w kolekcji przed elementem identyfikowane przez <c>przed</c> argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-139">The element to be added is placed in the collection before the element identified by the <c>Before</c> argument.</span>
          </span>
          <span data-ttu-id="ff3d1-140">Jeśli <c>przed</c> jest wyrażeniem numeryczne, musi być liczba z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-140">If <c>Before</c> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="ff3d1-141">Jeśli <c>przed</c> jest <see langword="String" /> wyrażenia, jego musi odpowiadać ciąg klucza określone, gdy element przywoływanego została dodana do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-141">If <c>Before</c> is a <see langword="String" /> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-142">Nie można określić zarówno <c>przed</c> i <c>po</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-142">You cannot specify both <c>Before</c> and <c>After</c>.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="ff3d1-143">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-143">Optional.</span>
          </span>
          <span data-ttu-id="ff3d1-144">Wyrażenie, który określa względne położenie w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-144">An expression that specifies a relative position in the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-145">Element, który ma zostać dodany zostanie umieszczony w kolekcji po elemencie identyfikowane przez <c>po</c> argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-145">The element to be added is placed in the collection after the element identified by the <c>After</c> argument.</span>
          </span>
          <span data-ttu-id="ff3d1-146">Jeśli <c>po</c> jest wyrażeniem numeryczne, musi być liczba z przedziału od 1 do wartości kolekcji <see langword="Count" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-146">If <c>After</c> is a numeric expression, it must be a number from 1 through the value of the collection's <see langword="Count" /> property.</span>
          </span>
          <span data-ttu-id="ff3d1-147">Jeśli <c>po</c> jest <see langword="String" /> wyrażenia, jego musi odpowiadać ciąg klucza określone, gdy element przywoływany została dodana do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-147">If <c>After</c> is a <see langword="String" /> expression, it must correspond to the key string specified when the element referred to was added to the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-148">Nie można określić zarówno <c>przed</c> i <c>po</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-148">You cannot specify both <c>Before</c> and <c>After</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-149">Dodaje element do <see langword="Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-149">Adds an element to a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-150">`Before` Lub `After` argumentu musi odwoływać się do istniejącego elementu kolekcji; w przeciwnym razie wystąpi błąd.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-150">The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.</span></span>  
  
 <span data-ttu-id="ff3d1-151">Jeśli oba `Before` i `After` argumenty są pomijane, nowy obiekt zostanie dodany na końcu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-151">If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="ff3d1-152">Błąd występuje także w przypadku określonego `Key` wartość jest zgodny z kluczem dla istniejącego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-152">An error also occurs if a specified `Key` value matches the key for an existing element of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-153">W poniższym przykładzie użyto `Add` metody w celu dodania `child` obiektów — wystąpienia klasy o nazwie `child` zawierający `Public` właściwość `name` — do kolekcji o nazwie `family`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-153">The following example uses the `Add` method to add `child` objects — instances of a class called `child` containing a `Public` property `name` — to a collection called `family`.</span></span> <span data-ttu-id="ff3d1-154">Aby zobaczyć, jak to działa, Utwórz <xref:System.Windows.Forms.Form> przy użyciu dwóch <xref:System.Windows.Forms.Button> kontrolek i ustaw ich <xref:System.Windows.Forms.Control.Text%2A> właściwości `Add` i `List`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-154">To see how this works, create a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.Button> controls and set their <xref:System.Windows.Forms.Control.Text%2A> properties to `Add` and `List`.</span></span> <span data-ttu-id="ff3d1-155">Dodaj `child` definicji klasy i `family` deklaracji w kodzie formularza.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-155">Add the `child` class definition and the `family` declaration to the form code.</span></span> <span data-ttu-id="ff3d1-156">Modyfikowanie `_Click` programy obsługi zdarzeń dla **Dodaj** i **listy** przyciski, jak pokazano.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-156">Modify the `_Click` event handlers for the **Add** and **List** buttons as shown.</span></span> <span data-ttu-id="ff3d1-157">**Dodaj** przycisk służy do dodawania elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-157">The **Add** button allows you to add children.</span></span> <span data-ttu-id="ff3d1-158">**Listy** przycisku Wyświetla nazwy wszystkich elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-158">The **List** button displays the names of all the children.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-159">Usuwa wszystkie elementy w języku Visual Basic <see langword="Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-159">Deletes all elements of a Visual Basic <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-160">`Clear` Metoda kolekcji opróżnia i resetuje jego <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwości na wartość 0.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-160">The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Contains(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (Key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="collection.Contains Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="ff3d1-161">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-161">Required.</span>
          </span>
          <span data-ttu-id="ff3d1-162">A <see langword="String" /> wyrażenie określające klucz do wyszukania elementów kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-162">A <see langword="String" /> expression that specifies the key for which to search the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-163">Zwraca <see langword="Boolean" /> wartość wskazującą, czy w języku Visual Basic <see langword="Collection" /> obiekt zawiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-163">Returns a <see langword="Boolean" /> value indicating whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff3d1-164">Zwraca <see langword="Boolean" /> wartość wskazującą, czy w języku Visual Basic <see langword="Collection" /> obiekt zawiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-164">Returns a <see langword="Boolean" /> value indicating whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-165">`Contains` Zwraca `True` Jeśli kolekcja zawiera element z kluczem dokładnie pasujących `Key`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-165">`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`.</span></span> <span data-ttu-id="ff3d1-166">W przeciwnym razie `Contains` zwraca `False`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-166">Otherwise, `Contains` returns `False`.</span></span> <span data-ttu-id="ff3d1-167">Wielkość liter jest ignorowana podczas dopasowywania wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-167">Case is ignored when matching key values.</span></span>  
  
 <span data-ttu-id="ff3d1-168">W języku Visual Basic `Collection` może zawierać pewne elementy, które mają klucze i inne elementy bez kluczy.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-168">A Visual Basic `Collection` can hold some elements that have keys and other elements without keys.</span></span> <span data-ttu-id="ff3d1-169">To zależy od tego, czy wywołanie <xref:Microsoft.VisualBasic.Collection.Add%2A> metoda dostarcza argumentu opcjonalnego `Key` parametru.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-169">This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#4)]  
  
 <span data-ttu-id="ff3d1-170">Jeśli zamierzasz wyszukiwania kolekcji dla elementów przy użyciu ich kluczy, pamiętaj, aby podać `Key` argument za każdym razem, gdy wywołujesz `Add` metody.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-170">If you intend to search the collection for elements using their keys, remember to supply the `Key` argument every time you call the `Add` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.VisualBasic.Collection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-171">Zwraca <see langword="Integer" /> zawierającą liczbę elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-171">Returns an <see langword="Integer" /> containing the number of elements in a collection.</span>
          </span>
          <span data-ttu-id="ff3d1-172">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-172">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff3d1-173">Zwraca <see langword="Integer" /> zawierającą liczbę elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-173">Returns an <see langword="Integer" /> containing the number of elements in a collection.</span>
          </span>
          <span data-ttu-id="ff3d1-174">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-174">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-175">Użyj `Count` właściwości, aby określić liczbę elementów w `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-175">Use the `Count` property to determine the number of elements in a `Collection` object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-176">Ten przykład ilustruje użycie `Count` właściwość, aby wyświetlić liczbę elementów w <xref:Microsoft.VisualBasic.Collection> obiektu w zmiennej `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-176">This example illustrates the use of the `Count` property to display the number of elements in a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#6)]  
  
 <span data-ttu-id="ff3d1-177">`Collection` Obiekt jest jednobazowa, co oznacza, że wartości indeksów elementów zakresu od 1 do wartości `Count` właściwości.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-177">The `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-178">Zwraca odwołanie do obiektu moduł wyliczający, który jest używany do wykonywania iteracji <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-178">Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff3d1-179">Zwraca odwołanie do obiektu moduł wyliczający, który jest używany do wykonywania iteracji <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-179">Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-180">[For Each... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) wywołania `GetEnumerator` uzyskać obiekt modułu wyliczającego do obsługi iteracji przez elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-180">The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements.</span></span> <span data-ttu-id="ff3d1-181">Zazwyczaj używasz `For Each`... `Next` przechodzenia kolekcji lub tablicy w pętli i nie trzeba wywoływać `GetEnumerator` jawnie.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-181">Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.</span></span>  
  
 <span data-ttu-id="ff3d1-182">Jeśli potrzebujesz ściślejszej kontroli nad iteracji niż `For Each`... `Next` zapewniają instrukcji, można użyć `GetEnumerator` metodę w celu przechodzenia dostosowane.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-182">If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal.</span></span> <span data-ttu-id="ff3d1-183">Poniżej przedstawiono niektóre przypadki, w których konieczne może być to zrobić.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-183">The following are some cases in which you might need to do this.</span></span>  
  
-   <span data-ttu-id="ff3d1-184">Możesz chcieć powrotu do kolekcji i uruchomić ponownie iteracji, przed zakończeniem.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-184">You might want to return to the beginning of the collection and start the iteration again before it is finished.</span></span>  
  
-   <span data-ttu-id="ff3d1-185">Można pominąć jeden lub więcej elementów z różnych powodów.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-185">You might want to skip over one or more elements for a variety of reasons.</span></span>  
  
-   <span data-ttu-id="ff3d1-186">Może być konieczne zmiany elementów kolekcji w trakcie przechodzenia.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-186">You might need to change the elements of the collection in the middle of a traversal.</span></span> <span data-ttu-id="ff3d1-187">W takim przypadku musisz uzyskać nowy obiekt modułu wyliczającego, ponieważ poprzednia zostaje unieważniony.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-187">In this case you must obtain a new enumerator object because the previous one is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-188">Poniższy przykład pokazuje, jak używać `GetEnumerator` można pobrać wszystkie elementy `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-188">The following example shows how to use `GetEnumerator` to retrieve all the elements of a `Collection` object.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#7)]  
  
 <span data-ttu-id="ff3d1-189">`GetEnumerator` Tworzy i zwraca obiekt modułu wyliczającego, która implementuje <xref:System.Collections.IEnumerator> interfejsu <xref:System.Collections> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-189">`GetEnumerator` constructs and returns an enumerator object, which implements the <xref:System.Collections.IEnumerator> interface of the <xref:System.Collections> namespace.</span></span> <span data-ttu-id="ff3d1-190">Obiekt modułu wyliczającego udostępnia <xref:System.Collections.IEnumerator.Current%2A> właściwości i <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-190">The enumerator object exposes the <xref:System.Collections.IEnumerator.Current%2A> property and the <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span> <span data-ttu-id="ff3d1-191">Aby uzyskać więcej informacji, zobacz [For Each... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="ff3d1-191">For more information, see [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-192">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-192">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-193">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-193">Read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ff3d1-194">(A wyrażenia liczbowego, który określa położenie elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-194">(A) A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-195">
            <c>Indeks</c> musi być liczbą z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-195">
              <c>Index</c> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="ff3d1-196">Lub (B) <see langword="Object" /> wyrażenie, które określa ciąg pozycji lub klucza elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-196">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-197">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-197">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-198">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-198">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff3d1-199">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-199">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-200">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-200">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-201">Jeśli `Index` typu `Object`, `Item` próbuje go traktować jako właściwość `String`, `Char`, `Char` tablicy lub liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-201">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="ff3d1-202">Jeśli `Item` nie można przekonwertować `Index` do `String` lub `Integer`, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-202">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="ff3d1-203">`Item` Właściwość jest właściwością domyślną dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-203">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="ff3d1-204">W związku z tym następujące wiersze kodu są równoważne.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-204">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-205">W poniższym przykładzie użyto `Item` właściwość, aby pobrać odwołanie do obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-205">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="ff3d1-206">Tworzy `birthdays` jako `Collection` obiektu, a następnie pobiera obiekt reprezentujący datę urodzin na rachunku, przy użyciu klucza `"Bill"` jako `Index` argumentu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-206">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ff3d1-207">Należy zauważyć, że pierwsze wywołanie jawnie określa `Item` właściwości, ale druga nie.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-207">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="ff3d1-208">Oba wywołania działa, ponieważ `Item` właściwość jest domyślną właściwością `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-208">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ff3d1-209">(A wyrażenia liczbowego, który określa położenie elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-209">(A) A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-210">
            <c>Indeks</c> musi być liczbą z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-210">
              <c>Index</c> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="ff3d1-211">Lub (B) <see langword="Object" /> wyrażenie, które określa ciąg pozycji lub klucza elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-211">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-212">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-212">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-213">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-213">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff3d1-214">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-214">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-215">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-215">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-216">Jeśli `Index` typu `Object`, `Item` próbuje go traktować jako właściwość `String`, `Char`, `Char` tablicy lub liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-216">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="ff3d1-217">Jeśli `Item` nie można przekonwertować `Index` do `String` lub `Integer`, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-217">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="ff3d1-218">`Item` Właściwość jest właściwością domyślną dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-218">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="ff3d1-219">W związku z tym następujące wiersze kodu są równoważne.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-219">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-220">W poniższym przykładzie użyto `Item` właściwość, aby pobrać odwołanie do obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-220">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="ff3d1-221">Tworzy `birthdays` jako `Collection` obiektu, a następnie pobiera obiekt reprezentujący datę urodzin na rachunku, przy użyciu klucza `"Bill"` jako `Index` argumentu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-221">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ff3d1-222">Należy zauważyć, że pierwsze wywołanie jawnie określa `Item` właściwości, ale druga nie.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-222">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="ff3d1-223">Oba wywołania działa, ponieważ `Item` właściwość jest domyślną właściwością `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-223">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string Key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ Key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="ff3d1-224">Unikatowy <see langword="String" /> wyrażenie określające klucza ciąg, który pozwala, zamiast indeksu pozycyjne, uzyskiwanie dostępu do elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-224">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-225">
            <c>Klucz</c> musi odpowiadać <c>klucz</c> argument określony, gdy element został dodany do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-225">
              <c>Key</c> must correspond to the <c>Key</c> argument specified when the element was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-226">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-226">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-227">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-227">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff3d1-228">Zwraca określony element obiektu <see langword="Collection" /> obiektów według pozycji lub klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-228">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ff3d1-229">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-229">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-230">Jeśli `Index` typu `Object`, `Item` próbuje go traktować jako właściwość `String`, `Char`, `Char` tablicy lub liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-230">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="ff3d1-231">Jeśli `Item` nie można przekonwertować `Index` do `String` lub `Integer`, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-231">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="ff3d1-232">`Item` Właściwość jest właściwością domyślną dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-232">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="ff3d1-233">W związku z tym następujące wiersze kodu są równoważne.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-233">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-234">W poniższym przykładzie użyto `Item` właściwość, aby pobrać odwołanie do obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-234">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="ff3d1-235">Tworzy `birthdays` jako `Collection` obiektu, a następnie pobiera obiekt reprezentujący datę urodzin na rachunku, przy użyciu klucza `"Bill"` jako `Index` argumentu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-235">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ff3d1-236">Należy zauważyć, że pierwsze wywołanie jawnie określa `Item` właściwości, ale druga nie.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-236">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="ff3d1-237">Oba wywołania działa, ponieważ `Item` właściwość jest domyślną właściwością `Collection` obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-237">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-238">Usuwa element z <see langword="Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-238">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int Index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="collection.Remove Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ff3d1-239">Wyrażenie liczbowe, która określa położenie elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-239">A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-240">
            <c>Indeks</c> musi być liczbą z przedziału od 1 do wartości kolekcji <see cref="P:Microsoft.VisualBasic.Collection.Count" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-240">
              <c>Index</c> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-241">Usuwa element z <see langword="Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-241">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-242">Gdy `Remove` usuwa element z kolekcji, jego zmniejsza kolekcji <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-242">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="ff3d1-243">On również zmniejsza `Index` wartość każdego elementu, która wcześniej usuniętego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-243">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="ff3d1-244">Jeśli element został dodany do kolekcji bez `Key`, należy użyć jego `Index` go usunąć.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-244">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-245">Ten przykład ilustruje użycie `Remove` metodę, aby usunąć obiekty <xref:Microsoft.VisualBasic.Collection> obiektu w zmiennej `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-245">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="ff3d1-246">Następujące cztery wywołania `Add` metody `Count` właściwość zawiera 4, element `"Bill"` ma indeks o wartości 1 i element `"Pete"` ma wartość indeksu 4.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-246">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="ff3d1-247">Po pierwsze wywołanie `Remove`, `Count` to 3, element `"Bill"` zostanie usunięty i elementu `"Pete"` ma wartość indeksu 3.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-247">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="ff3d1-248">Po drugie wywołanie `Remove`, `Count` 2, element `"Mike"` zostanie usunięty, a element `"Pete"` ma wartość indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-248">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="collection.Remove Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="ff3d1-249">Unikatowy <see langword="String" /> wyrażenie określające klucza ciąg, który pozwala, zamiast indeksu pozycyjne, uzyskiwanie dostępu do elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-249">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-250">
            <c>Klucz</c> musi odpowiadać <c>klucz</c> argument określony, gdy element został dodany do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-250">
              <c>Key</c> must correspond to the <c>Key</c> argument specified when the element was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-251">Usuwa element z <see langword="Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-251">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-252">Gdy `Remove` usuwa element z kolekcji, jego zmniejsza kolekcji <xref:Microsoft.VisualBasic.Collection.Count%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-252">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="ff3d1-253">On również zmniejsza `Index` wartość każdego elementu, która wcześniej usuniętego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-253">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="ff3d1-254">Jeśli element został dodany do kolekcji bez `Key`, należy użyć jego `Index` go usunąć.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-254">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff3d1-255">Ten przykład ilustruje użycie `Remove` metodę, aby usunąć obiekty <xref:Microsoft.VisualBasic.Collection> obiektu w zmiennej `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-255">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="ff3d1-256">Następujące cztery wywołania `Add` metody `Count` właściwość zawiera 4, element `"Bill"` ma indeks o wartości 1 i element `"Pete"` ma wartość indeksu 4.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-256">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="ff3d1-257">Po pierwsze wywołanie `Remove`, `Count` to 3, element `"Bill"` zostanie usunięty i elementu `"Pete"` ma wartość indeksu 3.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-257">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="ff3d1-258">Po drugie wywołanie `Remove`, `Count` 2, element `"Mike"` zostanie usunięty, a element `"Pete"` ma wartość indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-258">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo" ExplicitInterfaceMemberName="ICollectionCopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void ICollectionCopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void ICollectionCopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="ff3d1-259">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-259">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ff3d1-260">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-260">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ff3d1-261">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-261">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-262">Kopiuje elementy ze <see cref="T:Microsoft.VisualBasic.Collection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-262">Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
          <span data-ttu-id="ff3d1-263">Implementuje <see cref="T:System.Collections.ICollection" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-263">Implements the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-264">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający iterację <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-264">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 <span data-ttu-id="ff3d1-265">Ta metoda jest O (`n`) operacji, gdzie `n` są uzyskiwane z <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-265">This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff3d1-266">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-266">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ff3d1-267">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-267">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff3d1-268">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-268">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="ff3d1-269">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-269">-or-</span>
          </span>
          <span data-ttu-id="ff3d1-270">Liczba elementów w źródle <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt jest większy niż dostępna ilość miejsca od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-270">The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ff3d1-271">Typ źródła <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu nie można automatycznie rzutować na typ docelowej tablicy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-271">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count" ExplicitInterfaceMemberName="ICollectionCount">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ICollectionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionCount As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized" ExplicitInterfaceMemberName="ICollectionIsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ICollectionIsSynchronized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionIsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionIsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot" ExplicitInterfaceMemberName="ICollectionSyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ICollectionSyncRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionSyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionSyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="ICollectionGetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance class System.Collections.IEnumerator ICollectionGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function ICollectionGetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ ICollectionGetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-272">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-272">Returns an enumerator that iterates through the collection.</span>
          </span>
          <span data-ttu-id="ff3d1-273">Implementuje <see cref="T:System.Collections.ICollection" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-273">Implements the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff3d1-274">
            <see cref="T:System.Collections.IEnumerator" /> Obiekt, który może służyć do iterowania po kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-274">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-275">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="ff3d1-275">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="ff3d1-276">`foreach` Instrukcja języka C# (`for each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-276">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="ff3d1-277">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-277">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ff3d1-278">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-278">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ff3d1-279">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-279">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ff3d1-280"><xref:System.Collections.IEnumerator.Reset%2A> Metoda przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-280">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="ff3d1-281">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-281">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="ff3d1-282">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> metody wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-282">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ff3d1-283"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-283"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ff3d1-284"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-284"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ff3d1-285">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-285">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ff3d1-286">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-286">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ff3d1-287">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-287">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ff3d1-288">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-288">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ff3d1-289">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-289">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ff3d1-290">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-290">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ff3d1-291">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-291">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ff3d1-292">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-292">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="ff3d1-293">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-293">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add" ExplicitInterfaceMemberName="IListAdd">
      <MemberSignature Language="C#" Value="int IList.Add (object Item);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object Item) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (Item As Object) As Integer Implements IList.Add" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ Item) = System::Collections::IList::Add;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="int IList.Add (object value);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (value As Object) As Integer Implements IList.Add" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ value) = System::Collections::IList::Add;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ff3d1-294">
            <see cref="T:System.Object" /> Do dodania do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-294">The <see cref="T:System.Object" /> to add to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <param name="Item">To be added.</param>
        <summary>
          <span data-ttu-id="ff3d1-295">Dodaje element do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-295">Adds an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ff3d1-296">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-296">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff3d1-297">Pozycja, do którego dodano nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-297">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-298">Można również użyć <xref:Microsoft.VisualBasic.Collection.Item%2A> właściwości, aby dodać nowe elementy, ustawiając wartość klucza, który nie istnieje w <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-298">You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ff3d1-299">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-299">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ff3d1-300">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-300">-or-</span>
          </span>
          <span data-ttu-id="ff3d1-301">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-301">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear" ExplicitInterfaceMemberName="IListClear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListClear" />
      <MemberSignature Language="VB.NET" Value="Sub IListClear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListClear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff3d1-302">Usuwa wszystkie elementy z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-302">Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ff3d1-303">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-303">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-304">Ta metoda usuwa wszystkie elementy z <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-304">This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ff3d1-305">
            <see cref="T:System.Collections.IList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-305">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.Hashtable.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains" ExplicitInterfaceMemberName="IListContains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance bool IListContains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListContains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool IListContains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ff3d1-306">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-306">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-307">Określa, czy <see cref="T:Microsoft.VisualBasic.Collection" /> obiekt zawiera określoną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-307">Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value.</span>
          </span>
          <span data-ttu-id="ff3d1-308">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-308">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff3d1-309">Zwraca <see langword="True" /> Jeśli <see cref="T:System.Object" /> znajduje się w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-309">Returns <see langword="True" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-310">Ta metoda określa, czy <xref:Microsoft.VisualBasic.Collection> obiekt zawiera określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-310">This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf" ExplicitInterfaceMemberName="IListIndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListIndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListIndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ff3d1-311">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-311">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-312">Określa indeks konkretny element w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-312">Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ff3d1-313">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-313">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff3d1-314">Indeks <paramref name="value" /> Jeśli w kolekcji; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-314">The index of <paramref name="value" /> if found in the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-315">Ta metoda określa indeks konkretny element w <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-315">This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert" ExplicitInterfaceMemberName="IListInsert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListInsert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListInsert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ff3d1-316">Liczony od zera indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-316">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ff3d1-317">
            <see cref="T:System.Object" /> Do wstawienia do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-317">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-318">Wstawia element do <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-318">Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index.</span>
          </span>
          <span data-ttu-id="ff3d1-319">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-319">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-320">Jeśli `index` jest równa liczbie elementów w <xref:Microsoft.VisualBasic.Collection> obiektu następnie `value` jest dołączany na końcu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-320">If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="ff3d1-321">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-321">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="ff3d1-322">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-322">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ff3d1-323">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-323">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ff3d1-324">
            <paramref name="index" /> nie jest prawidłowym indeksem w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-324">
              <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ff3d1-325">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-325">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ff3d1-326">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-326">-or-</span>
          </span>
          <span data-ttu-id="ff3d1-327">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-327">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ff3d1-328">
            <paramref name="value" /> to odwołanie o wartości null w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-328">
              <paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize" ExplicitInterfaceMemberName="IListIsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsFixedSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly" ExplicitInterfaceMemberName="IListIsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item" ExplicitInterfaceMemberName="IListItem">
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object IListItem(int32)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".property instance object IListItem(int32)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-2.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove" ExplicitInterfaceMemberName="IListRemove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ff3d1-329">
            <see cref="T:System.Object" /> Do usunięcia z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-329">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-330">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-330">Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ff3d1-331">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-331">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-332">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-332">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="ff3d1-333">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-333">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ff3d1-334">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-334">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="ff3d1-335">Jeśli `value` nie zostanie znaleziony w <xref:Microsoft.VisualBasic.Collection> obiektu <xref:Microsoft.VisualBasic.Collection> obiektu pozostaje bez zmian i jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-335">If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ff3d1-336">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-336">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ff3d1-337">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-337">-or-</span>
          </span>
          <span data-ttu-id="ff3d1-338">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-338">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt" ExplicitInterfaceMemberName="IListRemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ff3d1-339">Liczony od zera indeks elementu, który ma zostać usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-339">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-340">Usuwa <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-340">Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index.</span>
          </span>
          <span data-ttu-id="ff3d1-341">Implementuje <see cref="T:System.Collections.IList" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-341">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-342">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-342">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="ff3d1-343">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-343">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ff3d1-344">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-344">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ff3d1-345">
            <paramref name="index" /> nie jest prawidłowym indeksem w <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-345">
              <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ff3d1-346">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-346">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ff3d1-347">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-347">-or-</span>
          </span>
          <span data-ttu-id="ff3d1-348">
            <see cref="T:Microsoft.VisualBasic.Collection" /> Obiekt ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-348">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization" ExplicitInterfaceMemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="ff3d1-349">Obiekt, który zainicjował wywołanie zwrotne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-349">The object that initiated the callback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-350">Jest uruchamiany po całej <see cref="T:Microsoft.VisualBasic.Collection" /> wykonać deserializacji wykresu obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-350">Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized.</span>
          </span>
          <span data-ttu-id="ff3d1-351">Implementuje <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-351">Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-352">Ta metoda jest wywoływana po całej <xref:Microsoft.VisualBasic.Collection> wykonać deserializacji wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-352">This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
        <altmember cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData" ExplicitInterfaceMemberName="GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="ff3d1-353">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekt zawierający informacje wymagane do wykonywania serializacji <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-353">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="ff3d1-354">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> obiekt zawierający źródłowe i docelowe serializowanym strumieniu skojarzone z <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-354">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff3d1-355">Zwraca dane potrzebne do serializacji <see cref="T:Microsoft.VisualBasic.Collection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-355">Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ff3d1-356">Implementuje <see cref="T:System.Runtime.Serialization.ISerializable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff3d1-356">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff3d1-357">Ta metoda zwraca dane potrzebne do serializacji <xref:Microsoft.VisualBasic.Collection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff3d1-357">This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>