<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="637cfa37fc9558f429d81ef2ec94474ee408dcbf" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48596878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see langword="VbMath" /> Moduł zawiera procedur używanych do wykonywania operacji matematycznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten moduł obsługuje słowa kluczowe języka Visual Basic i elementy członkowskie biblioteki wykonawczej generowania liczb losowych.  
  
   
  
## Examples  
 W tym przykładzie użyto `Rnd` funkcję, aby wygenerować wartość losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/derived-math-functions.md">Pochodne funkcje matematyczne (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">Słowa kluczowe (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Elementy członkowskie biblioteki wykonawczej języka Visual Basic</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje generator liczb losowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje generator liczb losowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie `Randomize` metoda nie przyjmuje wartość początkową. Zamiast tego wartość zwracana przez czasomierz systemowy jest używany jako nową wartość inicjatora.  
  
 Jeśli `Randomize` nie jest używany, `Rnd` — funkcja (z bez argumentów) używa tego samego numeru jako inicjator po raz pierwszy jest wywoływana i okresem generowanych przez ostatni numer jest używana jako wartość inicjatora.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczby losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcji zaczynać się wartością inicjatora i generują liczby, które mieszczą się w skończonym zakresie, wyniki mogą być przewidywalne dla osoby, która zna algorytm używany do generowania ich. W związku z tym `Random` instrukcji i `Rnd` nie należy użyć funkcji do generowania liczb losowych do użytku w kryptografii. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 W tym przykładzie użyto `Randomize` instrukcję w celu zainicjowania generatora liczb losowych. Ponieważ pominięcia argument liczbowy `Randomize` używa wartość zwrotną z elementu `Timer` działać jako nową wartość inicjatora.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Opcjonalna. <see langword="Object" /> Lub dowolne prawidłowe wyrażenie liczbowe.</param>
        <summary>Inicjuje generator liczb losowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` używa `Number` zainicjować `Rnd` funkcji generator liczb losowych, nadając mu nową wartość inicjatora. Jeżeli pominięto `Number`, wartość zwracana przez czasomierz systemowy jest używany jako nową wartość inicjatora.  
  
 Jeśli `Randomize` nie jest używany, `Rnd` — funkcja (z bez argumentów) używa tego samego numeru jako inicjator po raz pierwszy jest wywoływana i okresem generowanych przez ostatni numer jest używana jako wartość inicjatora.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczby losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym. Za pomocą `Randomize` z taką samą wartość `Number` Powtarzaj poprzednie sekwencji.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcji zaczynać się wartością inicjatora i generują liczby, które mieszczą się w skończonym zakresie, wyniki mogą być przewidywalne dla osoby, która zna algorytm używany do generowania ich. W związku z tym `Random` instrukcji i `Rnd` nie należy użyć funkcji do generowania liczb losowych do użytku w kryptografii. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 W tym przykładzie użyto `Randomize` instrukcję w celu zainicjowania generatora liczb losowych. Ponieważ pominięcia argument liczbowy `Randomize` używa wartość zwrotną z elementu `Timer` działać jako nową wartość inicjatora.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca liczbę losową typu <see langword="Single" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca liczbę losową typu <see langword="Single" />.</summary>
        <returns>Dalej losowy numer w sekwencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Funkcja zwraca wartość mniejsza od 1, ale większa lub równa zero.  
  
 Przed wywołaniem `Rnd`, użyj `Randomize` instrukcję bez argumentu do zainicjowania generatora liczb losowych przy użyciu inicjatora oparty na zegarze systemowym.  
  
 Aby wygenerować losowych liczb całkowitych w danym zakresie, należy użyć następującej formuły.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 W tym miejscu `upperbound` jest największą liczbą z zakresu i `lowerbound` jest najmniejszą liczbą z zakresu.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczby losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcji zaczynać się wartością inicjatora i generują liczby, które mieszczą się w skończonym zakresie, wyniki mogą być przewidywalne dla osoby, która zna algorytm używany do generowania ich. W związku z tym `Random` instrukcji i `Rnd` nie należy użyć funkcji do generowania liczb losowych do użytku w kryptografii.  
  
   
  
## Examples  
 W tym przykładzie użyto `Rnd` funkcję, aby wygenerować wartość losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Opcjonalna. A <see langword="Single" /> wartość lub dowolne prawidłowe <see langword="Single" /> wyrażenia.</param>
        <summary>Zwraca liczbę losową typu <see langword="Single" />.</summary>
        <returns>Jeśli liczba jest mniejsza niż zero, Rnd generuje taki sam numer za każdym razem, gdy, za pomocą <paramref name="Number" /> jako inicjatora. Jeśli liczba jest większa niż zero, Rnd generuje dalej losową liczbę w sekwencji. Jeśli liczba jest równa zero, Rnd generuje najbardziej niedawno generowanego numeru. Jeśli nie zostanie podany numer, Rnd generuje dalej losową liczbę w sekwencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Funkcja zwraca wartość mniejsza od 1, ale większa lub równa zero.  
  
 Wartość `Number` Określa, jak `Rnd` generuje losową liczbę.  
  
 W przypadku dany inicjator początkowej, ten sam numer sekwencji jest generowany, ponieważ każde kolejne wywołanie `Rnd` funkcja używa wcześniej wygenerowany numer jako inicjator kolejny numer w sekwencji.  
  
 Przed wywołaniem `Rnd`, użyj `Randomize` instrukcję bez argumentu do zainicjowania generatora liczb losowych przy użyciu inicjatora oparty na zegarze systemowym.  
  
 Aby wygenerować losowych liczb całkowitych w danym zakresie, należy użyć następującej formuły.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 W tym miejscu `upperbound` jest największą liczbą z zakresu i `lowerbound` jest najmniejszą liczbą z zakresu.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczby losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym. Za pomocą `Randomize` z taką samą wartość `Number` Powtarzaj poprzednie sekwencji.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcji zaczynać się wartością inicjatora i generują liczby, które mieszczą się w skończonym zakresie, wyniki mogą być przewidywalne dla osoby, która zna algorytm używany do generowania ich. W związku z tym `Random` instrukcji i `Rnd` nie należy użyć funkcji do generowania liczb losowych do użytku w kryptografii.  
  
   
  
## Examples  
 W tym przykładzie użyto `Rnd` funkcję, aby wygenerować wartość losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
  </Members>
</Type>