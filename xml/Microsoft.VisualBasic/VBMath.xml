<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3839187e325901ad3f3f4d5e81304055450240f2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30434061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see langword="VbMath" /> Moduł zawiera procedury używany do wykonywania operacji matematycznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten moduł obsługuje słów kluczowych języka Visual Basic i elementy członkowskie biblioteki wykonawczej generowania liczb losowych.  
  
   
  
## Examples  
 W tym przykładzie użyto `Rnd` funkcji do generowania wartość losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje generator liczb losowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje generator liczb losowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody `Randomize` — metoda nie przyjmuje wartości początkowej. Zamiast tego wartość zwrócona przez czasomierz systemu jest używany jako nowe wartości początkowej.  
  
 Jeśli `Randomize` nie jest używany, `Rnd` funkcji (argumentów) używa tego samego numeru jako inicjator po raz pierwszy jest wywoływana, a następnie używa liczby generowanych przez ostatnie jako wartości początkowej.  
  
> [!NOTE]
>  Powtarzaj sekwencji liczb losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcja rozpoczynać się od wartości początkowej i generować numery, które odpowiadają zakresowi ograniczone, wyniki mogą być przewidywalną przez użytkownika, który zna algorytm używany do generowania je. W rezultacie `Random` instrukcji i `Rnd` nie należy użyć funkcji dla generatora liczb losowych do użycia w kryptografii. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 W tym przykładzie użyto `Randomize` instrukcji w celu zainicjowania generatora liczb losowych. Ponieważ liczba argumentów została pominięta, `Randomize` używa wartość zwrotną z elementu `Timer` działać jako nowe wartości początkowej.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Opcjonalny. <see langword="Object" /> Lub dowolne prawidłowe wyrażenie liczbowe.</param>
        <summary>Inicjuje generator liczb losowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` używa `Number` zainicjować `Rnd` funkcji generatora liczb losowych, nadanie mu nowe wartości początkowej. W przypadku pominięcia `Number`, wartość zwracana przez czasomierz systemu jest używany jako nowe wartości początkowej.  
  
 Jeśli `Randomize` nie jest używany, `Rnd` funkcji (argumentów) używa tego samego numeru jako inicjator po raz pierwszy jest wywoływana, a następnie używa liczby generowanych przez ostatnie jako wartości początkowej.  
  
> [!NOTE]
>  Powtarzaj sekwencji liczb losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym. Przy użyciu `Randomize` z taką samą wartość `Number` Powtarzaj poprzednie sekwencji.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcja rozpoczynać się od wartości początkowej i generować numery, które odpowiadają zakresowi ograniczone, wyniki mogą być przewidywalną przez użytkownika, który zna algorytm używany do generowania je. W rezultacie `Random` instrukcji i `Rnd` nie należy użyć funkcji dla generatora liczb losowych do użycia w kryptografii. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 W tym przykładzie użyto `Randomize` instrukcji w celu zainicjowania generatora liczb losowych. Ponieważ liczba argumentów została pominięta, `Randomize` używa wartość zwrotną z elementu `Timer` działać jako nowe wartości początkowej.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca liczbę losową typu <see langword="Single" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca liczbę losową typu <see langword="Single" />.</summary>
        <returns>Następną liczbę losową w sekwencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Funkcja zwraca wartość mniejsza niż 1, ale większa lub równa zero.  
  
 Przed wywołaniem `Rnd`, użyj `Randomize` instrukcję bez argumentu w celu zainicjowania generatora liczb losowych z inicjator oparte na czasomierz systemu.  
  
 Aby uzyskać losowych liczb całkowitych w danym zakresie, należy użyć następującej formuły.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 W tym miejscu `upperbound` jest największą liczbą z zakresu i `lowerbound` jest najmniejszą liczbą z zakresu.  
  
> [!NOTE]
>  Powtarzaj sekwencji liczb losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcja rozpoczynać się od wartości początkowej i generować numery, które odpowiadają zakresowi ograniczone, wyniki mogą być przewidywalną przez użytkownika, który zna algorytm używany do generowania je. W rezultacie `Random` instrukcji i `Rnd` nie należy użyć funkcji dla generatora liczb losowych do użycia w kryptografii.  
  
   
  
## Examples  
 W tym przykładzie użyto `Rnd` funkcji do generowania wartość losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Opcjonalny. A <see langword="Single" /> wartość lub dowolny prawidłowy <see langword="Single" /> wyrażenia.</param>
        <summary>Zwraca liczbę losową typu <see langword="Single" />.</summary>
        <returns>Jeśli liczba jest mniejsza od zera, Rnd generuje taki sam numer za każdym razem, używając <paramref name="Number" /> jako inicjatora. Jeśli liczba jest większa niż zero, Rnd generuje losowe kolejny numer w sekwencji. Jeśli liczba jest równa zero, Rnd generuje najbardziej ostatnio generowanego numeru. Jeśli nie podano numeru, Rnd generuje następną liczbę losową w sekwencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Funkcja zwraca wartość mniejsza niż 1, ale większa lub równa zero.  
  
 Wartość `Number` określa sposób `Rnd` generuje losową liczbę.  
  
 Dla danego inicjator początkowej, sam numer sekwencji jest generowany, ponieważ każde kolejne wywołanie `Rnd` funkcja używa wcześniej generowanego numeru jako inicjator kolejny numer w sekwencji.  
  
 Przed wywołaniem `Rnd`, użyj `Randomize` instrukcję bez argumentu w celu zainicjowania generatora liczb losowych z inicjator oparte na czasomierz systemu.  
  
 Aby uzyskać losowych liczb całkowitych w danym zakresie, należy użyć następującej formuły.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 W tym miejscu `upperbound` jest największą liczbą z zakresu i `lowerbound` jest najmniejszą liczbą z zakresu.  
  
> [!NOTE]
>  Powtarzaj sekwencji liczb losowych, należy wywołać `Rnd` z ujemną wartością argumentu bezpośrednio przed użyciem funkcji `Randomize` z argumentem liczbowym. Przy użyciu `Randomize` z taką samą wartość `Number` Powtarzaj poprzednie sekwencji.  
  
> [!IMPORTANT]
>  Ponieważ `Random` instrukcji i `Rnd` funkcja rozpoczynać się od wartości początkowej i generować numery, które odpowiadają zakresowi ograniczone, wyniki mogą być przewidywalną przez użytkownika, który zna algorytm używany do generowania je. W rezultacie `Random` instrukcji i `Rnd` nie należy użyć funkcji dla generatora liczb losowych do użycia w kryptografii.  
  
   
  
## Examples  
 W tym przykładzie użyto `Rnd` funkcji do generowania wartość losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>