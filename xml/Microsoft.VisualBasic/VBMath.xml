<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe2fcb44654867bcd9fe2e1e62d7426f67b80053" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69317074" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see langword="VbMath" /> Moduł zawiera procedury używane do wykonywania operacji matematycznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten moduł obsługuje następujące słowa kluczowe języka Visual Basic i elementy członkowskie biblioteki wykonawczej do generowania liczb losowych.  
  
   
  
## Examples  
 Ten przykład używa funkcji `Rnd` , aby wygenerować losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/derived-math-functions.md">Pochodne funkcje matematyczne (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">Słowa kluczowe (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Visual Basic elementy członkowskie biblioteki wykonawczej</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje generator liczb losowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje generator liczb losowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To Przeciążenie `Randomize` metody nie przyjmuje wartości inicjatora. Zamiast tego wartość zwracana przez czasomierz systemu jest używana jako nowa wartość inicjatora.  
  
 Jeśli `Randomize` nie jest używany `Rnd` , funkcja (bez argumentów) używa tej samej liczby jako inicjatora przy pierwszym wywołaniu, a następnie używa ostatnio wygenerowanej liczby jako wartości inicjatora.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczb losowych `Rnd` , wywołaj z ujemną wartością argumentu `Randomize` natychmiast przed użyciem z argumentem liczbowym.  
  
> [!IMPORTANT]
>  `Random` Ponieważ instrukcja`Rnd` i funkcja zaczynają się od wartości inicjatora i generują liczby, które mieszczą się w ograniczonym zakresie, wyniki mogą być przewidywalne przez kogoś, kto zna algorytm używany do ich generowania. W związku z `Rnd` tym instrukcjaifunkcjaniepowinnabyćużywanadogenerowanialiczblosowychdoużyciawkryptografii.`Random` Aby uzyskać więcej informacji, zobacz <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 Ten przykład używa `Randomize` instrukcji, aby zainicjować generator liczb losowych. Ponieważ argument liczbowy został pominięty, `Randomize` używa wartości zwracanej `Timer` z funkcji jako nowej wartości inicjatora.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Opcjonalny. <see langword="Object" /> Lub dowolne prawidłowe wyrażenie liczbowe.</param>
        <summary>Inicjuje generator liczb losowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize`używa `Number` do`Rnd` inicjowania generatora liczb losowych funkcji, dając go nowej wartości inicjatora. W przypadku pominięcia `Number`wartość zwracana przez czasomierz systemu jest używana jako nowa wartość inicjatora.  
  
 Jeśli `Randomize` nie jest używany `Rnd` , funkcja (bez argumentów) używa tej samej liczby jako inicjatora przy pierwszym wywołaniu, a następnie używa ostatnio wygenerowanej liczby jako wartości inicjatora.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczb losowych `Rnd` , wywołaj z ujemną wartością argumentu `Randomize` natychmiast przed użyciem z argumentem liczbowym. Użycie `Randomize` z tą samą wartością dla `Number` nie powtarza poprzedniej sekwencji.  
  
> [!IMPORTANT]
>  `Random` Ponieważ instrukcja`Rnd` i funkcja zaczynają się od wartości inicjatora i generują liczby, które mieszczą się w ograniczonym zakresie, wyniki mogą być przewidywalne przez kogoś, kto zna algorytm używany do ich generowania. W związku z `Rnd` tym instrukcjaifunkcjaniepowinnabyćużywanadogenerowanialiczblosowychdoużyciawkryptografii.`Random` Aby uzyskać więcej informacji, zobacz <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 Ten przykład używa `Randomize` instrukcji, aby zainicjować generator liczb losowych. Ponieważ argument liczbowy został pominięty, `Randomize` używa wartości zwracanej `Timer` z funkcji jako nowej wartości inicjatora.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca losową liczbę typów <see langword="Single" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca losową liczbę typów <see langword="Single" />.</summary>
        <returns>Kolejny numer losowy w sekwencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Funkcja zwraca wartość mniejszą niż 1, ale większą lub równą zero.  
  
 Przed wywołaniem `Rnd` `Randomize` Użyj instrukcji bez argumentu, aby zainicjować generatora liczb losowych z inicjatorem na podstawie czasomierza systemowego.  
  
 Aby wygenerować losowe liczby całkowite w danym zakresie, użyj następującej formuły.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 W tym miejscu `lowerbound` jestnajwiększąliczbązzakresuijestnajmniejszą`upperbound` liczbą z zakresu.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczb losowych `Rnd` , wywołaj z ujemną wartością argumentu `Randomize` natychmiast przed użyciem z argumentem liczbowym.  
  
> [!IMPORTANT]
>  `Random` Ponieważ instrukcja`Rnd` i funkcja zaczynają się od wartości inicjatora i generują liczby, które mieszczą się w ograniczonym zakresie, wyniki mogą być przewidywalne przez kogoś, kto zna algorytm używany do ich generowania. W związku z `Rnd` tym instrukcjaifunkcjaniepowinnabyćużywanadogenerowanialiczblosowychdoużyciawkryptografii.`Random`  
  
   
  
## Examples  
 Ten przykład używa funkcji `Rnd` , aby wygenerować losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Opcjonalna. Wartość lub dowolne prawidłowe <see langword="Single" /> wyrażenie. <see langword="Single" /></param>
        <summary>Zwraca losową liczbę typów <see langword="Single" />.</summary>
        <returns>Jeśli liczba jest mniejsza od zera, RND generuje ten sam numer za każdym razem, <paramref name="Number" /> używając jako inicjatora. Jeśli liczba jest większa od zera, RND generuje następny numer losowy w sekwencji. Jeśli liczba jest równa zero, RND spowoduje wygenerowanie ostatnio wygenerowanej liczby. Jeśli liczba nie zostanie podana, RND generuje następny numer losowy w sekwencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Funkcja zwraca wartość mniejszą niż 1, ale większą lub równą zero.  
  
 Wartość `Number` określa, jak `Rnd` generuje liczbę losową.  
  
 Dla każdego z tych początkowych inicjatorów jest generowana ta sama sekwencja liczb, ponieważ każde kolejne `Rnd` wywołanie do funkcji używa wcześniej wygenerowanej liczby jako inicjatora dla kolejnego numeru w sekwencji.  
  
 Przed wywołaniem `Rnd` `Randomize` Użyj instrukcji bez argumentu, aby zainicjować generatora liczb losowych z inicjatorem na podstawie czasomierza systemowego.  
  
 Aby wygenerować losowe liczby całkowite w danym zakresie, użyj następującej formuły.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 W tym miejscu `lowerbound` jestnajwiększąliczbązzakresuijestnajmniejszą`upperbound` liczbą z zakresu.  
  
> [!NOTE]
>  Aby powtórzyć sekwencje liczb losowych `Rnd` , wywołaj z ujemną wartością argumentu `Randomize` natychmiast przed użyciem z argumentem liczbowym. Użycie `Randomize` z tą samą wartością dla `Number` nie powtarza poprzedniej sekwencji.  
  
> [!IMPORTANT]
>  `Random` Ponieważ instrukcja`Rnd` i funkcja zaczynają się od wartości inicjatora i generują liczby, które mieszczą się w ograniczonym zakresie, wyniki mogą być przewidywalne przez kogoś, kto zna algorytm używany do ich generowania. W związku z `Rnd` tym instrukcjaifunkcjaniepowinnabyćużywanadogenerowanialiczblosowychdoużyciawkryptografii.`Random`  
  
   
  
## Examples  
 Ten przykład używa funkcji `Rnd` , aby wygenerować losową liczbę całkowitą z zakresu od 1 do 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Podsumowanie matematyczne</related>
      </Docs>
    </Member>
  </Members>
</Type>
