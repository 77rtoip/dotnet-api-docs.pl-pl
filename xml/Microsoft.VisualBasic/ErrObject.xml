<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1286592f47737a83f40f015b4451378ba6f1a43" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36726728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9c368-101">
        <see langword="ErrObject" /> Moduł zawiera właściwości i procedur w celu identyfikacji i obsługi błędów czasu wykonywania przy użyciu <see langword="Err" /> obiektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c368-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-102">`ErrObject` Moduł obsługuje `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="9c368-103">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c368-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-104">W tym przykładzie użyto właściwości `Err` obiektu przy konstruowaniu okno dialogowe komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="9c368-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="9c368-105">Zwróć uwagę, co się dzieje, gdy używasz `Clear` — metoda pierwszy: gdy następnie wygenerować błąd w Visual Basic z `Raise` metody, właściwości stają się wartościami domyślnymi Visual Basic `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c368-106">Czyści wszystkie ustawienia właściwości <see langword="Err" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-106">Clears all property settings of the <see langword="Err" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-107">Użyj `Clear` jawnie wyczyść `Err` obiektu po błąd został obsłużony, np. Jeśli używasz obsługi z opóźnieniem błędów `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="9c368-107">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="9c368-108">`Clear` Metoda jest wywoływana automatycznie po każdej zmianie wykonuje żadnego z następujących instrukcji:</span><span class="sxs-lookup"><span data-stu-id="9c368-108">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="9c368-109">Dowolny typ `Resume` — instrukcja</span><span class="sxs-lookup"><span data-stu-id="9c368-109">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="9c368-110">`Exit Sub`, `Exit Function`, lub `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="9c368-110">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="9c368-111">Wszelkie `On Error` — instrukcja</span><span class="sxs-lookup"><span data-stu-id="9c368-111">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="9c368-112">Wszelkie `Try...Catch...Finally` — instrukcja</span><span class="sxs-lookup"><span data-stu-id="9c368-112">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9c368-113">`On Error Resume Next` Konstrukcja może być wskazane `On Error GoTo` podczas obsługi błędów wygenerowanych podczas dostępu do innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="9c368-113">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="9c368-114">Sprawdzanie `Err` po każdej interakcji z obiektem usuwa niejednoznaczności o tym, które obiektu uzyskano kod: można zapewnić, że obiekt umieścić kod błędu w `Err.Number`, a także obiektu, który pierwotnie wygenerowany błąd (obiektu określony w `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="9c368-114">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-115">W tym przykładzie użyto `Err` obiektu `Clear` metodę, aby zresetować właściwości liczbowych `Err` obiekt do zera i jego właściwości parametrów na ciągi o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="9c368-115">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="9c368-116">Nie można wywołać `Clear`, drugie wywołanie `MsgBox` Wyświetla sam komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="9c368-116">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-117">Zwraca lub konfiguruje <see langword="String" /> wyrażenie zawierające ciąg opisujący skojarzony z błędem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-117">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="9c368-118">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-118">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-119">Zwraca lub konfiguruje <see langword="String" /> wyrażenie zawierające ciąg opisujący skojarzony z błędem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-119">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="9c368-120">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-120">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-121">`Description` Ustawienie właściwości zawiera krótki opis błędu.</span><span class="sxs-lookup"><span data-stu-id="9c368-121">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="9c368-122">Ta właściwość służy do użytkownika wystąpił błąd, który nie może lub nie chcesz obsługiwać.</span><span class="sxs-lookup"><span data-stu-id="9c368-122">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="9c368-123">Jeśli generowany jest błąd użytkownika, należy przypisać krótki opis błędu do `Description` właściwości.</span><span class="sxs-lookup"><span data-stu-id="9c368-123">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="9c368-124">Jeśli `Description` właściwość nie zostanie wypełnione, a wartością <xref:Microsoft.VisualBasic.ErrObject.Number%2A> właściwość odpowiada błędów czasu wykonywania języka Visual Basic, a następnie ciąg zwrócony przez <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> funkcji znajduje się w `Description` właściwości, gdy zostanie wygenerowany błąd.</span><span class="sxs-lookup"><span data-stu-id="9c368-124">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-125">W tym przykładzie przypisuje wiadomość zdefiniowane przez użytkownika w celu `Description` właściwość `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-125">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-126">Zwraca liczbę całkowitą określającą liczbę wierszy ostatniej wykonanej instrukcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-126">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="9c368-127">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-127">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-128">Zwraca liczbę całkowitą określającą liczbę wierszy ostatniej wykonanej instrukcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-128">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="9c368-129">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-129">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-130">Jeśli Visual Basic napotka bez numerów wierszy, zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="9c368-130">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-131">W tym przykładzie użyto `Erl` właściwości, aby wskazać, numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="9c368-131">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c368-132">Zwraca reprezentujący błąd, który wystąpił wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-132">Returns the exception representing the error that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c368-133">Zwraca reprezentujący błąd, który wystąpił wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-133">Returns the exception representing the error that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-134">`GetException` Funkcja jest dostępna wyłącznie z `Err` klasa obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-134">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="9c368-135">W przypadku `Exception` właściwość `Err` obiektu, aby wyświetlić błąd, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="9c368-135">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-136">Poniższy kod wyświetla komunikat przypisane do wyjątku w `Err` obiektu:</span><span class="sxs-lookup"><span data-stu-id="9c368-136">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-137">Zwraca lub konfiguruje <see langword="Integer" /> zawierający identyfikator kontekstu dla tematu w pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-137">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="9c368-138">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-138">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-139">Zwraca lub konfiguruje <see langword="Integer" /> zawierający identyfikator kontekstu dla tematu w pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-139">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="9c368-140">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-140">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-141">`HelpContext` Właściwość jest używana do wyświetlania Pomocy kontekstowej dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="9c368-141">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="9c368-142">Jeśli plik pomocy jest określona w `HelpFile`, `HelpContext` właściwość jest używana do pliku pomocy zidentyfikowane zostanie wyświetlone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="9c368-142">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="9c368-143">Jeśli oba `HelpFile` i `HelpContext` właściwości są puste, wartość <xref:Microsoft.VisualBasic.ErrObject.Number%2A> właściwość jest zaznaczona.</span><span class="sxs-lookup"><span data-stu-id="9c368-143">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="9c368-144">Jeśli wartość `Number` właściwość odpowiada wartości błędów czasu wykonywania języka Visual Basic, a następnie użyć Identyfikatora kontekstu Pomocy programu Visual Basic dla błędu.</span><span class="sxs-lookup"><span data-stu-id="9c368-144">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="9c368-145">Jeśli wartość `Number` właściwości nie odpowiada błąd Visual Basic, zostanie wyświetlony ekran zawartość pliku Pomocy programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c368-145">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c368-146">Procedury należy zapisać w aplikacji do obsługi typowych błędów.</span><span class="sxs-lookup"><span data-stu-id="9c368-146">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="9c368-147">Programowania z obiektem, można użyć pliku pomocy obiektu do poprawy jakości obsługi programu błędów lub do wyświetlania łatwy do rozpoznania komunikatu do użytkownika, jeśli ten błąd nie jest możliwe do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="9c368-147">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-148">W tym przykładzie użyto `HelpContext` właściwość `Err` obiektów można wyświetlić tematu Pomocy programu Visual Basic dla `Overflow` błędu.</span><span class="sxs-lookup"><span data-stu-id="9c368-148">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-149">Zwraca lub konfiguruje <see langword="String" /> wyrażeniu zawierającym w pełni kwalifikowana ścieżka do pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-149">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="9c368-150">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-150">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-151">Zwraca lub konfiguruje <see langword="String" /> wyrażeniu zawierającym w pełni kwalifikowana ścieżka do pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-151">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="9c368-152">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-152">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-153">Jeśli plik pomocy jest określona przez `HelpFile` właściwości, jest ona automatycznie wywoływana, gdy użytkownik naciśnie klawisz Pomocy (lub klawisza F1) w oknie dialogowym komunikatu o.</span><span class="sxs-lookup"><span data-stu-id="9c368-153">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="9c368-154">Jeśli `HelpContext` właściwość zawiera prawidłowy kontekst automatycznie zostanie wyświetlony identyfikator określonego pliku tego tematu.</span><span class="sxs-lookup"><span data-stu-id="9c368-154">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="9c368-155">Jeśli nie `HelpFile` jest określona, zostanie wyświetlony w pliku Pomocy programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c368-155">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c368-156">Procedury należy zapisać w aplikacji do obsługi typowych błędów.</span><span class="sxs-lookup"><span data-stu-id="9c368-156">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="9c368-157">Programowania z obiektem, można użyć pliku pomocy obiektu do poprawy jakości obsługi programu błędów lub do wyświetlania łatwy do rozpoznania komunikatu do użytkownika, jeśli ten błąd nie jest możliwe do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="9c368-157">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-158">W tym przykładzie użyto `HelpFile` właściwość `Err` obiekt, aby uruchomić system pomocy.</span><span class="sxs-lookup"><span data-stu-id="9c368-158">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="9c368-159">Domyślnie `HelpFile` właściwość zawiera nazwę pliku Pomocy programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c368-159">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-160">Zwraca kod błędu systemu produkowane przez wywołanie do biblioteki dołączanej (dynamicznie DLL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-160">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="9c368-161">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-161">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-162">Zwraca kod błędu systemu produkowane przez wywołanie do biblioteki dołączanej (dynamicznie DLL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-162">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="9c368-163">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-163">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-164"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Właściwość ma zastosowanie tylko do wywołań biblioteki DLL z kodu języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c368-164">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="9c368-165">Jeśli takie wywołanie wywołana funkcja zwykle zwraca kod oznaczający powodzenie lub Niepowodzenie i <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwości jest wypełnione.</span><span class="sxs-lookup"><span data-stu-id="9c368-165">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="9c368-166">Sprawdź w dokumentacji funkcji DLL do określenia wartości zwracane, których wskazania powodzenia lub niepowodzenia.</span><span class="sxs-lookup"><span data-stu-id="9c368-166">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="9c368-167">Zawsze, gdy zostanie zwrócony kod błędu, aplikacji Visual Basic powinien natychmiastowego sprawdzenia <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="9c368-167">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="9c368-168">Nie wystąpił wyjątek podczas <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwość jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="9c368-168">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c368-169"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Właściwości jest chroniony przez <xref:System.Security.Permissions.SecurityAction.LinkDemand>, co pomaga zapobiec uzyskiwany kodzie niezaufanym.</span><span class="sxs-lookup"><span data-stu-id="9c368-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="9c368-170">Jednak <xref:System.Security.Permissions.SecurityAction.LinkDemand> wymaga tylko bezpośredniego obiektu wywołującego ma <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="9c368-170">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="9c368-171">Jeśli kod może być wywołana z częściowo zaufanego kodu, udostępnianie wartość <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> bez sprawdzania poprawności stanowi zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="9c368-171">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="9c368-172">Ważne ograniczenia o sposobie używania <xref:System.Security.Permissions.SecurityAction.LinkDemand> — członek, zobacz [żądanie vs. Żądanie LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="9c368-172">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="9c368-173">Aby uzyskać więcej informacji dotyczących uprawnień, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="9c368-173">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="9c368-174">Uwaga dla urządzeń inteligentnych ta właściwość zawsze zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="9c368-174">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-175">W poniższym przykładzie pokazano, jak używasz `LastDllError` właściwości po wywołaniu funkcji interfejsu API systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="9c368-175">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="9c368-176">`PrintWindowCoordinates` Przyjmowane przez procedurę dojścia do okna i połączeń `GetWindowRect` funkcji.</span><span class="sxs-lookup"><span data-stu-id="9c368-176">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="9c368-177">`GetWindowRect` wypełnia RECT — struktura danych przy użyciu długości krawędzi prostokąta, wchodzące w skład okna.</span><span class="sxs-lookup"><span data-stu-id="9c368-177">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="9c368-178">W przypadku przekazania nieprawidłowego dojścia, wystąpi błąd, a numer błędu jest dostępna za pośrednictwem `LastDllError` właściwości.</span><span class="sxs-lookup"><span data-stu-id="9c368-178">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-179">Zwraca lub ustawia wartość liczbową, określając wystąpił błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-179">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="9c368-180">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-180">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-181">Zwraca lub ustawia wartość liczbową, określając wystąpił błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-181">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="9c368-182">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-182">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-183">Wszystkie `Raise` argumentów z wyjątkiem `Number` są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="9c368-183">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="9c368-184">W przypadku pominięcia Argumenty opcjonalne i ustawienia właściwości `Err` obiekt zawiera wartości, które nie zostały wyczyszczone, te wartości służyć jako wartości dla błędu.</span><span class="sxs-lookup"><span data-stu-id="9c368-184">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="9c368-185">Ponieważ `Err` obiektu zawiera bardziej rozbudowane informacje niż podczas generowania błędy `Error` instrukcji `Raise` przydaje się do generowania błędy podczas zapisywania moduły klasy.</span><span class="sxs-lookup"><span data-stu-id="9c368-185">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="9c368-186">Na przykład z `Raise` metody źródłowego, który wygenerował błąd może być określony w `Source` właściwości, pomocy online tego błędu może być przywoływany i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="9c368-186">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="9c368-187">Gdy zwracany jest błąd użytkownika z obiektu, ustaw `Err.Number` przez dodanie numer wybrany jako błąd o kodzie do `VbObjectError` stałej.</span><span class="sxs-lookup"><span data-stu-id="9c368-187">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="9c368-188">Na przykład użyć poniższego kodu, aby otrzymać numer 1051 jako błąd o kodzie:</span><span class="sxs-lookup"><span data-stu-id="9c368-188">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="9c368-189">W tym przykładzie przedstawiono typowy sposób użycia protokołu `Number` właściwości w procedurze obsługi błędów.</span><span class="sxs-lookup"><span data-stu-id="9c368-189">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="9c368-190">W tym przykładzie użyto `Err` obiektu `Raise` metodę, aby wygenerować oryginalnego błąd w funkcji napisane w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c368-190">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="9c368-191">Wywołania funkcji można przechwycić błąd i poinformować użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9c368-191">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="9c368-192">Zwróć uwagę, że procedura `CallingProcedure` zachowanie różni się od typu informacji, które mogą pochodzić od `Err` obiekt zawierający informacje, które mogą dziedziczyć po `Exception` obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-192">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9c368-193">
            <paramref name="Number" /> jest większy niż 65 535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-193">
              <paramref name="Number" /> is greater than 65535.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="9c368-194">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-194">Required.</span>
          </span>
          <span data-ttu-id="9c368-195">
            <see langword="Long" /> Liczba całkowita, która identyfikuje charakteru błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-195">
              <see langword="Long" /> integer that identifies the nature of the error.</span>
          </span>
          <span data-ttu-id="9c368-196">Błędy programu Visual Basic znajdują się w zakresie 0 – 65535; zakresu 0 – 512 jest zarezerwowana dla błędów systemowych; zakres 513 – 65535 jest dostępna dla błędów zdefiniowanych przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-196">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span>
          </span>
          <span data-ttu-id="9c368-197">Podczas ustawiania <see langword="Number" /> właściwości własny kod błędu w module klasy, Dodaj numer kodu błędu do <see langword="vbObjectError" /> stałej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-197">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span>
          </span>
          <span data-ttu-id="9c368-198">Na przykład aby wygenerować kod błędu 513, należy przypisać <c>vbObjectError + 513</c> do <see langword="Number" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-198">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span>
          </span>
        </param>
        <param name="Source">
          <span data-ttu-id="9c368-199">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-199">Optional.</span>
          </span>
          <span data-ttu-id="9c368-200">
            <see langword="String" /> wyrażenie nazewnictwa obiektu lub aplikacji, który wygenerował błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-200">
              <see langword="String" /> expression naming the object or application that generated the error.</span>
          </span>
          <span data-ttu-id="9c368-201">Podczas ustawiania tej właściwości dla obiekt, za pomocą formularza <c>projektu</c>.<c> Klasa</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-201">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span>
          </span>
          <span data-ttu-id="9c368-202">Jeśli <c>źródła</c> nie zostanie określony, będzie stosowany jego identyfikator procesu bieżącego projektu Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-202">If <c>Source</c> is not specified, the process ID of the current Visual Basic project is used.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="9c368-203">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-203">Optional.</span>
          </span>
          <span data-ttu-id="9c368-204">
            <see langword="String" /> wyrażenie opisem błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-204">
              <see langword="String" /> expression describing the error.</span>
          </span>
          <span data-ttu-id="9c368-205">Jeśli zostanie określona, wartością w <see langword="Number" /> się zbadana właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-205">If unspecified, the value in the <see langword="Number" /> property is examined.</span>
          </span>
          <span data-ttu-id="9c368-206">Jeśli mogą być mapowane do błędów czasu wykonywania języka Visual Basic code, ciąg, który będzie zwracany przez <see langword="Error" /> funkcja jest używana jako <see langword="Description" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-206">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span>
          </span>
          <span data-ttu-id="9c368-207">Jeśli nie było Visual Basic błędu odpowiadający <see langword="Number" /> , komunikat "error zdefiniowanym przez aplikację lub zdefiniowany przez obiekt" jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-207">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="9c368-208">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-208">Optional.</span>
          </span>
          <span data-ttu-id="9c368-209">Pełna ścieżka do pliku pomocy, w którym można znaleźć pomoc na temat tego błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-209">The fully qualified path to the Help file in which help on this error can be found.</span>
          </span>
          <span data-ttu-id="9c368-210">Jeśli nie zostanie podany, Visual Basic używa dysku w pełni kwalifikowana, ścieżka i nazwa pliku w pliku Pomocy programu Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-210">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span>
          </span>
        </param>
        <param name="HelpContext">
          <span data-ttu-id="9c368-211">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-211">Optional.</span>
          </span>
          <span data-ttu-id="9c368-212">Identyfikator kontekstu tematu w <c>HelpFile</c> zapewnia pomoc w błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-212">The context ID identifying a topic within <c>HelpFile</c> that provides help for the error.</span>
          </span>
          <span data-ttu-id="9c368-213">Pominięcie identyfikator kontekstu pliku Pomocy programu Visual Basic dla błędu odpowiadającego <see langword="Number" /> właściwość jest używana, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-213">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c368-214">Generowany jest błąd czasu wykonywania; można użyć zamiast <see langword="Error" /> instrukcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-214">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-215">Wszystkie `Raise` argumentów z wyjątkiem `Number` są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="9c368-215">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="9c368-216">W przypadku pominięcia Argumenty opcjonalne i ustawienia właściwości `Err` obiekt zawiera wartości, które nie zostały wyczyszczone, te wartości służyć jako wartości dla błędu.</span><span class="sxs-lookup"><span data-stu-id="9c368-216">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="9c368-217">Ponieważ `Err` obiektu zawiera bardziej rozbudowane informacje niż podczas generowania błędy `Error` instrukcji `Raise` przydaje się do generowania błędy podczas zapisywania moduły klasy.</span><span class="sxs-lookup"><span data-stu-id="9c368-217">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="9c368-218">Na przykład z `Raise` metody źródłowego, który wygenerował błąd może być określony w `Source` właściwości, pomocy online tego błędu może być przywoływany i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="9c368-218">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-219">W tym przykładzie użyto `Err` obiektu `Raise` metoda generuje błąd w funkcji napisane w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c368-219">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="9c368-220">Wywołania funkcji można catch błąd i przekazać go użytkownikowi okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="9c368-220">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c368-221">Zwraca lub konfiguruje <see langword="String" /> wyrażenie określające nazwę obiektu lub aplikacji, która początkowo wygenerował błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-221">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="9c368-222">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-222">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c368-223">Zwraca lub konfiguruje <see langword="String" /> wyrażenie określające nazwę obiektu lub aplikacji, która początkowo wygenerował błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-223">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="9c368-224">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c368-224">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c368-225">`Source` Właściwość określa `String` reprezentujący obiekt który wygenerował błąd; wyrażenie jest zazwyczaj nazwa klasy obiektu lub identyfikatora procesu.</span><span class="sxs-lookup"><span data-stu-id="9c368-225">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="9c368-226">Użyj `Source` właściwości, aby podać informacje, gdy kodu nie może obsłużyć błąd wygenerowany w uzyskał dostęp do obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-226">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="9c368-227">Na przykład, jeśli można uzyskać dostępu do programu Microsoft Excel oraz generuje `Division by zero` błąd, program Microsoft Excel ustawia `Err.Number` jego kod błędu dla tego błędu i zestawów `Source` do "Excel.Application".</span><span class="sxs-lookup"><span data-stu-id="9c368-227">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="9c368-228">Gdy aplikacja generuje błąd z kodem, `Source` jest identyfikatorem aplikacji programowe.</span><span class="sxs-lookup"><span data-stu-id="9c368-228">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="9c368-229">W klasie `Source` powinien zawierać nazwą składającą się z formularza *projektu*.* Klasa*.</span><span class="sxs-lookup"><span data-stu-id="9c368-229">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="9c368-230">Po wystąpieniu błędu nieoczekiwany w kodzie, `Source` właściwości jest wypełniane automatycznie.</span><span class="sxs-lookup"><span data-stu-id="9c368-230">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="9c368-231">Błędy w module `Source` zawiera nazwę projektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-231">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c368-232">W tym przykładzie przedstawiono użycie `Source` właściwości w typowej procedury obsługi błędów.</span><span class="sxs-lookup"><span data-stu-id="9c368-232">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="9c368-233">Gdy występuje błąd z `Class1`, ciąg `"Class1"` jest przypisany do `Source` właściwość `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="9c368-233">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="9c368-234">Ten ciąg jest następnie wyświetlane w komunikat informacyjny wskazujący źródła i numer błędu.</span><span class="sxs-lookup"><span data-stu-id="9c368-234">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
  </Members>
</Type>