<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99efa4f2fa97adfbbe2e2ba0ece6a60e4e9943ba" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52221921" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="83483-101">
        <see langword="ErrObject" /> Moduł zawiera właściwości i procedury używane do identyfikowania i obsługi błędów czasu wykonywania przy użyciu <see langword="Err" /> obiektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="83483-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-102">`ErrObject` Moduł obsługuje `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="83483-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="83483-103">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="83483-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-104">W tym przykładzie użyto właściwości `Err` obiektu podczas tworzenia okno dialogowe komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="83483-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="83483-105">Zwróć uwagę, co się stanie, gdy używasz `Clear` metoda pierwszy: gdy następnie wygenerować błąd w Visual Basic z `Raise` metody, właściwości stają się wartości domyślne języka Visual Basic `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="83483-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md">
      <span data-ttu-id="83483-106">On Error — Instrukcja (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="83483-106">On Error Statement (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">
      <span data-ttu-id="83483-107">Try...Catch...Finally — Instrukcja (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="83483-107">Try...Catch...Finally Statement (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">
      <span data-ttu-id="83483-108">Słowa kluczowe (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="83483-108">Keywords (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">
      <span data-ttu-id="83483-109">Elementy członkowskie biblioteki wykonawczej języka Visual Basic</span>
      <span class="sxs-lookup">
        <span data-stu-id="83483-109">Visual Basic Run-Time Library Members</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83483-110">Czyści wszystkie ustawienia właściwości <see langword="Err" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-110">Clears all property settings of the <see langword="Err" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-111">Użyj `Clear` jawnie wyczyść `Err` obiektem błąd został obsłużony, takie jak kiedy używać obsługi za pomocą odroczonego błędów `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="83483-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="83483-112">`Clear` Metoda jest wywoływana automatycznie zawsze, gdy wykonuje jedną z następujących instrukcji:</span><span class="sxs-lookup"><span data-stu-id="83483-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="83483-113">Dowolny typ `Resume` — instrukcja</span><span class="sxs-lookup"><span data-stu-id="83483-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="83483-114">`Exit Sub`, `Exit Function`, lub `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="83483-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="83483-115">Wszelkie `On Error` — instrukcja</span><span class="sxs-lookup"><span data-stu-id="83483-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="83483-116">Wszelkie `Try...Catch...Finally` — instrukcja</span><span class="sxs-lookup"><span data-stu-id="83483-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="83483-117">`On Error Resume Next` Konstrukcji może być korzystniejsze `On Error GoTo` podczas obsługi błędów wygenerowanych podczas uzyskiwania dostępu do innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="83483-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="83483-118">Sprawdzanie `Err` po każdym interakcji z obiektem usuwa niejednoznaczności o tym, które obiekt została otwarta przez kod: można zapewnić, że obiektu, który jest umieszczony kod błędu w `Err.Number`, a także obiektu, który oryginalnie błędu (obiektu określonych w `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="83483-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-119">W tym przykładzie użyto `Err` obiektu `Clear` metodę, aby zresetować właściwości liczbowych `Err` obiekt do zera i jego właściwości parametrów na ciągi o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="83483-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="83483-120">Bez wywołania `Clear`, drugie wywołanie `MsgBox` zostanie wyświetlony ten sam komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="83483-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md">
          <span data-ttu-id="83483-121">On Error — Instrukcja (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-121">On Error Statement (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-122">Zwraca lub ustawia <see langword="String" /> wyrażenia zawierającego opisowy ciąg skojarzony z błędem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="83483-123">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-123">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-124">Zwraca lub ustawia <see langword="String" /> wyrażenia zawierającego opisowy ciąg skojarzony z błędem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="83483-125">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-125">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-126">`Description` Ustawienie właściwości składa się z krótkim opisem błędu.</span><span class="sxs-lookup"><span data-stu-id="83483-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="83483-127">Ta właściwość służy do wyzwalania alertu, użytkownikowi błędu, który nie może lub nie chcesz obsługiwać.</span><span class="sxs-lookup"><span data-stu-id="83483-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="83483-128">Podczas generowania błędach zdefiniowane przez użytkownika, należy przypisać krótki opis błędu do `Description` właściwości.</span><span class="sxs-lookup"><span data-stu-id="83483-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="83483-129">Jeśli `Description` właściwość nie zostanie wypełnione, a wartością <xref:Microsoft.VisualBasic.ErrObject.Number%2A> właściwość odnosi się do błędów czasu wykonywania języka Visual Basic, a następnie ciąg zwracany przez <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> funkcja została ustawiona `Description` właściwości, gdy zostanie wygenerowany błąd.</span><span class="sxs-lookup"><span data-stu-id="83483-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-130">W tym przykładzie przypisuje komunikatów zdefiniowanych przez użytkownika `Description` właściwość `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="83483-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-131">Zwraca liczbę całkowitą określającą liczbę wierszy ostatniej wykonanej instrukcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-131">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="83483-132">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-132">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-133">Zwraca liczbę całkowitą określającą liczbę wierszy ostatniej wykonanej instrukcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-133">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="83483-134">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-134">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-135">W przypadku języka Visual Basic napotyka bez numerów wierszy, zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="83483-135">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-136">W tym przykładzie użyto `Erl` właściwości, aby wskazać numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="83483-136">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83483-137">Zwraca wyjątek, reprezentujący błąd, który wystąpił.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-137">Returns the exception representing the error that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83483-138">Zwraca wyjątek, reprezentujący błąd, który wystąpił.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-138">Returns the exception representing the error that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-139">`GetException` Funkcja jest dostępna tylko z `Err` klasa obiektu.</span><span class="sxs-lookup"><span data-stu-id="83483-139">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="83483-140">Współdziała ona z `Exception` właściwość `Err` obiektu, aby wyświetlić błąd, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="83483-140">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-141">Poniższy kod wyświetla komunikat przypisane do wyjątku w `Err` obiektu:</span><span class="sxs-lookup"><span data-stu-id="83483-141">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-142">Zwraca lub ustawia <see langword="Integer" /> zawierający identyfikator kontekstu dla tematu w pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="83483-143">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-143">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-144">Zwraca lub ustawia <see langword="Integer" /> zawierający identyfikator kontekstu dla tematu w pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-144">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="83483-145">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-145">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-146">`HelpContext` Właściwość jest używana do wyświetlania Pomoc kontekstowa do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="83483-146">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="83483-147">Jeśli określono plik pomocy w `HelpFile`, `HelpContext` właściwość jest używana do automatycznie wyświetla plik pomocy zidentyfikowane.</span><span class="sxs-lookup"><span data-stu-id="83483-147">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="83483-148">Jeśli oba `HelpFile` i `HelpContext` właściwości są puste, wartość <xref:Microsoft.VisualBasic.ErrObject.Number%2A> właściwość jest zaznaczona.</span><span class="sxs-lookup"><span data-stu-id="83483-148">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="83483-149">Jeśli wartość `Number` właściwość odpowiada wartości błędów czasu wykonywania języka Visual Basic, a następnie będzie stosowany jego identyfikator kontekstu Pomocy programu Visual Basic dla błędu.</span><span class="sxs-lookup"><span data-stu-id="83483-149">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="83483-150">Jeśli wartość `Number` właściwości nie odpowiada błąd w Visual Basic, zostanie wyświetlony ekran zawartość pliku Pomocy programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="83483-150">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83483-151">W aplikacji do obsługi typowych błędów, należy wpisać procedury.</span><span class="sxs-lookup"><span data-stu-id="83483-151">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="83483-152">Podczas programowania z obiektem, można użyć obiektu pliku pomocy, poprawić jakość usługi obsługi błędów lub wyświetlić komunikat istotnych do użytkownika, jeśli ten błąd nie jest możliwe do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="83483-152">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-153">W tym przykładzie użyto `HelpContext` właściwość `Err` obiektu, aby wyświetlić tematu Pomocy programu Visual Basic dla `Overflow` błędu.</span><span class="sxs-lookup"><span data-stu-id="83483-153">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-154">Zwraca lub ustawia <see langword="String" /> wyrażenia zawierającego w pełni kwalifikowana ścieżka do pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="83483-155">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-155">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-156">Zwraca lub ustawia <see langword="String" /> wyrażenia zawierającego w pełni kwalifikowana ścieżka do pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-156">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="83483-157">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-157">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-158">Jeśli plik pomocy jest określona przez `HelpFile` właściwości go jest wywoływana automatycznie, gdy użytkownik naciśnie klawisz Pomocy (lub klawisz F1) w oknie dialogowym komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="83483-158">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="83483-159">Jeśli `HelpContext` właściwość zawiera prawidłowy kontekst identyfikator określonego pliku tego tematu jest automatycznie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="83483-159">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="83483-160">Jeśli nie `HelpFile` jest określony, wyświetlany jest plik Pomocy programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="83483-160">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83483-161">W aplikacji do obsługi typowych błędów, należy wpisać procedury.</span><span class="sxs-lookup"><span data-stu-id="83483-161">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="83483-162">Podczas programowania z obiektem, można użyć obiektu pliku pomocy, poprawić jakość usługi obsługi błędów lub wyświetlić komunikat istotnych do użytkownika, jeśli ten błąd nie jest możliwe do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="83483-162">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-163">W tym przykładzie użyto `HelpFile` właściwość `Err` obiektu, aby uruchomić system pomocy.</span><span class="sxs-lookup"><span data-stu-id="83483-163">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="83483-164">Domyślnie `HelpFile` właściwość zawiera nazwę pliku Pomocy programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="83483-164">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-165">Zwraca kod błędu systemowego, tworzone przez wywołanie do biblioteki dołączanej (dynamicznie DLL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-165">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="83483-166">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-166">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-167">Zwraca kod błędu systemowego, tworzone przez wywołanie do biblioteki dołączanej (dynamicznie DLL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-167">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="83483-168">Tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-168">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-169"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Właściwość ma zastosowanie tylko do wywołania biblioteki DLL z kodu języka Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="83483-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="83483-170">Po wykonaniu tych wywołań funkcji o nazwie zwykle zwraca kod oznaczający powodzenie lub niepowodzenie, a <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwość jest wypełniana.</span><span class="sxs-lookup"><span data-stu-id="83483-170">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="83483-171">Sprawdź w dokumentacji dotyczącej funkcji DLL, które można określić zwracanej wartości, które wskazania powodzenia lub niepowodzenia.</span><span class="sxs-lookup"><span data-stu-id="83483-171">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="83483-172">Zawsze, gdy zostanie zwrócony kod błędu, aplikacji Visual Basic należy niezwłocznie sprawdzić <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="83483-172">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="83483-173">Nie wystąpił wyjątek podczas <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwość jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="83483-173">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83483-174"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Właściwość jest chroniona przez <xref:System.Security.Permissions.SecurityAction.LinkDemand>, co pomaga zapobiec uzyskiwany z niezaufanego kodu.</span><span class="sxs-lookup"><span data-stu-id="83483-174">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="83483-175">Jednak <xref:System.Security.Permissions.SecurityAction.LinkDemand> wymaga tylko bezpośredniego wywołującego mieć <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> uprawnień.</span><span class="sxs-lookup"><span data-stu-id="83483-175">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="83483-176">Jeśli Twój kod może być wywoływana z częściowo zaufanego kodu, udostępnianie wartość <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> bez sprawdzania poprawności stanowi zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="83483-176">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="83483-177">Aby uzyskać ważne ograniczenia dotyczące korzystania <xref:System.Security.Permissions.SecurityAction.LinkDemand> elementu członkowskiego, zobacz [popytu programu vs. Żądanie LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="83483-177">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="83483-178">Aby uzyskać więcej informacji o uprawnieniach, zobacz <xref:System.Security.Permissions.SecurityPermission> i [uprawnienia dostępu kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="83483-178">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="83483-179">Uwaga dla inteligentnych urządzeń właściwość ta zwraca zawsze wartość zero.</span><span class="sxs-lookup"><span data-stu-id="83483-179">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-180">Poniższy przykład pokazuje, jak można użyć `LastDllError` właściwości po wywołaniu funkcji w interfejsie API Windows.</span><span class="sxs-lookup"><span data-stu-id="83483-180">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="83483-181">`PrintWindowCoordinates` Przyjmowane przez procedurę dojścia do okna i połączeń `GetWindowRect` funkcji.</span><span class="sxs-lookup"><span data-stu-id="83483-181">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="83483-182">`GetWindowRect` wypełnia strukturę danych Prostokąt przy użyciu długości stron prostokąta, które tworzą okna.</span><span class="sxs-lookup"><span data-stu-id="83483-182">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="83483-183">Jeśli przekażesz nieprawidłowego dojścia, wystąpi błąd i numer błędu jest dostępna za pośrednictwem `LastDllError` właściwości.</span><span class="sxs-lookup"><span data-stu-id="83483-183">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-184">Zwraca lub ustawia wartość liczbową, określając błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-184">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="83483-185">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-185">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-186">Zwraca lub ustawia wartość liczbową, określając błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-186">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="83483-187">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-187">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-188">Wszystkie `Raise` argumenty, z wyjątkiem `Number` są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="83483-188">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="83483-189">Jeżeli pominięto argumentów opcjonalnych, a ustawienia właściwości `Err` obiektu zawierają wartości, które nie zostały wyczyszczone, te wartości służą jako wartości błędu.</span><span class="sxs-lookup"><span data-stu-id="83483-189">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="83483-190">Ponieważ `Err` obiektu zapewnia bardziej rozbudowane informacje niż podczas generowania błędy `Error` instrukcji `Raise` generowanie błędów podczas pisania moduły klasy.</span><span class="sxs-lookup"><span data-stu-id="83483-190">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="83483-191">Na przykład za pomocą `Raise` metoda, źródło, który wygenerował błąd może być określona w `Source` właściwości mogą być przywoływane Pomoc online dla błędu i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="83483-191">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="83483-192">Po powrocie błędach zdefiniowane przez użytkownika z obiektu, należy ustawić `Err.Number` , dodając numer wybrany kod błędu do `VbObjectError` stałej.</span><span class="sxs-lookup"><span data-stu-id="83483-192">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="83483-193">Na przykład użyć następujący kod, aby zwrócić liczbę 1051 kod błędu:</span><span class="sxs-lookup"><span data-stu-id="83483-193">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="83483-194">Ten przykład ilustruje typowym zastosowaniem `Number` właściwości w procedurze obsługi błędów.</span><span class="sxs-lookup"><span data-stu-id="83483-194">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="83483-195">W tym przykładzie użyto `Err` obiektu `Raise` metodę w celu wygenerowania oryginalny błąd w funkcji napisane w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="83483-195">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="83483-196">Funkcja wywołująca może wychwycić błąd i zgłosić do użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83483-196">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="83483-197">Należy zauważyć, że procedury `CallingProcedure` zachowanie różni się od typu informacji, które może pochodzić z `Err` obiektu z informacjami, które może pochodzić z `Exception` obiektu.</span><span class="sxs-lookup"><span data-stu-id="83483-197">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83483-198">
            <paramref name="Number" /> jest większy niż 65 535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-198">
              <paramref name="Number" /> is greater than 65535.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="83483-199">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-199">Required.</span>
          </span>
          <span data-ttu-id="83483-200">
            <see langword="Long" /> Liczba całkowita, która identyfikuje charakter błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-200">
              <see langword="Long" /> integer that identifies the nature of the error.</span>
          </span>
          <span data-ttu-id="83483-201">Błędów w Visual Basic znajdują się w zakresie 0 – 65535; zakres 0 – 512 jest zarezerwowane dla błędów systemowych; zakres 513 – 65535 jest dostępna dla błędów zdefiniowanych przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-201">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span>
          </span>
          <span data-ttu-id="83483-202">Podczas ustawiania <see langword="Number" /> właściwość własnego kodu błędu w module klasy, Dodaj numer kodu błędu w celu <see langword="vbObjectError" /> stałej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-202">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span>
          </span>
          <span data-ttu-id="83483-203">Na przykład aby wygenerować numer błędu 513, należy przypisać <c>vbObjectError + 513</c> do <see langword="Number" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-203">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span>
          </span>
        </param>
        <param name="Source">
          <span data-ttu-id="83483-204">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-204">Optional.</span>
          </span>
          <span data-ttu-id="83483-205">
            <see langword="String" /> wyrażenie nazwy obiektu lub aplikacji, który wygenerował błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-205">
              <see langword="String" /> expression naming the object or application that generated the error.</span>
          </span>
          <span data-ttu-id="83483-206">Gdy ustawienie tej właściwości dla obiektu, należy użyć formy <c>projektu</c>.<c>Klasa</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-206">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span>
          </span>
          <span data-ttu-id="83483-207">Jeśli <paramref name="Source" /> nie zostanie określony, będzie stosowany jego identyfikator procesu bieżącego projektu języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-207">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="83483-208">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-208">Optional.</span>
          </span>
          <span data-ttu-id="83483-209">
            <see langword="String" /> wyrażenie opisem błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-209">
              <see langword="String" /> expression describing the error.</span>
          </span>
          <span data-ttu-id="83483-210">Jeśli nie zostanie podany, wartość w <see langword="Number" /> właściwości jest sprawdzany pod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-210">If unspecified, the value in the <see langword="Number" /> property is examined.</span>
          </span>
          <span data-ttu-id="83483-211">Jeśli mogą być mapowane do błędów czasu wykonywania języka Visual Basic code, ciąg, który będzie zwracany przez <see langword="Error" /> funkcja jest używana jako <see langword="Description" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-211">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span>
          </span>
          <span data-ttu-id="83483-212">Jeśli nie ma błędu języka Visual Basic odpowiadający <see langword="Number" /> , komunikat "zdefiniowany przez aplikację lub zdefiniowane przez obiekt error" jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-212">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="83483-213">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-213">Optional.</span>
          </span>
          <span data-ttu-id="83483-214">W pełni kwalifikowana ścieżka do pliku pomocy, w którym można znaleźć pomoc na temat tego błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-214">The fully qualified path to the Help file in which help on this error can be found.</span>
          </span>
          <span data-ttu-id="83483-215">Jeśli nie zostanie podany, Visual Basic używa dysku w pełni kwalifikowaną, ścieżkę i nazwę pliku Pomocy programu Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-215">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span>
          </span>
        </param>
        <param name="HelpContext">
          <span data-ttu-id="83483-216">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-216">Optional.</span>
          </span>
          <span data-ttu-id="83483-217">Identyfikator kontekstu, identyfikowanie tematu w <paramref name="HelpFile" /> zapewniający pomoc dla błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-217">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span>
          </span>
          <span data-ttu-id="83483-218">Jeśli argument jest pominięty, identyfikator kontekstu pomocy plik Visual Basic błędu odpowiadający <see langword="Number" /> właściwość jest używana, jeśli taki istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-218">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83483-219">Generuje błąd w czasie wykonywania; można użyć zamiast <see langword="Error" /> instrukcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-219">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-220">Wszystkie `Raise` argumenty, z wyjątkiem `Number` są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="83483-220">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="83483-221">Jeżeli pominięto argumentów opcjonalnych, a ustawienia właściwości `Err` obiektu zawierają wartości, które nie zostały wyczyszczone, te wartości służą jako wartości błędu.</span><span class="sxs-lookup"><span data-stu-id="83483-221">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="83483-222">Ponieważ `Err` obiektu zapewnia bardziej rozbudowane informacje niż podczas generowania błędy `Error` instrukcji `Raise` generowanie błędów podczas pisania moduły klasy.</span><span class="sxs-lookup"><span data-stu-id="83483-222">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="83483-223">Na przykład za pomocą `Raise` metoda, źródło, który wygenerował błąd może być określona w `Source` właściwości mogą być przywoływane Pomoc online dla błędu i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="83483-223">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-224">W tym przykładzie użyto `Err` obiektu `Raise` metoda generuje błąd w funkcji napisane w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="83483-224">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="83483-225">Funkcja wywołująca może wychwycić błąd i zgłosić do użytkownika za pomocą okna komunikatu.</span><span class="sxs-lookup"><span data-stu-id="83483-225">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md">
          <span data-ttu-id="83483-226">Error — Instrukcja</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-226">Error Statement</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md">
          <span data-ttu-id="83483-227">On Error — Instrukcja (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-227">On Error Statement (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83483-228">Zwraca lub ustawia <see langword="String" /> wyrażenie określające nazwę obiektu lub aplikacji, który początkowo wygenerował błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-228">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="83483-229">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-229">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83483-230">Zwraca lub ustawia <see langword="String" /> wyrażenie określające nazwę obiektu lub aplikacji, który początkowo wygenerował błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-230">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="83483-231">Odczyt/zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-231">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83483-232">`Source` Właściwość określa `String` reprezentujący obiekt który wygenerował błąd; wyrażenie jest zazwyczaj nazwy klasy obiektu lub identyfikatora procesu.</span><span class="sxs-lookup"><span data-stu-id="83483-232">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="83483-233">Użyj `Source` właściwości, aby podać informacje, gdy kod jest w stanie obsłużyć błąd wygenerowany w obiekcie, do których uzyskano dostęp.</span><span class="sxs-lookup"><span data-stu-id="83483-233">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="83483-234">Na przykład, jeśli uzyskujesz dostęp do programu Microsoft Excel i generuje `Division by zero` błąd, program Microsoft Excel ustawia `Err.Number` kodowi błędu dla tego błędu i zestawów `Source` do "Excel.Application".</span><span class="sxs-lookup"><span data-stu-id="83483-234">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="83483-235">Jeśli aplikacja generuje błąd w kodzie, `Source` to identyfikator programowy aplikacji</span><span class="sxs-lookup"><span data-stu-id="83483-235">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="83483-236">W obrębie klasy `Source` powinien zawierać nazwę o postaci *projektu*. *Klasa*.</span><span class="sxs-lookup"><span data-stu-id="83483-236">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="83483-237">Sytuacji wystąpił nieoczekiwany błąd w kodzie, `Source` właściwość jest wypełniane automatycznie.</span><span class="sxs-lookup"><span data-stu-id="83483-237">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="83483-238">Błędy w module `Source` zawiera nazwę projektu.</span><span class="sxs-lookup"><span data-stu-id="83483-238">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83483-239">W tym przykładzie pokazano użycie `Source` właściwości w Typowa procedura obsługi błędów.</span><span class="sxs-lookup"><span data-stu-id="83483-239">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="83483-240">Gdy występuje błąd z `Class1`, ciąg `"Class1"` jest przypisany do `Source` właściwość `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="83483-240">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="83483-241">Ten ciąg jest następnie wyświetlana w komunikat informacyjny wskazujący źródła i numer błędu.</span><span class="sxs-lookup"><span data-stu-id="83483-241">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md">
          <span data-ttu-id="83483-242">On Error — Instrukcja (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="83483-242">On Error Statement (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>