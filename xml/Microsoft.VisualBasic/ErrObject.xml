<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcc4e16366d78f3a558eeefe9933dc0ea07eb08b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69317727" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b4c43-101">Moduł zawiera właściwości i procedury używane do identyfikowania i obsługi błędów czasu wykonywania <see langword="Err" /> przy użyciu obiektu. <see langword="ErrObject" /></span><span class="sxs-lookup"><span data-stu-id="b4c43-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-102">`ErrObject` Moduł`Err` obsługuje obiekt.</span><span class="sxs-lookup"><span data-stu-id="b4c43-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="b4c43-103">Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="b4c43-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-104">W tym przykładzie zastosowano właściwości `Err` obiektu w konstruowaniu okna dialogowego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="b4c43-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="b4c43-105">Zwróć uwagę na to, co się `Clear` dzieje, gdy najpierw używasz metody: Po wygenerowaniu Visual Basic błąd przy użyciu `Raise` metody Visual Basic wartości domyślne stają się właściwościami `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="b4c43-106">On Error — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4c43-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="b4c43-107">Try...Catch...Finally — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4c43-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="b4c43-108">Słowa kluczowe (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4c43-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="b4c43-109">Visual Basic elementy członkowskie biblioteki wykonawczej</span><span class="sxs-lookup"><span data-stu-id="b4c43-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4c43-110">Czyści wszystkie ustawienia <see langword="Err" /> właściwości obiektu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-111">Użyj `Clear` , aby jawnie `Err` wyczyścić obiekt po obsłudze błędu, na przykład w przypadku korzystania z odroczonej obsługi błędów z `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="b4c43-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="b4c43-112">`Clear` Metoda jest wywoływana automatycznie za każdym razem, gdy wykonywana jest jakakolwiek z następujących instrukcji:</span><span class="sxs-lookup"><span data-stu-id="b4c43-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="b4c43-113">Dowolny typ `Resume` instrukcji</span><span class="sxs-lookup"><span data-stu-id="b4c43-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="b4c43-114">`Exit Sub`, `Exit Function`lub`Exit Property`</span><span class="sxs-lookup"><span data-stu-id="b4c43-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="b4c43-115">Dowolna `On Error` instrukcja</span><span class="sxs-lookup"><span data-stu-id="b4c43-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="b4c43-116">Dowolna `Try...Catch...Finally` instrukcja</span><span class="sxs-lookup"><span data-stu-id="b4c43-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="b4c43-117">Konstrukcja może być preferowana w `On Error GoTo` przypadku obsługi błędów generowanych podczas uzyskiwania dostępu do innych obiektów. `On Error Resume Next`</span><span class="sxs-lookup"><span data-stu-id="b4c43-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="b4c43-118">`Err` Po każdej interakcji z obiektem jest usuwana niejednoznaczność informacji o obiekcie, do którego miał dostęp kod: Możesz mieć pewność, który obiekt został umieszczony w `Err.Number`kodzie błędu, a także który obiekt pierwotnie wygenerował błąd (obiekt określony w `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="b4c43-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-119">W tym przykładzie używa `Err` `Clear` metody obiektu do resetowania właściwości `Err` liczbowych obiektu do zera i jego właściwości ciągu do ciągów o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="b4c43-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="b4c43-120">Bez wywołania do `Clear`, drugie wywołanie w celu `MsgBox` wyświetlenia tego samego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="b4c43-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="b4c43-121">On Error — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4c43-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-122">Zwraca lub ustawia <see langword="String" /> wyrażenie zawierające opisowy ciąg skojarzony z błędem.</span><span class="sxs-lookup"><span data-stu-id="b4c43-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="b4c43-123">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="b4c43-124">Zwraca lub ustawia <see langword="String" /> wyrażenie zawierające opisowy ciąg skojarzony z błędem.</span><span class="sxs-lookup"><span data-stu-id="b4c43-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="b4c43-125">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-126">Ustawienie `Description` właściwości zawiera krótki opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="b4c43-127">Użyj tej właściwości, aby ostrzec użytkownika o błędzie, którego nie można lub nie chcesz obsłużyć.</span><span class="sxs-lookup"><span data-stu-id="b4c43-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="b4c43-128">Podczas generowania błędu zdefiniowanego przez użytkownika należy przypisać do `Description` właściwości Krótki opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="b4c43-129">Jeśli właściwość nie jest wypełniona, a wartość <xref:Microsoft.VisualBasic.ErrObject.Number%2A> właściwości odnosi się Visual Basic błędu czasu wykonywania, a następnie ciąg zwracany przez <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> funkcję jest ustawiany we `Description` właściwości po wygenerowaniu błędu. `Description`</span><span class="sxs-lookup"><span data-stu-id="b4c43-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-130">Ten przykład przypisuje zdefiniowany przez użytkownika komunikat do `Description` właściwości `Err` obiektu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-131">Pobiera liczbę całkowitą wskazującą numer wiersza ostatniej wykonanej instrukcji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-131">Gets an integer indicating the line number of the last executed statement.</span></span></summary>
        <value><span data-ttu-id="b4c43-132">Numer wiersza ostatniej wykonanej instrukcji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-132">The line number of the last executed statement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-133">Jeśli Visual Basic napotka numery wierszy, zwraca 0.</span><span class="sxs-lookup"><span data-stu-id="b4c43-133">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-134">Ten przykład używa `Erl` właściwości, aby wskazać numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="b4c43-134">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4c43-135">Zwraca wyjątek reprezentujący błąd, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="b4c43-135">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="b4c43-136">Wyjątek reprezentujący błąd, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="b4c43-136">The exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-137">Funkcja jest dostępna tylko `Err` z klasy Object. `GetException`</span><span class="sxs-lookup"><span data-stu-id="b4c43-137">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="b4c43-138">Działa z `Exception` właściwością `Err` obiektu, aby wyświetlić błąd, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="b4c43-138">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-139">Poniższy kod wyświetla komunikat przypisany do wyjątku w `Err` obiekcie:</span><span class="sxs-lookup"><span data-stu-id="b4c43-139">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-140">Zwraca lub ustawia <see langword="Integer" /> zawierający identyfikator kontekstu dla tematu w pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-140">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="b4c43-141">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-141">Read/write.</span></span></summary>
        <value><span data-ttu-id="b4c43-142">Zwraca lub ustawia <see langword="Integer" /> zawierający identyfikator kontekstu dla tematu w pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="b4c43-143">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-143">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-144">`HelpContext` Właściwość służy do wyświetlania pomocy kontekstowej dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-144">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="b4c43-145">Jeśli w programie `HelpFile`jest określony plik pomocy `HelpContext` , właściwość jest używana do automatycznego wyświetlania wskazanego pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-145">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="b4c43-146">Jeśli obie `HelpFile` właściwości i `HelpContext` są puste <xref:Microsoft.VisualBasic.ErrObject.Number%2A> , wartość właściwości jest sprawdzana.</span><span class="sxs-lookup"><span data-stu-id="b4c43-146">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="b4c43-147">Jeśli wartość `Number` właściwości odpowiada Visual Basic wartość błędu czasu wykonywania, zostanie użyty identyfikator kontekstu pomocy Visual Basic dla danego błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-147">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="b4c43-148">Jeśli wartość `Number` właściwości nie odpowiada błędowi Visual Basic, zostanie wyświetlony ekran zawartość dla Visual Basic pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-148">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4c43-149">Aby obsłużyć typowe błędy, należy napisać procedury w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-149">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="b4c43-150">Podczas programowania z obiektem, można użyć pliku pomocy obiektu, aby poprawić jakość obsługi błędów lub wyświetlić zrozumiały komunikat dla użytkownika, jeśli błąd nie jest możliwy do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="b4c43-150">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-151">W tym przykładzie zastosowano `HelpContext` Właściwość `Err` obiektu, aby wyświetlić `Overflow` Visual Basic tematu pomocy dla błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-151">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-152">Zwraca lub ustawia <see langword="String" /> wyrażenie zawierające w pełni kwalifikowaną ścieżkę do pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-152">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="b4c43-153">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-153">Read/write.</span></span></summary>
        <value><span data-ttu-id="b4c43-154">Zwraca lub ustawia <see langword="String" /> wyrażenie zawierające w pełni kwalifikowaną ścieżkę do pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="b4c43-155">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-155">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-156">Jeśli plik pomocy jest określony przez `HelpFile` właściwość, jest on automatycznie wywoływany, gdy użytkownik naciśnie klawisz pomocy (lub klawisz F1) w oknie dialogowym komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="b4c43-156">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="b4c43-157">`HelpContext` Jeśli właściwość zawiera prawidłowy identyfikator kontekstu dla określonego pliku, ten temat jest automatycznie wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="b4c43-157">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="b4c43-158">Jeśli nie `HelpFile` zostanie określony, zostanie wyświetlony plik pomocy Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b4c43-158">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4c43-159">Aby obsłużyć typowe błędy, należy napisać procedury w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-159">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="b4c43-160">Podczas programowania z obiektem, można użyć pliku pomocy obiektu, aby poprawić jakość obsługi błędów lub wyświetlić zrozumiały komunikat dla użytkownika, jeśli błąd nie jest możliwy do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="b4c43-160">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-161">W tym przykładzie zastosowano `HelpFile` Właściwość `Err` obiektu do uruchomienia systemu pomocy.</span><span class="sxs-lookup"><span data-stu-id="b4c43-161">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="b4c43-162">Domyślnie `HelpFile` Właściwość zawiera nazwę pliku pomocy Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b4c43-162">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-163">Pobiera kod błędu systemu wytwarzany przez wywołanie do biblioteki dołączanej dynamicznie (DLL).</span><span class="sxs-lookup"><span data-stu-id="b4c43-163">Gets a system error code produced by a call to a dynamic-link library (DLL).</span></span></summary>
        <value><span data-ttu-id="b4c43-164">Kod błędu systemu wytwarzany przez wywołanie do biblioteki dołączanej dynamicznie (DLL).</span><span class="sxs-lookup"><span data-stu-id="b4c43-164">A system error code produced by a call to a dynamic-link library (DLL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-165"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Właściwość dotyczy tylko wywołań dll wykonanych z Visual Basic kodzie.</span><span class="sxs-lookup"><span data-stu-id="b4c43-165">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="b4c43-166">Gdy takie wywołanie zostało wykonane, wywoływana funkcja zwykle zwraca kod wskazujący powodzenie lub niepowodzenie, a <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> właściwość jest wypełniana.</span><span class="sxs-lookup"><span data-stu-id="b4c43-166">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="b4c43-167">Zapoznaj się z dokumentacją funkcji biblioteki DLL, aby określić wartości zwracane wskazujące powodzenie lub niepowodzenie.</span><span class="sxs-lookup"><span data-stu-id="b4c43-167">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="b4c43-168">Za każdym razem, gdy zwracany jest kod błędu, aplikacja Visual Basic powinna natychmiast <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> sprawdzić właściwość.</span><span class="sxs-lookup"><span data-stu-id="b4c43-168">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="b4c43-169">Wyjątek nie jest wywoływany, <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> gdy właściwość jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="b4c43-169">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4c43-170">Właściwość jest chroniona przez <xref:System.Security.Permissions.SecurityAction.LinkDemand>, co uniemożliwia dostęp do nich z niezaufanego kodu. <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A></span><span class="sxs-lookup"><span data-stu-id="b4c43-170">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="b4c43-171">Jednak do uzyskania <xref:System.Security.Permissions.SecurityAction.LinkDemand> uprawnieńwymaganyjesttylko<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> bezpośredni obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="b4c43-171">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="b4c43-172">Jeśli kod można wywołać z częściowo zaufanego kodu, ujawnienie wartości <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> bez sprawdzania poprawności jest ryzykowne dla bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="b4c43-172">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="b4c43-173">Aby uzyskać ważne ograniczenia dotyczące korzystania z <xref:System.Security.Permissions.SecurityAction.LinkDemand> elementu członkowskiego, zobacz [żądanie a LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="b4c43-173">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="b4c43-174">Aby uzyskać więcej informacji o uprawnieniach <xref:System.Security.Permissions.SecurityPermission> , zobacz i [uprawnienia dostępu do kodu](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="b4c43-174">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="b4c43-175">Uwaga dla urządzeń inteligentnych ta właściwość zawsze zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="b4c43-175">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-176">Poniższy przykład pokazuje, `LastDllError` jak można użyć właściwości po wywołaniu funkcji w interfejsie API systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="b4c43-176">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="b4c43-177">Procedura przyjmuje dojście do okna i `GetWindowRect` wywołuje funkcję. `PrintWindowCoordinates`</span><span class="sxs-lookup"><span data-stu-id="b4c43-177">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="b4c43-178">`GetWindowRect`wypełnia strukturę danych RECT długością boków prostokąta, które tworzą okno.</span><span class="sxs-lookup"><span data-stu-id="b4c43-178">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="b4c43-179">W przypadku przekazania nieprawidłowego dojścia wystąpi błąd i numer błędu jest dostępny za pomocą `LastDllError` właściwości.</span><span class="sxs-lookup"><span data-stu-id="b4c43-179">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-180">Zwraca lub ustawia wartość liczbową określającą błąd.</span><span class="sxs-lookup"><span data-stu-id="b4c43-180">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="b4c43-181">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-181">Read/write.</span></span></summary>
        <value><span data-ttu-id="b4c43-182">Zwraca lub ustawia wartość liczbową określającą błąd.</span><span class="sxs-lookup"><span data-stu-id="b4c43-182">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="b4c43-183">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-183">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-184">Wszystkie argumenty z wyjątkiem `Number` są opcjonalne. `Raise`</span><span class="sxs-lookup"><span data-stu-id="b4c43-184">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="b4c43-185">W przypadku pominięcia argumentów opcjonalnych, a ustawienia `Err` właściwości obiektu zawierają wartości, które nie zostały wyczyszczone, te wartości będą stanowić wartość błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-185">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="b4c43-186">Ponieważ obiekt zawiera bogatsze informacje, niż w przypadku generowania błędów `Error` przy użyciu instrukcji, `Raise` jest przydatny do generowania błędów podczas pisania modułów klas. `Err`</span><span class="sxs-lookup"><span data-stu-id="b4c43-186">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="b4c43-187">Na przykład przy użyciu `Raise` metody źródło, które wygenerowało błąd, może być określone `Source` we właściwości, można odwołać się do pomocy online dotyczącej błędu i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="b4c43-187">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="b4c43-188">Gdy zwracasz błąd zdefiniowany przez użytkownika z obiektu, ustaw `Err.Number` , dodając wybrany numer jako kod błędu `VbObjectError` do stałej.</span><span class="sxs-lookup"><span data-stu-id="b4c43-188">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="b4c43-189">Na przykład, użyj następującego kodu, aby zwrócić numer 1051 jako kod błędu:</span><span class="sxs-lookup"><span data-stu-id="b4c43-189">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-190">Ten przykład ilustruje typowy sposób użycia `Number` właściwości w procedurze obsługi błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-190">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="b4c43-191">W tym przykładzie zastosowano `Err` `Raise` metodę obiektu do wygenerowania oryginalnego błędu w ramach funkcji zarejestrowanej w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b4c43-191">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="b4c43-192">Funkcja wywołująca może przechwycić błąd i zgłosić go użytkownikowi.</span><span class="sxs-lookup"><span data-stu-id="b4c43-192">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="b4c43-193">Należy zauważyć, `CallingProcedure` że procedura odróżni typ informacji, które można utworzyć `Err` na podstawie obiektu z informacjami, które można utworzyć na podstawie `Exception` obiektu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-193">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4c43-194"><paramref name="Number" />jest większa niż 65535.</span><span class="sxs-lookup"><span data-stu-id="b4c43-194"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="b4c43-195">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="b4c43-195">Required.</span></span> <span data-ttu-id="b4c43-196"><see langword="Long" />Liczba całkowita, która identyfikuje charakter błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-196"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="b4c43-197">Błędy Visual Basic są w zakresie 0-65535; zakres 0-512 jest zarezerwowany dla błędów systemowych; zakres 513-65535 jest dostępny dla błędów zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="b4c43-197">Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.</span></span> <span data-ttu-id="b4c43-198">Podczas ustawiania <see langword="Number" /> właściwości na własny kod błędu w module klasy należy dodać numer kodu błędu <see langword="vbObjectError" /> do stałej.</span><span class="sxs-lookup"><span data-stu-id="b4c43-198">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="b4c43-199">Na przykład, aby wygenerować numer błędu 513, przypisz <c>VbObjectError + 513</c> do <see langword="Number" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="b4c43-199">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="b4c43-200">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="b4c43-200">Optional.</span></span> <span data-ttu-id="b4c43-201"><see langword="String" />wyrażenie określające nazwę obiektu lub aplikacji, która spowodowała wygenerowanie błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-201"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="b4c43-202">Podczas ustawiania tej właściwości dla obiektu należy użyć <c>projektu</c>formularza. <c>Klasa</c>.</span><span class="sxs-lookup"><span data-stu-id="b4c43-202">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="b4c43-203">Jeśli <paramref name="Source" /> nie jest określony, zostanie użyty identyfikator procesu bieżącego projektu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b4c43-203">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="b4c43-204">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="b4c43-204">Optional.</span></span> <span data-ttu-id="b4c43-205"><see langword="String" />wyrażenie opisujące błąd.</span><span class="sxs-lookup"><span data-stu-id="b4c43-205"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="b4c43-206">Jeśli nie zostanie określony, wartość we <see langword="Number" /> właściwości zostanie zbadana.</span><span class="sxs-lookup"><span data-stu-id="b4c43-206">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="b4c43-207">Jeśli można ją zmapować na Visual Basic kod błędu czasu wykonywania, ciąg, który będzie zwracany przez <see langword="Error" /> funkcję, jest używany <see langword="Description" /> jako właściwość.</span><span class="sxs-lookup"><span data-stu-id="b4c43-207">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="b4c43-208">Jeśli nie ma Visual Basic błędu odpowiadającego <see langword="Number" /> właściwości, używany jest komunikat "błąd zdefiniowany przez aplikację lub zdefiniowany obiekt".</span><span class="sxs-lookup"><span data-stu-id="b4c43-208">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="b4c43-209">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="b4c43-209">Optional.</span></span> <span data-ttu-id="b4c43-210">W pełni kwalifikowana ścieżka do pliku pomocy, w którym można znaleźć pomoc dotyczącą tego błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-210">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="b4c43-211">Jeśli nie określono tego parametru, Visual Basic używa w pełni kwalifikowanego dysku, ścieżki i nazwy pliku pomocy Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b4c43-211">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="b4c43-212">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="b4c43-212">Optional.</span></span> <span data-ttu-id="b4c43-213">Identyfikator kontekstu identyfikujący temat w programie <paramref name="HelpFile" /> , który zawiera pomoc dotyczącą tego błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-213">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="b4c43-214">W przypadku pominięcia zostanie użyta Visual Basic identyfikator kontekstu pliku dla błędu odpowiadającego <see langword="Number" /> właściwości, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="b4c43-214">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="b4c43-215">Generuje błąd czasu wykonywania; może być użyty zamiast <see langword="Error" /> instrukcji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-215">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-216">Wszystkie argumenty z wyjątkiem `Number` są opcjonalne. `Raise`</span><span class="sxs-lookup"><span data-stu-id="b4c43-216">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="b4c43-217">W przypadku pominięcia argumentów opcjonalnych, a ustawienia `Err` właściwości obiektu zawierają wartości, które nie zostały wyczyszczone, te wartości będą stanowić wartość błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-217">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="b4c43-218">Ponieważ obiekt zawiera bogatsze informacje, niż w przypadku generowania błędów `Error` przy użyciu instrukcji, `Raise` jest przydatny do generowania błędów podczas pisania modułów klas. `Err`</span><span class="sxs-lookup"><span data-stu-id="b4c43-218">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="b4c43-219">Na przykład przy użyciu `Raise` metody źródło, które wygenerowało błąd, może być określone `Source` we właściwości, można odwołać się do pomocy online dotyczącej błędu i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="b4c43-219">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-220">W tym przykładzie zastosowano `Err` `Raise` metodę obiektu do wygenerowania błędu w funkcji, która jest zapisywana w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b4c43-220">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="b4c43-221">Funkcja wywołująca może przechwycić błąd i zgłosić go użytkownikowi przy użyciu okna komunikatu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-221">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="b4c43-222">Error — Instrukcja</span><span class="sxs-lookup"><span data-stu-id="b4c43-222">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="b4c43-223">On Error — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4c43-223">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4c43-224">Zwraca lub ustawia <see langword="String" /> wyrażenie określające nazwę obiektu lub aplikacji, które pierwotnie wygenerowały błąd.</span><span class="sxs-lookup"><span data-stu-id="b4c43-224">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="b4c43-225">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-225">Read/write.</span></span></summary>
        <value><span data-ttu-id="b4c43-226">Zwraca lub ustawia <see langword="String" /> wyrażenie określające nazwę obiektu lub aplikacji, które pierwotnie wygenerowały błąd.</span><span class="sxs-lookup"><span data-stu-id="b4c43-226">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="b4c43-227">Odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="b4c43-227">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4c43-228">`Source` Właściwość`String` określa wyrażenie reprezentujące obiekt, który wygenerował błąd; wyrażenie jest zazwyczaj nazwą klasy obiektu lub identyfikatorem procesu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-228">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="b4c43-229">Użyj właściwości `Source` , aby podać informacje, gdy kod nie może obsłużyć błędu wygenerowanego w obiekcie, do którego uzyskuje się dostęp.</span><span class="sxs-lookup"><span data-stu-id="b4c43-229">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="b4c43-230">Jeśli na przykład masz dostęp do programu Microsoft Excel i wygeneruje `Division by zero` on błąd, program Microsoft `Err.Number` Excel ustawi kod błędu dla tego błędu i ustawi `Source` wartość "Excel. Application".</span><span class="sxs-lookup"><span data-stu-id="b4c43-230">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="b4c43-231">Gdy aplikacja generuje błąd z kodu, `Source` jest identyfikatorem programistycznym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b4c43-231">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="b4c43-232">W klasie `Source` powinna zawierać nazwę mającą *projekt*formularza. *Klasa*.</span><span class="sxs-lookup"><span data-stu-id="b4c43-232">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="b4c43-233">Gdy w kodzie wystąpi nieoczekiwany błąd, `Source` właściwość jest wypełniana automatycznie.</span><span class="sxs-lookup"><span data-stu-id="b4c43-233">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="b4c43-234">W przypadku błędów w module program `Source` zawiera nazwę projektu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-234">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4c43-235">Ten przykład ilustruje użycie `Source` właściwości w typowej procedurze obsługi błędów.</span><span class="sxs-lookup"><span data-stu-id="b4c43-235">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="b4c43-236">Gdy błąd jest wywoływany z `Class1`, ciąg `"Class1"` jest przypisywany `Err` do `Source` właściwości obiektu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-236">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="b4c43-237">Ten ciąg jest następnie wyświetlany w komunikatach informacyjnych informujących o źródle i numerze błędu.</span><span class="sxs-lookup"><span data-stu-id="b4c43-237">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="b4c43-238">On Error — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4c43-238">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
