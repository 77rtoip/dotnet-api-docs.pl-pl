<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ae76229b66a7a71d521a64a406df63f7e7cf230" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69317490" /></Metadata><TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="61b4f-101"><see langword="Information" /> Moduł zawiera procedury używane do zwracania, testowania lub weryfikowania informacji.</span><span class="sxs-lookup"><span data-stu-id="61b4f-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-102">Ten moduł obsługuje słowa kluczowe języka Visual Basic i elementy członkowskie biblioteki wykonawczej, które zawierają informacje o błędzie, weryfikują dane, określają granice tablicy i pobierają informacje o typie danych i kolorach.</span><span class="sxs-lookup"><span data-stu-id="61b4f-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-103">Poniższy przykład używa funkcji, `VbTypeName` aby zwrócić nazwy typów danych dla kilku zmiennych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md"><span data-ttu-id="61b4f-104">Informacja i interakcja — Podsumowanie</span><span class="sxs-lookup"><span data-stu-id="61b4f-104">Information and Interaction Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/data-types-summary.md"><span data-ttu-id="61b4f-105">Typy danych — podsumowanie</span><span class="sxs-lookup"><span data-stu-id="61b4f-105">Data Types Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/declarations-and-constants-summary.md"><span data-ttu-id="61b4f-106">Deklaracje i stałe — podsumowanie</span><span class="sxs-lookup"><span data-stu-id="61b4f-106">Declarations and Constants Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="61b4f-107">Słowa kluczowe (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-107">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="61b4f-108">Visual Basic elementy członkowskie biblioteki wykonawczej</span><span class="sxs-lookup"><span data-stu-id="61b4f-108">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61b4f-109">Zwraca liczbę całkowitą określającą liczbę wierszy ostatniej wykonanej instrukcji.</span><span class="sxs-lookup"><span data-stu-id="61b4f-109">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="61b4f-110">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-110">Read-only.</span></span></summary>
        <returns><span data-ttu-id="61b4f-111">Zwraca liczbę całkowitą określającą liczbę wierszy ostatniej wykonanej instrukcji.</span><span class="sxs-lookup"><span data-stu-id="61b4f-111">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="61b4f-112">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-112">Read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-113">Jeśli Visual Basic napotka numery wierszy, zwraca 0.</span><span class="sxs-lookup"><span data-stu-id="61b4f-113">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-114">Ten przykład używa `Erl` właściwości, aby wskazać numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="61b4f-114">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61b4f-115">Zawiera informacje o błędach czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="61b4f-115">Contains information about run-time errors.</span></span></summary>
        <returns><span data-ttu-id="61b4f-116">Zawiera informacje o błędach czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="61b4f-116">Contains information about run-time errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-117">Właściwości `Err` obiektu są ustawiane przez generator błędu-Visual Basic, obiektu lub programisty.</span><span class="sxs-lookup"><span data-stu-id="61b4f-117">The properties of the `Err` object are set by the generator of an error - Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="61b4f-118">Gdy wystąpi błąd czasu wykonywania, właściwości `Err` obiektu są wypełniane informacjami, które jednoznacznie identyfikują błąd i można użyć do obsłużenia błędu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-118">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="61b4f-119">Aby wygenerować błąd czasu wykonywania w kodzie, użyj `Raise` metody.</span><span class="sxs-lookup"><span data-stu-id="61b4f-119">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="61b4f-120">`Resume Next` `Exit Property` `Exit Function` `Exit Sub`Właściwości obiektu są resetowane do ciągów zero lub o zerowej długości ("") po instrukcji,, lub w ramach procedury obsługi błędu. `Err`</span><span class="sxs-lookup"><span data-stu-id="61b4f-120">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="61b4f-121">Użycie jakiejkolwiek formy `Resume` instrukcji poza procedurą obsługi błędów nie spowoduje `Err` zresetowania właściwości obiektu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-121">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="61b4f-122">Możesz użyć `Clear` metody do jawnego resetowania `Err`.</span><span class="sxs-lookup"><span data-stu-id="61b4f-122">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="61b4f-123">Użyj metody zamiast instrukcji, `Error` aby generować błędy w czasie wykonywania dla błędów systemowych i modułów klas. `Raise`</span><span class="sxs-lookup"><span data-stu-id="61b4f-123">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="61b4f-124">Decyzja o tym, `Raise` czy metoda w innym kodzie jest używana, zależy od rozbudowanych informacji, które mają zostać zwrócone.</span><span class="sxs-lookup"><span data-stu-id="61b4f-124">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="61b4f-125">`Err` Obiekt jest obiektem wewnętrznym z zakresem globalnym.</span><span class="sxs-lookup"><span data-stu-id="61b4f-125">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="61b4f-126">W związku z tym nie trzeba tworzyć wystąpienia go w kodzie.</span><span class="sxs-lookup"><span data-stu-id="61b4f-126">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-127">W tym przykładzie zastosowano właściwości `Err` obiektu w konstruowaniu okna dialogowego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="61b4f-127">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="61b4f-128">Należy zauważyć, że jeśli najpierw `Clear` używasz metody, podczas generowania Visual Basic błąd `Raise` przy użyciu metody Visual Basic wartości domyślne `Err` stają się właściwościami obiektu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-128">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="61b4f-129">Error — Instrukcja</span><span class="sxs-lookup"><span data-stu-id="61b4f-129">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="61b4f-130">On Error — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-130">On Error Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/exit-statement.md"><span data-ttu-id="61b4f-131">Exit — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-131">Exit Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/resume-statement.md"><span data-ttu-id="61b4f-132">Resume — Instrukcja</span><span class="sxs-lookup"><span data-stu-id="61b4f-132">Resume Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/error-messages/index.md"><span data-ttu-id="61b4f-133">Komunikaty o błędach (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-133">Error Messages (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="61b4f-134">Try...Catch...Finally — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-134">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="61b4f-135">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="61b4f-135">Required.</span></span> <span data-ttu-id="61b4f-136"><see langword="Object" />zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-136"><see langword="Object" /> variable.</span></span></param>
        <summary><span data-ttu-id="61b4f-137"><see langword="Boolean" /> Zwraca wartość wskazującą, czy zmienna wskazuje tablicę.</span><span class="sxs-lookup"><span data-stu-id="61b4f-137">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></summary>
        <returns><span data-ttu-id="61b4f-138"><see langword="Boolean" /> Zwraca wartość wskazującą, czy zmienna wskazuje tablicę.</span><span class="sxs-lookup"><span data-stu-id="61b4f-138">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-139">`IsArray`zwraca `True` czy zmienna wskazuje tablicę; w przeciwnym razie zwraca wartość `False`.</span><span class="sxs-lookup"><span data-stu-id="61b4f-139">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="61b4f-140">`IsArray`jest szczególnie przydatna w przypadku obiektów, które mogą zawierać tablice.</span><span class="sxs-lookup"><span data-stu-id="61b4f-140">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-141">Ten przykład używa funkcji `IsArray` , aby sprawdzić, czy kilka zmiennych odwołuje się do tablicy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-141">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/arrays/index.md"><span data-ttu-id="61b4f-142">Tablice w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="61b4f-142">Arrays in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="61b4f-143">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="61b4f-143">Required.</span></span> <span data-ttu-id="61b4f-144"><see langword="Object" />wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-144"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="61b4f-145">Zwraca wartość wskazującą czy wyrażenie reprezentuje prawidłową <see langword="Date" /> wartość. <see langword="Boolean" /></span><span class="sxs-lookup"><span data-stu-id="61b4f-145">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="61b4f-146">Zwraca wartość wskazującą czy wyrażenie reprezentuje prawidłową <see langword="Date" /> wartość. <see langword="Boolean" /></span><span class="sxs-lookup"><span data-stu-id="61b4f-146">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-147">`IsDate`zwraca `True` wartość `Expression` , jeśli jest <xref:System.DateTime> typem danych lub można ją przekonwertować na nią; w przeciwnym razie zwraca `False`wartość.</span><span class="sxs-lookup"><span data-stu-id="61b4f-147">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="61b4f-148">Typ <xref:System.DateTime> danych zawiera zarówno wartość daty, jak i wartość czasu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-148">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="61b4f-149">`IsDate`zwraca `True` wartość `Expression` , jeśli reprezentuje prawidłową datę, prawidłowy czas lub prawidłową datę i godzinę.</span><span class="sxs-lookup"><span data-stu-id="61b4f-149">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-150">Poniższy przykład używa funkcji, `IsDate` aby określić, czy kilka zmiennych reprezentuje prawidłowe <xref:System.DateTime> wartości.</span><span class="sxs-lookup"><span data-stu-id="61b4f-150">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="61b4f-151">W powyższym przykładzie `IsDate` zwraca `True` dla pierwszych czterech wywołań i `False` dla ostatniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="61b4f-151">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="61b4f-152">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-152">Required.</span></span> <span data-ttu-id="61b4f-153"><see langword="Object" />wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-153"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="61b4f-154">Zwraca wartość wskazującą, <see cref="T:System.DBNull" /> czy wyrażenie szacuje klasę. <see langword="Boolean" /></span><span class="sxs-lookup"><span data-stu-id="61b4f-154">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></summary>
        <returns><span data-ttu-id="61b4f-155">Zwraca wartość wskazującą, <see cref="T:System.DBNull" /> czy wyrażenie szacuje klasę. <see langword="Boolean" /></span><span class="sxs-lookup"><span data-stu-id="61b4f-155">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-156">`IsDBNull`zwraca `True` <xref:System.DBNull> czy `IsDBNull` typ danych `False`jest obliczany dla typu; w przeciwnym razie zwraca. `Expression`</span><span class="sxs-lookup"><span data-stu-id="61b4f-156">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="61b4f-157"><xref:System.DBNull?displayProperty=nameWithType> Wartość wskazuje `Object` , że reprezentuje brakujące lub nieistniejące dane.</span><span class="sxs-lookup"><span data-stu-id="61b4f-157">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="61b4f-158">`DBNull`nie jest taka sama jak `Nothing`, co oznacza, że zmienna nie została jeszcze zainicjowana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-158">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="61b4f-159">`DBNull`nie jest również taka sama jak ciąg o zerowej długości (`""`), który jest czasami określany jako ciąg o wartości null.</span><span class="sxs-lookup"><span data-stu-id="61b4f-159">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-160">Ten przykład używa funkcji `IsDBNull` , aby określić, czy zmienna szacuje `DBNull`wartość.</span><span class="sxs-lookup"><span data-stu-id="61b4f-160">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="61b4f-161">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="61b4f-161">Required.</span></span> <span data-ttu-id="61b4f-162"><see langword="Object" />wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-162"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="61b4f-163"><see langword="Boolean" /> Zwraca wartość wskazującą, czy wyrażenie jest typu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="61b4f-163">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></summary>
        <returns><span data-ttu-id="61b4f-164"><see langword="Boolean" /> Zwraca wartość wskazującą, czy wyrażenie jest typu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="61b4f-164">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-165">`IsError`zwraca `True` czy wyrażenie `Object` reprezentuje <xref:System> zmienną, która pochodzi od klasywprzestrzeninazw.<xref:System.Exception></span><span class="sxs-lookup"><span data-stu-id="61b4f-165">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="61b4f-166">Wyjątek pochodzący z <xref:System.Exception?displayProperty=nameWithType> można przechwycić `Try...Catch...Finally` za pomocą instrukcji.</span><span class="sxs-lookup"><span data-stu-id="61b4f-166">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-167">Poniższy przykład używa funkcji, `IsError` aby sprawdzić, czy wyrażenie reprezentuje wyjątek systemowy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-167">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="61b4f-168">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="61b4f-168">Required.</span></span> <span data-ttu-id="61b4f-169"><see langword="Object" />wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-169"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="61b4f-170"><see langword="Boolean" /> Zwraca wartość wskazującą, czy do wyrażenia nie jest przypisany obiekt.</span><span class="sxs-lookup"><span data-stu-id="61b4f-170">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></summary>
        <returns><span data-ttu-id="61b4f-171"><see langword="Boolean" /> Zwraca wartość wskazującą, czy do wyrażenia nie jest przypisany obiekt.</span><span class="sxs-lookup"><span data-stu-id="61b4f-171">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-172">`IsNothing`zwraca `True` czy wyrażenie reprezentuje zmienną obiektu, która aktualnie nie ma przypisanego obiektu; w przeciwnym razie zwraca wartość `False`.</span><span class="sxs-lookup"><span data-stu-id="61b4f-172">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="61b4f-173">`IsNothing`jest przeznaczony do pracy na typach referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-173">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="61b4f-174">Typ wartości nie może zawierać wartości [Nothing](~/docs/visual-basic/language-reference/nothing.md) i przywraca jej wartość domyślną, jeśli zostanie do niej przypisany `Nothing` .</span><span class="sxs-lookup"><span data-stu-id="61b4f-174">A value type cannot hold a value of [Nothing](~/docs/visual-basic/language-reference/nothing.md) and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="61b4f-175">W przypadku podania typu wartości w `Expression`, `IsNothing` program zawsze `False`zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="61b4f-175">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-176">Poniższy przykład używa funkcji, `IsNothing` aby określić, czy zmienna obiektu jest skojarzona z dowolnym wystąpieniem obiektu.</span><span class="sxs-lookup"><span data-stu-id="61b4f-176">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="61b4f-177">Typy wartości i odwołań</span><span class="sxs-lookup"><span data-stu-id="61b4f-177">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="61b4f-178">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-178">Required.</span></span> <span data-ttu-id="61b4f-179"><see langword="Object" />wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-179"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="61b4f-180"><see langword="Boolean" /> Zwraca wartość wskazującą, czy wyrażenie może być oceniane jako liczba.</span><span class="sxs-lookup"><span data-stu-id="61b4f-180">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></summary>
        <returns><span data-ttu-id="61b4f-181"><see langword="Boolean" /> Zwraca wartość wskazującą, czy wyrażenie może być oceniane jako liczba.</span><span class="sxs-lookup"><span data-stu-id="61b4f-181">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-182">`IsNumeric`zwraca `True` `Boolean`czy Typdanych`Byte` to,`UInteger` ,, ,,`Double`,,, ,`Single` `Integer` `Long` `Decimal` `Expression` `SByte` `Short` , `ULong`lub .`UShort`</span><span class="sxs-lookup"><span data-stu-id="61b4f-182">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="61b4f-183">Zwraca `True` również wtedy `Char`, `Expression` gdy jest, `String`lub `Object` można pomyślnie przekonwertować na liczbę.</span><span class="sxs-lookup"><span data-stu-id="61b4f-183">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="61b4f-184">`Expression`może zawierać znaki niebędące cyframi.</span><span class="sxs-lookup"><span data-stu-id="61b4f-184">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="61b4f-185">`IsNumeric`zwraca `True` wartość `Expression` , jeśli jest ciągiem zawierającym prawidłową liczbę szesnastkową lub ósemkową.</span><span class="sxs-lookup"><span data-stu-id="61b4f-185">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="61b4f-186">`IsNumeric`zwraca również `True` wartość `Expression` , jeśli zawiera prawidłowe wyrażenie liczbowe zaczynające się od znaku + lub-lub zawiera przecinki.</span><span class="sxs-lookup"><span data-stu-id="61b4f-186">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="61b4f-187">`IsNumeric`zwraca `False` wartość `Expression` , jeśli jest typem `Date`danych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-187">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="61b4f-188">`False` `Expression` Zwraca ,`Char`jeśli jest, lubnie`Object` można pomyślnie przekonwertować na liczbę. `String`</span><span class="sxs-lookup"><span data-stu-id="61b4f-188">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-189">Poniższy przykład używa funkcji, `IsNumeric` aby określić, czy zawartość zmiennej może być oceniona jako liczba.</span><span class="sxs-lookup"><span data-stu-id="61b4f-189">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="61b4f-190">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-190">Required.</span></span> <span data-ttu-id="61b4f-191"><see langword="Object" />wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-191"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="61b4f-192"><see langword="Boolean" /> Zwraca wartość wskazującą, czy wyrażenie daje w wyniku typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="61b4f-192">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></summary>
        <returns><span data-ttu-id="61b4f-193"><see langword="Boolean" /> Zwraca wartość wskazującą, czy wyrażenie daje w wyniku typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="61b4f-193">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-194">`IsReference`zwraca `True` wartość `Expression` , jeśli reprezentuje typ referencyjny, taki jak wystąpienie klasy, `String` typ lub tablica dowolnego typu; w przeciwnym razie zwraca wartość `False`.</span><span class="sxs-lookup"><span data-stu-id="61b4f-194">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="61b4f-195">Typ odwołania zawiera wskaźnik do danych przechowywanych w innym miejscu w pamięci.</span><span class="sxs-lookup"><span data-stu-id="61b4f-195">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="61b4f-196">Typ wartości zawiera własne dane.</span><span class="sxs-lookup"><span data-stu-id="61b4f-196">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-197">Ten przykład używa funkcji `IsReference` , aby sprawdzić, czy kilka zmiennych odwołuje się do typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-197">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="61b4f-198">W poprzednim przykładzie pierwsze trzy wywołania `IsReference` zwracają. `True`</span><span class="sxs-lookup"><span data-stu-id="61b4f-198">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="61b4f-199">Ostatnie wywołanie zwraca `False`, ponieważ `Integer` jest typem wartości, a nie typem referencyjnym.</span><span class="sxs-lookup"><span data-stu-id="61b4f-199">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="61b4f-200">Typy wartości i odwołań</span><span class="sxs-lookup"><span data-stu-id="61b4f-200">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="61b4f-201">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-201">Required.</span></span> <span data-ttu-id="61b4f-202">Tablica dowolnego typu danych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-202">Array of any data type.</span></span> <span data-ttu-id="61b4f-203">Tablica, w której ma zostać znaleziony najniższy możliwy indeks dolny wymiaru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-203">The array in which you want to find the lowest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="61b4f-204">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="61b4f-204">Optional.</span></span> <span data-ttu-id="61b4f-205"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="61b4f-205"><see langword="Integer" />.</span></span> <span data-ttu-id="61b4f-206">Wymiar, dla którego ma zostać zwrócony najniższy możliwy indeks dolny.</span><span class="sxs-lookup"><span data-stu-id="61b4f-206">The dimension for which the lowest possible subscript is to be returned.</span></span> <span data-ttu-id="61b4f-207">Użyj 1 dla pierwszego wymiaru, 2 dla drugiego i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-207">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="61b4f-208">W <paramref name="Rank" /> przypadku pominięcia przyjmowana jest wartość 1.</span><span class="sxs-lookup"><span data-stu-id="61b4f-208">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="61b4f-209">Zwraca najniższy dostępny indeks dolny dla wskazanego wymiaru tablicy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-209">Returns the lowest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="61b4f-210"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="61b4f-210"><see langword="Integer" />.</span></span> <span data-ttu-id="61b4f-211">Najniższa wartość, którą może zawierać indeks dolny określonego wymiaru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-211">The lowest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="61b4f-212"><see langword="LBound" />zawsze zwraca wartość 0, o <paramref name="Array" /> ile została zainicjowana, nawet jeśli nie ma elementów, na przykład jeśli jest ciągiem o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="61b4f-212"><see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span></span> <span data-ttu-id="61b4f-213">Jeśli <paramref name="Array" /> jest <see langword="Nothing" />, zgłasza<see langword="LBound" /> . <see cref="T:System.ArgumentNullException" /></span><span class="sxs-lookup"><span data-stu-id="61b4f-213">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-214">Ponieważ indeksy dolne tablicy zaczynają się od 0, najniższy dostępny indeks dolny dla każdego wymiaru jest zawsze równy 0.</span><span class="sxs-lookup"><span data-stu-id="61b4f-214">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="61b4f-215">W przypadku tablicy o następujących wymiarach `LBound` zwraca wartości z poniższej tabeli:</span><span class="sxs-lookup"><span data-stu-id="61b4f-215">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="61b4f-216">Wywołanie metody LBound</span><span class="sxs-lookup"><span data-stu-id="61b4f-216">Call to LBound</span></span>|<span data-ttu-id="61b4f-217">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="61b4f-217">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="61b4f-218">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-218">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="61b4f-219">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-219">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="61b4f-220">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-220">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-221">Poniższy przykład używa funkcji, `LBound` aby określić najniższy dostępny indeks dolny dla wskazanego wymiaru tablicy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-221">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61b4f-222"><paramref name="Array" />jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="61b4f-222"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="61b4f-223"><paramref name="Rank" />mniejsze niż 1 lub <paramref name="Rank" /> większe niż <paramref name="Array" />ranga.</span><span class="sxs-lookup"><span data-stu-id="61b4f-223"><paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="61b4f-224">Dim — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-224">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="61b4f-225">ReDim, instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-225">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color"><span data-ttu-id="61b4f-226">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-226">Required.</span></span> <span data-ttu-id="61b4f-227">Liczba całkowita z zakresu 0-15.</span><span class="sxs-lookup"><span data-stu-id="61b4f-227">A whole number in the range 0-15.</span></span></param>
        <summary><span data-ttu-id="61b4f-228"><see langword="Integer" /> Zwraca wartość reprezentującą kod koloru RGB odpowiadający podanemu numerowi koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-228">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></summary>
        <returns><span data-ttu-id="61b4f-229"><see langword="Integer" /> Zwraca wartość reprezentującą kod koloru RGB odpowiadający podanemu numerowi koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-229">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-230">Rozpoczynając od najmniej znaczącego bajtu, zwracana wartość określa czerwone, zielone i niebieskie wartości używane do ustawiania odpowiedniego koloru w systemie RGB używanym przez język Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="61b4f-230">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="61b4f-231">`Color` Argument ma te ustawienia.</span><span class="sxs-lookup"><span data-stu-id="61b4f-231">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="61b4f-232">Wartość liczbowa</span><span class="sxs-lookup"><span data-stu-id="61b4f-232">Number</span></span>|<span data-ttu-id="61b4f-233">Kolor</span><span class="sxs-lookup"><span data-stu-id="61b4f-233">Color</span></span>|<span data-ttu-id="61b4f-234">Wartość liczbowa</span><span class="sxs-lookup"><span data-stu-id="61b4f-234">Number</span></span>|<span data-ttu-id="61b4f-235">Kolor</span><span class="sxs-lookup"><span data-stu-id="61b4f-235">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="61b4f-236">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-236">0</span></span>|<span data-ttu-id="61b4f-237">Czarny</span><span class="sxs-lookup"><span data-stu-id="61b4f-237">Black</span></span>|<span data-ttu-id="61b4f-238">8</span><span class="sxs-lookup"><span data-stu-id="61b4f-238">8</span></span>|<span data-ttu-id="61b4f-239">Szary</span><span class="sxs-lookup"><span data-stu-id="61b4f-239">Gray</span></span>|  
|<span data-ttu-id="61b4f-240">1</span><span class="sxs-lookup"><span data-stu-id="61b4f-240">1</span></span>|<span data-ttu-id="61b4f-241">Niebieski</span><span class="sxs-lookup"><span data-stu-id="61b4f-241">Blue</span></span>|<span data-ttu-id="61b4f-242">9</span><span class="sxs-lookup"><span data-stu-id="61b4f-242">9</span></span>|<span data-ttu-id="61b4f-243">Jasnoniebieski</span><span class="sxs-lookup"><span data-stu-id="61b4f-243">Light blue</span></span>|  
|<span data-ttu-id="61b4f-244">2</span><span class="sxs-lookup"><span data-stu-id="61b4f-244">2</span></span>|<span data-ttu-id="61b4f-245">Znacznika</span><span class="sxs-lookup"><span data-stu-id="61b4f-245">Green</span></span>|<span data-ttu-id="61b4f-246">10</span><span class="sxs-lookup"><span data-stu-id="61b4f-246">10</span></span>|<span data-ttu-id="61b4f-247">Jasnozielony</span><span class="sxs-lookup"><span data-stu-id="61b4f-247">Light green</span></span>|  
|<span data-ttu-id="61b4f-248">3</span><span class="sxs-lookup"><span data-stu-id="61b4f-248">3</span></span>|<span data-ttu-id="61b4f-249">Obecne</span><span class="sxs-lookup"><span data-stu-id="61b4f-249">Cyan</span></span>|<span data-ttu-id="61b4f-250">11</span><span class="sxs-lookup"><span data-stu-id="61b4f-250">11</span></span>|<span data-ttu-id="61b4f-251">Jasnoniebieski</span><span class="sxs-lookup"><span data-stu-id="61b4f-251">Light cyan</span></span>|  
|<span data-ttu-id="61b4f-252">4</span><span class="sxs-lookup"><span data-stu-id="61b4f-252">4</span></span>|<span data-ttu-id="61b4f-253">Czerwony</span><span class="sxs-lookup"><span data-stu-id="61b4f-253">Red</span></span>|<span data-ttu-id="61b4f-254">12</span><span class="sxs-lookup"><span data-stu-id="61b4f-254">12</span></span>|<span data-ttu-id="61b4f-255">Czerwona</span><span class="sxs-lookup"><span data-stu-id="61b4f-255">Light red</span></span>|  
|<span data-ttu-id="61b4f-256">5</span><span class="sxs-lookup"><span data-stu-id="61b4f-256">5</span></span>|<span data-ttu-id="61b4f-257">Udział</span><span class="sxs-lookup"><span data-stu-id="61b4f-257">Magenta</span></span>|<span data-ttu-id="61b4f-258">13</span><span class="sxs-lookup"><span data-stu-id="61b4f-258">13</span></span>|<span data-ttu-id="61b4f-259">Jasnozielony</span><span class="sxs-lookup"><span data-stu-id="61b4f-259">Light magenta</span></span>|  
|<span data-ttu-id="61b4f-260">6</span><span class="sxs-lookup"><span data-stu-id="61b4f-260">6</span></span>|<span data-ttu-id="61b4f-261">Kryje</span><span class="sxs-lookup"><span data-stu-id="61b4f-261">Yellow</span></span>|<span data-ttu-id="61b4f-262">14</span><span class="sxs-lookup"><span data-stu-id="61b4f-262">14</span></span>|<span data-ttu-id="61b4f-263">Jasnoniebieski</span><span class="sxs-lookup"><span data-stu-id="61b4f-263">Light yellow</span></span>|  
|<span data-ttu-id="61b4f-264">7</span><span class="sxs-lookup"><span data-stu-id="61b4f-264">7</span></span>|<span data-ttu-id="61b4f-265">Biały</span><span class="sxs-lookup"><span data-stu-id="61b4f-265">White</span></span>|<span data-ttu-id="61b4f-266">15</span><span class="sxs-lookup"><span data-stu-id="61b4f-266">15</span></span>|<span data-ttu-id="61b4f-267">Jasne białe</span><span class="sxs-lookup"><span data-stu-id="61b4f-267">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-268">W tym przykładzie `QBColor` funkcja służy do zmiany koloru wskazanego przez `colorInteger`.</span><span class="sxs-lookup"><span data-stu-id="61b4f-268">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="61b4f-269">`QBColor`akceptuje wartości całkowite z zakresu od 0 do 15.</span><span class="sxs-lookup"><span data-stu-id="61b4f-269">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61b4f-270"><paramref name="Color" />wykracza poza zakres od 0 do 15 włącznie.</span><span class="sxs-lookup"><span data-stu-id="61b4f-270"><paramref name="Color" /> is outside of range 0 to 15, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red"><span data-ttu-id="61b4f-271">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-271">Required.</span></span> <span data-ttu-id="61b4f-272"><see langword="Integer" />w zakresie 0-255, włącznie, reprezentujące intensywność składnika czerwieni koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-272"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the red component of the color.</span></span></param>
        <param name="Green"><span data-ttu-id="61b4f-273">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="61b4f-273">Required.</span></span> <span data-ttu-id="61b4f-274"><see langword="Integer" />w zakresie 0-255, włącznie, reprezentujące intensywność zielonego składnika koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-274"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the green component of the color.</span></span></param>
        <param name="Blue"><span data-ttu-id="61b4f-275">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="61b4f-275">Required.</span></span> <span data-ttu-id="61b4f-276"><see langword="Integer" />w zakresie 0-255, włącznie, reprezentujące intensywność niebieskiego składnika koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-276"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the blue component of the color.</span></span></param>
        <summary><span data-ttu-id="61b4f-277"><see langword="Integer" /> Zwraca wartość reprezentującą wartość koloru RGB z zestawu czerwonych, zielonych i niebieskich składników koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-277">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></summary>
        <returns><span data-ttu-id="61b4f-278"><see langword="Integer" /> Zwraca wartość reprezentującą wartość koloru RGB z zestawu czerwonych, zielonych i niebieskich składników koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-278">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-279">Metody i właściwości aplikacji, które akceptują specyfikację koloru, oczekują, że specyfikacja jest liczbą reprezentującą wartość koloru RGB.</span><span class="sxs-lookup"><span data-stu-id="61b4f-279">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="61b4f-280">Wartość koloru RGB określa względne intensywność czerwony, zielony i niebieski, aby spowodować wyświetlenie określonego koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-280">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="61b4f-281">Jeśli wartość któregokolwiek argumentu `RGB` jest większa niż 255, jest używany program 255.</span><span class="sxs-lookup"><span data-stu-id="61b4f-281">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="61b4f-282">Poniższa tabela zawiera listę standardowych kolorów oraz wartości czerwony, zielony i niebieski, które zawierają.</span><span class="sxs-lookup"><span data-stu-id="61b4f-282">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="61b4f-283">Kolor</span><span class="sxs-lookup"><span data-stu-id="61b4f-283">Color</span></span>|<span data-ttu-id="61b4f-284">Czerwona wartość</span><span class="sxs-lookup"><span data-stu-id="61b4f-284">Red value</span></span>|<span data-ttu-id="61b4f-285">Zielona wartość</span><span class="sxs-lookup"><span data-stu-id="61b4f-285">Green value</span></span>|<span data-ttu-id="61b4f-286">Niebieska wartość</span><span class="sxs-lookup"><span data-stu-id="61b4f-286">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="61b4f-287">Czarny</span><span class="sxs-lookup"><span data-stu-id="61b4f-287">Black</span></span>|<span data-ttu-id="61b4f-288">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-288">0</span></span>|<span data-ttu-id="61b4f-289">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-289">0</span></span>|<span data-ttu-id="61b4f-290">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-290">0</span></span>|  
|<span data-ttu-id="61b4f-291">Niebieski</span><span class="sxs-lookup"><span data-stu-id="61b4f-291">Blue</span></span>|<span data-ttu-id="61b4f-292">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-292">0</span></span>|<span data-ttu-id="61b4f-293">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-293">0</span></span>|<span data-ttu-id="61b4f-294">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-294">255</span></span>|  
|<span data-ttu-id="61b4f-295">Znacznika</span><span class="sxs-lookup"><span data-stu-id="61b4f-295">Green</span></span>|<span data-ttu-id="61b4f-296">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-296">0</span></span>|<span data-ttu-id="61b4f-297">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-297">255</span></span>|<span data-ttu-id="61b4f-298">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-298">0</span></span>|  
|<span data-ttu-id="61b4f-299">Obecne</span><span class="sxs-lookup"><span data-stu-id="61b4f-299">Cyan</span></span>|<span data-ttu-id="61b4f-300">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-300">0</span></span>|<span data-ttu-id="61b4f-301">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-301">255</span></span>|<span data-ttu-id="61b4f-302">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-302">255</span></span>|  
|<span data-ttu-id="61b4f-303">Czerwony</span><span class="sxs-lookup"><span data-stu-id="61b4f-303">Red</span></span>|<span data-ttu-id="61b4f-304">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-304">255</span></span>|<span data-ttu-id="61b4f-305">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-305">0</span></span>|<span data-ttu-id="61b4f-306">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-306">0</span></span>|  
|<span data-ttu-id="61b4f-307">Udział</span><span class="sxs-lookup"><span data-stu-id="61b4f-307">Magenta</span></span>|<span data-ttu-id="61b4f-308">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-308">255</span></span>|<span data-ttu-id="61b4f-309">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-309">0</span></span>|<span data-ttu-id="61b4f-310">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-310">255</span></span>|  
|<span data-ttu-id="61b4f-311">Kryje</span><span class="sxs-lookup"><span data-stu-id="61b4f-311">Yellow</span></span>|<span data-ttu-id="61b4f-312">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-312">255</span></span>|<span data-ttu-id="61b4f-313">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-313">255</span></span>|<span data-ttu-id="61b4f-314">0</span><span class="sxs-lookup"><span data-stu-id="61b4f-314">0</span></span>|  
|<span data-ttu-id="61b4f-315">Biały</span><span class="sxs-lookup"><span data-stu-id="61b4f-315">White</span></span>|<span data-ttu-id="61b4f-316">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-316">255</span></span>|<span data-ttu-id="61b4f-317">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-317">255</span></span>|<span data-ttu-id="61b4f-318">255</span><span class="sxs-lookup"><span data-stu-id="61b4f-318">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-319">Ten przykład pokazuje, `RGB` jak funkcja jest używana do zwrócenia liczby całkowitej `RGB` reprezentującej wartość koloru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-319">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61b4f-320"><paramref name="Green" />, <paramref name="Blue" />, lub <paramref name="Red" /> wykracza poza zakres od 0 do 255 włącznie.</span><span class="sxs-lookup"><span data-stu-id="61b4f-320"><paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName"><span data-ttu-id="61b4f-321">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-321">Required.</span></span> <span data-ttu-id="61b4f-322"><see langword="String" /> Zmienna zawierająca nazwę typu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="61b4f-322">A <see langword="String" /> variable containing a Visual Basic type name.</span></span></param>
        <summary><span data-ttu-id="61b4f-323"><see langword="String" /> Zwraca wartość zawierającą systemową nazwę typu danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-323">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="61b4f-324"><see langword="String" /> Zwraca wartość zawierającą systemową nazwę typu danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-324">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-325">`SystemTypeName`zwraca w pełni kwalifikowaną nazwę typu środowiska uruchomieniowego języka wspólnego (CLR) odpowiadającą nazwie typu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="61b4f-325">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="61b4f-326">Na przykład jeśli `VbName` zawiera ciąg "date", `SystemTypeName` zwraca wartość "System. DateTime".</span><span class="sxs-lookup"><span data-stu-id="61b4f-326">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="61b4f-327">Jeśli `SystemTypeName` nie rozpoznaje `VbName`wartości, zwraca `Nothing` (nie ciąg "Nothing").</span><span class="sxs-lookup"><span data-stu-id="61b4f-327">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-328">Poniższy przykład używa funkcji, `SystemTypeName` aby zwrócić nazwy typów danych dla kilku zmiennych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-328">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="61b4f-329">Typ danych — Podsumowanie (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-329">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="61b4f-330">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-330">Required.</span></span> <span data-ttu-id="61b4f-331"><see langword="Object" />zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-331"><see langword="Object" /> variable.</span></span> <span data-ttu-id="61b4f-332">Jeśli <see langword="Option Strict" /> jest<see langword="Off" />, można przekazać zmienną dowolnego typu danych z wyjątkiem struktury.</span><span class="sxs-lookup"><span data-stu-id="61b4f-332">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="61b4f-333"><see langword="String" /> Zwraca wartość zawierającą informacje o typie danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-333">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></summary>
        <returns><span data-ttu-id="61b4f-334"><see langword="String" /> Zwraca wartość zawierającą informacje o typie danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-334">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-335">W poniższej tabeli przedstawiono `String` wartości zwracane przez `TypeName` program dla innej zawartości `VarName`.</span><span class="sxs-lookup"><span data-stu-id="61b4f-335">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="61b4f-336">`VarName`Contents</span><span class="sxs-lookup"><span data-stu-id="61b4f-336">`VarName` contents</span></span>|<span data-ttu-id="61b4f-337">Zwrócony ciąg</span><span class="sxs-lookup"><span data-stu-id="61b4f-337">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="61b4f-338">Typ 16- `True` bitowy `False` lub wartość</span><span class="sxs-lookup"><span data-stu-id="61b4f-338">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="61b4f-339">Typu</span><span class="sxs-lookup"><span data-stu-id="61b4f-339">"Boolean"</span></span>|  
|<span data-ttu-id="61b4f-340">8-bitowy typ wartości binarnej</span><span class="sxs-lookup"><span data-stu-id="61b4f-340">8-bit binary value type</span></span>|<span data-ttu-id="61b4f-341">Bajc</span><span class="sxs-lookup"><span data-stu-id="61b4f-341">"Byte"</span></span>|  
|<span data-ttu-id="61b4f-342">Typ wartości 16-bitowej znaku</span><span class="sxs-lookup"><span data-stu-id="61b4f-342">16-bit character value type</span></span>|<span data-ttu-id="61b4f-343">Delikatn</span><span class="sxs-lookup"><span data-stu-id="61b4f-343">"Char"</span></span>|  
|<span data-ttu-id="61b4f-344">64-bitowy typ wartości daty i godziny</span><span class="sxs-lookup"><span data-stu-id="61b4f-344">64-bit date and time value type</span></span>|<span data-ttu-id="61b4f-345">Dniu</span><span class="sxs-lookup"><span data-stu-id="61b4f-345">"Date"</span></span>|  
|<span data-ttu-id="61b4f-346">Typ referencyjny wskazujący brak lub nieistniejące dane</span><span class="sxs-lookup"><span data-stu-id="61b4f-346">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="61b4f-347">Ona</span><span class="sxs-lookup"><span data-stu-id="61b4f-347">"DBNull"</span></span>|  
|<span data-ttu-id="61b4f-348">128-bitowy typ wartości liczbowej stałej zmiennoprzecinkowej</span><span class="sxs-lookup"><span data-stu-id="61b4f-348">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="61b4f-349">Dokładności</span><span class="sxs-lookup"><span data-stu-id="61b4f-349">"Decimal"</span></span>|  
|<span data-ttu-id="61b4f-350">64-bitowy typ wartości liczbowej zmiennoprzecinkowej</span><span class="sxs-lookup"><span data-stu-id="61b4f-350">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="61b4f-351">Double</span><span class="sxs-lookup"><span data-stu-id="61b4f-351">"Double"</span></span>|  
|<span data-ttu-id="61b4f-352">32-bitowy typ wartości całkowitej</span><span class="sxs-lookup"><span data-stu-id="61b4f-352">32-bit integer value type</span></span>|<span data-ttu-id="61b4f-353">Całkowitą</span><span class="sxs-lookup"><span data-stu-id="61b4f-353">"Integer"</span></span>|  
|<span data-ttu-id="61b4f-354">Typ odwołania wskazujący Niewyspecjalizowany obiekt</span><span class="sxs-lookup"><span data-stu-id="61b4f-354">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="61b4f-355">Stream</span><span class="sxs-lookup"><span data-stu-id="61b4f-355">"Object"</span></span>|  
|<span data-ttu-id="61b4f-356">Typ referencyjny wskazujący wyspecjalizowany obiekt utworzony z klasy *objectClass*</span><span class="sxs-lookup"><span data-stu-id="61b4f-356">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="61b4f-357">"*objectClass*"</span><span class="sxs-lookup"><span data-stu-id="61b4f-357">"*objectclass*"</span></span>|  
|<span data-ttu-id="61b4f-358">64-bitowy typ wartości całkowitej</span><span class="sxs-lookup"><span data-stu-id="61b4f-358">64-bit integer value type</span></span>|<span data-ttu-id="61b4f-359">Długo</span><span class="sxs-lookup"><span data-stu-id="61b4f-359">"Long"</span></span>|  
|<span data-ttu-id="61b4f-360">Typ odwołania bez aktualnie przypisanego obiektu</span><span class="sxs-lookup"><span data-stu-id="61b4f-360">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="61b4f-361">Wartość</span><span class="sxs-lookup"><span data-stu-id="61b4f-361">"Nothing"</span></span>|  
|<span data-ttu-id="61b4f-362">8-bitowy typ wartości ze znakiem liczby całkowitej</span><span class="sxs-lookup"><span data-stu-id="61b4f-362">8-bit signed integer value type</span></span>|<span data-ttu-id="61b4f-363">SByte</span><span class="sxs-lookup"><span data-stu-id="61b4f-363">"SByte"</span></span>|  
|<span data-ttu-id="61b4f-364">16-bitowy typ wartości całkowitej</span><span class="sxs-lookup"><span data-stu-id="61b4f-364">16-bit integer value type</span></span>|<span data-ttu-id="61b4f-365">Wybierak</span><span class="sxs-lookup"><span data-stu-id="61b4f-365">"Short"</span></span>|  
|<span data-ttu-id="61b4f-366">32-bitowy typ wartości liczbowej zmiennoprzecinkowej</span><span class="sxs-lookup"><span data-stu-id="61b4f-366">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="61b4f-367">Wiersz</span><span class="sxs-lookup"><span data-stu-id="61b4f-367">"Single"</span></span>|  
|<span data-ttu-id="61b4f-368">Typ odwołania wskazujący ciąg znaków 16-bitowych</span><span class="sxs-lookup"><span data-stu-id="61b4f-368">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="61b4f-369">Parametry</span><span class="sxs-lookup"><span data-stu-id="61b4f-369">"String"</span></span>|  
|<span data-ttu-id="61b4f-370">32-bitowy typ wartości całkowitej bez znaku</span><span class="sxs-lookup"><span data-stu-id="61b4f-370">32-bit unsigned integer value type</span></span>|<span data-ttu-id="61b4f-371">UInteger —</span><span class="sxs-lookup"><span data-stu-id="61b4f-371">"UInteger"</span></span>|  
|<span data-ttu-id="61b4f-372">64-bitowy typ wartości całkowitej bez znaku</span><span class="sxs-lookup"><span data-stu-id="61b4f-372">64-bit unsigned integer value type</span></span>|<span data-ttu-id="61b4f-373">ULong</span><span class="sxs-lookup"><span data-stu-id="61b4f-373">"ULong"</span></span>|  
|<span data-ttu-id="61b4f-374">16-bitowy typ wartości całkowitej bez znaku</span><span class="sxs-lookup"><span data-stu-id="61b4f-374">16-bit unsigned integer value type</span></span>|<span data-ttu-id="61b4f-375">"UShort"</span><span class="sxs-lookup"><span data-stu-id="61b4f-375">"UShort"</span></span>|  
  
 <span data-ttu-id="61b4f-376">Jeśli `VarName` jest tablicą, zwracany ciąg może być dowolnym z ciągów w powyższej tabeli z dołączonymi pustymi nawiasami.</span><span class="sxs-lookup"><span data-stu-id="61b4f-376">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="61b4f-377">Na przykład, jeśli `VarName` wskazuje tablicę liczb całkowitych, `TypeName` zwraca wartość "Integer ()".</span><span class="sxs-lookup"><span data-stu-id="61b4f-377">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="61b4f-378">Gdy `TypeName` zwraca nazwę typu referencyjnego, takiego jak Klasa, zwraca tylko samą nazwę, a nie nazwę kwalifikowaną.</span><span class="sxs-lookup"><span data-stu-id="61b4f-378">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="61b4f-379">Na przykład, jeśli `VarName` wskazuje obiekt klasy <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` zwraca "PaperSource".</span><span class="sxs-lookup"><span data-stu-id="61b4f-379">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="61b4f-380">Należy pamiętać, że jeśli zmienna jest zadeklarowana jako o określonym typie klasy, ale nie ma przypisanego obiektu, `TypeName` zwraca wartość "Nothing".</span><span class="sxs-lookup"><span data-stu-id="61b4f-380">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-381">Poniższy przykład używa funkcji, `TypeName` aby zwrócić informacje o typie danych kilku zmiennych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-381">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="61b4f-382">Typ danych — Podsumowanie (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-382">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="61b4f-383">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="61b4f-383">Required.</span></span> <span data-ttu-id="61b4f-384">Tablica dowolnego typu danych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-384">Array of any data type.</span></span> <span data-ttu-id="61b4f-385">Tablica, w której ma znajdować się najwyższy możliwy indeks dolny wymiaru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-385">The array in which you want to find the highest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="61b4f-386">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="61b4f-386">Optional.</span></span> <span data-ttu-id="61b4f-387"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="61b4f-387"><see langword="Integer" />.</span></span> <span data-ttu-id="61b4f-388">Wymiar, dla którego ma zostać zwrócony najwyższy możliwy indeks dolny.</span><span class="sxs-lookup"><span data-stu-id="61b4f-388">The dimension for which the highest possible subscript is to be returned.</span></span> <span data-ttu-id="61b4f-389">Użyj 1 dla pierwszego wymiaru, 2 dla drugiego i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-389">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="61b4f-390">W <paramref name="Rank" /> przypadku pominięcia przyjmowana jest wartość 1.</span><span class="sxs-lookup"><span data-stu-id="61b4f-390">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="61b4f-391">Zwraca najwyższy dostępny indeks dolny dla wskazanego wymiaru tablicy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-391">Returns the highest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="61b4f-392"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="61b4f-392"><see langword="Integer" />.</span></span> <span data-ttu-id="61b4f-393">Najwyższa wartość, którą może zawierać indeks dolny określonego wymiaru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-393">The highest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="61b4f-394">Jeśli <paramref name="Array" /> ma tylko jeden element, <see langword="UBound" /> zwraca 0.</span><span class="sxs-lookup"><span data-stu-id="61b4f-394">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span></span> <span data-ttu-id="61b4f-395">Jeśli <paramref name="Array" /> nie ma żadnych elementów, na przykład jeśli jest ciągiem o zerowej długości, <see langword="UBound" /> zwraca-1.</span><span class="sxs-lookup"><span data-stu-id="61b4f-395">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-396">Ponieważ indeksy dolne tablicy zaczynają się od 0, długość wymiaru jest większa o jeden niż najwyższy dostępny indeks dolny dla tego wymiaru.</span><span class="sxs-lookup"><span data-stu-id="61b4f-396">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="61b4f-397">W przypadku tablicy o następujących wymiarach `UBound` zwraca wartości z poniższej tabeli:</span><span class="sxs-lookup"><span data-stu-id="61b4f-397">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="61b4f-398">Wywołanie do programu UBound</span><span class="sxs-lookup"><span data-stu-id="61b4f-398">Call to UBound</span></span>|<span data-ttu-id="61b4f-399">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="61b4f-399">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="61b4f-400">100</span><span class="sxs-lookup"><span data-stu-id="61b4f-400">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="61b4f-401">5</span><span class="sxs-lookup"><span data-stu-id="61b4f-401">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="61b4f-402">4</span><span class="sxs-lookup"><span data-stu-id="61b4f-402">4</span></span>|  
  
 <span data-ttu-id="61b4f-403">Możesz użyć `UBound` , aby określić łączną liczbę elementów w tablicy, ale należy dostosować wartość zwracaną do konta, ponieważ indeksy dolne zaczynają się od 0.</span><span class="sxs-lookup"><span data-stu-id="61b4f-403">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="61b4f-404">Poniższy przykład oblicza łączny rozmiar tablicy `a` w poprzednim przykładzie:</span><span class="sxs-lookup"><span data-stu-id="61b4f-404">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="61b4f-405">Wartość obliczona dla `total` to 3030, czyli 101 \* 6 \* 5.</span><span class="sxs-lookup"><span data-stu-id="61b4f-405">The value calculated for `total` is 3030, which is 101 \* 6 \* 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-406">Poniższy przykład używa funkcji, `UBound` aby określić najwyższy dostępny indeks dolny dla wskazanego wymiaru tablicy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-406">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61b4f-407"><paramref name="Array" />jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="61b4f-407"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="61b4f-408"><paramref name="Rank" />jest mniejsza niż 1 lub <paramref name="Rank" /> jest większa niż <paramref name="Array" />ranga.</span><span class="sxs-lookup"><span data-stu-id="61b4f-408"><paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="61b4f-409">Dim — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-409">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="61b4f-410">ReDim, instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-410">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="61b4f-411">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-411">Required.</span></span> <span data-ttu-id="61b4f-412"><see langword="Object" />zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-412"><see langword="Object" /> variable.</span></span> <span data-ttu-id="61b4f-413">Jeśli <see langword="Option Strict" /> jest<see langword="Off" />, można przekazać zmienną dowolnego typu danych z wyjątkiem struktury.</span><span class="sxs-lookup"><span data-stu-id="61b4f-413">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="61b4f-414"><see langword="Integer" /> Zwraca wartość zawierającą klasyfikację typu danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-414">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></summary>
        <returns><span data-ttu-id="61b4f-415"><see langword="Integer" /> Zwraca wartość zawierającą klasyfikację typu danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-415">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-416">Wartość całkowita zwrócona przez `VarType` to element członkowski. <xref:Microsoft.VisualBasic.VariantType></span><span class="sxs-lookup"><span data-stu-id="61b4f-416">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="61b4f-417">W poniższej tabeli przedstawiono wartości zwracane przez `VarType` specjalne `VarName`przypadki.</span><span class="sxs-lookup"><span data-stu-id="61b4f-417">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="61b4f-418">Typ danych reprezentowany przez`VarName`</span><span class="sxs-lookup"><span data-stu-id="61b4f-418">Data type represented by `VarName`</span></span>|<span data-ttu-id="61b4f-419">Wartość zwrócona przez`VarType`</span><span class="sxs-lookup"><span data-stu-id="61b4f-419">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="61b4f-420">Nothing</span><span class="sxs-lookup"><span data-stu-id="61b4f-420">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="61b4f-421">Wyliczenie</span><span class="sxs-lookup"><span data-stu-id="61b4f-421">Enumeration</span></span>|<span data-ttu-id="61b4f-422">Typ danych bazowych`SByte`( `Byte`, `Short` `UShort` ,`Integer`,,,, ,lub`ULong`) `Long` `UInteger`</span><span class="sxs-lookup"><span data-stu-id="61b4f-422">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="61b4f-423">Array</span><span class="sxs-lookup"><span data-stu-id="61b4f-423">Array</span></span>|<span data-ttu-id="61b4f-424">Bitowe lub typu elementu tablicy i`VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="61b4f-424">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="61b4f-425">Tablica tablic</span><span class="sxs-lookup"><span data-stu-id="61b4f-425">Array of arrays</span></span>|<span data-ttu-id="61b4f-426">Bitowe lub z `VariantType.Object` i`VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="61b4f-426">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="61b4f-427">Struktura (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="61b4f-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="61b4f-428">Nieznany</span><span class="sxs-lookup"><span data-stu-id="61b4f-428">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-429">W poniższym przykładzie `VarType` funkcja zwraca informacje o klasyfikacji typu danych dotyczące kilku zmiennych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-429">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="61b4f-430">Typ danych — Podsumowanie (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-430">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName"><span data-ttu-id="61b4f-431">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="61b4f-431">Required.</span></span> <span data-ttu-id="61b4f-432"><see langword="String" />Zmienna zawierająca nazwę typu używaną przez środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="61b4f-432"><see langword="String" /> variable containing a type name used by the common language runtime.</span></span></param>
        <summary><span data-ttu-id="61b4f-433"><see langword="String" /> Zwraca wartość zawierającą Visual Basicą nazwę typu danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-433">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="61b4f-434"><see langword="String" /> Zwraca wartość zawierającą Visual Basicą nazwę typu danych zmiennej.</span><span class="sxs-lookup"><span data-stu-id="61b4f-434">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b4f-435">`VbTypeName`Zwraca nazwę typu Visual Basic odpowiadającą nazwie typu środowiska uruchomieniowego języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="61b4f-435">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="61b4f-436">Na przykład, jeśli `UrtName` zawiera ciąg "Int32" lub "System. Int32" `VbTypeName` , zwraca "Integer".</span><span class="sxs-lookup"><span data-stu-id="61b4f-436">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="61b4f-437">Jeśli `VbTypeName` nie rozpoznaje `UrtName`wartości, zwraca `Nothing` (nie ciąg "Nothing").</span><span class="sxs-lookup"><span data-stu-id="61b4f-437">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="61b4f-438">Nazwa typu w `UrtName` można uzyskać z różnych źródeł, na przykład <xref:System.Reflection.MemberInfo.Name%2A> z właściwości <xref:System.Type> w <xref:System.Reflection.MemberInfo> tablicy klasy.</span><span class="sxs-lookup"><span data-stu-id="61b4f-438">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b4f-439">Poniższy przykład używa funkcji, `VbTypeName` aby zwrócić nazwy typów danych dla kilku zmiennych.</span><span class="sxs-lookup"><span data-stu-id="61b4f-439">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="61b4f-440">Typ danych — Podsumowanie (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="61b4f-440">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
