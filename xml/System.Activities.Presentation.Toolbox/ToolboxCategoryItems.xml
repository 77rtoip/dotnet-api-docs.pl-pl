<Type Name="ToolboxCategoryItems" FullName="System.Activities.Presentation.Toolbox.ToolboxCategoryItems">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1670c281698c0685fcb7e038cb74c64e9bb46f3e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36652735" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ToolboxCategoryItems : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategoryItems extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategoryItems&#xA;Implements ICollection(Of ToolboxCategory), IEnumerable(Of ToolboxCategory), IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategoryItems sealed : System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2a62c-101">Kolekcja <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a62c-101">A collection of <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> objects.</span>
      </span>
      <span data-ttu-id="2a62c-102">Ta klasa jest <see langword="sealed" /> i dlatego nie może być dziedziczona. Ta klasa obsługuje kategoryzacji elementów przybornika odnośnie do hostowania ponownie projektanta przepływów pracy programu Windows poza programu Visual Studio 2010.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a62c-102">This class is <see langword="sealed" /> and so cannot be inherited.This class provides support for the categorization of toolbox items when re-hosting the Windows Workflow Designer outside of Visual Studio 2010.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategoryItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategoryItems();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-103">Tworzy wystąpienie <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-103">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Add(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit&#xA;override this.Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit" Usage="toolboxCategoryItems.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="2a62c-104">
            <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> Do dodania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-104">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-105">Dodaje kategorią przybornika z określonego na końcu kolekcji elementów przybornika kategorii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-105">Adds a specified toolbox category to the end of the toolbox category items collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-106">
            <paramref name="item" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-106">The <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-107">Usuwa wszystkie elementy z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-107">Removes all the items from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Contains(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="2a62c-108">Element przybornika kategorii do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-108">The toolbox category item to look for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-109">Określa, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcja zawiera element przybornika określonej kategorii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-109">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection contains a specific toolbox category item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-110">
            <see langword="true" /> Jeśli <paramref name="item" /> znajduje się w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-110">
              <see langword="true" /> if the <paramref name="item" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-111">
            <paramref name="item" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-111">The <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.CopyTo(System.Activities.Presentation.Toolbox.ToolboxCategory[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ToolboxCategory(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit&#xA;override this.CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit" Usage="toolboxCategoryItems.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Toolbox.ToolboxCategory[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2a62c-112">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
          <span data-ttu-id="2a62c-113">
            <see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-113">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="2a62c-114">Liczony od zera indeks tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-114">The zero-based index of the target array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-115">Kopiuje całą <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji do jednowymiarowego zgodnego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu docelowego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-115">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-116">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2a62c-116">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-117">
            <paramref name="array" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-117">The <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-118">Pobiera liczbę narzędzi w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-118">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-119">Liczba elementów zawartych w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-119">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements  the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;" Usage="toolboxCategoryItems.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-121">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-121">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-122">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> Dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-122">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-123">Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2a62c-123">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2a62c-124">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2a62c-124">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2a62c-125">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2a62c-125">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="2a62c-126">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.IEnumerator%601.Current>.</span><span class="sxs-lookup"><span data-stu-id="2a62c-126">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="2a62c-127">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="2a62c-127">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2a62c-128">Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający nie jest już prawidłowe, a jego zachowanie jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2a62c-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2a62c-129">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2a62c-129">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-130">Pobiera wartość wskazującą, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-130">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-131">
            <see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-131">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2a62c-133">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="2a62c-133">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxCategory this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxCategory Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxCategory ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxCategory ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Toolbox.ToolboxCategory" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a62c-134">Liczony od zera indeks elementu przybornika kategorii do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-134">The zero-based index of the toolbox category item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-135">Pobiera kategorii przybornika pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-135">Gets the toolbox category at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-136">Kategoria przybornika <see cref="T:System.Object" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-136">The toolbox category <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2a62c-138">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="2a62c-138">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Remove(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="2a62c-139">
            <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> Do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-139">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-140">Usuwa pierwsze wystąpienie kategorii określone przybornika z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-140">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-141">
            <see langword="true" /> Jeśli element zostanie odnaleziony i usunięty z kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-141">
              <see langword="true" /> if the item is found and removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2a62c-142">Ta metoda zwraca <see langword="false" /> Jeśli <paramref name="item" /> określony nie został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-142">This method returns <see langword="false" /> if the <paramref name="item" /> specified is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2a62c-143">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-143">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
          <span data-ttu-id="2a62c-144">
            <see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-144">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2a62c-145">Liczony od zera indeks tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-145">The zero-based index of the target array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-146">Kopiuje całą <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji do jednowymiarowego zgodnego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu docelowego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-146">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-147">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2a62c-147">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-148">
            <paramref name="array" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-148">The <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-149">Pobiera liczbę przybornika kategorii zawarta w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-149">Gets the number of toolbox categories contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-150">Liczba elementów zawartych w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-150">The number of items contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-152">Pobiera wartość wskazującą, czy dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> jest synchronizowane (wielowątkowość).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-152">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-153">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-153">
              <see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="2a62c-155"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> Właściwość zwraca obiekt, który może służyć do synchronizujący dostęp do <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span><span class="sxs-lookup"><span data-stu-id="2a62c-155">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-156">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-156">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-157">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-157">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-159">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-159">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-160">
            <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-160">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-161">Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2a62c-161">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2a62c-162">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2a62c-162">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2a62c-163">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2a62c-163">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="2a62c-164">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.IEnumerator%601.Current>.</span><span class="sxs-lookup"><span data-stu-id="2a62c-164">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="2a62c-165">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="2a62c-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2a62c-166">Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający nie jest już prawidłowe, a jego zachowanie jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2a62c-166">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2a62c-167">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2a62c-167">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a62c-168">Pozycja, do którego jest wstawiany nowego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-168">The position into which the new element is inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-169">Dodaje narzędzie do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-169">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-170">Liczony od zera indeks narzędzia dodany do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-170">The zero-based index of the tool added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2a62c-172">
            <paramref name="value" /> Jest typu, który nie jest możliwa do przypisania do <see cref="T:System.Collections.IList" /> zaimplementowana przez kolekcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-172">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-173">Usuwa wszystkie narzędzia z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-173">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a62c-175">Narzędzie <see cref="T:System.Object" /> do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-175">The tool <see cref="T:System.Object" /> to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-176">Określa, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> zawiera konkretnego narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-176">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contains a specific tool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-177">
            <see langword="true" /> Jeśli <paramref name="value" /> znajduje się w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-177">
              <see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-179">
            <paramref name="value" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-179">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a62c-180">Obiekt do zlokalizowania w <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-180">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-181">Określa indeks określonego narzędzia w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-181">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a62c-182">Indeks <paramref name="value" /> jeśli je znaleziono na liście; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-182">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-184">
            <paramref name="value" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-184">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a62c-185">Liczony od zera indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-185">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2a62c-186">
            <see cref="T:System.Object" /> Wstawione do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-186">The <see cref="T:System.Object" /> inserted into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-187">Wstawia kategorią przybornika do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-187">Inserts a toolbox category into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="2a62c-189">Jeśli `index` jest równa liczbie elementów w <xref:System.Collections.IList>, następnie `value` jest dołączany na końcu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-189">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="2a62c-190">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="2a62c-190">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="2a62c-191">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="2a62c-191">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a62c-192">
            <paramref name="index" /> Jest nieprawidłowa dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-192">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-193">
            <paramref name="value" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-193">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2a62c-194">Kolekcja jest tylko do odczytu lub ma stały rozmiar, który został przekroczony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-194">The collection is read-only or has a fixed size that has been exceeded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-195">Pobiera wartość wskazującą, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-195">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-196">
            <see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> ma ustalony rozmiar; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-196">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a62c-198">Pobiera wartość wskazującą, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-198">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-199">
            <see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-199">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2a62c-201">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="2a62c-201">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a62c-202">Liczony od zera indeks elementu przybornika kategorii można pobrać lub ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-202">The zero-based index of the toolbox category item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-203">Pobiera lub ustawia kategorię przybornika w określonym indeksie kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-203">Gets or sets the toolbox category at a specified index of the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a62c-204">Kategoria przybornika <see cref="T:System.Object" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-204">The toolbox category <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2a62c-206">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="2a62c-206">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a62c-207">
            <paramref name="value" /> Zestaw jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-207">The <paramref name="value" /> set is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a62c-208">Narzędzie <see cref="T:System.Object" /> do usunięcia z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-208">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-209">Usuwa pierwsze wystąpienie kategorii określone przybornika z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-209">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="2a62c-211">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="2a62c-211">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2a62c-212">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="2a62c-212">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a62c-213">Liczony od zera indeks elementu kategorii przybornika do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-213">The zero-based index of the toolbox category item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a62c-214">Usuwa kategorią przybornika w określonym indeksie <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-214">Removes a toolbox category at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a62c-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2a62c-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="2a62c-216">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="2a62c-216">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2a62c-217">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="2a62c-217">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a62c-218">
            <paramref name="index" /> Jest nieprawidłowa dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a62c-218">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>