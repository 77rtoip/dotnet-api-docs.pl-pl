<Type Name="ToolboxCategory" FullName="System.Activities.Presentation.Toolbox.ToolboxCategory">
  <TypeSignature Language="C#" Value="public sealed class ToolboxCategory : System.Collections.IList, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategory extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategory&#xA;Implements IList, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategory sealed : System::Collections::IList, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c1e80-101">Kolekcja elementów przybornika, które zostały skategoryzowane.</span><span class="sxs-lookup"><span data-stu-id="c1e80-101">A collection of toolbox items that have been categorized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-102"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> Kolekcja zawiera elementy typu <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper> które są dodawane i usuwane z wystąpienia przy użyciu kolekcji <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> i <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c1e80-102">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection contains items of type <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper> that are added and removed from an instance of the collection using the  <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> and <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> methods.</span></span>  
  
 <span data-ttu-id="c1e80-103"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> Klasa implementuje <xref:System.ComponentModel.INotifyPropertyChanged> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-103">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> class implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span> <span data-ttu-id="c1e80-104">Dzięki temu w kolekcji, która jest przechowywanie elementów przybornika zapewnienie powiadomienia, gdy właściwości, takie jak <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName%2A> są zmieniane właściwości i metod, takich jak <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> i <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> służą do zmiany zawartości w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-104">This allows the collection that is storing the toolbox items to provide notifications when properties like the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName%2A> property are changed and methods like <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> and <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> are used to change the contents of the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1e80-105">Tworzy wystąpienie <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c1e80-105">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1e80-106">Tworzy wystąpienie <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c1e80-106">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-107">Domyślna nazwa przypisana do <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> kolekcja jest pusta `string`.</span><span class="sxs-lookup"><span data-stu-id="c1e80-107">The default name assigned to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection is an empty `string`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategory (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategory(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c1e80-108">Nazwa kolekcji kategorią przybornika.</span><span class="sxs-lookup"><span data-stu-id="c1e80-108">The name of the toolbox category collection.</span></span></param>
        <summary><span data-ttu-id="c1e80-109">Tworzy wystąpienie <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> klasy o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c1e80-109">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> class with a specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-110">Nazwa przypisana do <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> Kolekcja może być pusta `string`.</span><span class="sxs-lookup"><span data-stu-id="c1e80-110">The name assigned to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection can be an empty `string`.</span></span> <span data-ttu-id="c1e80-111">Jest to wartość przypisana przez konstruktora domyślnego <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1e80-111">This is the value assigned by the default constructor, <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.%23ctor%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.Add(System.Activities.Presentation.Toolbox.ToolboxItemWrapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (tool As ToolboxItemWrapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ tool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />
      </Parameters>
      <Docs>
        <param name="tool"><span data-ttu-id="c1e80-112"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> Element, aby dodać do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-112">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="c1e80-113">Dodaje określonego narzędzia w celu pobrania kategorii przybornika.</span><span class="sxs-lookup"><span data-stu-id="c1e80-113">Adds a specified tool to the end of the toolbox category collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1e80-114"><paramref name="tool" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-114">The <paramref name="tool" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-115">Pobiera lub ustawia nazwę kategorii przybornika.</span><span class="sxs-lookup"><span data-stu-id="c1e80-115">Gets or sets the name of the toolbox category.</span></span></summary>
        <value><span data-ttu-id="c1e80-116">Nazwa kategorii przybornika.</span><span class="sxs-lookup"><span data-stu-id="c1e80-116">The name of the toolbox category.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-117">Po ustawieniu właściwości zapewnia powiadomienie.</span><span class="sxs-lookup"><span data-stu-id="c1e80-117">When set, the property provides a notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxItemWrapper this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxItemWrapper Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxItemWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxItemWrapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c1e80-118">Liczony od zera indeks narzędzie do pobierania lub ustawiania.</span><span class="sxs-lookup"><span data-stu-id="c1e80-118">The zero-based index of the tool to get or set.</span></span></param>
        <summary><span data-ttu-id="c1e80-119">Pobiera lub ustawia narzędzie pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="c1e80-119">Gets or sets the tool at the specified index.</span></span></summary>
        <value><span data-ttu-id="c1e80-120"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> Obiektu w określonym <paramref name="index" />...</span><span class="sxs-lookup"><span data-stu-id="c1e80-120">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> object at the specified <paramref name="index" />..</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1e80-121"><paramref name="index" /> Jest nieprawidłowa dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-121">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Toolbox.ToolboxCategory.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-122">Występuje, gdy wartość właściwości zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="c1e80-122">Occurs when a property value changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove(System.Activities.Presentation.Toolbox.ToolboxItemWrapper)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (tool As ToolboxItemWrapper) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ tool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />
      </Parameters>
      <Docs>
        <param name="tool"><span data-ttu-id="c1e80-123"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> Elementu do usunięcia z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-123">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="c1e80-124">Usuwa pierwsze wystąpienie określonego narzędzia z kolekcji kategorią przybornika.</span><span class="sxs-lookup"><span data-stu-id="c1e80-124">Removes the first occurrence of a specified tool from the toolbox category collection.</span></span></summary>
        <returns>
          <span data-ttu-id="c1e80-125"><see langword="true" /> Jeśli narzędzie został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-125"><see langword="true" /> if the tool is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1e80-126">Ta metoda zwraca również wartość <see langword="false" /> Jeśli narzędzia nie został znaleziony w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-126">This method also returns <see langword="false" /> if the tool was not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1e80-127"><paramref name="tool" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-127">The <paramref name="tool" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c1e80-128">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-128">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span> <span data-ttu-id="c1e80-129"><see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="c1e80-129">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="c1e80-130">Indeks tablicy, od którego rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="c1e80-130">The index of the array at which the copying begins.</span></span></param>
        <summary><span data-ttu-id="c1e80-131">Kopiuje całą <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji do jednowymiarowego zgodnego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu docelowego <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-131">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-132">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-132">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1e80-133"><paramref name="array" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-133">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-134">Pobiera liczbę narzędzi w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-134">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <value><span data-ttu-id="c1e80-135">Liczba elementów zawartych w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-135">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-136"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-136"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-137">Pobiera wartość wskazującą, czy dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> jest synchronizowane (wielowątkowość).</span><span class="sxs-lookup"><span data-stu-id="c1e80-137">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="c1e80-138"><see langword="true" /> Jeśli dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-138"><see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-139"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-139"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="c1e80-140"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> Właściwość zwraca obiekt, który może służyć do synchronizujący dostęp do <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>.</span><span class="sxs-lookup"><span data-stu-id="c1e80-140">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-141">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-141">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <value><span data-ttu-id="c1e80-142">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-142">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-143"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-143"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1e80-144">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-144">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></summary>
        <returns><span data-ttu-id="c1e80-145"><see cref="T:System.Collections.IEnumerator`1" /> Dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-145">An <see cref="T:System.Collections.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-146">Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="c1e80-146">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c1e80-147">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-147">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c1e80-148">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="c1e80-148">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="c1e80-149">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.IEnumerator%601.Current>.</span><span class="sxs-lookup"><span data-stu-id="c1e80-149">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="c1e80-150">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="c1e80-150">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c1e80-151">Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający nie jest już prawidłowe, a jego zachowanie jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="c1e80-151">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="c1e80-152">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c1e80-152">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1e80-153">Pozycja, do którego jest wstawiany nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-153">The position into which the new element is inserted.</span></span></param>
        <summary><span data-ttu-id="c1e80-154">Dodaje narzędzie do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-154">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <returns><span data-ttu-id="c1e80-155">Liczony od zera indeks narzędzia dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-155">The zero-based index of the tool added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-156"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-156"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1e80-157"><paramref name="value" /> Jest typu, który nie jest możliwa do przypisania do <see cref="T:System.Collections.IList" /> zaimplementowana przez kolekcję.</span><span class="sxs-lookup"><span data-stu-id="c1e80-157">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1e80-158">Usuwa wszystkie narzędzia z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-158">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-159"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-159"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1e80-160">Narzędzie <see cref="T:System.Object" /> do zlokalizowania w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-160">The tool <see cref="T:System.Object" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="c1e80-161">Określa, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> zawiera konkretnego narzędzia.</span><span class="sxs-lookup"><span data-stu-id="c1e80-161">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> contains a specific tool.</span></span></summary>
        <returns>
          <span data-ttu-id="c1e80-162"><see langword="true" /> Jeśli <paramref name="value" /> znajduje się w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-162"><see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-163"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-163"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1e80-164"><paramref name="value" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-164">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1e80-165"><see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-165">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></param>
        <summary><span data-ttu-id="c1e80-166">Określa indeks określonego narzędzia w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-166">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <returns><span data-ttu-id="c1e80-167">Liczony od zera indeks <paramref name="value" /> Jeśli znaleziono w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c1e80-167">The zero-based index of <paramref name="value" /> if found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-168"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-168"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1e80-169"><paramref name="value" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-169">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c1e80-170">Liczony od zera indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="c1e80-170">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="c1e80-171">Narzędzie dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-171">The tool added to the collection.</span></span></param>
        <summary><span data-ttu-id="c1e80-172">Wstawia narzędzia do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="c1e80-172">Inserts a tool into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-173"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-173"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="c1e80-174">Jeśli `index` jest równa liczbie elementów w <xref:System.Collections.IList>, następnie `value` jest dołączany na końcu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-174">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="c1e80-175">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="c1e80-175">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="c1e80-176">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c1e80-176">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1e80-177"><paramref name="index" /> Jest nieprawidłowa dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-177">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1e80-178"><paramref name="value" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-178">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c1e80-179"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> Jest tylko do odczytu, lub o stałym rozmiarze, który został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="c1e80-179">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is read-only, or it has a fixed size that has been exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-180">Pobiera wartość wskazującą, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c1e80-180">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="c1e80-181"><see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> ma ustalony rozmiar; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-181"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-182"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-182"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-183">Pobiera wartość wskazującą, czy <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-183">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="c1e80-184"><see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-184"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-185"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-185"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="c1e80-186">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="c1e80-186">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c1e80-187">Liczony od zera indeks elementu narzędzie do pobierania lub ustawiania.</span><span class="sxs-lookup"><span data-stu-id="c1e80-187">The zero-based index of the tool item to get or set.</span></span></param>
        <summary><span data-ttu-id="c1e80-188">Pobiera lub ustawia narzędzie pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="c1e80-188">Gets or sets the tool at the specified index.</span></span></summary>
        <value><span data-ttu-id="c1e80-189">Narzędzie <see cref="T:System.Object" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="c1e80-189">The tool <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-190"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-190"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="c1e80-191">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="c1e80-191">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1e80-192">Narzędzie <see cref="T:System.Object" /> do usunięcia z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-192">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></param>
        <summary><span data-ttu-id="c1e80-193">Usuwa pierwsze wystąpienie określonego narzędzia z <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-193">Removes the first occurrence of a specific tool from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-194"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-194"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="c1e80-195">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="c1e80-195">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c1e80-196">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c1e80-196">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c1e80-197">Liczony od zera indeks elementu narzędzia do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="c1e80-197">The zero-based index of the tool item to remove.</span></span></param>
        <summary><span data-ttu-id="c1e80-198">Usuwa narzędzia w określonym indeksie <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-198">Removes the tool at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1e80-199"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implementuje <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c1e80-199"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="c1e80-200">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="c1e80-200">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c1e80-201">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c1e80-201">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1e80-202"><paramref name="index" /> Jest nieprawidłowa dla <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c1e80-202">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt; Tools { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt; Tools" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.Tools" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tools As ICollection(Of ToolboxItemWrapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^&gt; ^ Tools { System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1e80-203">Pobiera narzędzi w <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-203">Gets the tools in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <value><span data-ttu-id="c1e80-204"><see cref="T:System.Collections.Generic.ICollection`1" /> Zawierający <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="c1e80-204">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>