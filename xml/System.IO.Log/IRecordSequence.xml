<Type Name="IRecordSequence" FullName="System.IO.Log.IRecordSequence">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a2bacddb80f2006249ed7194edf1d3865804236" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69356867" /></Metadata><TypeSignature Language="C#" Value="public interface IRecordSequence : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRecordSequence implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.IRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRecordSequence&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRecordSequence : IDisposable" />
  <TypeSignature Language="F#" Value="type IRecordSequence = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="735e0-101">Udostępnia ogólny interfejs do sekwencji rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-101">Provides a generic interface to a sequence of records.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-102"><xref:System.IO.Log.IRecordSequence> Interfejs udostępnia interfejs abstrakcyjny do strumienia zorientowanego na rekordy.</span><span class="sxs-lookup"><span data-stu-id="735e0-102">The <xref:System.IO.Log.IRecordSequence> interface provides an abstract interface to a record-oriented stream.</span></span> <span data-ttu-id="735e0-103"><xref:System.IO.Log.IRecordSequence> Wystąpienie może służyć do odczytu i zapisu rekordów dzienników.</span><span class="sxs-lookup"><span data-stu-id="735e0-103">A <xref:System.IO.Log.IRecordSequence> instance can be used to read and write log records.</span></span>  
  
 <span data-ttu-id="735e0-104"><xref:System.IO.Log.IRecordSequence> Interfejs zapewnia następujące możliwości:</span><span class="sxs-lookup"><span data-stu-id="735e0-104">The <xref:System.IO.Log.IRecordSequence> interface provides the following capabilities,</span></span>  
  
-   <span data-ttu-id="735e0-105">Dołącz rekordy dziennika przy użyciu <xref:System.IO.Log.IRecordSequence.Append%2A> metod.</span><span class="sxs-lookup"><span data-stu-id="735e0-105">Append log records using the <xref:System.IO.Log.IRecordSequence.Append%2A> methods.</span></span>  
  
-   <span data-ttu-id="735e0-106">Odczytaj dołączone rekordy przy użyciu <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-106">Read the appended records using the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
-   <span data-ttu-id="735e0-107">Napisz specjalny rekord ponownego uruchomienia przy użyciu <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-107">Write a special restart record using the <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
-   <span data-ttu-id="735e0-108">Odczytaj rekordy ponownego uruchomienia od ostatnio zapisanego rekordu ponownego uruchomienia <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-108">Read restart records from the most recently written restart record using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
-   <span data-ttu-id="735e0-109">Opróżniaj rekordy do magazynu trwałego za <xref:System.IO.Log.IRecordSequence.Flush%2A> pomocą metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-109">Flush the records to durable store using the  <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
-   <span data-ttu-id="735e0-110">Rezerwacja miejsca na dołączanie rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-110">Reserve space for appending records.</span></span>  
  
-   <span data-ttu-id="735e0-111">Zwolnij miejsce w dzienniku, przenosząc podstawę dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-111">Free log space by advancing the base of the log.</span></span>  
  
-   <span data-ttu-id="735e0-112">Odbieraj <xref:System.IO.Log.IRecordSequence.TailPinned> powiadomienia o zdarzeniach, aby przenieść bazę dziennika do wolnego miejsca.</span><span class="sxs-lookup"><span data-stu-id="735e0-112">Receive <xref:System.IO.Log.IRecordSequence.TailPinned> event notifications to move the base of the log to free space.</span></span>  
  
 <span data-ttu-id="735e0-113">Rekordy dziennika są dołączane do <xref:System.IO.Log.IRecordSequence> wystąpienia, a każdy rekord dziennika ma unikatowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-113">Log records are appended to a <xref:System.IO.Log.IRecordSequence> instance, and each log record is given a unique sequence number.</span></span> <span data-ttu-id="735e0-114">Numery sekwencji są ściśle monotonicznie rosnące w obrębie danej sekwencji rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-114">Sequence numbers are strictly monotonically increasing within a given record sequence.</span></span> <span data-ttu-id="735e0-115">Rekord dziennika składa się z nieprzezroczystych danych dostarczonych <xref:System.IO.Log.IRecordSequence> do wystąpienia <xref:System.Collections.IList> w ArraySegments bajtów.</span><span class="sxs-lookup"><span data-stu-id="735e0-115">A log record consists of opaque data, supplied to the <xref:System.IO.Log.IRecordSequence> instance in an <xref:System.Collections.IList> of ArraySegments of bytes.</span></span>  
  
 <span data-ttu-id="735e0-116"><xref:System.IO.Log.IRecordSequence> Interfejs udostępnia również kilka podstawowych właściwości, które zawierają informacje o granicach dzienników.</span><span class="sxs-lookup"><span data-stu-id="735e0-116">The <xref:System.IO.Log.IRecordSequence> interface also exposes a few basic properties which provides information about log boundaries.</span></span>  
  
-   <span data-ttu-id="735e0-117"><xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> Właściwość zawiera numer sekwencji pierwszego prawidłowego rekordu w sekwencji rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-117">The <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> property contains the sequence number of the first valid record in the record sequence.</span></span>  
  
-   <span data-ttu-id="735e0-118"><xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> Właściwość zawiera numer sekwencyjny, który gwarantuje, że jest większy niż numer sekwencji ostatniego dołączonego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-118">The <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span>  
  
-   <span data-ttu-id="735e0-119"><xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> Właściwość zawiera numer sekwencji ostatnio zapisywanego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-119">The <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> property contains the sequence number of the last written restart area.</span></span>  
  
-   <span data-ttu-id="735e0-120"><xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> Właściwość zawiera rozmiar największego rekordu, do którego można dołączyć, lub odczytać z sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-120">The <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> property contains the size of the largest record that can be appended to, or read from the sequence.</span></span>  
  
-   <span data-ttu-id="735e0-121"><xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> Właściwość zawiera łączny rozmiar wszystkich rezerwacji wykonanych w tej sekwencji rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-121">The <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> property contains the total size of all reservations made in this record sequence.</span></span>  
  
-   <span data-ttu-id="735e0-122">Jeśli właściwość jest ustawiona na `true`, a <xref:System.IO.Log.IRecordSequence.Append%2A> operacja nie powiedzie się z powodu braku miejsca w sekwencji, sekwencja rekordów podejmie próbę zwolnienia miejsca, a następnie spróbuj ponownie wykonać operację dołączania. <xref:System.IO.Log.IRecordSequence.RetryAppend%2A></span><span class="sxs-lookup"><span data-stu-id="735e0-122">If the <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> property is set to `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> operation fails because there is no space in the sequence, the record sequence will attempt to free space, and retry the Append operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="iRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-123">Nowy numer sekwencyjnej sekwencji rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-123">The new base sequence number of the record sequence.</span></span></param>
        <summary><span data-ttu-id="735e0-124">Przenosi numer sekwencji podstawowej dziennika do przodu.</span><span class="sxs-lookup"><span data-stu-id="735e0-124">Moves the base sequence number of the log forward.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-125">W przypadku użycia <xref:System.IO.Log.LogRecordSequence> wystąpienia i próby naliczania numeru sekwencyjnego w celu zwolnienia miejsca w dzienniku nowy podstawowy numer sekwencyjny musi znajdować się w innym zakresie dziennika dla poprzedniego zakresu, aby można go było oznaczyć jako pusty.</span><span class="sxs-lookup"><span data-stu-id="735e0-125">When you use a <xref:System.IO.Log.LogRecordSequence> instance and try to advance the sequence number to free up space in the log, the new base sequence number must reside in a different log extent for the previous extent to be marked as empty.</span></span> <span data-ttu-id="735e0-126">Częściowe zwalnianie zakresów nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="735e0-126">Freeing extents partially is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-127"><paramref name="newBaseSequenceNumber" /> jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-127"><paramref name="newBaseSequenceNumber" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="735e0-128"><paramref name="newBaseSequenceNumber" />nie jest aktywny w dzienniku.</span><span class="sxs-lookup"><span data-stu-id="735e0-128"><paramref name="newBaseSequenceNumber" /> is not active in the log.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-129">Wystąpił błąd we/wy podczas modyfikowania sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-129">An I/O error occurred while modifying the sequence.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-130">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-130">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-131">Sekwencja rekordów jest pełna.</span><span class="sxs-lookup"><span data-stu-id="735e0-131">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-132">Gdy jest zastępowany w klasie pochodnej, zapisuje rekord dziennika do <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-132">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-133">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-133">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-134">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-134">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-135">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-135">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-136">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-136">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="735e0-137">Gdy jest zastępowany w klasie pochodnej, zapisuje rekord dziennika do <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-137">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="735e0-138">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-138">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-139">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-139">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-140">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-140">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-141">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-141">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-142">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-142">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-143">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-143">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-144">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-144">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-145">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-145">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-146">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-146">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-147">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-147">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-148">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-148">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-149">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-149">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-150">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-150">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="735e0-151">Gdy jest zastępowany w klasie pochodnej, dołącza rekord dziennika do <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-151">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="735e0-152">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-152">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-153">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-153">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-154">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-154">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-155">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-155">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-156">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-156">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-157">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-157">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-158">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-158">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-159">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-159">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-160">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-160">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-161">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-161">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-162">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-162">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-163">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-163">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-164">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-164">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-165">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna być użyta dla tego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-165">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="735e0-166">Gdy jest zastępowany w klasie pochodnej, dołącza rekord dziennika do <see cref="T:System.IO.Log.IRecordSequence" />, przy użyciu miejsca zarezerwowanych wcześniej w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-166">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-167">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-167">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-168">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-168">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-169">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-169">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-170">Dołączony rekord będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji określonej przez `reservations` parametr.</span><span class="sxs-lookup"><span data-stu-id="735e0-170">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="735e0-171">Jeśli dołączenie powiedzie się, będzie zużywać najmniejszy obszar rezerwacji, który może zawierać dane, i że obszar rezerwacji zostanie usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-171">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-172">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-172">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-173">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-173">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-174">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-174">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-175">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-175">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-176">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-176">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-177">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-177">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-178">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-178">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-179">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-179">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-180">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-180">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-181">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-181">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-182">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna być użyta dla tego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-182">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="735e0-183">Gdy jest zastępowany w klasie pochodnej, dołącza rekord dziennika do <see cref="T:System.IO.Log.IRecordSequence" />, przy użyciu miejsca zarezerwowanych wcześniej w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-183">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-184">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-184">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-185">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-185">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-186">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-186">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-187">Dołączony rekord będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji określonej przez `reservations` parametr.</span><span class="sxs-lookup"><span data-stu-id="735e0-187">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="735e0-188">Jeśli dołączenie powiedzie się, będzie zużywać najmniejszy obszar rezerwacji, który może zawierać dane, i że obszar rezerwacji zostanie usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-188">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-189">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-189">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-190">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-190">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-191">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-191">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-192">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-192">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-193">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-193">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-194">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-194">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-195">Gdy jest zastępowany w klasie pochodnej, Pobiera numer sekwencyjny pierwszego prawidłowego rekordu w bieżącym <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-195">When overridden in a derived class, gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="735e0-196">Najniższy numer sekwencyjny odpowiadający prawidłowemu rekordowi w <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-196">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-197">Poprawne numery sekwencji są większe lub równe <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> i mniejsze niż. <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A></span><span class="sxs-lookup"><span data-stu-id="735e0-197">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
 <span data-ttu-id="735e0-198">Wartość tej właściwości można zmienić przez wywołanie <xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> metody lub. <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A></span><span class="sxs-lookup"><span data-stu-id="735e0-198">The value of this property can be changed by calling the <xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> or <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-199">Uzyskano dostęp do właściwości po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-199">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-200">Gdy jest zastępowany w klasie pochodnej, rozpoczyna asynchroniczne operacje dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-200">When overridden in a derived class, begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-201">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-201">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-202">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-202">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-203">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-203">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-204">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-204">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-205">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-205">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-206">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie dodania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-206">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-207">Gdy jest zastępowany w klasie pochodnej, rozpoczyna asynchroniczne operacje dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-207">When overridden in a derived class, begins an asynchronous append operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-208"><see cref="T:System.IAsyncResult" /> Reprezentuje dołączenie asynchroniczne, które nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-208">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-209">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndAppend%2A> metodę, aby upewnić się, że operacja dołączania została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-209">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-210">Jeśli wystąpił błąd podczas dołączania asynchronicznego, wyjątek nie zostanie wygenerowany, dopóki <xref:System.IO.Log.IRecordSequence.EndAppend%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-210">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-211">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-211">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-212">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-212">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-213">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-213">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-214">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-214">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-215">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-215">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-216">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-216">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-217">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-217">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-218">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-218">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-219">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-219">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-220">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-220">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-221">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-221">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-222">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-222">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-223">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-223">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-224">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie dodania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-224">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-225">Gdy jest zastępowany w klasie pochodnej, rozpoczyna asynchroniczne operacje dołączania przy użyciu miejsca, które zostało wcześniej zarezerwowane w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-225">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-226"><see cref="T:System.IAsyncResult" /> Reprezentuje dołączenie asynchroniczne, które nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-226">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-227">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndAppend%2A> metodę, aby upewnić się, że operacja dołączania została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-227">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-228">Jeśli wystąpił błąd podczas dołączania asynchronicznego, wyjątek nie zostanie wygenerowany, dopóki <xref:System.IO.Log.IRecordSequence.EndAppend%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-228">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-229">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-229">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-230">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-230">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-231">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-231">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-232">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-232">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-233">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-233">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-234">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-234">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-235">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-235">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-236">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-236">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-237">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-237">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-238">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-238">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-239">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-239">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-240">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-240">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-241">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna być użyta dla tego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-241">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-242">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-242">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-243">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie dodania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-243">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-244">Gdy jest zastępowany w klasie pochodnej, rozpoczyna asynchroniczne operacje dołączania przy użyciu miejsca, które zostało wcześniej zarezerwowane w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-244">When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-245"><see cref="T:System.IAsyncResult" /> Reprezentuje dołączenie asynchroniczne, które nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-245">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-246">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndAppend%2A> metodę, aby upewnić się, że operacja dołączania została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-246">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-247">Jeśli wystąpił błąd podczas dołączania asynchronicznego, wyjątek nie zostanie wygenerowany, dopóki <xref:System.IO.Log.IRecordSequence.EndAppend%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-247">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-248">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-248">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-249">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-249">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-250">Dołączony rekord będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji określonej przez `reservations` parametr.</span><span class="sxs-lookup"><span data-stu-id="735e0-250">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="735e0-251">Jeśli dołączenie powiedzie się, będzie zużywać najmniejszy obszar rezerwacji, który może zawierać dane, i że obszar rezerwacji zostanie usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-251">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-252">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-252">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-253">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-253">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-254">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-254">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-255">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-255">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-256">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-256">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-257">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-257">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousUndoRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousUndoRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousUndoRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousUndoRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-258">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-258">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-259">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-259">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousUndoRecord"><span data-ttu-id="735e0-260">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-260">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-261">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-261">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-262">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna być użyta dla tego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-262">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-263">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-263">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-264">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie dodania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-264">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-265">Gdy jest zastępowany w klasie pochodnej, rozpoczyna asynchroniczne operacje dołączania przy użyciu miejsca, które zostało wcześniej zarezerwowane w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-265">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-266"><see cref="T:System.IAsyncResult" /> Reprezentuje dołączenie asynchroniczne, które nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-266">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-267">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndAppend%2A> metodę, aby upewnić się, że operacja dołączania została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-267">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-268">Jeśli wystąpił błąd podczas dołączania asynchronicznego, wyjątek nie zostanie wygenerowany, dopóki <xref:System.IO.Log.IRecordSequence.EndAppend%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-268">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-269">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-269">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-270">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-270">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-271">Dołączony rekord będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji określonej przez `reservations` parametr.</span><span class="sxs-lookup"><span data-stu-id="735e0-271">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="735e0-272">Jeśli dołączenie powiedzie się, będzie zużywać najmniejszy obszar rezerwacji, który może zawierać dane, i że obszar rezerwacji zostanie usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-272">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-273">Zwykle ta metoda zostaje zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-273">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="735e0-274">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-274">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-275">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-275">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-276">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-276">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-277">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-277">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-278">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-278">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="735e0-279">Numer sekwencji dla najnowszego rekordu, który musi zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="735e0-279">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="735e0-280">Jeśli jest <see cref="T:System.IO.Log.SequenceNumber" /> to nieprawidłowe, należy napisać wszystkie rekordy.</span><span class="sxs-lookup"><span data-stu-id="735e0-280">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-281">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu opróżniania.</span><span class="sxs-lookup"><span data-stu-id="735e0-281">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-282">Obiekt udostępniony przez użytkownika, który odróżnia to określone asynchroniczne żądanie opróżniania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-282">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-283">Gdy jest zastępowany w klasie pochodnej, rozpoczyna asynchroniczne operacje opróżniania przy użyciu miejsca, które zostało wcześniej zarezerwowane w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-283">When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-284"><see cref="T:System.IAsyncResult" /> Reprezentuje asynchroniczną operację opróżniania, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-284">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-285">Należy przekazać <xref:System.IAsyncResult> zwróconą przez bieżącą metodę <xref:System.IO.Log.IRecordSequence.EndFlush%2A> do metody, aby upewnić się, że opróżnianie i zasoby zostały odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-285">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="735e0-286">Jeśli wystąpi błąd podczas asynchronicznego opróżniania, wyjątek nie zostanie zgłoszony, dopóki <xref:System.IO.Log.IRecordSequence.EndFlush%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z zwracanym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-286">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-287">Wywołanie tej metody zapewnia, że wszystkie rekordy, które zostały dołączone do <xref:System.IO.Log.IRecordSequence> trwale są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="735e0-287">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="735e0-288">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-288">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-289">Błędy, które wystąpiły podczas asynchronicznego żądania opróżniania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków w przypadku <xref:System.IO.Log.IRecordSequence.EndFlush%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-289">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-290">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-290">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-291">Wystąpił błąd we/wy podczas opróżniania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-291">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-292">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-292">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-293">Gdy jest zastępowany w klasie pochodnej, rozpoczyna rezerwę asynchroniczną i operację dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-293">When overridden in a derived class, begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-294">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-294">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-295">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-295">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-296">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-296">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-297">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-297">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="735e0-298">Kolekcja rezerwacji, w której mają zostać wprowadzone rezerwacje.</span><span class="sxs-lookup"><span data-stu-id="735e0-298">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-299">Rezerwacje do wprowadzenia w bajtach.</span><span class="sxs-lookup"><span data-stu-id="735e0-299">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-300">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-300">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-301">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie dodania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-301">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-302">Gdy jest zastępowany w klasie pochodnej, rozpoczyna rezerwę asynchroniczną i operację dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-302">When overridden in a derived class, begins an asynchronous reserve and append operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-303"><see cref="T:System.IAsyncResult" /> Reprezentuje tę operację asynchroniczną, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-303">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-304">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> metodę, aby upewnić się, że operacja dołączania została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-304">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-305">Jeśli wystąpił błąd podczas dołączania asynchronicznego, wyjątek nie zostanie wygenerowany, dopóki <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-305">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-306">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-306">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-307">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-307">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-308">Określone rezerwacje są dodawane do podanej kolekcji rezerwacji w operacji niepodzielnej przy użyciu operacji dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-308">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="735e0-309">Jeśli dołączenie nie powiedzie się, żadne miejsce nie jest zarezerwowane.</span><span class="sxs-lookup"><span data-stu-id="735e0-309">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="735e0-310">Zwykle ta metoda może zostać zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-310">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="735e0-311">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-311">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-312">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-312">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-313">Błędy, które wystąpiły podczas asynchronicznego żądania dołączania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków, <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="735e0-313">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-314">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-314">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-315">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-315">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-316">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord lub dokonać rezerwacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-316">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-317">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-317">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-318">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-318">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-319">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-319">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-320">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-320">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-321">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-321">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="735e0-322">Kolekcja rezerwacji, w której mają zostać wprowadzone rezerwacje.</span><span class="sxs-lookup"><span data-stu-id="735e0-322">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-323">Rezerwacje do wprowadzenia w bajtach.</span><span class="sxs-lookup"><span data-stu-id="735e0-323">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-324">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-324">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-325">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie dodania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-325">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-326">Gdy jest zastępowany w klasie pochodnej, rozpoczyna rezerwę asynchroniczną i operację dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-326">When overridden in a derived class, begins an asynchronous reserve and append operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-327"><see cref="T:System.IAsyncResult" /> Reprezentuje tę operację asynchroniczną, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-327">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-328">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> metodę, aby upewnić się, że operacja dołączania została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-328">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-329">Jeśli wystąpił błąd podczas dołączania asynchronicznego, wyjątek nie zostanie wygenerowany, dopóki <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> Metoda nie zostanie wywołana <xref:System.IAsyncResult> z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-329">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-330">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-330">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-331">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-331">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-332">Określone rezerwacje są dodawane do podanej kolekcji rezerwacji w operacji niepodzielnej przy użyciu operacji dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-332">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="735e0-333">Jeśli dołączenie nie powiedzie się, żadne miejsce nie jest zarezerwowane.</span><span class="sxs-lookup"><span data-stu-id="735e0-333">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="735e0-334">Zwykle ta metoda może zostać zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-334">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="735e0-335">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-335">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-336">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-336">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-337">Błędy, które wystąpiły podczas asynchronicznego żądania dołączania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków, <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="735e0-337">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-338">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-338">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-339">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-339">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-340">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord lub dokonać rezerwacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-340">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-341">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-341">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-342">Gdy jest zastępowany w klasie pochodnej, rozpoczyna operację zapisu w obszarze asynchronicznych ponownych uruchomień.</span><span class="sxs-lookup"><span data-stu-id="735e0-342">When overridden in a derived class, begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginWriteRestartArea (data, newBaseSequenceNumber, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-343">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-343">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-344">Nowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-344">The new base sequence number.</span></span> <span data-ttu-id="735e0-345">Określony numer sekwencji musi być większy lub równy bieżącemu numerowi sekwencji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="735e0-345">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="735e0-346">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna zostać użyta dla tego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-346">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-347">Opcjonalne asynchroniczne wywołanie zwrotne, które ma zostać wywołane po zakończeniu zapisu w obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-347">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-348">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie zapisu w obszarze ponownego uruchamiania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-348">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-349">Gdy jest zastępowany w klasie pochodnej, rozpoczyna operację zapisu w obszarze asynchronicznych ponownych uruchomień przy użyciu miejsca, które zostało wcześniej zarezerwowane w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-349">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-350"><see cref="T:System.IAsyncResult" /> Reprezentuje operację zapisu w obszarze asynchronicznych ponownych uruchomień, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-350">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-351">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> metodę, aby upewnić się, że operacja zapisu w obszarze ponownego uruchomienia została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-351">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-352">Jeśli wystąpił błąd podczas operacji zapisu w obszarze asynchronicznych ponownych uruchomień, wyjątek nie zostanie wygenerowany <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> , dopóki metoda nie zostanie <xref:System.IAsyncResult> wywołana z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-352">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-353">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-353">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-354">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-354">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-355">Po pomyślnym zakończeniu operacji numer sekwencyjny został zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="735e0-355">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="735e0-356">Wszystkie rekordy dziennika o numerach sekwencyjnych mniejszych niż nowy podstawowy numer sekwencji są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="735e0-356">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="735e0-357"><xref:System.IO.Log.ReservationCollection> Jeśli jest określony, zapisany obszar ponownego uruchomienia będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji zawartej w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-357">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="735e0-358">Jeśli metoda zakończy się pomyślnie, użyje najmniejszej rezerwacji, która może przechowywać dane i że rezerwacja zostanie usunięta z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-358">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-359">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-359">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-360">Błędy, które wystąpiły podczas asynchronicznego żądania dołączania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków, <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="735e0-360">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginWriteRestartArea (data, newBaseSequenceNumber, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-361">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-361">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-362">Nowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-362">The new base sequence number.</span></span> <span data-ttu-id="735e0-363">Określony numer sekwencji musi być większy lub równy bieżącemu numerowi sekwencji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="735e0-363">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="735e0-364">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna zostać użyta dla tego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-364">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="735e0-365">Opcjonalne asynchroniczne wywołanie zwrotne, które ma zostać wywołane po zakończeniu zapisu w obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-365">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="735e0-366">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie zapisu w obszarze ponownego uruchamiania z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="735e0-366">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="735e0-367">Gdy jest zastępowany w klasie pochodnej, rozpoczyna operację zapisu w obszarze asynchronicznych ponownych uruchomień przy użyciu miejsca, które zostało wcześniej zarezerwowane w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-367">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-368"><see cref="T:System.IAsyncResult" /> Reprezentuje operację zapisu w obszarze asynchronicznych ponownych uruchomień, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-368">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-369">Należy przekazać <xref:System.IAsyncResult> zwracaną przez tę metodę <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> metodę, aby upewnić się, że operacja zapisu w obszarze ponownego uruchomienia została ukończona, a zasoby mogą być odpowiednio zwolnione.</span><span class="sxs-lookup"><span data-stu-id="735e0-369">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="735e0-370">Jeśli wystąpił błąd podczas operacji zapisu w obszarze asynchronicznych ponownych uruchomień, wyjątek nie zostanie wygenerowany <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> , dopóki metoda nie zostanie <xref:System.IAsyncResult> wywołana z wynikiem zwróconym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-370">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="735e0-371">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-371">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-372">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-372">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-373">Po pomyślnym zakończeniu operacji numer sekwencyjny został zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="735e0-373">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="735e0-374">Wszystkie rekordy dziennika o numerach sekwencyjnych mniejszych niż nowy podstawowy numer sekwencji są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="735e0-374">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="735e0-375"><xref:System.IO.Log.ReservationCollection> Jeśli jest określony, zapisany obszar ponownego uruchomienia będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji zawartej w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-375">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="735e0-376">Jeśli metoda zakończy się pomyślnie, użyje najmniejszej rezerwacji, która może przechowywać dane i że rezerwacja zostanie usunięta z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-376">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-377">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-377">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-378">Błędy, które wystąpiły podczas asynchronicznego żądania dołączania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków, <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="735e0-378">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-379">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-379">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-380">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-380">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-381">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-381">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-382">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-382">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="iRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735e0-383">Gdy jest zastępowany w klasie pochodnej, tworzy nową <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-383">When overridden in a derived class, creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></summary>
        <returns><span data-ttu-id="735e0-384">Nowo utworzony <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-384">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-385">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-385">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="735e0-386">Odwołanie do oczekującego żądania asynchroniczne we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-386">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="735e0-387">Gdy jest zastępowany w klasie pochodnej, Kończenie asynchronicznej operacji dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-387">When overridden in a derived class, ends an asynchronous append operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-388">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-388">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-389">Ta metoda jest blokowana do momentu zakończenia operacji we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-389">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="735e0-390">Błędy występujące podczas asynchronicznego żądania zapisu, takie jak awaria dysku w żądaniu we/wy, stają się widoczne po <xref:System.IO.Log.IRecordSequence.EndAppend%2A> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="735e0-390">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="735e0-391">Ta metoda musi być wywoływana dokładnie raz na każdym <xref:System.IAsyncResult> zwracanym <xref:System.IO.Log.IRecordSequence.BeginAppend%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-391">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-392">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-392">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-393">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-393">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="735e0-394">Odwołanie do oczekującego żądania asynchroniczne we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-394">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="735e0-395">Gdy jest zastępowany w klasie pochodnej, Kończenie asynchronicznej operacji opróżniania.</span><span class="sxs-lookup"><span data-stu-id="735e0-395">When overridden in a derived class, ends an asynchronous flush operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-396">Numer sekwencji ostatniego zapisywanego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-396">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-397">Ta metoda jest blokowana do momentu zakończenia operacji we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-397">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="735e0-398">Błędy występujące podczas asynchronicznego żądania opróżniania, takie jak awaria dysku w żądaniu we/wy, stają się widoczne po <xref:System.IO.Log.IRecordSequence.EndFlush%2A> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="735e0-398">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="735e0-399">Ta metoda musi być wywoływana dokładnie raz na każdym <xref:System.IAsyncResult> zwracanym <xref:System.IO.Log.IRecordSequence.BeginFlush%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-399">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-400">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-400">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-401">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-401">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="735e0-402">Odwołanie do oczekującego żądania asynchroniczne we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-402">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="735e0-403">Gdy jest zastępowany w klasie pochodnej, końcowa rezerwa asynchroniczna i operacja dołączania.</span><span class="sxs-lookup"><span data-stu-id="735e0-403">When overridden in a derived class, ends an asynchronous reserve and append operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-404">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-404">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-405">Ta metoda jest blokowana do momentu zakończenia operacji we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-405">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="735e0-406">Błędy występujące podczas asynchronicznego żądania zapisu, takie jak awaria dysku w żądaniu we/wy, stają się widoczne po <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="735e0-406">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="735e0-407">Ta metoda musi być wywoływana dokładnie raz na każdym <xref:System.IAsyncResult> zwracanym <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-407">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-408">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-408">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-409">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-409">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="735e0-410">Odwołanie do oczekującego żądania asynchroniczne we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-410">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="735e0-411">Gdy jest zastępowany w klasie pochodnej, zamyka operację zapisu w obszarze asynchronicznego ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-411">When overridden in a derived class, ends an asynchronous restart area write operation.</span></span></summary>
        <returns><span data-ttu-id="735e0-412">Numer sekwencyjny zapisywanego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-412">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-413">Ta metoda jest blokowana do momentu zakończenia operacji we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-413">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="735e0-414">Błędy występujące podczas asynchronicznego żądania zapisu, takie jak awaria dysku w żądaniu we/wy, stają się widoczne po <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="735e0-414">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="735e0-415">Ta metoda musi być wywoływana dokładnie raz na każdym <xref:System.IAsyncResult> zwracanym <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-415">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-416">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-416">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-417">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-417">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-418">Gdy jest zastępowany w klasie pochodnej, powoduje to zapisanie dołączonych rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-418">When overridden in a derived class, causes appended records to be written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735e0-419">Gdy jest zastępowany w klasie pochodnej, zapewnia, że zostały zapisane wszystkie dołączone rekordy.</span><span class="sxs-lookup"><span data-stu-id="735e0-419">When overridden in a derived class, ensures that all appended records have been written.</span></span></summary>
        <returns><span data-ttu-id="735e0-420">Numer sekwencji ostatniego zapisywanego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-420">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-421">Wywołanie tej metody zapewnia, że wszystkie rekordy, które zostały dołączone do <xref:System.IO.Log.IRecordSequence> trwale zostały zapisane.</span><span class="sxs-lookup"><span data-stu-id="735e0-421">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-422">Wystąpił błąd we/wy podczas opróżniania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-422">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-423">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-423">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="735e0-424">Numer sekwencji dla najnowszego rekordu, który musi zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="735e0-424">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="735e0-425">Jeśli jest <see cref="T:System.IO.Log.SequenceNumber" /> to nieprawidłowe, należy napisać wszystkie rekordy.</span><span class="sxs-lookup"><span data-stu-id="735e0-425">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="735e0-426">Gdy jest zastępowany w klasie pochodnej, zapewnia, że wszystkie dołączone rekordy do i włącznie z rekordem o określonym numerze sekwencyjnym zostały trwale zapisane.</span><span class="sxs-lookup"><span data-stu-id="735e0-426">When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written.</span></span></summary>
        <returns><span data-ttu-id="735e0-427">Numer sekwencji ostatniego zapisywanego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-427">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-428">Wywołanie tej metody zapewnia, że wszystkie rekordy z numerami sekwencji do i włącznie z określonym numerem sekwencyjnym zostały trwale zapisane.</span><span class="sxs-lookup"><span data-stu-id="735e0-428">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-429">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-429">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-430">Wystąpił błąd we/wy podczas opróżniania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-430">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-431">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-431">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-432">Gdy jest zastępowany w klasie pochodnej, Pobiera numer sekwencyjny, który jest większy niż ostatni dołączony rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-432">When overridden in a derived class, gets the sequence number which is greater than the last record appended.</span></span></summary>
        <value><span data-ttu-id="735e0-433">Numer sekwencyjny, który jest większy od ostatniego dołączonego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-433">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-434">Ta właściwość zawiera numer sekwencyjny, który gwarantuje, że jest większy niż numer sekwencji ostatniego dołączonego rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-434">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="735e0-435">Poprawne numery sekwencji są większe lub równe <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> i mniejsze niż. <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A></span><span class="sxs-lookup"><span data-stu-id="735e0-435">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="735e0-436"><xref:System.IO.Log.LogRecordSequence> W<xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> przypadku użycia wystąpienia wartość może stać się nieaktualna, dopóki rekordy nie zostaną opróżnione do dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-436">When using a <xref:System.IO.Log.LogRecordSequence> instance, the <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> value can become out of date until records are flushed to the log.</span></span> <span data-ttu-id="735e0-437">Zobacz <xref:System.IO.Log.IRecordSequence.Flush%2A> i <xref:System.IO.Log.RecordAppendOptions> , aby uzyskać więcej informacji dotyczących opróżniania rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-437">See <xref:System.IO.Log.IRecordSequence.Flush%2A> and <xref:System.IO.Log.RecordAppendOptions> for more information on flushing records.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-438">Uzyskano dostęp do właściwości po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-438">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-439">Gdy jest zastępowany w klasie pochodnej, pobiera rozmiar największego rekordu, który może być dołączany lub odczytywany z tej sekwencji, w bajtach.</span><span class="sxs-lookup"><span data-stu-id="735e0-439">When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></summary>
        <value><span data-ttu-id="735e0-440">Rozmiar największego rekordu, który może być dołączany lub odczytywany z tej sekwencji, w bajtach.</span><span class="sxs-lookup"><span data-stu-id="735e0-440">The size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-441">Uzyskano dostęp do właściwości po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-441">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="iRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="735e0-442">Numer sekwencyjny pierwszego rekordu, w którym rozpocznie się odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="735e0-442">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="735e0-443">Prawidłowa <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> wartość określająca sposób (czyli do przodu lub do tyłu), w której rekordy mają być odczytywane <see cref="T:System.IO.Log.LogRecordSequence" />z.</span><span class="sxs-lookup"><span data-stu-id="735e0-443">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="735e0-444">Gdy jest zastępowany w klasie pochodnej, zwraca wyliczalną kolekcję rekordów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-444">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-445">Wyliczalna kolekcja rekordów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-445">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-446">Gdy jest zastępowany w klasie pochodnej, zwraca wyliczalną kolekcję rekordów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-446">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="735e0-447">Kolejność rekordów wyliczanych zależy od wartości `logRecordEnum` parametru.</span><span class="sxs-lookup"><span data-stu-id="735e0-447">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="735e0-448">Ten przykład ilustruje użycie <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-448">This sample demonstrates the use of the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
```csharp  
using System;  
 using System.IO;  
 using System.IO.Log;  
  
 class ReadRecordsSample  
 {  
     static SequenceNumber AppendRecord(IRecordSequence sequence,  
                                        string message,  
                                        SequenceNumber user,  
                                        SequenceNumber previous)  
     {  
         MemoryStream data = new MemoryStream();  
         BinaryWriter writer = new BinaryWriter(data);  
         writer.Write(message);  
  
         ArraySegment<byte>[] segments;  
         segments = new ArraySegment<byte>[1];  
         segments[0] = new ArraySegment(data.GetBuffer(),  
                                        0,  
                                        Data.Length);  
  
         return sequence.Append(segments,  
                                user,  
                                previous,  
                                WriteFlags.None);  
     }  
  
     public static void Main(string[] args)  
     {  
         IRecordSequence sequence;  
         sequence = new FileIRecordSequence(args[0]);  
  
         SequenceNumber a, b, c, d;  
  
         a = AppendRecord(sequence,  
                          "This is record A",  
                          SequenceNumber.Invalid,  
                          SequenceNumber.Invalid);  
         Console.WriteLine("Record A has sequence number System.IO.Log", a);  
  
         b = AppendRecord(sequence,  
                          "This is record B",  
                          a,  
                          a);  
         Console.WriteLine("Record B has sequence number System.IO.Log", b);  
  
         c = AppendRecord(sequence,  
                          "This is record C",  
                          a,  
                          a);  
         Console.WriteLine("Record C has sequence number System.IO.Log", c);  
  
         d = AppendRecord(sequence,  
                          "This is record D",  
                          b,  
                          c);  
         Console.WriteLine("Record D has sequence number System.IO.Log", d);  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(a, ReadDirection.Forward))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.User))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.Previous))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
     }  
       }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-449">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-449">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-450">Wystąpił błąd we/wy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-450">An I/O error occurred while reading the record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-451">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-451">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="iRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735e0-452">Gdy jest zastępowany w klasie pochodnej, zwraca wyliczalną kolekcję obszarów ponownego uruchomienia w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-452">When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-453">Wyliczalna kolekcja obszarów ponownego uruchomienia w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-453">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-454">Obszary ponownego uruchomienia są wyliczane w odwrotnej kolejności numerów sekwencyjnych, czyli od najwyższego numeru sekwencyjnego na najniższy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-454">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="735e0-455">Należy wyliczyć tylko obszary z numerami sekwencyjnymi między ostatnim numerem sekwencyjnym a numerem sekwencyjnym.</span><span class="sxs-lookup"><span data-stu-id="735e0-455">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="735e0-456">Jeśli zakres dziennika zawierający <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> ulegnie uszkodzeniu, ta metoda może <xref:System.IO.IOException> zgłosić komunikat o błędzie "nie można wykonać żądania z powodu nieoczekiwanego wyjątku operacji we/wy.</span><span class="sxs-lookup"><span data-stu-id="735e0-456">If the log extent containing the <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> becomes corrupted, this method can throw an <xref:System.IO.IOException> with the error message "The request could not be performed because of an unexpected I/O exception.</span></span> <span data-ttu-id="735e0-457">Został zwrócony następujący kod błędu: "80070026" ".</span><span class="sxs-lookup"><span data-stu-id="735e0-457">The following error code was returned: '80070026'".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-458">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-458">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-459">Wystąpił błąd we/wy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-459">An I/O error occurred while reading the record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-460">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-460">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-461">Gdy jest zastępowany w klasie pochodnej, automatycznie dokonuje pojedynczej rezerwacji i dołącza rekord do sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-461">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-462">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-462">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-463">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-463">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-464">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-464">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-465">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-465">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="735e0-466">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera kolekcję, w której będą wprowadzane rezerwacje.</span><span class="sxs-lookup"><span data-stu-id="735e0-466">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-467">Rezerwacje do wprowadzenia w bajtach.</span><span class="sxs-lookup"><span data-stu-id="735e0-467">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="735e0-468">Gdy jest zastępowany w klasie pochodnej, automatycznie dokonuje pojedynczej rezerwacji i dołącza rekord do sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-468">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-469">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-469">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-470">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-470">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-471">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-471">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-472">Określone rezerwacje są dodawane do podanej kolekcji rezerwacji w operacji niepodzielnej przy użyciu operacji dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-472">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="735e0-473">Jeśli dołączenie nie powiedzie się, żadne miejsce nie jest zarezerwowane.</span><span class="sxs-lookup"><span data-stu-id="735e0-473">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="735e0-474">Zwykle ta metoda może zostać zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-474">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="735e0-475">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-475">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-476">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-476">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-477">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-477">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-478">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord lub dokonać rezerwacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-478">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-479">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-479">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-480">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-480">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="735e0-481">Numer sekwencji następnego rekordu w kolejności określonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="735e0-481">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="735e0-482">Numer sekwencji następnego rekordu w poprzedniej kolejności.</span><span class="sxs-lookup"><span data-stu-id="735e0-482">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="735e0-483">Prawidłowa wartość <see cref="T:System.IO.Log.RecordAppendOptions" /> określająca sposób zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="735e0-483">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="735e0-484">Kolekcja rezerwacji, w której mają zostać wprowadzone rezerwacje.</span><span class="sxs-lookup"><span data-stu-id="735e0-484">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="735e0-485">Rezerwacje do wprowadzenia w bajtach.</span><span class="sxs-lookup"><span data-stu-id="735e0-485">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="735e0-486">Gdy jest zastępowany w klasie pochodnej, automatycznie dokonuje pojedynczej rezerwacji i dołącza rekord do sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-486">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
        <returns><span data-ttu-id="735e0-487">Numer sekwencji dołączonego rekordu dziennika.</span><span class="sxs-lookup"><span data-stu-id="735e0-487">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-488">Dane zawarte w `data` parametrze zostaną połączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-488">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-489">Jednak nie ma potrzeby dzielenia danych z powrotem do segmentów tablicy podczas odczytywania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-489">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="735e0-490">Określone rezerwacje są dodawane do podanej kolekcji rezerwacji w operacji niepodzielnej przy użyciu operacji dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-490">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="735e0-491">Jeśli dołączenie nie powiedzie się, żadne miejsce nie jest zarezerwowane.</span><span class="sxs-lookup"><span data-stu-id="735e0-491">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="735e0-492">Zwykle ta metoda może zostać zakończona przed zapisaniem rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-492">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="735e0-493">Aby upewnić się, że rekord został zapisany, określ <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flagę `recordAppendOptions` przy użyciu <xref:System.IO.Log.IRecordSequence.Flush%2A> parametru lub wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="735e0-493">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-494">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-494">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-495">Wystąpił błąd we/wy podczas dołączania rekordu.</span><span class="sxs-lookup"><span data-stu-id="735e0-495">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-496">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy rekord lub dokonać rezerwacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-496">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-497">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-497">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-498">Gdy jest zastępowany w klasie pochodnej, pobiera łączną liczbę bajtów, które zostały zarezerwowane.</span><span class="sxs-lookup"><span data-stu-id="735e0-498">When overridden in a derived class, gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="735e0-499">Łączny rozmiar wszystkich rezerwacji wykonanych w tej sekwencji rekordów.</span><span class="sxs-lookup"><span data-stu-id="735e0-499">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-500">Uzyskano dostęp do właściwości po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-500">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-501">Po przesłonięciu w klasie pochodnej pobiera numer sekwencji ostatnio zapisywanego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-501">When overridden in a derived class, gets the sequence number of the most recently written restart area.</span></span></summary>
        <value><span data-ttu-id="735e0-502">Numer sekwencji ostatnio zapisywanego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-502">The sequence number of the most recently written restart area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-503">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-503">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-504">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-504">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-505">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-505">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-506">Uzyskano dostęp do właściwości po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-506">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-507">Pobiera lub ustawia wartość wskazującą, czy dołączenia są automatycznie ponawiane, jeśli dziennik jest pełny.</span><span class="sxs-lookup"><span data-stu-id="735e0-507">Gets or sets a value indicating whether appends are automatically retried if the log is full.</span></span></summary>
        <value><span data-ttu-id="735e0-508"><see langword="true" />Jeśli dołączenia są automatycznie ponawiane, jeśli dziennik jest pełny; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="735e0-508"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="735e0-509">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="735e0-509">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-510">Jeśli wartość tej właściwości jest `true`, <xref:System.IO.Log.IRecordSequence.Append%2A> a wywołanie nie powiedzie się, ponieważ nie ma wystarczającej ilości miejsca w sekwencji, sekwencja rekordów spróbuje zwolnić miejsce i ponowić próbę dołączenia.</span><span class="sxs-lookup"><span data-stu-id="735e0-510">If the value of this property is `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-511">Uzyskano dostęp do właściwości po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-511">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.IRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735e0-512">Występuje, gdy sekwencja rekordów określa, że końcówka musi zostać przeniesiona do przodu.</span><span class="sxs-lookup"><span data-stu-id="735e0-512">Occurs when the record sequence determines that the tail must be moved forward.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-513">To zdarzenie można wywołać, gdy w sekwencji rekordów zabrakło wolnego miejsca.</span><span class="sxs-lookup"><span data-stu-id="735e0-513">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="735e0-514">Po uruchomieniu tego zdarzenia ogon sekwencji (czyli numer sekwencyjny) jest przenoszony do przodu w celu zwolnienia miejsca.</span><span class="sxs-lookup"><span data-stu-id="735e0-514">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="735e0-515">Gdy jest zastępowany w klasie pochodnej, program zapisuje obszar ponownego uruchomienia <see cref="T:System.IO.Log.IRecordSequence" />do.</span><span class="sxs-lookup"><span data-stu-id="735e0-515">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-516">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-516">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-517">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-517">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-518">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-518">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="735e0-519">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-519">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-520">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-520">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="735e0-521">Gdy jest zastępowany w klasie pochodnej, program zapisuje obszar ponownego uruchomienia <see cref="T:System.IO.Log.IRecordSequence" />do.</span><span class="sxs-lookup"><span data-stu-id="735e0-521">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="735e0-522">Numer sekwencyjny w zapisanym obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-522">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-523">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-523">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-524">Common Log File System (CLFS) utrzymuje dwa obszary ponownego uruchomienia w celu zagwarantowania, że co najmniej jeden prawidłowy obszar jest zawsze dostępny.</span><span class="sxs-lookup"><span data-stu-id="735e0-524">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="735e0-525">Gdy wymagane jest odzyskanie, CLFS odczytuje jego obszar ponownego uruchomienia i wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-525">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-526">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-526">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="735e0-527">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-527">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-528">Dane w segmentach tablicy bajtowej zostaną połączone w tablicę jednobajtową w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-528">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-529">Nie wprowadzono żadnych zasobów do dzielenia danych z powrotem do segmentów tablicy, gdy zostanie odczytany obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-529">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-530">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-530">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-531">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-531">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-532">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-532">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-533">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-533">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-534">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-534">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="735e0-535">Gdy jest zastępowany w klasie pochodnej, program zapisuje obszar ponownego uruchomienia <see cref="T:System.IO.Log.IRecordSequence" />do.</span><span class="sxs-lookup"><span data-stu-id="735e0-535">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="735e0-536">Numer sekwencyjny w zapisanym obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-536">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-537">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-537">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-538">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-538">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-539">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-539">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="735e0-540">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-540">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-541">Dane w segmentach tablicy bajtowej zostaną połączone w tablicę jednobajtową w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-541">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-542">Nie wprowadzono żadnych zasobów do dzielenia danych z powrotem do segmentów tablicy, gdy zostanie odczytany obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-542">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-543">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-543">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-544">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-544">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-545">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-545">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-546">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-546">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-547">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-547">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-548">Nowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-548">The new base sequence number.</span></span> <span data-ttu-id="735e0-549">Określony numer sekwencji musi być większy lub równy bieżącemu numerowi sekwencji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="735e0-549">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="735e0-550">Gdy jest zastępowany w klasie pochodnej, zapisuje obszar ponownego uruchomienia do <see cref="T:System.IO.Log.IRecordSequence" /> i aktualizuje numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-550">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number</span></span></summary>
        <returns><span data-ttu-id="735e0-551">Numer sekwencyjny w zapisanym obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-551">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-552">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-552">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-553">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-553">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-554">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-554">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="735e0-555">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-555">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-556">Po zapisaniu obszaru ponownego uruchamiania dane w segmentach tablicy bajtowej są łączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-556">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-557">Nie wprowadzono żadnych zasobów do dzielenia danych z powrotem do segmentów tablicy, gdy zostanie odczytany obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-557">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="735e0-558">Po pomyślnym zakończeniu tej metody numer sekwencyjny został zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="735e0-558">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="735e0-559">Wszystkie rekordy dziennika o numerach sekwencyjnych mniejszych niż nowy podstawowy numer sekwencji są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="735e0-559">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-560">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-560">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-561">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-561">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-562">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-562">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-563">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-563">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-564">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-564">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-565">Nowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-565">The new base sequence number.</span></span> <span data-ttu-id="735e0-566">Określony numer sekwencji musi być większy lub równy bieżącemu numerowi sekwencji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="735e0-566">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="735e0-567">Gdy jest zastępowany w klasie pochodnej, program zapisuje obszar ponownego uruchomienia <see cref="T:System.IO.Log.IRecordSequence" /> do i aktualizuje numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-567">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number.</span></span></summary>
        <returns><span data-ttu-id="735e0-568">Numer sekwencyjny w zapisanym obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-568">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-569">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-569">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-570">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-570">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-571">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-571">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="735e0-572">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-572">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-573">Po zapisaniu obszaru ponownego uruchamiania dane w segmentach tablicy bajtowej są łączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-573">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-574">Nie wprowadzono żadnych zasobów do dzielenia danych z powrotem do segmentów tablicy, gdy zostanie odczytany obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-574">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="735e0-575">Po pomyślnym zakończeniu tej metody numer sekwencyjny został zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="735e0-575">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="735e0-576">Wszystkie rekordy dziennika o numerach sekwencyjnych mniejszych niż nowy podstawowy numer sekwencji są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="735e0-576">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-577">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-577">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-578">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-578">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-579">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-579">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-580">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-580">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber, reservation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-581">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-581">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-582">Nowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-582">The new base sequence number.</span></span> <span data-ttu-id="735e0-583">Określony numer sekwencji musi być większy lub równy bieżącemu numerowi sekwencji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="735e0-583">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="735e0-584">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna zostać użyta dla tego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-584">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="735e0-585">Gdy jest zastępowany w klasie pochodnej, zapisuje obszar ponownego uruchomienia w <see cref="T:System.IO.Log.IRecordSequence" /> ramach rezerwacji przy użyciu i aktualizuje numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-585">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number</span></span></summary>
        <returns><span data-ttu-id="735e0-586">Numer sekwencyjny w zapisanym obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-586">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-587">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-587">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-588">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-588">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-589">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-589">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="735e0-590">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-590">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-591">Po zapisaniu obszaru ponownego uruchamiania dane w segmentach tablicy bajtowej są łączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-591">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-592">Nie wprowadzono żadnych zasobów do dzielenia danych z powrotem do segmentów tablicy, gdy zostanie odczytany obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-592">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="735e0-593">W przypadku określenia rezerwacji, zapisany obszar ponownego uruchomienia będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji zawartej w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-593">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="735e0-594">Jeśli metoda zakończy się pomyślnie, użyje najmniejszej rezerwacji, która może zawierać dane, i że rezerwacja zostanie usunięta z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-594">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-595">Po pomyślnym zakończeniu tej metody numer sekwencyjny został zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="735e0-595">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="735e0-596">Wszystkie rekordy dziennika o numerach sekwencyjnych mniejszych niż nowy podstawowy numer sekwencji są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="735e0-596">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="735e0-597">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-597">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-598">Błędy, które wystąpiły podczas asynchronicznego żądania dołączania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków, <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="735e0-598">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-599">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-599">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-600">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-600">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-601">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-601">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-602">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-602">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber, reservation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="735e0-603">Lista segmentów tablicy bajtów, które zostaną połączone i dołączone jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-603">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="735e0-604">Nowy numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-604">The new base sequence number.</span></span> <span data-ttu-id="735e0-605">Określony numer sekwencji musi być większy lub równy bieżącemu numerowi sekwencji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="735e0-605">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="735e0-606">A <see cref="T:System.IO.Log.ReservationCollection" /> , który zawiera rezerwację, która powinna zostać użyta dla tego obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-606">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="735e0-607">Gdy jest zastępowany w klasie pochodnej, program zapisuje obszar ponownego uruchomienia <see cref="T:System.IO.Log.IRecordSequence" /> w ramach rezerwacji przy użyciu i aktualizuje numer sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="735e0-607">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number.</span></span></summary>
        <returns><span data-ttu-id="735e0-608">Numer sekwencyjny w zapisanym obszarze ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-608">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735e0-609">Obszar ponownego uruchomienia jest używany do tymczasowego przechowywania informacji zawierających ostatnią operację punktu kontrolnego klienta.</span><span class="sxs-lookup"><span data-stu-id="735e0-609">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="735e0-610">Gdy odzyskiwanie jest konieczne, można przeanalizować obszar ponownego uruchomienia, aby pobrać wszystkie dane z ostatniej operacji punktu kontrolnego.</span><span class="sxs-lookup"><span data-stu-id="735e0-610">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="735e0-611">Te dane inicjują tabelę transakcji, tabelę zanieczyszczonych stron i Otwórz tabelę plików, dzięki czemu mogą być używane w procesie odzyskiwania.</span><span class="sxs-lookup"><span data-stu-id="735e0-611">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="735e0-612">Obszar ponownego uruchomienia można odczytać za pomocą <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="735e0-612">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="735e0-613">Po zapisaniu obszaru ponownego uruchamiania dane w segmentach tablicy bajtowej są łączone do tablicy jednobajtowej w celu dołączenia jako rekord.</span><span class="sxs-lookup"><span data-stu-id="735e0-613">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="735e0-614">Nie wprowadzono żadnych zasobów do dzielenia danych z powrotem do segmentów tablicy, gdy zostanie odczytany obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-614">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="735e0-615">W przypadku określenia rezerwacji, zapisany obszar ponownego uruchomienia będzie zużywać miejsce, które zostało wcześniej zarezerwowane, przy użyciu rezerwacji zawartej w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-615">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="735e0-616">Jeśli metoda zakończy się pomyślnie, użyje najmniejszej rezerwacji, która może zawierać dane, i że rezerwacja zostanie usunięta z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="735e0-616">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="735e0-617">Po pomyślnym zakończeniu tej metody numer sekwencyjny został zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="735e0-617">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="735e0-618">Wszystkie rekordy dziennika o numerach sekwencyjnych mniejszych niż nowy podstawowy numer sekwencji są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="735e0-618">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="735e0-619">W przypadku usunięcia sekwencji rekordów lub przekazania nieprawidłowego argumentu wyjątki są generowane natychmiast w ramach tej operacji.</span><span class="sxs-lookup"><span data-stu-id="735e0-619">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="735e0-620">Błędy, które wystąpiły podczas asynchronicznego żądania dołączania, na przykład awaria dysku w żądaniu we/wy, spowodują wyrzucanie wyjątków, <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="735e0-620">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="735e0-621">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="735e0-621">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="735e0-622">Wystąpił błąd we/wy podczas zapisywania obszaru ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-622">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="735e0-623">Sekwencja rekordów nie może wykonać wystarczającej ilości wolnego miejsca, aby można było zawierać nowy obszar ponownego uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="735e0-623">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="735e0-624">Metoda została wywołana po usunięciu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735e0-624">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
