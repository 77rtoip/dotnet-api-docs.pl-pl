<Type Name="ReservationCollection" FullName="System.IO.Log.ReservationCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e0abb9e640cc995fa2b1c6aba3d4962d7a4114b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ReservationCollection : System.Collections.Generic.ICollection&lt;long&gt;, System.Collections.Generic.IEnumerable&lt;long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReservationCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;int64&gt;, class System.Collections.Generic.IEnumerable`1&lt;int64&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.ReservationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReservationCollection&#xA;Implements ICollection(Of Long), IEnumerable(Of Long)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReservationCollection abstract : System::Collections::Generic::ICollection&lt;long&gt;, System::Collections::Generic::IEnumerable&lt;long&gt;" />
  <TypeSignature Language="F#" Value="type ReservationCollection = class&#xA;    interface ICollection&lt;int64&gt;&#xA;    interface seq&lt;int64&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="898cb-101">Zarządza zbiór rezerwacji miejsca w sekwencji rekordu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="898cb-101">Manages the collection of space reservations made in a record sequence.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="898cb-102">Ta klasa reprezentuje zestaw obszarów rezerwacji, które zostały wprowadzone w sekwencji rekordu.</span><span class="sxs-lookup"><span data-stu-id="898cb-102">This class represents a set of reservation areas that are made in a record sequence.</span></span> <span data-ttu-id="898cb-103">Dodawanie elementów do kolekcji przydziela nowej rezerwacji.</span><span class="sxs-lookup"><span data-stu-id="898cb-103">Adding items to the collection allocates new reservations.</span></span> <span data-ttu-id="898cb-104">Usuwanie elementów z kolekcji zwalnia te zastrzeżenia.</span><span class="sxs-lookup"><span data-stu-id="898cb-104">Removing items from the collection frees those reservations.</span></span>  
  
 <span data-ttu-id="898cb-105">Aplikacja zastrzega miejsca w dzienniku, gdy zawiera dane, które mają być zapisywane w dzienniku w przyszłości, ale nie można zapisać go bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="898cb-105">An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</span></span> <span data-ttu-id="898cb-106">Rezerwacje gwarantować, że dane mogą być zapisywane w dzienniku, po udostępnieniu do zapisania danych.</span><span class="sxs-lookup"><span data-stu-id="898cb-106">Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</span></span> <span data-ttu-id="898cb-107">Korzystając z dzienników, aplikacje często zarezerwować co najmniej jednego rekordu dziennika, w obszarze zarządzany.</span><span class="sxs-lookup"><span data-stu-id="898cb-107">When using logs, applications often reserve one or more log records in a marshalling area.</span></span> <span data-ttu-id="898cb-108">Należy zarezerwować rekordów przed ich dołączenie.</span><span class="sxs-lookup"><span data-stu-id="898cb-108">You must reserve records prior to appending them.</span></span>  
  
 <span data-ttu-id="898cb-109">Rezerwacji może służyć do zagwarantowania, że można można wykonać operacji, zanim dane są zatwierdzone; w przeciwnym razie zmiany zostaną wycofane.</span><span class="sxs-lookup"><span data-stu-id="898cb-109">Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</span></span> <span data-ttu-id="898cb-110">Może również służyć do rejestrowania "action cofania" w dzienniku.</span><span class="sxs-lookup"><span data-stu-id="898cb-110">It can also be used to record an "undo action" in the log.</span></span> <span data-ttu-id="898cb-111">Podczas operacji wycofywania transakcyjnego menedżera zasobów (RM) musi być możliwe odzyskanie stanu, jeśli Menedżera zasobów zostanie przerwany podczas operacji wycofywania.</span><span class="sxs-lookup"><span data-stu-id="898cb-111">During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</span></span> <span data-ttu-id="898cb-112">Za pomocą obszaru rezerwacji, RM możliwość rezerwowania miejsca w dzienniku, zanim zostaną one użyte.</span><span class="sxs-lookup"><span data-stu-id="898cb-112">By using a reservation area, an RM can reserve space in a log before it is used.</span></span>  
  
 <span data-ttu-id="898cb-113"><xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> Metoda może zarezerwować miejsce lub dołączania danych i / lub, w zależności od parametrów, które zostały określone podczas wywołania.</span><span class="sxs-lookup"><span data-stu-id="898cb-113">The <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</span></span> <span data-ttu-id="898cb-114">W miarę postępów prac w ramach transakcji aplikacji można dołączyć informacje o cofania i zarezerwować miejsce dla rekordów wynagrodzenia.</span><span class="sxs-lookup"><span data-stu-id="898cb-114">As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</span></span> <span data-ttu-id="898cb-115">Podczas operacji wycofywania wynagrodzenia rekordy, które są tworzone wskazują, jakie została cofnięta na dysku.</span><span class="sxs-lookup"><span data-stu-id="898cb-115">During a rollback operation, compensation records that are created indicate what has been undone on the disk.</span></span> <span data-ttu-id="898cb-116">Rekordy są dołączane, przy użyciu miejsca, który został wcześniej zarezerwowany.</span><span class="sxs-lookup"><span data-stu-id="898cb-116">The records are appended using space that has been previously reserved.</span></span> <span data-ttu-id="898cb-117">Gwarantuje to, że nie działa RM mało miejsca na dziennik, który jest stanem krytycznym, podczas wykonywania operacji wycofywania.</span><span class="sxs-lookup"><span data-stu-id="898cb-117">This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</span></span> <span data-ttu-id="898cb-118">Jeśli dziennik się zapełni podczas transakcji, aplikację można bezpiecznie wycofać transakcji bez uszkodzenia danych trwałych.</span><span class="sxs-lookup"><span data-stu-id="898cb-118">If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</span></span>  
  
 <span data-ttu-id="898cb-119">CLFS jest zgodny z ARIES systemu rejestrowania przeznaczone do rejestrowania zapisu z wyprzedzeniem.</span><span class="sxs-lookup"><span data-stu-id="898cb-119">CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</span></span> <span data-ttu-id="898cb-120">Rejestrowanie zapisu z wyprzedzeniem, aplikacja zapisuje rekord cofania, przed wykonaniem operacji rezerwacji, ilość miejsca, jaki zajmuje w dzienniku zapisu wyrównującej rekord, który może być używany podczas wycofywania.</span><span class="sxs-lookup"><span data-stu-id="898cb-120">In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</span></span> <span data-ttu-id="898cb-121">Później zarezerwowane miejsce jest używana, gdy rekord wynagrodzenia jest zapisana.</span><span class="sxs-lookup"><span data-stu-id="898cb-121">Later, the reserved space is used when the compensation record is actually written.</span></span>  
  
 <span data-ttu-id="898cb-122">Aplikacje można zarezerwować lub dostęp do miejsca długie w dowolnym momencie (są one wzajemnie wykluczających się operacje).</span><span class="sxs-lookup"><span data-stu-id="898cb-122">Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</span></span> <span data-ttu-id="898cb-123">Po zatwierdzeniu rekordu są zapisywane w dzienniku aplikacji można zwolnić rezerwacji dla rekordów wynagrodzenia.</span><span class="sxs-lookup"><span data-stu-id="898cb-123">After a commit record is written to the log, an application can free up the reservations for the compensation records.</span></span> <span data-ttu-id="898cb-124">Ta akcja może odbywać się przez wywołanie metody albo <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> lub <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="898cb-124">This action can be done by calling either the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> or <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span> <span data-ttu-id="898cb-125">Wywoływanie <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> metoda gwarantuje, że operacja jest atomic, podczas wywoływania <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> nie obsługuje metody.</span><span class="sxs-lookup"><span data-stu-id="898cb-125">Calling the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method guarantees that the operation is atomic, while calling the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> method does not.</span></span>  
  
 <span data-ttu-id="898cb-126">Po zwolnieniu rekordy, należy zwolnić te same rekordy został zarezerwowany razem poprzednie wywołanie <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="898cb-126">When you free records, you must free the same records that you reserved together in a previous call to the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="898cb-127">Implementacja <xref:System.IO.Log.IRecordSequence> musi implementować <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> i <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> metody umożliwiają przeprowadzanie rzeczywiste rezerwacji alokacji i dezalokacji.</span><span class="sxs-lookup"><span data-stu-id="898cb-127">Your implementation of <xref:System.IO.Log.IRecordSequence> must implement the <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> and <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> methods to perform the actual reservation allocation and deallocation.</span></span> <span data-ttu-id="898cb-128">Ponadto należy także wywołać implementacji <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> gdy rekord zostanie zapisane zarezerwowane miejsce.</span><span class="sxs-lookup"><span data-stu-id="898cb-128">In addition, your implementation must also call <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> when a record is written into a reserved space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="898cb-129">Rezerwacje można przeprowadzić na dwa sposoby, jak pokazano w poniższych przykładach.</span><span class="sxs-lookup"><span data-stu-id="898cb-129">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="898cb-130">Można przyjąć praktyki przykłady dla niezawodne przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="898cb-130">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="898cb-131">Należy zauważyć, że to zadanie można wykonać tylko podczas korzystania z CLFS opartą <xref:System.IO.Log.LogRecordSequence> klasy.</span><span class="sxs-lookup"><span data-stu-id="898cb-131">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReservationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="898cb-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Log.ReservationCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-132">Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(long size);" />
      <MemberSignature Language="F#" Value="abstract member Add : int64 -&gt; unit&#xA;override this.Add : int64 -&gt; unit" Usage="reservationCollection.Add size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-133">Rozmiar żądanej rezerwacji, w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-133">The size of the requested reservation, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-134">Przydziela rezerwacji i dodaje go do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-134">Allocates a reservation and adds it to the collection.</span>
          </span>
          <span data-ttu-id="898cb-135">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-135">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="898cb-136">Poniższy przykład pokazuje, jak ręcznie utworzyć zastrzeżenie.</span><span class="sxs-lookup"><span data-stu-id="898cb-136">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="898cb-137">Należy zauważyć, że to zadanie można wykonać tylko podczas korzystania z CLFS opartą <xref:System.IO.Log.LogRecordSequence> klasy.</span><span class="sxs-lookup"><span data-stu-id="898cb-137">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="898cb-138">
            <paramref name="archiveTail" /> nie jest od numeru podstawowego do ostatniego sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-138">
              <paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="898cb-139">
            <paramref name="size" /> jest nieprawidłowy lub przekracza rozmiar maksymalny rezerwacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-139">
              <paramref name="size" /> is invalid or exceeds maximum reservation size.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="898cb-140">Podczas tworzenia migawki archiwum, wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-140">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-141">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-141">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-142">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-142">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-143">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-143">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="898cb-144">Sekwencja rekordów jest pełny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-144">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="reservationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="898cb-145">Zwalnia wszystkie rezerwacje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-145">Releases all of the reservations in the collection.</span>
          </span>
          <span data-ttu-id="898cb-146">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-146">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="898cb-147">
            <paramref name="size" /> jest nieprawidłowy lub przekracza rozmiar maksymalny rezerwacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-147">
              <paramref name="size" /> is invalid or exceeds maximum reservation size.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="898cb-148">Podczas tworzenia migawki archiwum, wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-148">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-149">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-149">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-150">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-150">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="898cb-151">Sekwencja rekordów jest pełny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-151">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-152">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-152">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(long size);" />
      <MemberSignature Language="F#" Value="abstract member Contains : int64 -&gt; bool&#xA;override this.Contains : int64 -&gt; bool" Usage="reservationCollection.Contains size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-153">Rozmiar do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-153">The size to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-154">Określa, czy wprowadzono rezerwacji o określonym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-154">Determines whether a reservation of the specified size has been made.</span>
          </span>
          <span data-ttu-id="898cb-155">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-155">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="898cb-156">
            <see langword="true" /> Jeśli dokonano co najmniej jedną rezerwację o określonym rozmiarze; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-156">
              <see langword="true" /> if at least one reservation of the specified size has been made; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-157">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-157">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-158">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-158">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-159">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-159">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (long[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int64[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Long(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;long&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int64[] * int -&gt; unit&#xA;override this.CopyTo : int64[] * int -&gt; unit" Usage="reservationCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="898cb-160">Tablica, która jest miejscem docelowym kopii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-160">The array that is the destination of the copy.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="898cb-161">Rozpoczyna się od zera indeks w tablicy, w których kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-161">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-162">Kopiuje całą kolekcję jednowymiarowej tablicy, zaczynając od określonego indeksu tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-162">Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</span>
          </span>
          <span data-ttu-id="898cb-163">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-163">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="898cb-164">
            <paramref name="array" /> lub <paramref name="arrayIndex" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-164">
              <paramref name="array" /> or <paramref name="arrayIndex" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="898cb-165">
            <paramref name="arrayIndex" /> jest większa niż zero, lub większa niż długość <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-165">
              <paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="898cb-166">W wybranej tablicy do kopiowania danych nie jest wystarczająca ilość miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-166">There is not enough space in the specified array to copy the data.</span>
          </span>
          <span data-ttu-id="898cb-167">- lub - <paramref name="array" /> nie jest tablicą jednowymiarową, który jest jedynym typem obsługiwane dla żądanej akcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-167">-or-  <paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-168">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-168">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-169">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-169">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-170">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-170">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.ReservationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="898cb-171">Pobiera liczbę rezerwacji w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-171">Gets the number of reservations in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="898cb-172">Liczba rezerwacje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-172">The number of reservations in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ReservationCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="reservationCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="898cb-173">Umożliwia <see cref="T:System.IO.Log.ReservationCollection" /> zwolnienia zasobów, zanim zostanie zniszczony przez moduł odśmiecania pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-173">Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeReservation">
      <MemberSignature Language="C#" Value="protected abstract void FreeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FreeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FreeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FreeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member FreeReservation : int64 -&gt; unit" Usage="reservationCollection.FreeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-174">Rozmiar rezerwacji do wydania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-174">The size of the reservation to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-175">W przypadku przesłonięcia w klasie pochodnej, zwalnia rezerwacji o określonym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-175">When overridden in a derived class, releases a reservation of the specified size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="898cb-176">
            <para>Przy dziedziczeniu z <see cref="T:System.IO.Log.ReservationCollection" />, musisz zaimplementować tę metodę, aby faktycznie zwolnienia miejsca w sekwencji rekordu. Nie należy wywołać <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> po ukończeniu tej metody; obsługiwania logiki dla Ciebie.  Po zwolnieniu rekordy, należy zwolnić te same rekordy został zarezerwowany razem poprzednie wywołanie <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-176">
              <para>When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually release space in the record sequence. You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> when this method is complete; that logic is handled for you.  When you free records, you must free the same records that you reserved together in a previous call to the <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBestMatchingReservation">
      <MemberSignature Language="C#" Value="protected long GetBestMatchingReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 GetBestMatchingReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetBestMatchingReservation (size As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; long GetBestMatchingReservation(long size);" />
      <MemberSignature Language="F#" Value="member this.GetBestMatchingReservation : int64 -&gt; int64" Usage="reservationCollection.GetBestMatchingReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-177">Rozmiar rezerwacji, które należy dopasować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-177">The size of the reservation that must be fit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-178">W przypadku przesłonięcia w klasie pochodnej pobiera najlepiej dopasowaną rezerwacji na dany rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-178">When overridden in a derived class, gets the best matching reservation for a given size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="898cb-179">Zastrzeżenie z kolekcji, która jest mniejsza niż określony rozmiar lub wartość -1, jeśli takie rezerwacja nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-179">A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="898cb-180">Ta metoda jest wywoływana zazwyczaj, gdy dołączenie rekord na podstawie zarezerwowane miejsce do sekwencji rekordu.</span><span class="sxs-lookup"><span data-stu-id="898cb-180">This method is typically called when appending a record from reserved space to a record sequence.</span></span> <span data-ttu-id="898cb-181">Gdy zwraca ono rezerwacji, rozmiaru zwróconego został usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="898cb-181">When it returns, a reservation of the returned size has been removed from the collection.</span></span> <span data-ttu-id="898cb-182">Jeśli z jakiegoś powodu zarezerwowane miejsce nie są faktycznie dostępne, <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> metoda powinna być wywoływana w celu zapewnienia, że <xref:System.IO.Log.ReservationCollection> dokładnie reprezentuje ilość zarezerwowane miejsce w sekwencji rekordu.</span><span class="sxs-lookup"><span data-stu-id="898cb-182">If, for some reason, the reserved space is not actually accessed, the <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> method should be called to ensure that the <xref:System.IO.Log.ReservationCollection> accurately represents the amount of reserved space in the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;long&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;int64&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;long&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;" Usage="reservationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="898cb-183">Zwraca moduł wyliczający, który można wykonać iterację <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-183">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="898cb-184">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-184">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="898cb-185">Moduł wyliczający, który można wykonać iterację <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-185">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="898cb-186">Ta operacja jest nieprawidłowa dla jednego z następujących powodów:-Wyliczanie zostało zakończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-186">The operation is invalid for one of the following reasons:  -   The enumeration has ended.</span>
          </span>
          <span data-ttu-id="898cb-187">Kolekcja została zmodyfikowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-187">-   The collection has been modified.</span>
          </span>
          <span data-ttu-id="898cb-188">-Wyliczenia nie został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-188">-   The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="898cb-189">Wywołanie <see cref="M:System.Collections.IEnumerator.MoveNext" /> muszą być wykonane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-189">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-190">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-190">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-191">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-191">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-192">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-192">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="898cb-193">Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-193">Gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="898cb-194">Właściwość ta zwraca zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-194">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="898cb-195">A <xref:System.IO.Log.ReservationCollection> nigdy nie jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="898cb-195">A <xref:System.IO.Log.ReservationCollection> is never read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReservation">
      <MemberSignature Language="C#" Value="protected abstract void MakeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MakeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub MakeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void MakeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member MakeReservation : int64 -&gt; unit" Usage="reservationCollection.MakeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-196">Rozmiar rezerwacji do przydzielenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-196">The size of the reservation to allocate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-197">W przypadku przesłonięcia w klasie pochodnej, przydziela rezerwacji o określonym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-197">When overridden in a derived class, allocates a reservation of the specified size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="898cb-198">
            <para>Przy dziedziczeniu z <see cref="T:System.IO.Log.ReservationCollection" />, musisz zaimplementować tę metodę, aby faktycznie zarezerwowanego miejsca w sekwencji rekordu. Nie należy wywołać <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> po ukończeniu tej metody; obsługiwania logiki dla Ciebie.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-198">
              <para>When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually reserve space in the record sequence. You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> when this method is complete; that logic is handled for you.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (long item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(int64 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(long item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : int64 -&gt; bool&#xA;override this.Remove : int64 -&gt; bool" Usage="reservationCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="898cb-199">Rozmiar rezerwacji do wydania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-199">The size of the reservation to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-200">Zwalnia rezerwacji o określonym rozmiarze, jeśli została wprowadzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-200">Releases a reservation of the specified size, if one has been made.</span>
          </span>
          <span data-ttu-id="898cb-201">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-201">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="898cb-202">
            <see langword="true" /> Jeśli rezerwacji o określonym rozmiarze zostało znalezione i usunięte; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-202">
              <see langword="true" /> if a reservation of the specified size was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="898cb-203">Poniższy przykład pokazuje, jak ręcznie utworzyć zastrzeżenie.</span><span class="sxs-lookup"><span data-stu-id="898cb-203">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="898cb-204">Należy zauważyć, że to zadanie można wykonać tylko podczas korzystania z CLFS opartą <xref:System.IO.Log.LogRecordSequence> klasy.</span><span class="sxs-lookup"><span data-stu-id="898cb-204">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="898cb-205">Rezerwacja nie jest wystarczająco duży, aby dopasować podana rekordu znajdują się w określonej kolekcji rezerwacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-205">No reservation large enough to fit the provided record can be found in the specified reservation collection.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="898cb-206">Podczas tworzenia migawki archiwum, wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-206">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-207">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-207">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-208">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-208">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="898cb-209">Sekwencja rekordów jest pełny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-209">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-210">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-210">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservationFreed">
      <MemberSignature Language="C#" Value="protected void ReservationFreed (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationFreed(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationFreed (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationFreed(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationFreed : int64 -&gt; unit" Usage="reservationCollection.ReservationFreed size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-211">Rozmiar rezerwacji, która została zwolniona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-211">The size of the reservation that has been released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-212">W przypadku przesłonięcia w klasie pochodnej, wskazuje wydano rezerwacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-212">When overridden in a derived class, indicates that a reservation has been released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="898cb-213">Przy dziedziczeniu z <xref:System.IO.Log.ReservationCollection>, należy wywołać tę metodę, po zwolnieniu rezerwacji z przyczyn innych niż usunięcie go z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="898cb-213">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is released for a reason other than removing it from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservationMade">
      <MemberSignature Language="C#" Value="protected void ReservationMade (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationMade(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationMade (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationMade(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationMade : int64 -&gt; unit" Usage="reservationCollection.ReservationMade size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="898cb-214">Rozmiar rezerwacji, które zostały wprowadzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-214">The size of the reservation that has been made.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="898cb-215">W przypadku przesłonięcia w klasie pochodnej, wskazuje, czy przeprowadzono rezerwacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-215">When overridden in a derived class, indicates that a reservation has been made.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="898cb-216">Przy dziedziczeniu z <xref:System.IO.Log.ReservationCollection>, należy wywołać tę metodę, po przeprowadzeniu rezerwacji poza wywołanie w celu <xref:System.IO.Log.ReservationCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="898cb-216">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is made outside of a call to <xref:System.IO.Log.ReservationCollection.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="898cb-217">Zwraca moduł wyliczający, który można wykonać iterację <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-217">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="898cb-218">Ta metoda nie może być dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-218">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="898cb-219">Moduł wyliczający, który można wykonać iterację <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-219">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="898cb-220">Ta operacja jest nieprawidłowa dla jednego z następujących powodów:-Wyliczanie zostało zakończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-220">The operation is invalid for one of the following reasons:  -   The enumeration has ended.</span>
          </span>
          <span data-ttu-id="898cb-221">Kolekcja została zmodyfikowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-221">-   The collection has been modified.</span>
          </span>
          <span data-ttu-id="898cb-222">-Wyliczenia nie został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-222">-   The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="898cb-223">Wywołanie <see cref="M:System.Collections.IEnumerator.MoveNext" /> muszą być wykonane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-223">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="898cb-224">Metoda została wywołana po sekwencji został zlikwidowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-224">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="898cb-225">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-225">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="898cb-226">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="898cb-226">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>