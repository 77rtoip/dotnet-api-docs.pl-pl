<Type Name="FileRegion" FullName="System.IO.Log.FileRegion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5233a33b64b869ab146ac9484a8622e3df83fdc4" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63986905" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileRegion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRegion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRegion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRegion" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRegion sealed" />
  <TypeSignature Language="F#" Value="type FileRegion = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje regionu pliku do archiwizacji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Log.LogArchiveSnapshot> obiekt zawiera informacje niezbędne do generowania spójnych kopii zapasowych danych w <xref:System.IO.Log.LogStore>. Rzeczywiste dane znajduje się w kolekcji wyliczalny <xref:System.IO.Log.FileRegion> obiektów zwróconych przez <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> właściwości. Każdy <xref:System.IO.Log.FileRegion> wystąpienie reprezentuje sekwencję bajtów w pliku, który musi być archiwizowane.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak archiwum magazynu dziennika, aby za pomocą XML <xref:System.IO.Log.LogStore> i <xref:System.IO.Log.FileRegion> klasy.  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FileLength">
      <MemberSignature Language="C#" Value="public long FileLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FileLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.FileLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FileLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FileLength : int64" Usage="System.IO.Log.FileRegion.FileLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera długość pliku w bajtach.</summary>
        <value>Długość pliku w bajtach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca długość całego pliku zamiast z jednego regionu w pliku. Długość regionu w pliku, można znaleźć, sprawdzając <xref:System.IO.Log.LogStore.Length%2A> właściwość Strumień zwrócony przez <xref:System.IO.Log.FileRegion.GetStream%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak archiwum magazynu dziennika, aby za pomocą XML <xref:System.IO.Log.LogStore> i <xref:System.IO.Log.FileRegion> klasy.  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRegion.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="fileRegion.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca strumienia, który może służyć do odczytywania danych do archiwizacji.</summary>
        <returns>Strumień, który zawiera dane, które mają być archiwizowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak archiwum magazynu dziennika, aby za pomocą XML <xref:System.IO.Log.LogStore> i <xref:System.IO.Log.FileRegion> klasy.  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można wykonać żądania z powodu nieoczekiwanego wyjątku We/Wy.</exception>
        <exception cref="T:System.NotSupportedException">Operacja nie jest obsługiwana.</exception>
        <exception cref="T:System.ObjectDisposedException">Metoda została wywołana po sekwencji został zlikwidowany.</exception>
        <exception cref="T:System.OutOfMemoryException">Nie ma wystarczającej ilości pamięci dla kontynuowania wykonywania programu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Odmowa dostępu dla magazynu dziennika określony przez system operacyjny.</exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int64" Usage="System.IO.Log.FileRegion.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przesunięcie do pliku, gdzie rozpoczyna się dane.</summary>
        <value>Przesunięcie w pliku, gdzie rozpoczyna się dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak archiwum magazynu dziennika, aby za pomocą XML <xref:System.IO.Log.LogStore> i <xref:System.IO.Log.FileRegion> klasy.  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.IO.Log.FileRegion.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera w pełni kwalifikowanej lokalizacji pliku zawierającego ten region.</summary>
        <value>W pełni kwalifikowanej lokalizacji pliku zawierającego ten region.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak archiwum magazynu dziennika, aby za pomocą XML <xref:System.IO.Log.LogStore> i <xref:System.IO.Log.FileRegion> klasy.  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>