<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0c877240ac32d46c70ce3166c6866f92ceb7313" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69121389" /></Metadata><TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="F#" Value="type InPlaceHostingManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Instalowanie lub aktualizowanie wdrożenia ClickOnce na komputerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Programu można użyć <xref:System.Deployment.Application.InPlaceHostingManager> do pisania programów instalujących [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacje programowo. Można na przykład użyć tej klasy w środowisku kontrolowanego zarządzania systemem (SMS) lub w sytuacjach, gdy potrzebna jest złożona instalacja, która wykonuje kilka operacji przed instalacją lub po instalacji na komputerze lokalnym. Ogólnie rzecz biorąc, chcesz użyć elementów członkowskich tej klasy w określonej kolejności:  
  
1.  Utwórz nowe wystąpienie <xref:System.Deployment.Application.InPlaceHostingManager>.  
  
2.  Pobierz manifest wdrożenia za pomocą polecenia <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.  
  
3.  Sprawdź, czy aplikacja może być uruchamiana z odpowiednimi uprawnieniami przy użyciu <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>programu.  
  
4.  Pobierz i zainstaluj aplikację przy użyciu programu <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
-   Jeśli wywołasz którykolwiek z tych parametrów poza kolejnością, zgłosi wyjątek.  
  
 <xref:System.Deployment.Application.InPlaceHostingManager>program może zainstalować [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikację, ale nie może jej wykonać. Niektóre metody w tej klasie, takie jak <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, są zarezerwowane do użycia podczas pobierania aplikacji opartej na Windows Presentation Foundation uruchamianej w przeglądarce sieci Web.  
  
 Aby można było pobrać i zainstalować aplikacje, należy się upewnić, że certyfikat [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] podpisywania aplikacji, które mają zostać zainstalowane, jest już zainstalowany na komputerach klienckich jako zaufany wydawca. <xref:System.Deployment.Application.InPlaceHostingManager> Aby uzyskać więcej informacji na temat zaufanych wydawców, zobacz [Omówienie wdrażania zaufanych aplikacji](https://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d).  
  
> [!NOTE]
>  Obecnie istnieje ograniczenie dotyczące produktu, które uniemożliwia <xref:System.Deployment.Application.InPlaceHostingManager> poprawne działanie podczas debugowania kodu przy użyciu programu Visual Studio. Jeśli debugujesz aplikację w programie Visual Studio przy użyciu klawisza F5, podczas wywołania <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>przykładu zostanie zgłoszony wyjątek tajemniczymi. Aby debugować przy użyciu programu Visual Studio, uruchom aplikację bez debugowania, a następnie Dołącz debuger. Alternatywnie możesz użyć innego debugera, takiego jak WinDbg.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak za pomocą <xref:System.Deployment.Application.InPlaceHostingManager> programu programowo [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] zainstalować aplikację na komputerze klienckim.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie programu <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> w celu pobrania i zainstalowania określonej aplikacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager deploymentManifest" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Uniform Resource Identifier (<see cref="T:System.Uri" />) [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] do manifestu wdrażania aplikacji.</param>
        <summary>Tworzy nowe wystąpienie programu <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> w celu pobrania i zainstalowania określonej aplikacji hostowanej w przeglądarce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany, gdy chcesz pobrać aplikację opartą na Windows Presentation Foundation, która jest hostowana w przeglądarce sieci Web. Aby pobrać aplikacje oparte na Windows Forms wdrażane przy użyciu [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]programu, <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> należy użyć konstruktora z `launchInHostProcess` parametrem ustawionym na `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" />może być używany tylko w systemie Windows XP lub w nowszych wersjach systemu operacyjnego Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Nie można <see langword="null" /> przekazać <paramref name="deploymentManifest" /> argumentu.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" />używa schematu identyfikatora URI, który nie jest obsługiwany [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]przez program.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri * bool -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager (deploymentManifest, launchInHostProcess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Uniform Resource Identifier (URI) do manifestu wdrożenia aplikacji, która zostanie zainstalowana.</param>
        <param name="launchInHostProcess">Czy ta aplikacja będzie uruchamiana na hoście, na przykład w przeglądarce sieci Web. Dla aplikacji autonomicznej Ustaw tę wartość na <see langword="false" />.</param>
        <summary>Tworzy nowe wystąpienie programu <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> w celu pobrania i zainstalowania określonej aplikacji, która może być autonomiczną aplikacją opartą na Windows Forms lub aplikacją hostowaną w przeglądarce sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje sposób tworzenia wystąpienia <xref:System.Deployment.Application.InPlaceHostingManager> , które pozwala na pobieranie aplikacji opartych na Windows Forms wdrożonych przy użyciu programu. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" />może być używany tylko w systemie Windows XP lub w nowszych wersjach systemu operacyjnego Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Nie można <see langword="null" /> przekazać <paramref name="deploymentManifest" /> argumentu.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" />używa schematu identyfikatora URI, który nie jest obsługiwany [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]przez program.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy aplikacja ClickOnce ma odpowiednie uprawnienia i zależności platformy do uruchomienia na komputerze lokalnym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : unit -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja ma odpowiednie uprawnienia i zależności platformy do uruchomienia na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy wywołać <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> po <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> pomyślnym powrocie. Nie należy wywoływać <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> , chyba że <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>wywołasz i zwrócisz bez błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, które wywołuje w treści procedury obsługi zdarzeń zakończonych powodzeniem. <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywoływane, jeśli ta metoda jest wywoływana przed <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> metodą.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : bool -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements grantApplicationTrust" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">Jeśli <see langword="true" />aplikacja podejmie próbę podniesienia uprawnień dostępu do wymaganego poziomu.</param>
        <summary>Określa, czy [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja ma odpowiednie uprawnienia i zależności platformy do uruchomienia na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `grantApplicationTrust` jest `true` ,<xref:System.Deployment.Application.InPlaceHostingManager> nadaje mu uprawnienia podwyższony poziom uprawnień. Jest to możliwe tylko wtedy <xref:System.Deployment.Application.InPlaceHostingManager> , gdy jest w stanie udzielić tych uprawnień. Na przykład jeśli [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja jest instalowana jako część większego pakietu, a Instalator ma przyznane pełne zaufanie, <xref:System.Deployment.Application.InPlaceHostingManager> będzie mógł udzielić [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji pełnego zaufania. Jeśli `grantApplicationTrust` tak`false`, aplikacja nie zostanie przyznana żadne uprawnienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="inPlaceHostingManager.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluj asynchroniczną operację pobierania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inPlaceHostingManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Deployment.Application.InPlaceHostingManager" />program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> po zakończeniu korzystania z <xref:System.Deployment.Application.InPlaceHostingManager>. <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> Metoda<xref:System.Deployment.Application.InPlaceHostingManager> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Deployment.Application.InPlaceHostingManager> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Deployment.Application.InPlaceHostingManager> , którą zajmował. Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Deployment.Application.InPlaceHostingManager>do. W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Deployment.Application.InPlaceHostingManager> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationAsync : unit -&gt; unit" Usage="inPlaceHostingManager.DownloadApplicationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera aktualizację aplikacji w tle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy wywołać tę metodę po wywołaniu <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>, które wywołuje na końcu pomyślnego <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> programu obsługi zdarzeń.  
  
 W poniższych przykładach kodu założono, że masz już zdefiniowane i utworzone wystąpienie <xref:System.Deployment.Application.InPlaceHostingManager> o `iphm`nazwie.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywoływane <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> , jeśli ta metoda jest wywoływana przed metodami i <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" /> .</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationCompleted : EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " Usage="member this.DownloadApplicationCompleted : System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy aplikacja zakończy pobieranie na komputer lokalny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli instalujesz aplikację opartą na Windows Forms, musisz poinstruować użytkowników, aby uruchomili aplikację. nie można uruchamiać aplikacji opartych na Windows Forms programowo przy użyciu <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje procedurę obsługi dla <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> zdarzenia.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " Usage="member this.DownloadProgressChanged : System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu pobrania aplikacji lub manifestu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W aplikacji konsoli zdarzenia są przypisywane do wątków z puli wątków. W związku z tym, można otrzymywać zdarzenia aktualizacji postępu poza kolejnością, a kolejne zdarzenie pokazujące spadek w porównaniu z poprzednim wydarzeniem. Takie zachowanie nie będzie widoczne w aplikacji opartej na Windows Forms, ponieważ zdarzenia w Windows Forms są przetwarzane sekwencyjnie z kolejki komunikatów interfejsu użytkownika (UI).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zaktualizować element <xref:System.Windows.Forms.ToolStripProgressBar> , który jest zawarty <xref:System.Windows.Forms.StatusStrip>w.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberSignature Language="F#" Value="member this.Execute : unit -&gt; System.Runtime.Remoting.ObjectHandle" Usage="inPlaceHostingManager.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Uruchamia aplikację, jeśli i tylko wtedy, gdy jest to aplikacja oparta na Windows Presentation Foundation działająca w przeglądarce sieci Web.</summary>
        <returns><see cref="T:System.Runtime.Remoting.ObjectHandle" /> Odpowiadający uruchomionej aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest prawidłowa tylko dla aplikacji opartych na Windows Presentation Foundation, które mogą być hostowane w przeglądarce sieci Web (to oznacza, że ich manifesty wdrożenia definiują `hostInBrowser` element XML).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberSignature Language="F#" Value="member this.GetManifestAsync : unit -&gt; unit" Usage="inPlaceHostingManager.GetManifestAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera manifest [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wdrożenia aplikacji w tle i wywołuje zdarzenie, gdy operacja zakończyła się lub napotkał błąd.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby otrzymać powiadomienie o zakończeniu tego zdarzenia, Utwórz procedurę obsługi zdarzeń dla <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> zdarzenia. Jeśli to zdarzenie jest wywoływane i żaden błąd nie jest wskazywany <xref:System.Deployment.Application.GetManifestCompletedEventArgs>przez program, należy dalej <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> wywołać, aby sprawdzić, czy aplikacja będzie miała uprawnienia do uruchamiania na komputerze lokalnym.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> jak wywołać metodę. Procedura obsługi <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> wywołania zwrotnego zdarzenia sprawdza, czy pobranie manifestu zostało ukończone pomyślnie, a jeśli tak, program wyświetli komunikat z dodatkowymi informacjami o aplikacji. Jeśli użytkownik wyrazi zgodę na kontynuowanie instalacji, program obsługi <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>wywołuje.  
  
 W poniższych przykładach kodu założono, że masz już zdefiniowane i utworzone wystąpienie <xref:System.Deployment.Application.InPlaceHostingManager> o `iphm`nazwie.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberSignature Language="F#" Value="member this.GetManifestCompleted : EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " Usage="member this.GetManifestCompleted : System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po pobraniu manifestu wdrożenia na komputer lokalny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Użyj <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> właściwości, <xref:System.Deployment.Application.GetManifestCompletedEventArgs> aby sprawdzić, czy zakończono pomyślnie, czy zwrócił błąd. Jeśli <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> ma wartość null <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> , ukończono pomyślnie i można wywołać metodę <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> jak wywołać metodę. Procedura obsługi <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> wywołania zwrotnego zdarzenia sprawdza, czy pobranie manifestu zostało ukończone pomyślnie, a jeśli tak, program wyświetli komunikat z dodatkowymi informacjami o aplikacji. Jeśli użytkownik wyrazi zgodę na kontynuowanie instalacji, program obsługi <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>wywołuje.  
  
 W poniższych przykładach kodu założono, że masz już zdefiniowane i utworzone wystąpienie <xref:System.Deployment.Application.InPlaceHostingManager> o `iphm`nazwie.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomAddIn : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Ciąg, który zawiera identyfikator subskrypcji, który wskazuje dodatek do usunięcia.</param>
        <summary>Usuwa wcześniej zainstalowany składnik zdefiniowany przez użytkownika aplikacji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="subscriptionId" />nie jest prawidłową tożsamością subskrypcji lub nie zawiera nazwy, tokenu klucza publicznego, architektury procesora ani numeru wersji.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="subscriptionId" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomUXApplication : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Ciąg, który zawiera identyfikator subskrypcji, który wskazuje [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikację do usunięcia.</param>
        <summary>Usuwa aplikację, która &lt;zawiera element customUX&gt;. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda Odinstalowuje wcześniej zainstalowaną [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikację, która `<customUX>` używa elementu w [ &lt;elemencie EntryPoint.&gt; ](/visualstudio/deployment/entrypoint-element-clickonce-application)  
  
 Niestandardowe Instalatory, które nie tworzą wpisu Dodaj lub usuń programy dla [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji, muszą przechowywać Identyfikator subskrypcji znaleziony <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> we właściwości podczas instalacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
