<Type Name="UpdateCheckInfo" FullName="System.Deployment.Application.UpdateCheckInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cfa1d7e1a7da2de0889ccc33cfb0cf0f89fa28a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36677042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdateCheckInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateCheckInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.UpdateCheckInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateCheckInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateCheckInfo" />
  <TypeSignature Language="F#" Value="type UpdateCheckInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje informacje szczegółowe aktualizacji uzyskanymi za pośrednictwem wywołania <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z <xref:System.Deployment.Application.UpdateCheckInfo>, można zdecydować, czy uaktualnić na podstawie informacji o najnowszą wersję aplikacji ClickOnce. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> Zwraca wartość logiczną wskazującą, czy jest nowa aktualizacja w ogóle. <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> Właściwości zawiera numer wersji nowej wersji, podczas gdy <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> zapewnia najstarszą wersję, który użytkownik powinien mieć zainstalowany. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> Określa, czy najnowsza wersja aktualizacji jest wymagany użytkownika. Na koniec <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> wyraża łączny rozmiar aktualizacji.  
  
> [!NOTE]
>  Dodaje programu Visual Studio `<deploymentProvider>` element do manifestu tylko wtedy, gdy aplikacja jest skonfigurowana do sprawdzania dostępności aktualizacji, należy więc albo sprawdź **aplikacja ma sprawdzać dostępność aktualizacji** lub określić adres URL aktualizacji w **aktualizacji Lokalizacja** w [okno dialogowe aktualizacje aplikacji](http://msdn.microsoft.com/library/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> do określenia, czy nowe aktualizacje aplikacji i <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> do ustalenia, czy należy poprosić użytkownika do zainstalowania aktualizacji.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableVersion">
      <MemberSignature Language="C#" Value="public Version AvailableVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version AvailableVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ AvailableVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera numer wersji najnowszej wersji niezainstalowana.</summary>
        <value>
          <see cref="T:System.Version" /> Wyrażanie główne i pomocnicze numerów kompilacji i poprawce najnowszej wersji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> umożliwia określenie, czy do zainstalowania aktualizacji na podstawie ich wagi aktualizacji. Na przykład, jeśli tylko <xref:System.Version.Build%2A> lub <xref:System.Version.Revision%2A> wersji właściwości zostały zmienione, aplikacja nie może być konieczne zaktualizowanie aż do otrzymania <xref:System.Version.Minor%2A> lub <xref:System.Version.Major%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="IsUpdateRequired">
      <MemberSignature Language="C#" Value="public bool IsUpdateRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdateRequired" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUpdateRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUpdateRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUpdateRequired : bool" Usage="System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aktualizacja musi być zainstalowana.</summary>
        <value>
          <see langword="true" /> Jeśli aktualizacja jest wymagana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wdrażania aktualizacji musi spełniać aplikacja ClickOnce, można oznaczyć go jako wymagana aktualizacja sygnalizowania do aplikacji, czy należy uaktualnić natychmiast. Chcesz oznaczyć aplikacji, jeśli krytycznych aktualizacji zawiera najnowszą wersję lub jest niezgodna z formatów plików lub źródeł danych zaplecza używanych przez wcześniejsze wersji.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> do ustalenia, czy należy poprosić użytkownika do zainstalowania aktualizacji lub go zainstalować bez monitowania.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRequiredVersion">
      <MemberSignature Language="C#" Value="public Version MinimumRequiredVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MinimumRequiredVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRequiredVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MinimumRequiredVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRequiredVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną wersją, użytkownik musi być zainstalowany na komputerze.</summary>
        <value>A <see cref="T:System.Version" /> wyrażanie co najmniej wersję, do której użytkownik musi zainstalować.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje można pominąć wymagane aktualizacje, gdy użytkownik ma specjalne przydziału lub jest od komputera, tygodnie lub miesiące. Zastosowanie  
  
 <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> Aby ustalić, czy użytkownik nie została uaktualniona aplikacji za pewien czas i Brak co najmniej jednego wymagane aktualizacje.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, wyświetlanie <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> właściwości użytkownika, gdy dostępna jest aktualizacja wymagana.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie ma nowych wersji dostępny do zainstalowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAvailable">
      <MemberSignature Language="C#" Value="public bool UpdateAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateAvailable : bool" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje, czy dostępna jest aktualizacja niezainstalowana.</summary>
        <value>
          <see langword="true" /> Jeśli nowa wersja aplikacji jest dostępna; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu sprawdza <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> ustalenie, czy jest dostępna aktualizacja do zainstalowania.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSizeBytes">
      <MemberSignature Language="C#" Value="public long UpdateSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UpdateSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UpdateSizeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSizeBytes : int64" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar dostępnych aktualizacji.</summary>
        <value>
          <see cref="T:System.Int64" /> Opisujące rozmiar w bajtach dostępnej aktualizacji. Jeśli nie jest dostępna żadna aktualizacja, zwraca wartość 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>