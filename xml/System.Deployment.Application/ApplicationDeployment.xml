<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8379c73e9a877ea2f6ccf2cdb8d66be6232d250e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69366426" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Program programowo obsługuje aktualizacje bieżącego wdrożenia i obsługuje pobieranie plików na żądanie. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można skonfigurować [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikację, aby sprawdzać dostępność aktualizacji i instalować je automatycznie `subscription` za pomocą elementu manifestu wdrażania. Niektóre aplikacje wymagają jednak precyzyjnej kontroli nad aktualizacjami. Możesz chcieć instalować wymagane aktualizacje programowo i monitować użytkowników o zainstalowanie opcjonalnych aktualizacji w ich wygodie. Wyłączając aktualizacje subskrypcji w manifeście wdrożenia, można przejąć pełną kontrolę nad zasadami aktualizacji aplikacji. Alternatywnie możesz użyć automatycznej subskrypcji w połączeniu z usługą <xref:System.Deployment.Application.ApplicationDeployment>, która umożliwia [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] okresowe aktualizowanie aplikacji, ale używa <xref:System.Deployment.Application.ApplicationDeployment> do pobierania aktualizacji krytycznych wkrótce po ich wydaniu.  
  
 Możesz sprawdzić, czy wdrożenie ma dostępną aktualizację za pomocą <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> albo metody, a druga metoda podnosi <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> zdarzenie po pomyślnym zakończeniu. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>zwraca ważne informacje o aktualizacji, takie jak numer wersji i czy jest to aktualizacja wymagana dla bieżących użytkowników. Jeśli dostępna jest aktualizacja, można ją zainstalować przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> lub <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; druga metoda zgłasza <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> zdarzenie po zakończeniu instalacji aktualizacji. W przypadku dużych aktualizacji można odbierać powiadomienia o postępach w <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> ramach <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> zdarzeń i i korzystać z informacji w <xref:System.ComponentModel.ProgressChangedEventArgs> programie w celu powiadomienia użytkownika o stanie pobierania.  
  
 Możesz również użyć <xref:System.Deployment.Application.ApplicationDeployment> , aby pobrać duże pliki i zestawy na żądanie. Te pliki muszą być oznaczone jako "opcjonalne" w manifeście aplikacji wdrożenia, aby nie były pobierane podczas instalacji. Pliki można pobrać w dowolnym momencie w czasie trwania aplikacji przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody lub. Zestawy można pobrać przed ich załadowaniem do pamięci, dostarczając procedurę obsługi zdarzeń dla <xref:System.AppDomain.AssemblyResolve> zdarzenia <xref:System.AppDomain> w klasie. Aby uzyskać więcej informacji, [zobacz Przewodnik: Pobieranie zestawów na żądanie za pomocą interfejsu API wdrażania ClickOnce przy użyciu](https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5)narzędzia Projektant.  
  
> [!NOTE]
>  Jeśli [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja zostanie zaktualizowana, gdy aplikacja jest uruchomiona, użytkownik nie zobaczy aktualizacji <xref:System.Windows.Forms.Application>, dopóki nie zostanie <xref:System.Windows.Forms.Application.Restart%2A> wywołana metoda, która zamknie bieżące uruchomione wystąpienie aplikacji i natychmiast ponownie się uruchomi go.  
  
 <xref:System.Deployment.Application.ApplicationDeployment>nie ma konstruktora publicznego; Możesz uzyskać wystąpienia klasy w [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> za pomocą właściwości. Użyj <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> właściwości, aby sprawdzić, czy bieżąca aplikacja [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] jest aplikacją.  
  
 <xref:System.Deployment.Application.ApplicationDeployment>Program obsługuje sprawdzanie dostępności aktualizacji i pobieranie zaktualizowanych plików asynchronicznie przy użyciu nowego [wzorca asynchronicznego opartego na zdarzeniach](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), który udostępnia wywołania zwrotne uzupełniania jako zdarzenia klas. <xref:System.Deployment.Application.ApplicationDeployment>uruchamia i zarządza wątkami, a następnie wywołuje aplikację z powrotem w poprawnym wątku interfejsu użytkownika. Za pomocą tej klasy można aktualizować bez blokowania aplikacji, dzięki czemu użytkownik może kontynuować pracę podczas instalacji aktualizacji. Jeśli użytkownik musi zatrzymać wszystkie zadania podczas aktualizacji, należy rozważyć użycie metod synchronicznych.  
  
> [!NOTE]
>  Wykonywanie aktualizacji asynchronicznych wymaga, aby aplikacja zaimportowali <xref:System.ComponentModel> zarówno <xref:System.Deployment.Application> przestrzeń nazw, jak i.  
  
   
  
## Examples  
 Poniższy przykład kodu określa czas ładowania aplikacji, niezależnie od tego, czy jest dostępna nowa aktualizacja. Jeśli dostępna jest wymagana aktualizacja, przykład kodu zainstaluje aktualizację asynchronicznie. Ten kod powinien zostać dodany do formularza, który zawiera <xref:System.Windows.Forms.TextBox> nazwę. `downloadStatus`  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5">Przewodnik: Pobieranie zestawów na żądanie za pomocą interfejsu API wdrażania ClickOnce przy użyciu narzędzia Projektant</related>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres URL służący do uruchamiania manifestu wdrożenia aplikacji.</summary>
        <value>Ciąg o zerowej długości, jeśli właściwość <c>TrustUrlParameters</c> w manifeście wdrożenia ma <see langword="false" />wartość lub jeśli użytkownik podał ścieżkę UNC do otwarcia wdrożenia lub otworzyła ją lokalnie. W przeciwnym razie wartość zwracana to pełny adres URL służący do uruchamiania aplikacji, w tym wszystkie parametry.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość będzie działała zarówno w w pełni zaufanych, jak i częściowo zaufanych aplikacjach.  
  
   
  
## Examples  
 Poniższy kod pokazuje, jak pobrać parametry adresu URL za pomocą <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>i jak <xref:System.Web.HttpUtility> używać klasy do bezpiecznego analizowania ciągu zapytania. Wiele wystąpień tej samej zmiennej ciągu zapytania jest konsolidowane w jednym wpisie zwróconego <xref:System.Collections.Specialized.NameValueCollection>elementu.  
  
 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje tę samą operację co <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, ale zwraca rozszerzone informacje o dostępnej aktualizacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje tę samą operację co <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, ale zwraca rozszerzone informacje o dostępnej aktualizacji.</summary>
        <returns><see cref="T:System.Deployment.Application.UpdateCheckInfo" /> Dla dostępnej aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda umożliwia asynchronicznym wywołującym uzyskanie tych samych rozszerzonych informacji, które asynchronicznie wywołujące <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> uzyskuje przy użyciu klasy. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> do pobrania informacji o najnowszej aktualizacji. Jeśli aktualizacja istnieje, jest instalowana automatycznie tylko wtedy, gdy jest to aktualizacja wymagana; w przeciwnym razie zostanie wyświetlony komunikat z prośbą o użytkownika.  
  
 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżąca aplikacja nie jest skonfigurowana do obsługi aktualizacji albo inna operacja sprawdzania aktualizacji jest już w toku.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Nie można pobrać manifestu wdrażania. Ten wyjątek pojawi się we <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> właściwości <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> zdarzenia.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Manifest wdrożenia jest uszkodzony. Wygeneruj ponownie manifest aplikacji przed podjęciem próby wdrożenia tej aplikacji dla użytkowników. Ten wyjątek pojawi się we <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> właściwości <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> zdarzenia.</exception>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Jeśli <see langword="false" />aktualizacja zostanie zastosowana w trybie dyskretnym, a okno dialogowe nie zostanie wyświetlone.</param>
        <summary>Wykonuje tę samą operację co <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, ale zwraca rozszerzone informacje o dostępnej aktualizacji.</summary>
        <returns><see cref="T:System.Deployment.Application.UpdateCheckInfo" /> Dla dostępnej aktualizacji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> , czy jest dostępna nowa aktualizacja.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> , czy jest dostępna nowa aktualizacja.</summary>
        <returns><see langword="true" />Jeśli dostępna jest nowa aktualizacja; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda porównuje wersję aktualnie zainstalowanego wdrożenia z wersją określoną w manifeście wdrożenia <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>znalezionym w. <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> Jeśli wersja na serwerze różni się od zainstalowanej wersji, zwraca `true`.  
  
 Ta metoda zostanie Zablokowani do momentu ukończenia sprawdzania. Aby sprawdzić, czy aktualizacja została zastosowana asynchronicznie, zamiast niej użyj <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metody.  
  
> [!NOTE]
>  Jeśli <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> program wykryje, że dostępna jest aktualizacja, a użytkownik zdecyduje się nie instalować, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wyświetli monit o udostępnienie aktualizacji przy następnym uruchomieniu aplikacji. Nie ma możliwości wyłączenia tego monitu. (Jeśli aplikacja jest wymaganą aktualizacją, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] program zainstaluje ją bez monitowania).  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza dostępność aktualizacji aplikacji; Jeśli jest dostępny, instaluje ją synchronicznie.  
  
 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]zwraca ten wyjątek bezpośrednio w przypadku wywołania metody <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> , gdy aktualizacja jest już w toku.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Nie można pobrać manifestu wdrażania.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Manifest wdrożenia jest uszkodzony. Prawdopodobnie trzeba będzie ponownie wdrożyć aplikację, aby rozwiązać ten problem.</exception>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Jeśli <see langword="false" />aktualizacja zostanie zastosowana w trybie dyskretnym, a okno dialogowe nie zostanie wyświetlone.</param>
        <summary>Sprawdza <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> , czy jest dostępna nowa aktualizacja.</summary>
        <returns><see langword="true" />Jeśli dostępna jest nowa aktualizacja; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> asynchronicznie, aby określić, czy jest dostępna nowa aktualizacja.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>zwraca natychmiast i uruchamia oddzielny wątek do pobrania zaktualizowanej aplikacji. Gdy metoda zostanie zakończona lub zostanie anulowana, wywołuje <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> zdarzenie. Można użyć <xref:System.ComponentModel.AsyncCompletedEventArgs> w tym obsłudze zdarzeń, aby określić, czy operacja została anulowana, czy wyjątek został zgłoszony podczas aktualizacji.  
  
 Można anulować asynchroniczne aktualizowanie przez wywołanie <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.  
  
> [!NOTE]
>  Jeśli <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> program wykryje, że dostępna jest aktualizacja, a użytkownik zdecyduje się nie instalować, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wyświetli monit o udostępnienie aktualizacji przy następnym uruchomieniu aplikacji. Nie ma możliwości wyłączenia tego monitu. (Jeśli aplikacja jest wymaganą aktualizacją, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] program zainstaluje ją bez monitowania).  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy aktualizacja została zadana asynchronicznie, i instaluje ją, jeśli taka istnieje.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]zwraca ten wyjątek bezpośrednio w przypadku wywołania metody <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> , gdy aktualizacja jest już w toku.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Nie można pobrać manifestu wdrażania. Ten wyjątek występuje we <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> właściwości <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> zdarzenia.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Manifest wdrożenia jest uszkodzony. Prawdopodobnie trzeba będzie ponownie wdrożyć aplikację, aby rozwiązać ten problem. Ten wyjątek występuje we <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> właściwości <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> zdarzenia.</exception>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje sprawdzanie aktualizacji asynchronicznych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby anulować sprawdzanie aktualizacji zainicjowane przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metody.  
  
 Ta metoda nie spowoduje anulowania żadnych aktualizacji w tle, które mogą już być w toku, takich jak aktualizacja rozpoczęta w ramach subskrypcji. Aby uzyskać więcej informacji o subskrypcjach, zobacz [Wybieranie strategii aktualizacji ClickOnce](https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> zakończeniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> Klasa poinformuje użytkownika, między innymi o wersji aktualizacji, o tym, jak duża jest aktualizacja, oraz o tym, czy dostępna aktualizacja jest wymagana, czy opcjonalna.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> , aby zdecydować, czy należy polecić użytkownikowi zainstalowanie dostępnej aktualizacji aplikacji. Jeśli aktualizacja jest obowiązkowym uaktualnieniem, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> program obsługi zdarzeń nie monituje użytkownika. Przykład wymaga wdrożenia aplikacji Windows Forms, która zawiera <xref:System.Windows.Forms.StatusStrip> kontrolkę i że ta kontrolka <xref:System.Windows.Forms.ToolStripStatusLabel> zawiera kontrolkę o nazwie `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy aktualizacja postępu jest dostępna w <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> wywołaniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>raportuje o stanie pobierania manifestu wdrażania aplikacji. Mogą to być ważne informacje dla użytkowników, którzy pobierają wdrożenie przez wolne połączenia sieciowe.  
  
   
  
## Examples  
 Poniższy przykład kodu używa zdarzenia, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> aby poinformować użytkownika o tym, jak dużo manifestu wdrożenia pozostało do pobrania. Przykład wymaga wdrożenia aplikacji Windows Forms, która zawiera <xref:System.Windows.Forms.StatusStrip> kontrolkę i że ta kontrolka <xref:System.Windows.Forms.ToolStripStatusLabel> zawiera kontrolkę o nazwie `downloadStatus`. 
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca bieżącą <see cref="T:System.Deployment.Application.ApplicationDeployment" /> wartość dla tego wdrożenia.</summary>
        <value>Bieżące wdrożenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można tworzyć wystąpień <xref:System.Deployment.Application.ApplicationDeployment> bezpośrednio w aplikacji. należy pobrać prawidłowe wystąpienie <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> za pomocą właściwości.  
  
 Właściwość statyczna jest prawidłowa tylko z poziomu aplikacji, która została wdrożona [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]przy użyciu. <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> Próby wywołania tej właściwości z[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji innych niż aplikacje spowodują zgłoszenie wyjątku. Jeśli tworzysz aplikację, która może lub nie można wdrożyć przy użyciu [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]programu, <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> Użyj właściwości, aby sprawdzić, czy bieżący program jest [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacją.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> i sprawdza, czy aplikacja została zaktualizowana w ciągu ostatnich trzech dni.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Podjęto próbę wywołania tej właściwości statycznej z[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nieaplikacji.</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wersję wdrożenia dla bieżącego uruchomionego wystąpienia aplikacji.</summary>
        <value>Bieżąca wersja wdrożenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>różni się od <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> tego, czy została zainstalowana nowa aktualizacja, ale jeszcze nie została wywołana <xref:System.Windows.Forms.Application.Restart%2A>. Jeśli manifest wdrożenia jest skonfigurowany do wykonywania aktualizacji automatycznych, można porównać te dwie wartości, aby określić, czy należy ponownie uruchomić aplikację.  
  
   
  
## Examples  
 Poniższy przykład kodu definiuje metodę, która określa, czy [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja została zaktualizowana.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę do [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] katalogu danych.</summary>
        <value>Ciąg zawierający ścieżkę do katalogu danych aplikacji na dysku lokalnym.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Nazwana grupa plików do pobrania. Wszystkie pliki oznaczone jako "opcjonalne" w [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji wymagają nazwy grupy.</param>
        <summary>Pobiera zestaw opcjonalnych plików na żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] W aplikacji pliki oznaczone jako "opcjonalne" w manifeście aplikacji nie są pobierane podczas inicjowania lub aktualizacji. Za pomocą <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> metody można pobrać wszystkie pliki należące do nazwanej grupy na żądanie, dzięki czemu nie będą zużywać zasobów sieciowych i miejsca na dysku do momentu, gdy użytkownik nie będzie ich wymagał. Na przykład niektórzy użytkownicy mogą potrzebować codziennie korzystać z pakietu analizy danych zawartego w aplikacji, podczas gdy inni użytkownicy nigdy go nie wywołują.  
  
 Aby użyć zestawu pobranego za pomocą <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>programu, należy dołączyć odbiornik zdarzeń <xref:System.AppDomain.AssemblyResolve> do zdarzenia w <xref:System.AppDomain.CurrentDomain%2A>. Aby zapoznać się z przykładem[, zobacz Przewodnik: Pobieranie zestawów na żądanie za pomocą interfejsu API wdrażania ClickOnce przy użyciu](https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5)narzędzia Projektant.  
  
 Wszystkie pliki są pobierane do [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] pamięci podręcznej aplikacji i dlatego są odizolowane od bieżącej wersji aplikacji. Załóżmy, że po pobraniu grupy plików przez aplikację użytkownik instaluje nową wersję aplikacji, ale później powraca do poprzedniej wersji aplikacji. W takim przypadku poprzednią wersję nadal będą mieć kopie plików, które zostały pobrane wcześniej. Aby uzyskać więcej informacji na temat uzyskiwania dostępu do plików danych, zobacz [Uzyskiwanie dostępu do danych lokalnych i zdalnych w aplikacjach ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>działa w częściowo zaufanych aplikacjach, czyli w dowolnej [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji uruchomionej z ograniczonymi uprawnieniami. Jednak w przypadku próby dynamicznego ładowania zestawów aplikacja będzie wymagać pełnego zaufania.  
  
 Pobieranie plików danych na żądanie nie jest obecnie obsługiwane.  
  
 Aplikacja nie będzie odpowiadać na dane wejściowe użytkownika, <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> dopóki metoda nie zwróci metody. Jeśli musisz pobrać pliki bez przerywania przepływu pracy użytkownika, zamiast tego użyj <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody.  
  
 Nie można pobrać pojedynczego pliku tylko według nazwy pliku. Aby pobrać pojedynczy plik, należy przypisać mu nazwę grupy we [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wdrożeniu i pobrać grupę przy użyciu tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób ładowania zestawu na żądanie przez nasłuchiwanie dla <xref:System.AppDomain.AssemblyResolve> zdarzenia.  
  
 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> Parametr ma wartość null lub zero-length.</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Przewodnik: Pobieranie zestawów satelickich na żądanie przy użyciu interfejsu API wdrażania ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">Manifest aplikacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Uzyskiwanie dostępu do danych lokalnych i zdalnych w aplikacjach ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Instrukcje: Uwzględnianie pliku danych w aplikacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Architektura pamięci podręcznej ClickOnce</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pliki do pobrania, na żądanie, zestaw opcjonalnych plików w tle.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Nazwana grupa plików do pobrania. Wszystkie pliki oznaczone jako "opcjonalne" w [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji wymagają nazwy grupy.</param>
        <summary>Pliki do pobrania, na żądanie, zestaw opcjonalnych plików w tle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] W aplikacji pliki oznaczone jako "opcjonalne" w manifeście aplikacji nie są pobierane podczas inicjowania lub aktualizacji. Za pomocą <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody można pobrać wszystkie pliki należące do nazwanej grupy na żądanie, dzięki czemu nie będą zużywać zasobów sieciowych i miejsca na dysku do momentu, gdy użytkownik nie będzie ich wymagał. To podejście działa nie tylko w przypadku plików statycznych, ale również dla zestawów, które aplikacja może lub nie może być wymagane. Na przykład niektórzy użytkownicy mogą potrzebować codziennie korzystać z pakietu analizy danych zawartego w aplikacji, podczas gdy inni użytkownicy nigdy go nie wywołują.  
  
 Aby pobrać zestawy na żądanie, Dołącz odbiornik zdarzeń do <xref:System.AppDomain.AssemblyResolve> zdarzenia <xref:System.AppDomain.CurrentDomain%2A>w. Aby zapoznać się z przykładem, zobacz [Przewodnik: Pobieranie zestawów na żądanie przy użyciu interfejsu API](https://msdn.microsoft.com/library/d20e2789-8621-4806-b5b7-841122da1456)wdrażania ClickOnce.  
  
 Wszystkie zestawy są pobierane do [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] pamięci podręcznej aplikacji.  
  
 Wszystkie pliki statyczne są pobierane do [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] katalogu danych aplikacji i dlatego są odizolowane od bieżącej wersji aplikacji. Załóżmy, że po pobraniu grupy plików przez aplikację użytkownik instaluje nową wersję aplikacji, ale później powraca do poprzedniej wersji aplikacji. W takim przypadku poprzednią wersję nadal będą mieć kopie plików, które zostały pobrane wcześniej. Aby uzyskać więcej informacji na temat uzyskiwania dostępu do plików statycznych, zobacz [Uzyskiwanie dostępu do danych lokalnych i zdalnych w aplikacjach ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 Jednocześnie można pobrać wiele grup plików <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>. Można je rozróżnić przy użyciu <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> właściwości <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> klasy, <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> która jest przenoszona do zdarzenia. Jeśli konieczne jest przekazanie bardziej złożonego stanu, można użyć <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> , aby przekazać `state` obiekt.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>działa w częściowo zaufanych aplikacjach, czyli w dowolnej [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji uruchomionej z ograniczonymi uprawnieniami. Jednak w przypadku próby dynamicznego ładowania zestawów aplikacja będzie wymagać pełnego zaufania.  
  
 Pobieranie plików danych na żądanie nie jest obecnie obsługiwane.  
  
 Nie można pobrać pojedynczego pliku tylko według nazwy pliku. Aby pobrać pojedynczy plik, należy przypisać mu nazwę grupy we [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wdrożeniu i pobrać grupę przy użyciu tej metody.  
  
 Aby anulować pobieranie asynchroniczne, wywołaj <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> Parametr ma wartość null lub zero-length.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można zainicjować więcej niż jednego pobrania <paramref name="groupName" /> jednocześnie.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Przewodnik: Pobieranie zestawów satelickich na żądanie przy użyciu interfejsu API wdrażania ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">Manifest aplikacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Uzyskiwanie dostępu do danych lokalnych i zdalnych w aplikacjach ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Instrukcje: Uwzględnianie pliku danych w aplikacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Architektura pamięci podręcznej ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">Nazwana grupa plików do pobrania. Wszystkie pliki oznaczone jako "opcjonalne" w [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji wymagają nazwy grupy.</param>
        <param name="userState">Dowolny obiekt zawierający informacje o stanie dla operacji asynchronicznej.</param>
        <summary>Pliki do pobrania, na żądanie, zestaw opcjonalnych plików w tle i przekazuje część stanu aplikacji do wywołania zwrotnego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] W aplikacji pliki oznaczone jako "opcjonalne" w manifeście aplikacji nie są pobierane podczas inicjowania lub aktualizacji. Za pomocą <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody można pobrać wszystkie pliki należące do nazwanej grupy na żądanie, dzięki czemu nie będą zużywać zasobów sieciowych i miejsca na dysku do momentu, gdy użytkownik nie będzie ich wymagał. To podejście działa nie tylko w przypadku plików statycznych, ale również dla zestawów, które aplikacja może lub nie może być wymagane. Na przykład niektórzy użytkownicy mogą potrzebować codziennie korzystać z pakietu analizy danych zawartego w aplikacji, podczas gdy inni użytkownicy nigdy go nie wywołują. Aby pobrać zestawy na żądanie, Dołącz odbiornik zdarzeń do <xref:System.AppDomain.AssemblyResolve> zdarzenia <xref:System.AppDomain.CurrentDomain%2A>w.  
  
 Jednocześnie można pobrać wiele grup plików przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody. Można je rozróżnić przy użyciu <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> właściwości <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> klasy, <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> która jest przenoszona do zdarzenia. Jeśli konieczne jest przekazanie bardziej złożonego stanu, można użyć  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>do przekazania `state` do obiektu.  
  
 Wszystkie pliki statyczne są pobierane do [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] katalogu danych aplikacji i dlatego są odizolowane od bieżącej wersji aplikacji. Aby uzyskać więcej informacji na temat uzyskiwania dostępu do plików statycznych, zobacz [Uzyskiwanie dostępu do danych lokalnych i zdalnych w aplikacjach ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d). . Załóżmy, że po pobraniu grupy plików przez aplikację użytkownik instaluje nową wersję aplikacji, ale później będzie przywracać poprzednią wersję aplikacji. W takim przypadku poprzednią wersję nadal będą mieć kopie plików, które zostały pobrane wcześniej.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>działa w częściowo zaufanych aplikacjach, czyli w dowolnej [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji uruchomionej z ograniczonymi uprawnieniami. Jednak w przypadku próby dynamicznego ładowania zestawów aplikacja będzie wymagać pełnego zaufania.  
  
 Pobieranie plików danych na żądanie nie jest obecnie obsługiwane.  
  
 Aby anulować pobieranie asynchroniczne, wywołaj <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> Parametr ma wartość null lub zero-length.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można zainicjować więcej niż jednego pobrania <paramref name="groupName" /> jednocześnie.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Przewodnik: Pobieranie zestawów satelickich na żądanie przy użyciu interfejsu API wdrażania ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">Manifest aplikacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Uzyskiwanie dostępu do danych lokalnych i zdalnych w aplikacjach ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Instrukcje: Uwzględnianie pliku danych w aplikacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Architektura pamięci podręcznej ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Nazwana grupa plików do pobrania. Wszystkie pliki oznaczone jako "opcjonalne" w [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji wymagają nazwy grupy.</param>
        <summary>Anuluje asynchroniczne pobieranie plików.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" />nie może <see langword="null" />być.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje w wątku aplikacji głównej po zakończeniu pobierania pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> Zdarzenie jest wywoływane na głównym wątku aplikacji. Bezpieczny wątek wywołuje Windows Forms kontrolek aplikacji bezpośrednio w ramach tego wywołania zwrotnego.  
  
 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Sprawdź Właściwość <xref:System.ComponentModel.AsyncCompletedEventArgs> dostarczonego do tego wywołania zwrotnego. Jeśli ta właściwość ma `null`wartość, pobieranie powiodło się. Jeśli tak nie `null`jest, instalacja nie powiedzie się, a więcej informacji o błędzie instalacji można znaleźć za pomocą <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera grupę plików pomocy w tle. Przykład wymaga wdrożenia aplikacji Windows Forms, która zawiera <xref:System.Windows.Forms.StatusStrip> kontrolkę i że ta kontrolka <xref:System.Windows.Forms.ToolStripStatusLabel> zawiera kontrolkę o nazwie `downloadStatus`. 
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy informacje o stanie są dostępne w operacji pobierania pliku zainicjowanej przez <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />wywołanie do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> Zdarzenie jest wywoływane na głównym wątku aplikacji. Bezpieczny wątek wywołuje Windows Forms kontrolek aplikacji bezpośrednio w ramach tego wywołania zwrotnego.  
  
 Informacje podane w programie <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> służą do przekazywania użytkownikom informacji o postępie.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera grupę plików pomocy w tle. Przykład wymaga wdrożenia aplikacji Windows Forms, która zawiera <xref:System.Windows.Forms.StatusStrip> kontrolkę i że ta kontrolka <xref:System.Windows.Forms.ToolStripStatusLabel> zawiera kontrolkę o nazwie `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Nazwana grupa plików do pobrania. Wszystkie pliki oznaczone jako "opcjonalne" w [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji wymagają nazwy grupy.</param>
        <summary>Sprawdza, czy nazwana grupa plików została już pobrana na komputer kliencki.</summary>
        <returns><see langword="true" />Jeśli grupa plików została już pobrana dla bieżącej wersji tej aplikacji, w przeciwnym razie. <see langword="false" /> Jeśli została zainstalowana nowa wersja aplikacji, a nowa wersja nie dodaliśmy, usunięto ani zmieniono plików w grupie plików, program <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> zwraca wartość. <see langword="true" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A>działa w częściowo zaufanej aplikacji bez żadnych wymagań dotyczących zabezpieczeń.  
  
 Podczas aktualizowania aplikacji program [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] kopiuje wszystkie pliki danych na żądanie z poprzedniej wersji do katalogu danych nowej wersji. Jeśli pobrano nową wersję tych plików, należy usunąć wszystkie dane, które mają być przechowywane ze starej wersji, i przenieść je do nowej wersji.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera wszystkie pliki `HelpFiles` z grupy na dysk.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><paramref name="groupName" />nie jest grupą plików zdefiniowaną w manifeście aplikacji.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest to pierwsze uruchomienie tej aplikacji na komputerze klienckim.</summary>
        <value><see langword="true" />Jeśli ta wersja aplikacji nigdy nie została uruchomiona na komputerze klienckim, w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> , aby określić, czy należy wykonać jednorazowe operacje inicjowania przy pierwszym uruchomieniu aplikacji.  
  
 Nie należy zakładać, <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> że `true` ustawienie wskazuje, że to wystąpienie aplikacji jest pierwszym z nich do wyświetlania interfejsu użytkownika dla użytkownika. Ze względu na sposób, w jaki system planuje procesy, jedno wystąpienie aplikacji może <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> mieć ustawioną `true`właściwość na, ale inne wystąpienie może być pierwsze do renderowania na ekranie. Wartość tej właściwości jest resetowana za każdym razem, gdy użytkownik uaktualnia z jednej wersji do następnej. Jeśli chcesz wykonać operację tylko podczas pierwszego uruchomienia każdej wersji aplikacji, musisz wykonać dodatkowy test, na przykład sprawdzając, czy plik został utworzony po raz pierwszy, lub przechowując flagę przy użyciu **ustawień aplikacji**.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> , aby zdecydować, czy należy sprawdzać dostępność aktualizacji do grupy `HelpFiles`plików. Jeśli co najmniej jeden z plików został zaktualizowany, wywołuje <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> , aby uzyskać nowe wersje.  
  
 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżąca aplikacja jest [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacją.</summary>
        <value><see langword="true" />Jeśli jest [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] to aplikacja; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli chcesz, aby aplikacja działała zarówno wewnątrz, jak i poza [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wdrożeniem (na przykład jeśli chcesz debugować aplikację na komputerze lokalnym przed jej wdrożeniem), przetestuj <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> przed uzyskaniem dostępu <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> do właściwości.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>zwróci wartość `true` bez względu na to, czy aplikacja jest zainstalowana, czy hostowana w trybie online, oraz bez względu na to, czy została zainstalowana z witryny sieci Web, udziału plików lub dysku CD-ROM.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> pierwszej, aby upewnić się, że odwołanie `null`nie jest.  
  
 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ostatniego sprawdzenia aktualizacji aplikacji.</summary>
        <value><see cref="T:System.DateTime" /> Ostatniego sprawdzenia aktualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Aplikację można skonfigurować pod kątem aktualizacji subskrypcji. W tym scenariuszu [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] sonduje lokalizację wdrożenia aplikacji automatycznie w odstępach czasu zdefiniowanych w manifeście wdrożenia i określa, czy jest dostępna aktualizacja. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A>Zwraca godzinę ostatniego sprawdzenia aktualizacji niezależnie od tego, czy został on zainicjowany przez <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>subskrypcję, czy przez jawne sprawdzenie przy użyciu metody, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>lub <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> .  
  
 Jeśli nie wykonano sprawdzenia aktualizacji od momentu zainstalowania aplikacji, program <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> zwraca czas instalacji.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza, czy [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja została sprawdzona pod kątem dostępności aktualizacji w ciągu ostatnich trzech dni.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Wybieranie strategii aktualizacji ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia synchroniczne pobieranie i Instalowanie najnowszej wersji tej aplikacji.</summary>
        <returns><see langword="true" />Jeśli aplikacja została zaktualizowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja jest uznawana za zaktualizowaną w przypadku opublikowania nowej wersji aplikacji w lokalizacji określonej przez <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, a numer wersji w manifeście wdrożenia aplikacji jest większy niż numer wersji aplikacji. zainstalowane na komputerze użytkownika.  
  
 Wywołanie zostanie zablokowane do momentu pobrania aktualizacji na komputer kliencki i zainstalowania ich [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] w pamięci podręcznej. w tym czasie aplikacja nie będzie odpowiadać użytkownikowi. <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> Jeśli chcesz zachować czas odpowiedzi aplikacji lub wyświetlić raport postępu podczas pobierania, zamiast tego użyj <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metody.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>Pobiera wszystkie pliki, które nie są oznaczone jako "opcjonalne" w manifeście aplikacji. Możesz pobrać opcjonalne pliki na żądanie przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody lub.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]program może już aktualizować aplikację automatycznie po wywołaniu <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> metody. w takim przypadku wywołania tej metody spowodują <xref:System.InvalidOperationException>zgłoszenie.  
  
 Jeśli Zaktualizowano co najmniej jeden plik we wdrożeniu, ale manifest aplikacji nie został odświeżony, zostanie wyświetlony komunikat <xref:System.Deployment.Application.InvalidDeploymentException>. W większości przypadków ponowne wdrożenie [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji rozwiązuje ten problem. Ten wyjątek zostanie również wyświetlony, jeśli podpis klucza publicznego w manifeście wdrożenia lub manifeście aplikacji jest nieprawidłowy lub nie istnieje.  
  
 Aktualizacja może zażądać wyższego poziomu zaufania na komputerze lokalnym niż poprzednia wersja aplikacji. Jeśli aplikacja używa zaufanego wdrożenia aplikacji, Menedżer zaufania środowiska uruchomieniowego języka wspólnego (CLR) sprawdza manifest wdrożenia, aby ustalić, czy zawiera on prawidłową licencję zaufania. Jeśli manifest wdrożenia nie zawiera prawidłowej licencji zaufania, program [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] zatrzyma instalację i <xref:System.Deployment.Application.TrustNotGrantedException>wygeneruje. W <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> tej metodzie nie zostanie wyświetlony monit z pytaniem o to, czy chcą udzielić aplikacji uprawnienia do uruchomienia.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza dostępność aktualizacji aplikacji; Jeśli dostępna jest aktualizacja, zostanie ona zainstalowana synchronicznie.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">Komputer lokalny nie przyznał aplikacji poziomu uprawnień, który zażądał wykonania.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Wdrożenie jest uszkodzone. Aby uzyskać porady na temat diagnozowania i rozwiązywania problemów, zobacz [Rozwiązywanie problemów z wdrożeniami ClickOnce](https://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Nie można pobrać nowego wdrożenia z jego lokalizacji w sieci.</exception>
        <exception cref="T:System.InvalidOperationException">Aplikacja jest obecnie aktualizowana.</exception>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Wybieranie strategii aktualizacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a05b5f2f-d1f2-471a-8096-8b11f7554265">Wdrażanie i zabezpieczenia technologii ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia asynchroniczne pobieranie i Instalowanie najnowszej wersji tej aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja jest uznawana za zaktualizowaną w przypadku opublikowania nowej wersji aplikacji w lokalizacji określonej przez <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, a numer wersji w manifeście wdrożenia aplikacji jest większy niż numer wersji aplikacji. zainstalowane na komputerze użytkownika.  
  
 Podczas pobierania aktualizacji program wykona [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> procedurę obsługi zdarzeń w wątku głównym aplikacji, aby poinformować o stanie pobrania. Gdy aktualizacja asynchroniczna zakończy się lub napotka wyjątek, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] program <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> zgłosi zdarzenie do głównego wątku aplikacji. <xref:System.ComponentModel.AsyncCompletedEventArgs> Sprawdź dostarczone do tego zdarzenia, aby określić, czy aktualizacja zakończyła się pomyślnie.  
  
 Jeśli <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> zgłasza wyjątek, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] wywołuje <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> i ustawia <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Właściwość <xref:System.ComponentModel.AsyncCompletedEventArgs> dla zgłoszonego wyjątku.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>pobierze wszystkie pliki we wdrożeniu, które nie są oznaczone jako "opcjonalne" w manifeście aplikacji. Możesz pobrać opcjonalne pliki na żądanie przy użyciu <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metody lub.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]program może już aktualizować aplikację automatycznie po wywołaniu <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metody. w takim przypadku wywołania tej metody spowodują <xref:System.InvalidOperationException>zgłoszenie.  
  
 Jeśli Zaktualizowano co najmniej jeden plik we wdrożeniu, ale manifest aplikacji nie został odświeżony, zostanie wyświetlony komunikat <xref:System.Deployment.Application.InvalidDeploymentException>. W większości przypadków ponowne skompilowanie manifestu aplikacji rozwiązuje ten problem. Ten wyjątek zostanie również wyświetlony, jeśli podpis klucza publicznego w manifeście wdrożenia lub manifeście aplikacji jest nieprawidłowy lub nie istnieje.  
  
 Aktualizacja może zażądać wyższego poziomu zaufania na komputerze lokalnym niż poprzednia wersja aplikacji. Jeśli aplikacja używa zaufanego wdrożenia aplikacji, Menedżer zaufania środowiska uruchomieniowego języka wspólnego (CLR) sprawdza manifest wdrożenia, aby ustalić, czy zawiera on prawidłową licencję zaufania. Jeśli manifest wdrożenia nie zawiera prawidłowej licencji zaufania, program [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] zatrzyma instalację i <xref:System.Deployment.Application.TrustNotGrantedException>wygeneruje. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>nie zostanie wyświetlony monit z pytaniem, czy użytkownik chce udzielić aplikacji uprawnienia do uruchamiania.  
  
   
  
## Examples  
 Poniższy przykład kodu określa, czy w czasie ładowania aplikacji jest dostępna nowa aktualizacja. Jeśli dostępna jest wymagana aktualizacja, jest ona instalowana asynchronicznie. Przykład wymaga wdrożenia aplikacji Windows Forms, która zawiera <xref:System.Windows.Forms.StatusStrip> kontrolkę i że ta kontrolka <xref:System.Windows.Forms.ToolStripStatusLabel> zawiera kontrolkę o nazwie `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">Komputer lokalny nie przyznał tej aplikacji poziomu uprawnień, który zażądał wykonania.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Wdrożenie jest uszkodzone. Aby uzyskać porady na temat diagnozowania i rozwiązywania problemów, zobacz [Rozwiązywanie problemów z wdrożeniami ClickOnce](https://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Nie można pobrać nowego wdrożenia z jego lokalizacji w sieci.</exception>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Wybieranie strategii aktualizacji ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a05b5f2f-d1f2-471a-8096-8b11f7554265">Wdrażanie i zabezpieczenia technologii ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje asynchroniczną aktualizację zainicjowaną przez <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>tylko anuluje aktualizację zainicjowaną przez wywołanie <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; nie anuluje aktualizacji rozpoczętej w ramach subskrypcji.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Wybieranie strategii aktualizacji ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] zakończeniu uaktualniania aplikacji w wyniku wywołania do <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> Zdarzenie jest wywoływane na głównym wątku aplikacji. Możesz wywołać kontrolki Windows Forms aplikacji bezpośrednio w ramach tego wywołania zwrotnego bez wyzwalania wyjątku.  
  
 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Sprawdź Właściwość <xref:System.ComponentModel.AsyncCompletedEventArgs> dostarczonego do tego wywołania zwrotnego. Jeśli ta właściwość ma `null`wartość, instalacja powiodła się. Jeśli tak nie `null`jest, instalacja nie powiedzie się, a więcej informacji o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> tej awarii instalacji można znaleźć za pomocą właściwości. Po pobraniu aktualizacji należy wywołać <xref:System.Windows.Forms.Application.Restart%2A> metodę programu <xref:System.Windows.Forms.Application> w celu użycia nowszej wersji aplikacji.  
  
 Jeśli instalacja aktualizacji została <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>anulowana przez wywołanie <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> , właściwość <xref:System.ComponentModel.AsyncCompletedEventArgs> klasy będzie `true`.  
  
 Aby można było użyć tego programu obsługi zdarzeń, aplikacja musi zaimportować <xref:System.Deployment.Application> zarówno <xref:System.ComponentModel> przestrzeń nazw, jak i.  
  
   
  
## Examples  
 Poniższy przykład kodu określa czas ładowania aplikacji, niezależnie od tego, czy jest dostępna nowa aktualizacja. Jeśli dostępna jest wymagana aktualizacja, jest ona instalowana asynchronicznie. Przykład wymaga wdrożenia aplikacji Windows Forms, która zawiera <xref:System.Windows.Forms.StatusStrip> kontrolkę i że ta kontrolka <xref:System.Windows.Forms.ToolStripStatusLabel> zawiera kontrolkę o nazwie `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pełną nazwę aplikacji po jej aktualizacji.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera pełną nazwę aplikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wersję aktualizacji, która została ostatnio pobrana.</summary>
        <value><see cref="T:System.Version" /> Opis wersji aktualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>różni się <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> od tego, czy została zainstalowana nowa aktualizacja, <xref:System.Windows.Forms.Application>ale nie została jeszcze <xref:System.Windows.Forms.Application.Restart%2A> wywołana w systemie. Jeśli manifest wdrożenia aplikacji jest skonfigurowany do wykonywania aktualizacji automatycznych, można porównać te dwie wartości, aby określić, czy należy ponownie uruchomić aplikację.  
  
 Jeśli aplikacja nie została zaktualizowana, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> zwraca tę samą wartość co. <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu definiuje metodę, która określa, czy [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja została zaktualizowana.  
  
 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Skojarzone Wyliczenie:<see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera witrynę sieci Web lub udział plików, z którego sama aktualizuje aplikację.</summary>
        <value>Ścieżka aktualizacji wyrażona jako adres URL HTTP, HTTPS lub pliku; lub jako ścieżka do pliku sieciowego systemu Windows (UNC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>program może różnić się od witryny sieci Web używanej do pobrania aplikacji początkowo, jeśli wdrożenie aplikacji jest skonfigurowane do korzystania z przekierowania aktualizacji.  
  
 Tę wartość można zmienić tylko w manifeście wdrożenia aplikacji.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pełny dostęp do komputera lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/7faacd35-2638-492d-80f6-6b57e5f820de">Instrukcje: Określanie alternatywnej lokalizacji aktualizacji wdrażania</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] gdy ma nowe informacje o stanie operacji aktualizacji zainicjowane przez <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> wywołanie metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> Zdarzenie jest wywoływane na głównym wątku aplikacji. Możesz wywołać kontrolki Windows Forms aplikacji bezpośrednio w ramach tego wywołania zwrotnego bez wyzwalania wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu określa czas ładowania aplikacji, niezależnie od tego, czy jest dostępna nowa aktualizacja. Jeśli dostępna jest wymagana aktualizacja, jest ona instalowana asynchronicznie.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
