<Type Name="IApplicationIdentifier" FullName="System.Runtime.Caching.Hosting.IApplicationIdentifier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="299338ca7d8df7e6c8a7cf44af128f4bdf30533e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36542170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationIdentifier" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IApplicationIdentifier" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationIdentifier" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationIdentifier" />
  <TypeSignature Language="F#" Value="type IApplicationIdentifier = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Określa identyfikator domeny aplikacji, które implementację buforu służy do interakcji z środowisku hosta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] środowisku hosta, takich jak ASP.NET, można użyć <xref:System.Runtime.Caching.Hosting.IApplicationIdentifier> interfejs do definiowania ciągów, które zidentyfikować domeny poszczególnych aplikacji. Implementuje środowiska hosta <xref:System.Runtime.Caching.Hosting.IApplicationIdentifier> interfejsu. Ten interfejs jest następnie udostępniana <xref:System.Runtime.Caching.ObjectCache> implementacje za pośrednictwem <xref:System.Runtime.Caching.ObjectCache.Host%2A> właściwości.  
  
 Implementacja pamięci podręcznej używa tego odwołania, aby uzyskać identyfikator domeny aplikacji. W programie ASP.NET implementacje pamięci podręcznej skonstruować identyfikatory liczników wydajności pamięci podręcznej za pomocą identyfikatora aplikacji. Zapewnia to nazwy wydajności wystąpień liczników, które można rozróżnić między domenami aplikacji uruchomionej wielu domen aplikacji.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetApplicationId">
      <MemberSignature Language="C#" Value="public string GetApplicationId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetApplicationId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationId () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetApplicationId();" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationId : unit -&gt; string" Usage="iApplicationIdentifier.GetApplicationId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera identyfikator domeny aplikacji.</summary>
        <returns>Unikatowy identyfikator bieżącej domeny aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId%2A> Metoda jest zwykle implementowany przez [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] środowisku hosta, aby można było utworzyć identyfikator aplikacji <xref:System.Runtime.Caching.ObjectCache> implementacji. A <xref:System.Runtime.Caching.ObjectCache> implementacja używa tych informacji do identyfikowania domeny aplikacji, które jest aktualnie uruchomione.  
  
 Na przykład w programie ASP.NET pamięci podręcznej używa identyfikatora aplikacji do skonstruowania identyfikatory liczników wydajności pamięci podręcznej. Wywołań pamięci podręcznej <xref:System.Runtime.Caching.Hosting.IApplicationIdentifier.GetApplicationId%2A> metodę, która jest zaimplementowana przez środowisko hosta i hosta zwraca identyfikator. Zapewnia to nazwy wydajności wystąpień liczników, które można rozróżnić między domenami aplikacji uruchomionej wielu domen aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>