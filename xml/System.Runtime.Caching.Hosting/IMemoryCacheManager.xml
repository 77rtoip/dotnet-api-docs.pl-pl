<Type Name="IMemoryCacheManager" FullName="System.Runtime.Caching.Hosting.IMemoryCacheManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="216337722b27c913ea8984f61ad9f489ddfa33e4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69275763" /></Metadata><TypeSignature Language="C#" Value="public interface IMemoryCacheManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemoryCacheManager" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IMemoryCacheManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemoryCacheManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemoryCacheManager" />
  <TypeSignature Language="F#" Value="type IMemoryCacheManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs, który jest wykorzystywany przez pamięć podręczną w celu przekazywania użycia pamięci podręcznej do środowiska hosta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs jest implementowany przez środowiska hosta, takie jak ASP.NET, i jest używany <xref:System.Runtime.Caching.ObjectCache> przez implementacje, które muszą współdziałać ze środowiskiem hosta, aby określić użycie pamięci. <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> Ponieważ pamięć podręczna często zużywa znaczną ilość pamięci, <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> interfejs ułatwia hostowanie środowisk zarządzania użyciem pamięci.  
  
 Zazwyczaj ten interfejs <xref:System.Runtime.Caching.ObjectCache> może być używany tylko w przypadku implementacji, które zarządzają obiektami pamięci podręcznej w pamięci.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReleaseCache">
      <MemberSignature Language="C#" Value="public void ReleaseCache (System.Runtime.Caching.MemoryCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseCache(class System.Runtime.Caching.MemoryCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(System.Runtime.Caching.MemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseCache (cache As MemoryCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseCache(System::Runtime::Caching::MemoryCache ^ cache);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseCache : System.Runtime.Caching.MemoryCache -&gt; unit" Usage="iMemoryCacheManager.ReleaseCache cache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Runtime.Caching.MemoryCache" />
      </Parameters>
      <Docs>
        <param name="cache">Odwołanie do pamięci podręcznej.</param>
        <summary>Usuwa wszystkie odwołania do pamięci podręcznej w środowisku hosta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli pamięć podręczna została wcześniej zarejestrowana w środowisku hosta, pamięć podręczna może wywoływać <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache%2A> metodę, aby zwolnić odwołanie. Gdy pamięć podręczna jest usuwana, powinna wywołać <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache%2A> metodę, aby upewnić się, że żadne odwołanie do pamięci podręcznej nie jest przechowywane na hoście.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCacheSize">
      <MemberSignature Language="C#" Value="public void UpdateCacheSize (long size, System.Runtime.Caching.MemoryCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCacheSize(int64 size, class System.Runtime.Caching.MemoryCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCacheSize (size As Long, cache As MemoryCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCacheSize(long size, System::Runtime::Caching::MemoryCache ^ cache);" />
      <MemberSignature Language="F#" Value="abstract member UpdateCacheSize : int64 * System.Runtime.Caching.MemoryCache -&gt; unit" Usage="iMemoryCacheManager.UpdateCacheSize (size, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="cache" Type="System.Runtime.Caching.MemoryCache" />
      </Parameters>
      <Docs>
        <param name="size">Rozmiar pamięci (w bajtach) zużywanej przez pamięć podręczną.</param>
        <param name="cache">Odwołanie do pamięci podręcznej.</param>
        <summary>Zgłasza rozmiar bieżącej pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dobrze działa implementacja pamięci podręcznej powinna używać metody <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize%2A> , aby okresowo raportować rozmiar pamięci podręcznej do środowiska hosta.  
  
 Implementacja pamięci podręcznej, która zgłasza rozmiar, również przekazuje odwołanie do samego siebie jako parametr. Umożliwia to środowisku hosta wykonywanie następujących zadań:  
  
-   Obsługa listy znanych pamięci podręcznych obiektów.  
  
-   Wywołaj pamięć podręczną i zażądaj, aby pamięć podręczna przycinania procent elementów pamięci podręcznej na podstawie zgłoszonego rozmiaru, jeśli jest to wymagane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
