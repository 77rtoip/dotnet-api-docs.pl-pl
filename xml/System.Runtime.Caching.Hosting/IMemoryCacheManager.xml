<Type Name="IMemoryCacheManager" FullName="System.Runtime.Caching.Hosting.IMemoryCacheManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f99638496338d9b269017fe2171b6dbbe3b1f43" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36542258" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMemoryCacheManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemoryCacheManager" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IMemoryCacheManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemoryCacheManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemoryCacheManager" />
  <TypeSignature Language="F#" Value="type IMemoryCacheManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs, który korzysta z pamięci podręcznej w celu komunikowania się użycie pamięci podręcznej w środowisku hosta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> Interfejs jest implementowany przez hosta środowisk, takich jak ASP.NET i jest używany przez <xref:System.Runtime.Caching.ObjectCache> implementacji, które muszą wchodzić w interakcje ze środowiskiem hosta w celu określenia użycia pamięci. Ponieważ pamięci podręcznych często zużywać znaczne ilości pamięci, <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> interfejsu pomaga środowisk hostów, zarządzać wykorzystaniem pamięci.  
  
 Zwykle tylko <xref:System.Runtime.Caching.ObjectCache> implementacje, zarządzanych obiektów w pamięci podręcznej w pamięci będzie używać tego interfejsu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReleaseCache">
      <MemberSignature Language="C#" Value="public void ReleaseCache (System.Runtime.Caching.MemoryCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseCache(class System.Runtime.Caching.MemoryCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(System.Runtime.Caching.MemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseCache (cache As MemoryCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseCache(System::Runtime::Caching::MemoryCache ^ cache);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseCache : System.Runtime.Caching.MemoryCache -&gt; unit" Usage="iMemoryCacheManager.ReleaseCache cache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Runtime.Caching.MemoryCache" />
      </Parameters>
      <Docs>
        <param name="cache">Odwołanie do pamięci podręcznej.</param>
        <summary>Usuwa wszystkie odwołania do pamięci podręcznej w środowisku hosta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli pamięć podręczna został wcześniej zarejestrowany za pomocą środowiska hosta, wywołując pamięci podręcznej <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache%2A> metodę, aby zwolnić odwołania. Gdy pamięć podręczna jest usuwany, powinny wywoływać <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache%2A> metody, aby upewnić się, że żadne odwołanie do pamięci podręcznej jest przechowywany na hoście.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCacheSize">
      <MemberSignature Language="C#" Value="public void UpdateCacheSize (long size, System.Runtime.Caching.MemoryCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCacheSize(int64 size, class System.Runtime.Caching.MemoryCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCacheSize (size As Long, cache As MemoryCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCacheSize(long size, System::Runtime::Caching::MemoryCache ^ cache);" />
      <MemberSignature Language="F#" Value="abstract member UpdateCacheSize : int64 * System.Runtime.Caching.MemoryCache -&gt; unit" Usage="iMemoryCacheManager.UpdateCacheSize (size, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="cache" Type="System.Runtime.Caching.MemoryCache" />
      </Parameters>
      <Docs>
        <param name="size">Rozmiar pamięci w bajtach, które korzysta z pamięci podręcznej.</param>
        <param name="cache">Odwołanie do pamięci podręcznej.</param>
        <summary>Raporty rozmiar bieżącej pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy użyć implementacji dobrze behaved pamięci podręcznej <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize%2A> metodę, aby okresowo zgłosić rozmiar pamięci podręcznej zużycie pamięci w środowisku hosta.  
  
 Implementacja pamięci podręcznej, który zgłasza rozmiar przekazuje również odwołanie do samego siebie jako parametr. Dzięki temu środowisko hosta do wykonywania następujących zadań:  
  
-   Obsługa listy znanych obiektu w pamięci podręcznej.  
  
-   Wywołaj pamięci podręcznej i żądania pamięci podręcznej trim procent elementów pamięci podręcznej na podstawie rozmiaru zgłaszane, gdy jest to wymagane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>