<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed4880356988efaf09008f32429e0c2fe5015f48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30563806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje sposób ujawniać niestandardowego <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> obiektu implementacji pamięci podręcznej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W programie ASP.NET <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu zapewnia dostęp do zarządzania powiadomień wewnętrznych zmianę pliku.  
  
 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Interfejsu jest używana wewnętrznie przez <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy.  
  
 Po uruchomieniu implementację buforu w domenie aplikacji ASP.NET, ASP.NET implementuje <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu za pomocą <xref:System.Runtime.Caching.ObjectCache.Host%2A> właściwości. <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasy wykrywa tej właściwości i używa systemu powiadomień platformy ASP.NET zmianę pliku, aby wykluczyć wpisy w pamięci podręcznej oparte na powiadomienia o zmianie pliku.  
  
 W aplikacji ASP.NET nie, nie ma żadnych środowisko hosta niestandardowego <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu. W związku z tym <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy używa <xref:System.IO.FileSystemWatcher> klasy CLR.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset&amp;" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">Pełna ścieżka fizyczna katalogu lub pliku do monitorowania zmian.</param>
        <param name="onChangedCallback">Odwołanie do metody, która implementuje <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegowanie. Monitorowane pliku lub katalogu zmiany, wdrożenia w środowisku hosta <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> interfejsu zgłasza zdarzenie, wywołując <see cref="T:System.Runtime.Caching.OnChangedCallback" /> klasy.</param>
        <param name="state">Stan, która jest dostarczana przez środowisko hosta. Implementacje pamięci podręcznej i monitory niestandardowe zmiany powinny traktować jako nieprzezroczyste wartość stanu. Jednak musi być przechowywany stan, aby mógł zostać wysłany do środowiska hosta podczas wywołania implementację buforu <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" /> metody.</param>
        <param name="lastWriteTime">Po powrocie z tej metody zawiera ostatnich Data i godzina wystąpienia operacji zapisu na <c>filePath</c>. Ten parametr jest przekazywany niezainicjowany. Ten parametr jest zwracana w środowisku hosta.</param>
        <param name="fileSize">Po powrocie z tej metody zawiera łączny rozmiar monitorowanych <c>filePath</c>. Ten parametr jest przekazywany niezainicjowany. Ten parametr jest zwracana w środowisku hosta.</param>
        <summary>Rejestruje ścieżkę pliku do monitorowania środowiska hosta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana przez obiekty niestandardowe pamięci podręcznej i niestandardowe zmienić monitory, które implementują środowisku hosta <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejs do zarejestrowania ścieżki plików do monitorowania za pomocą środowiska hosta. <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> Metoda jest wywoływana przez implementacje z <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejs do zarejestrowania plik lub katalog do monitorowania zmian.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">Ścieżka pliku lub folderu, aby zatrzymać monitorowanie. Powinna odpowiadać wartości ścieżki pliku, który został przekazany w wywołaniu wcześniejszych <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> metody.</param>
        <param name="state">Informacje o stanie, który pierwotnie został dostarczony przez środowisko hosta podczas wywołania wcześniejszych <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> metody.</param>
        <summary>Kończy się zmienić monitorowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> Metoda musi zostać wywołana przez niestandardowe pamięci podręcznych i niestandardowe zmienić monitory, które są zostanie usunięty przez środowisko hosta, aby zatrzymać monitorowanie ścieżki do plików i katalogów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>