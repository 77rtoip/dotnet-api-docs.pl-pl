<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="11a02d4fad4f8938df4cd402b81a6e257d7f1bac" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52207569" /></Metadata><TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <TypeSignature Language="F#" Value="type IFileChangeNotificationSystem = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a2e4f-101">Definiuje sposób, aby udostępnić niestandardowy <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> obiektu do implementacji pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-101">Defines a way to expose a custom <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> object to a cache implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e4f-102">W programie ASP.NET: <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejs zapewnia dostęp do zarządzania powiadomień wewnętrznych zmian plików.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-102">In ASP.NET, the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface provides access to internal file-change notification management.</span></span>  
  
 <span data-ttu-id="a2e4f-103"><xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Interfejsu jest używana wewnętrznie przez <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-103">The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface is used internally by the <xref:System.Runtime.Caching.HostFileChangeMonitor> class.</span></span>  
  
 <span data-ttu-id="a2e4f-104">Po uruchomieniu wdrożenia pamięci podręcznej w domenie aplikacji ASP.NET, ASP.NET implementuje <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu za pośrednictwem <xref:System.Runtime.Caching.ObjectCache.Host%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-104">When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property.</span></span> <span data-ttu-id="a2e4f-105"><xref:System.Runtime.Caching.HostFileChangeMonitor> Klasy wykrywa tę właściwość i używa systemu powiadomień platformy ASP.NET zmian plików do wykluczenia z wpisy pamięci podręcznej, w oparciu o powiadomienia o zmianie pliku.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-105">The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.</span></span>  
  
 <span data-ttu-id="a2e4f-106">W aplikacjach niedotyczący środowiska ASP.NET jest brak środowiska hosta, który implementuje niestandardową <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-106">In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface.</span></span> <span data-ttu-id="a2e4f-107">W rezultacie <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy używa <xref:System.IO.FileSystemWatcher> klasy środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-107">As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoring : string * System.Runtime.Caching.OnChangedCallback *  *  *  -&gt; unit" Usage="iFileChangeNotificationSystem.StartMonitoring (filePath, onChangedCallback, state, lastWriteTime, fileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="a2e4f-108">W pełni kwalifikowaną ścieżkę fizyczną katalogu lub pliku do monitorowania zmian.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-108">The fully qualified physical path of a directory or file to monitor for changes.</span></span></param>
        <param name="onChangedCallback"><span data-ttu-id="a2e4f-109">Odwołanie do metody, która implementuje <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegować.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-109">A reference to a method that implements the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate.</span></span> <span data-ttu-id="a2e4f-110">Monitorowane pliku lub katalogu zmiany, implementacji środowiska hosta <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> interfejsu zgłasza zdarzenie, wywołując <see cref="T:System.Runtime.Caching.OnChangedCallback" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-110">When the monitored file or directory changes, the host environment's implementation of the <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> interface raises an event by calling the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> class.</span></span></param>
        <param name="state"><span data-ttu-id="a2e4f-111">Stan, który jest dostarczany przez środowisko hosta.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-111">The state that is supplied by the host environment.</span></span> <span data-ttu-id="a2e4f-112">Implementacjach pamięci podręcznej i monitory niestandardowe zmiany powinien traktować jako nieprzezroczysty wartość stanu.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-112">Cache implementations and custom change monitors should treat the state value as opaque.</span></span> <span data-ttu-id="a2e4f-113">Jednak stanu muszą być przechowywane, aby mógł zostać wysłany do środowiska hosta podczas wywołania implementacji pamięci podręcznej <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-113">However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" /> method.</span></span></param>
        <param name="lastWriteTime"><span data-ttu-id="a2e4f-114">Po powrocie z tej metody zawiera ostatni daty i godziny, wystąpienia operacji zapisu na <paramref name="filePath" />.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-114">When this method returns, contains the last date and time that a write operation occurred on <paramref name="filePath" />.</span></span> <span data-ttu-id="a2e4f-115">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-115">This parameter is passed uninitialized.</span></span> <span data-ttu-id="a2e4f-116">Ten parametr jest zwracany w środowisku hosta.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-116">This parameter is returned from the host environment.</span></span></param>
        <param name="fileSize"><span data-ttu-id="a2e4f-117">Po powrocie z tej metody zawiera łączny rozmiar monitorowanych <paramref name="filePath" />.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-117">When this method returns, contains the total size of the monitored <paramref name="filePath" />.</span></span> <span data-ttu-id="a2e4f-118">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-118">This parameter is passed uninitialized.</span></span> <span data-ttu-id="a2e4f-119">Ten parametr jest zwracany w środowisku hosta.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-119">This parameter is returned from the host environment.</span></span></param>
        <summary><span data-ttu-id="a2e4f-120">Rejestruje ścieżkę pliku do monitorowania za pomocą środowiska hosta.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-120">Registers a file path to monitor with the host environment.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e4f-121">Ta metoda jest używana przez niestandardowe buforowania obiektów i niestandardowe Zmień monitory, które implementują środowisko hosta <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu do zarejestrowania ścieżki pliku do monitorowania za pomocą środowiska hosta.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-121">This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment.</span></span> <span data-ttu-id="a2e4f-122"><xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> Metoda jest wywoływana przez implementacje z <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu, aby zarejestrować plik lub katalog do monitorowania zmian.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-122">The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoring : string * obj -&gt; unit" Usage="iFileChangeNotificationSystem.StopMonitoring (filePath, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="a2e4f-123">Ścieżka pliku lub folderu, aby zatrzymać monitorowanie.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-123">The path of the file or folder to stop monitoring.</span></span> <span data-ttu-id="a2e4f-124">Powinien on odpowiadać wartości ścieżki pliku, który został przekazany w podczas wcześniejszego wywołania <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-124">This should match a file path value that was passed in an earlier call to the <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> method.</span></span></param>
        <param name="state"><span data-ttu-id="a2e4f-125">Informacje o stanie, który pierwotnie został dostarczony przez środowisko hosta podczas wcześniejszego wywołania funkcji <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-125">The state information that was originally supplied by the host environment during an earlier call to the <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> method.</span></span></param>
        <summary><span data-ttu-id="a2e4f-126">Kończy się zmienić, monitorowania.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-126">Ends change monitoring.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e4f-127"><xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> Metoda musi zostać wywołana przez niestandardowe pamięci podręczne i niestandardowe Zmień monitory, które są zostanie usunięty przez środowisko hosta, aby zatrzymać monitorowanie ścieżki do plików i katalogów.</span><span class="sxs-lookup"><span data-stu-id="a2e4f-127">The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>