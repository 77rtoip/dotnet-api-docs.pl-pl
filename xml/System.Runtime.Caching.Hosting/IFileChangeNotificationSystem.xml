<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e793f351d819453b08ec74d61f2f15c3113a2b5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69066834" /></Metadata><TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <TypeSignature Language="F#" Value="type IFileChangeNotificationSystem = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje sposób uwidocznienia obiektu niestandardowego <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> w implementacji pamięci podręcznej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W programie ASP.NET <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejs zapewnia dostęp do wewnętrznego zarządzania powiadomieniami o zmianach plików.  
  
 Interfejs jest używany wewnętrznie <xref:System.Runtime.Caching.HostFileChangeMonitor> przez klasę. <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>  
  
 Gdy implementacja pamięci podręcznej jest uruchomiona w domenie aplikacji ASP.NET, ASP.NET <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> implementuje interfejs <xref:System.Runtime.Caching.ObjectCache.Host%2A> za pomocą właściwości. <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasa wykrywa tę właściwość i używa systemu powiadomienia o zmianie pliku ASP.NET do wykluczenia wpisów pamięci podręcznej na podstawie powiadomienia o zmianie pliku.  
  
 W aplikacjach non-ASP.NET nie ma środowiska hosta, które implementuje interfejs niestandardowy <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> . W związku <xref:System.Runtime.Caching.HostFileChangeMonitor> z tym Klasa <xref:System.IO.FileSystemWatcher> używa klasy środowiska CLR.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoring : string * System.Runtime.Caching.OnChangedCallback *  *  *  -&gt; unit" Usage="iFileChangeNotificationSystem.StartMonitoring (filePath, onChangedCallback, state, lastWriteTime, fileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">W pełni kwalifikowana ścieżka fizyczna katalogu lub pliku do monitorowania zmian.</param>
        <param name="onChangedCallback">Odwołanie do metody implementującej <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegata. Po zmianie monitorowanego pliku lub katalogu implementacja <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> środowiska hosta wywołuje zdarzenie, <see cref="T:System.Runtime.Caching.OnChangedCallback" /> wywołując klasę.</param>
        <param name="state">Stan dostarczany przez środowisko hosta. Implementacje pamięci podręcznej i niestandardowe monitory zmian powinny traktować wartość stanu jako nieprzezroczystą. Jednak stan musi być przechowywany, aby można go było wysłać do środowiska hosta, gdy implementacja pamięci podręcznej wywoła <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" /> metodę.</param>
        <param name="lastWriteTime">Gdy ta metoda zwraca, zawiera ostatnią datę i godzinę wystąpienia <paramref name="filePath" />operacji zapisu. Ten parametr jest przekazywany niezainicjowany. Ten parametr jest zwracany ze środowiska hosta.</param>
        <param name="fileSize">Gdy ta metoda zwraca, zawiera łączny rozmiar monitorowanych <paramref name="filePath" />elementów. Ten parametr jest przekazywany niezainicjowany. Ten parametr jest zwracany ze środowiska hosta.</param>
        <summary>Rejestruje ścieżkę pliku do monitorowania za pomocą środowiska hosta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana przez niestandardowe obiekty pamięci podręcznej i niestandardowe monitory zmian implementujące <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejs środowiska hosta w celu zarejestrowania ścieżek plików do monitorowania za pomocą środowiska hosta. Metoda jest wywoływana przez implementacje <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfejsu w celu zarejestrowania pliku lub katalogu na potrzeby monitorowania zmian. <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoring : string * obj -&gt; unit" Usage="iFileChangeNotificationSystem.StopMonitoring (filePath, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">Ścieżka pliku lub folderu, aby zatrzymać monitorowanie. Powinna być zgodna z wartością ścieżki pliku, która została przeniesiona we wcześniejszej wywołaniu <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> metody.</param>
        <param name="state">Informacje o stanie, które początkowo zostały dostarczone przez środowisko hosta podczas wcześniejszego wywołania <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> metody.</param>
        <summary>Zamyka monitorowanie zmian.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> Metoda musi być wywoływana przez niestandardowe pamięci podręczne i niestandardowe monitory zmian, które są usuwane przez środowisko hosta, aby zatrzymać monitorowanie ścieżek plików i katalogów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
