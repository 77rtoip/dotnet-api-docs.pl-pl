<Type Name="ActiveDirectorySchedule" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dede33db1e64dab839543d70f8d59cd4b6fe890" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30449178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectorySchedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchedule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySchedule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySchedule" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> Klasa reprezentuje harmonogramu tygodniowego dla replikacji usług domenowych w usłudze Active Directory.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schedule As ActiveDirectorySchedule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule(System::DirectoryServices::ActiveDirectory::ActiveDirectorySchedule ^ schedule);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schedule" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </Parameters>
      <Docs>
        <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> obiekt, który jest kopiowany do tego obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> przy użyciu określonego <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schedule" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RawSchedule">
      <MemberSignature Language="C#" Value="public bool[,,] RawSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[,,] RawSchedule" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property RawSchedule As Boolean(,,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;bool, 3&gt; ^ RawSchedule { cli::array &lt;bool, 3&gt; ^ get(); void set(cli::array &lt;bool, 3&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[,,]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jest tablicą trójwymiarową, która wskazuje porę w tygodniu, czy źródło jest dostępne dla replikacji.</summary>
        <value>Jest tablicą trójwymiarową z <see cref="T:System.Boolean" /> elementów, w których jest element <see langword="true" /> Jeśli źródło jest dostępne dla replikacji tego określonego interwału 15 minut. Element jest <see langword="false" /> Jeśli źródło nie jest dostępna do replikacji.  
  
 Tablica jest w formie RawSchedule [&lt;dzień tygodnia&gt;, &lt;godzina&gt;, &lt;15-minutowych interwałach&gt;]. Wszystkie te wartości są liczony od zera i tydzień zaczyna się od 00:00 w niedzielę rano, uniwersalny czas koordynowany.  
  
 Poniżej przedstawiono prawidłowe wartości dzień tygodnia.  
  
 <list type="table"><listheader><term> Wartość dnia tygodnia  
  
 </term><description> Wskazany dzień tygodnia.  
  
 </description></listheader><item><term> 0  
  
 </term><description> Niedziela  
  
 </description></item><item><term> 1  
  
 </term><description> Poniedziałek  
  
 </description></item><item><term> 2  
  
 </term><description> Wtorek  
  
 </description></item><item><term> 3  
  
 </term><description> Środa  
  
 </description></item><item><term> 4  
  
 </term><description> Czwartek  
  
 </description></item><item><term> 5  
  
 </term><description> Piątek  
  
 </description></item><item><term> 6  
  
 </term><description> Sobota  
  
 </description></item></list>  
  
 Godzina jest liczony od zera i określony w formacie 24-godzinnym. Na przykład 2: 00 Czy można określić jako 14. Prawidłowe wartości to 0 – 23.  
  
 15-minutowych interwałach określa blok 15 minut, w ciągu godziny, która źródło jest dostępne dla replikacji. W poniższej tabeli przedstawiono możliwe wartości dla 15-minutowych interwałach.  
  
 <list type="table"><listheader><term> 15-minutowych interwałach  
  
 </term><description> Opis elementu  
  
 </description></listheader><item><term> 0  
  
 </term><description> Źródło jest dostępne dla replikacji z zakresu od 0 do 14 minut po pełnej godzinie.  
  
 </description></item><item><term> 1  
  
 </term><description> Źródło jest dostępne dla replikacji od 15 do 29 minut po pełnej godzinie.  
  
 </description></item><item><term> 2  
  
 </term><description> Źródło jest dostępne dla replikacji od 30 do 44 minut po pełnej godzinie.  
  
 </description></item><item><term> 3  
  
 </term><description> Źródło jest dostępne dla replikacji od 45 do 59 minut po pełnej godzinie.  
  
 </description></item></list>  
  
 W poniższym przykładzie C# pokazano, jak ta właściwość służy do określenia, czy źródło jest dostępne do replikacji w 15:50 uniwersalny czas koordynowany wtorek.  
  
```csharp  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];  
```  
  
 W poniższym przykładzie C# pokazuje, jak do tej właściwości należy użyć do obliczenia 15-minutowych interwałach w czasie wykonywania przez podzielenie przez 15 minut.  
  
```csharp  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  
```</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSchedule">
      <MemberSignature Language="C#" Value="public void ResetSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSchedule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSchedule ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSchedule();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje całego harmonogramu niedostępny.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDailySchedule">
      <MemberSignature Language="C#" Value="public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDailySchedule(valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDailySchedule (fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDailySchedule(System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="fromHour">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> elementów członkowskich, które określa pierwszą godzinę, która źródło będzie dostępna do replikacji.</param>
        <param name="fromMinute">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> elementów członkowskich, które określa pierwszy interwał 15 minut, że źródło będą dostępne dla replikacji.</param>
        <param name="toHour">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> elementów członkowskich, które określa godzinę końcowego, która źródło będzie dostępna do replikacji.</param>
        <param name="toMinute">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> elementów członkowskich, które określa interwał 15 minut końcowego, że źródło będą dostępne dla replikacji.</param>
        <summary>Dodaje zakres czasu dla każdego dnia tygodnia w harmonogramie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączą się wszystkich parametrów w ramach tej metody.  
  
 Ta metoda jest i nie powoduje usunięcia żadnych istniejących informacji harmonogramu. Jeśli istniejący harmonogram i nowego harmonogramu nakładają się, wynik nadal będzie zbiorczą. Aby usunąć harmonogram, należy użyć <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSchedule">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje zakres godzin w harmonogramie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek day, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (day As DayOfWeek, fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(DayOfWeek day, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="day" Type="System.DayOfWeek" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="day">Jeden z <see cref="T:System.DayOfWeek" /> elementów członkowskich, które określa dzień tygodnia, w których źródłowy będzie dostępna do replikacji.</param>
        <param name="fromHour">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> elementów członkowskich, które określa pierwszą godzinę, która źródło będzie dostępna do replikacji.</param>
        <param name="fromMinute">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> elementów członkowskich, które określa pierwszy interwał 15 minut, że źródło będą dostępne dla replikacji.</param>
        <param name="toHour">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> elementów członkowskich, które określa godzinę końcowego, która źródło będzie dostępna do replikacji.</param>
        <param name="toMinute">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> elementów członkowskich, które określa interwał 15 minut końcowego, że źródło będą dostępne dla replikacji.</param>
        <summary>Dodaje zakres czasu dla jednego dnia z harmonogramem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączą się wszystkich parametrów w ramach tej metody.  
  
 Ta metoda jest i nie powoduje usunięcia żadnych istniejących informacji harmonogramu. Jeśli istniejący harmonogram i nowego harmonogramu nakładają się, wynik nadal będzie zbiorczą. Aby usunąć harmonogram, należy użyć <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Godzina rozpoczęcia jest późniejsza niż godzina zakończenia.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Jeden lub więcej parametrów jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="days" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek[] days, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (days As DayOfWeek(), fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(cli::array &lt;DayOfWeek&gt; ^ days, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.DayOfWeek[]" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="days">Jeden z <see cref="T:System.DayOfWeek" /> elementów członkowskich, które określa dzień tygodnia, w których źródłowy będzie dostępna do replikacji.</param>
        <param name="fromHour">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> elementów członkowskich, które określa pierwszą godzinę, która źródło będzie dostępna do replikacji.</param>
        <param name="fromMinute">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> elementów członkowskich, które określa pierwszy interwał 15 minut, że źródło będą dostępne dla replikacji.</param>
        <param name="toHour">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> elementów członkowskich, które określa godzinę końcowego, która źródło będzie dostępna do replikacji.</param>
        <param name="toMinute">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> elementów członkowskich, które określa interwał 15 minut końcowego, że źródło będą dostępne dla replikacji.</param>
        <summary>Dodaje zakres czasu dla wielu dni z harmonogramem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łączą się wszystkich parametrów w ramach tej metody.  
  
 Ta metoda jest i nie powoduje usunięcia żadnych istniejących informacji harmonogramu. Jeśli istniejący harmonogram i nowego harmonogramu nakładają się, wynik nadal będzie zbiorczą. Aby usunąć harmonogram, należy użyć <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Godzina rozpoczęcia jest późniejsza niż godzina zakończenia.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Jeden lub więcej parametrów jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="days" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
  </Members>
</Type>