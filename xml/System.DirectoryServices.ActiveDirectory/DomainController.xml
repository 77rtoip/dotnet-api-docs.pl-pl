<Type Name="DomainController" FullName="System.DirectoryServices.ActiveDirectory.DomainController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27849b7abd52d9496b3739b0bbed4ab28c2df15d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30449475" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DomainController : System.DirectoryServices.ActiveDirectory.DirectoryServer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DomainController extends System.DirectoryServices.ActiveDirectory.DirectoryServer" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.DomainController" />
  <TypeSignature Language="VB.NET" Value="Public Class DomainController&#xA;Inherits DirectoryServer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DomainController : System::DirectoryServices::ActiveDirectory::DirectoryServer" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.DirectoryServer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> Klasa reprezentuje kontrolera domeny w domenie usługi Active Directory.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DomainController();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckReplicationConsistency">
      <MemberSignature Language="C#" Value="public override void CheckReplicationConsistency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CheckReplicationConsistency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CheckReplicationConsistency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CheckReplicationConsistency();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Używa narzędzia sprawdzania spójności (KCC) w celu weryfikacji topologii replikacji dla tego kontrolera domeny.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public DateTime CurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CurrentTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżącą datę i godzinę, z tego kontrolera domeny.</summary>
        <value>A <see cref="T:System.DateTime" /> obiekt zawierający bieżącą datę i godzinę z tego kontrolera domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Określa, czy można zwolnić zasoby zarządzane. <see langword="true" /> Jeśli zasoby zarządzane są wydawane; w przeciwnym razie <see langword="false" />.</param>
        <summary>Powoduje, że obiekt, aby zwolnić wszystkie zasoby zarządzane lub niezarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `disposing` Parametr dotyczy tylko wersji zarządzanych zasobów. Zasoby niezarządzane zawsze są wydawane przez tę metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain Domain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain Domain" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Domain As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ Domain { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ten kontroler domeny jest członkiem domeny.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> obiekt, który reprezentuje ten kontroler domeny jest członkiem domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="EnableGlobalCatalog">
      <MemberSignature Language="C#" Value="public virtual System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableGlobalCatalog () As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ EnableGlobalCatalog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamienia ten kontroler domeny z serwerem wykazu globalnego.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> obiekt, który reprezentuje serwera wykazu globalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog%2A?displayProperty=nameWithType> Metoda jest używana do obniżenia poziomu kontrolera domeny z serwerem wykazu globalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DomainController ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastępuje <see cref="M:System.Object.Finalize" /> metody.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Umożliwia znalezienie zestaw kontrolerów domeny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll (context As DirectoryContext) As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAll(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia na potrzeby wyszukiwania. Element docelowy <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiektu jest nazwą domeny, która ma zostać wyszukany kontrolerów domeny.</param>
        <summary>Znajduje wszystkie kontrolery domeny w określonym kontekście.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> obiekt, który zawiera kontrolery domeny znalezione przez wyszukiwanie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> nie jest prawidłowy.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll (context As DirectoryContext, siteName As String) As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAll(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context, System::String ^ siteName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia na potrzeby wyszukiwania.</param>
        <param name="siteName">Nazwa witryny, aby wyszukać kontrolerów domeny.</param>
        <summary>Znajduje wszystkie kontrolery domeny w określonym kontekście i lokacji.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> obiekt, który zawiera kontrolery domeny, które zostały znalezione przez wyszukiwanie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> lub <paramref name="siteName" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindOne">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyszukuje pojedynczy kontroler domeny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindOne (context As DirectoryContext) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainController ^ FindOne(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia na potrzeby wyszukiwania.</param>
        <summary>Wyszukuje pojedynczy kontroler domeny w określonym kontekście.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> obiekt, który reprezentuje kontroler domeny, który został znaleziony podczas wyszukiwania.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Kontroler domeny został znaleziony.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindOne (context As DirectoryContext, flag As LocatorOptions) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainController ^ FindOne(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia na potrzeby wyszukiwania.</param>
        <param name="flag">Kombinacja co najmniej jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> elementów członkowskich, które definiuje typ kontrolera domeny można znaleźć.</param>
        <summary>Wyszukuje pojedynczy kontroler domeny w określonym kontekście, co pozwala na dodatkowe opcje wyszukiwania.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> obiekt, który reprezentuje kontroler domeny, który został znaleziony podczas wyszukiwania.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Kontroler domeny został znaleziony.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> lub <paramref name="flag" /> jest nieprawidłowa.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindOne (context As DirectoryContext, siteName As String) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainController ^ FindOne(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context, System::String ^ siteName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia na potrzeby wyszukiwania.</param>
        <param name="siteName">Nazwa witryny, aby wyszukać kontrolera domeny.</param>
        <summary>Wyszukuje pojedynczy kontroler domeny w określonym kontekście i lokacji.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> obiekt, który reprezentuje kontroler domeny, który został znaleziony podczas wyszukiwania.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Kontroler domeny został znaleziony.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> lub <paramref name="siteName" /> jest nieprawidłowa.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> lub <paramref name="siteName" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindOne (context As DirectoryContext, siteName As String, flag As LocatorOptions) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainController ^ FindOne(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context, System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia na potrzeby wyszukiwania.</param>
        <param name="siteName">Nazwa witryny, aby wyszukać kontrolera domeny.</param>
        <param name="flag">Kombinacja co najmniej jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> elementów członkowskich, które definiuje typ kontrolera domeny można znaleźć.</param>
        <summary>Umożliwia znalezienie jednego kontrolera domeny w określonym kontekście i lokacji, co pozwala na dodatkowe opcje wyszukiwania.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> obiekt, który reprezentuje kontroler domeny, który został znaleziony podczas wyszukiwania.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Kontroler domeny został znaleziony.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" />, <paramref name="siteName" />, lub <paramref name="flag" /> jest nieprawidłowa.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> lub <paramref name="siteName" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="Forest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Forest Forest" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Forest As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Forest ^ Forest { System::DirectoryServices::ActiveDirectory::Forest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lasu, który kontroler domeny jest członkiem.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiekt, który reprezentuje lasu, który kontroler domeny jest członkiem.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
      </Docs>
    </Member>
    <Member MemberName="GetAllReplicationNeighbors">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllReplicationNeighbors () As ReplicationNeighborCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::ActiveDirectory::ReplicationNeighborCollection ^ GetAllReplicationNeighbors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera sąsiadów replikacji dla tego kontrolera domeny.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> obiekt, który zawiera sąsiadów replikacji dla tego kontrolera domeny.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectorySearcher">
      <MemberSignature Language="C#" Value="public virtual System.DirectoryServices.DirectorySearcher GetDirectorySearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.DirectoryServices.DirectorySearcher GetDirectorySearcher() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectorySearcher () As DirectorySearcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::DirectoryServices::DirectorySearcher ^ GetDirectorySearcher();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySearcher</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera <see cref="T:System.DirectoryServices.DirectorySearcher" /> obiektu kontrolera domeny.</summary>
        <returns>A <see cref="T:System.DirectoryServices.DirectorySearcher" /> obiektu kontrolera domeny.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDomainController">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController GetDomainController (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController GetDomainController(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomainController (context As DirectoryContext) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::DomainController ^ GetDomainController(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia, aby pobrać obiekt. Element docelowy tego kontekstu musi być kontrolerem domeny.</param>
        <summary>Pobiera <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> obiektu dla określonego kontekstu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> obiekt, który reprezentuje kontroler domeny, który został znaleziony.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Połączenie do wartości określonej w <paramref name="context" /> nie było możliwe.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> nie jest prawidłowy.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetReplicationConnectionFailures">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReplicationConnectionFailures () As ReplicationFailureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::ActiveDirectory::ReplicationFailureCollection ^ GetReplicationConnectionFailures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę błędów połączenia replikacji zarejestrowanych przez ten kontroler domeny.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> obiekt, który zawiera błędy połączeń replikacji, które zostały zarejestrowane przez ten kontroler domeny.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetReplicationCursors">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors(string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReplicationCursors (partition As String) As ReplicationCursorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::ActiveDirectory::ReplicationCursorCollection ^ GetReplicationCursors(System::String ^ partition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Nazwa wyróżniająca partycji, dla których mają zostać pobrane informacje o replikacji kursora.</param>
        <summary>Pobiera informacje o replikacji kursora dla określonej partycji.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> zawierający informacje o replikacji kursora.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> jest pustym ciągiem.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetReplicationMetadata">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata(string objectPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReplicationMetadata (objectPath As String) As ActiveDirectoryReplicationMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::ActiveDirectory::ActiveDirectoryReplicationMetadata ^ GetReplicationMetadata(System::String ^ objectPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectPath">Ścieżka do obiektu, który można pobrać metadanych replikacji.</param>
        <summary>Pobiera metadane replikacji dla konkretnego obiektu usług domenowych w usłudze Active Directory.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" /> obiekt, który zawiera metadanych replikacji dla określonego obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="objectPath" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="objectPath" /> nie jest prawidłowy.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      </Docs>
    </Member>
    <Member MemberName="GetReplicationNeighbors">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors(string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReplicationNeighbors (partition As String) As ReplicationNeighborCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::ActiveDirectory::ReplicationNeighborCollection ^ GetReplicationNeighbors(System::String ^ partition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Nazwa wyróżniająca partycji, dla których mają zostać pobrane sąsiadów replikacji.</param>
        <summary>Pobiera sąsiadów replikacji dla określonej partycji.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> obiekt, który zawiera sąsiadów replikacji dla tego obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> nie jest prawidłowy.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetReplicationOperationInformation">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReplicationOperationInformation () As ReplicationOperationInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::ActiveDirectory::ReplicationOperationInformation ^ GetReplicationOperationInformation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera bieżący i oczekujących operacji replikacji dla tego kontrolera domeny.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> obiekt, który zawiera bieżącą i oczekujących operacji replikacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      </Docs>
    </Member>
    <Member MemberName="HighestCommittedUsn">
      <MemberSignature Language="C#" Value="public long HighestCommittedUsn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HighestCommittedUsn" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HighestCommittedUsn As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long HighestCommittedUsn { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera największy numer sekwencji aktualizacji, który został przekazany do tego kontrolera domeny.</summary>
        <value>Najwyższego numeru sekwencji aktualizacji (USN), który został przekazany do tego kontrolera domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="InboundConnections">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InboundConnections As ReplicationConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::DirectoryServices::ActiveDirectory::ReplicationConnectionCollection ^ InboundConnections { System::DirectoryServices::ActiveDirectory::ReplicationConnectionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera połączenia replikacji przychodzącej dla tego kontrolera domeny.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> obiekt, który zawiera połączenia replikacji przychodzącej dla tego kontrolera domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      </Docs>
    </Member>
    <Member MemberName="IPAddress">
      <MemberSignature Language="C#" Value="public override string IPAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IPAddress" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IPAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ IPAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres IP tego kontrolera domeny.</summary>
        <value>(IP) adres tego kontrolera domeny w postaci ciągu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalCatalog">
      <MemberSignature Language="C#" Value="public virtual bool IsGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsGlobalCatalog () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsGlobalCatalog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy ten kontroler domeny jest serwerem wykazu globalnego.</summary>
        <returns>
          <see langword="true" /> Jeśli ten kontroler domeny jest serwerem wykazu globalnego lub <see langword="false" /> inaczej.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wersję systemu operacyjnego tego kontrolera domeny.</summary>
        <value>Wersja systemu operacyjnego, który jest używany na tym kontrolerze domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="OutboundConnections">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutboundConnections As ReplicationConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::DirectoryServices::ActiveDirectory::ReplicationConnectionCollection ^ OutboundConnections { System::DirectoryServices::ActiveDirectory::ReplicationConnectionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wychodzących połączeń replikacji dla tego kontrolera domeny.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> obiekt, który zawiera wychodzących połączeń replikacji dla tego kontrolera domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Roles As ActiveDirectoryRoleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ActiveDirectoryRoleCollection ^ Roles { System::DirectoryServices::ActiveDirectory::ActiveDirectoryRoleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera role, które ten kontroler domeny.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" /> obiekt, który zawiera kolekcję <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> elementów członkowskich, które wskazują role, które ten kontroler domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
      </Docs>
    </Member>
    <Member MemberName="SeizeRoleOwnership">
      <MemberSignature Language="C#" Value="public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeizeRoleOwnership(valuetype System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeizeRoleOwnership (role As ActiveDirectoryRole)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeizeRoleOwnership(System::DirectoryServices::ActiveDirectory::ActiveDirectoryRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
      </Parameters>
      <Docs>
        <param name="role">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> elementów członkowskich, które określa roli kontrolera domeny powinna przejąć prawo własności.</param>
        <summary>Powoduje, że ten kontroler domeny przejąć na własność określonej roli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją destrukcyjnego, ponieważ powoduje ona rolę do wykonania bez współpracy pełniący rolę serwera. <xref:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership%2A?displayProperty=nameWithType> Metoda powinna być używana zamiast tego, jeśli to możliwe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="role" /> nie jest prawidłowy.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public override string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SiteName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę lokacji, której należy ten kontroler domeny.</summary>
        <value>Nazwa witryny, której należy ten kontroler domeny.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Nie znaleziono nazwy lokacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncFromAllServersCallback">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SyncFromAllServersCallback As SyncUpdateCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::DirectoryServices::ActiveDirectory::SyncUpdateCallback ^ SyncFromAllServersCallback { System::DirectoryServices::ActiveDirectory::SyncUpdateCallback ^ get(); void set(System::DirectoryServices::ActiveDirectory::SyncUpdateCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.SyncUpdateCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia delegata synchronizacji dla tego kontrolera domeny.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" /> delegata, który będzie używany dla powiadomienia synchronizacji.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="SyncReplicaFromAllServers">
      <MemberSignature Language="C#" Value="public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyncReplicaFromAllServers(string partition, valuetype System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SyncReplicaFromAllServers (partition As String, options As SyncFromAllServersOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SyncReplicaFromAllServers(System::String ^ partition, System::DirectoryServices::ActiveDirectory::SyncFromAllServersOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" />
      </Parameters>
      <Docs>
        <param name="partition">Nazwa wyróżniająca partycji dla kontrolera domeny do synchronizacji.</param>
        <param name="options">Kombinacja co najmniej jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" /> elementów członkowskich.</param>
        <summary>Powoduje, że ten kontroler domeny zsynchronizować określonej partycji z innymi kontrolerami domeny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie replikacja będzie miało miejsce tylko z innymi kontrolerami domeny w tej samej lokacji. Jeśli `options` zawiera parametr <xref:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite> wartości, a następnie nastąpi replikację ze wszystkich kontrolerów domeny w lesie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> nie jest prawidłowy.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">Wystąpił błąd podczas operacji synchronizacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" />
      </Docs>
    </Member>
    <Member MemberName="SyncReplicaFromServer">
      <MemberSignature Language="C#" Value="public override void SyncReplicaFromServer (string partition, string sourceServer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyncReplicaFromServer(string partition, string sourceServer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SyncReplicaFromServer (partition As String, sourceServer As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SyncReplicaFromServer(System::String ^ partition, System::String ^ sourceServer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="sourceServer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Nazwa wyróżniająca partycji do zsynchronizowania kontrolera domeny.</param>
        <param name="sourceServer">Nazwa serwera do zsynchronizowania partycji.</param>
        <summary>Powoduje, że ten kontroler domeny zsynchronizować określonej partycji z określonym kontrolerem domeny.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> lub <paramref name="sourceServer" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> lub <paramref name="sourceServer" /> jest nieprawidłowa.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TransferRoleOwnership">
      <MemberSignature Language="C#" Value="public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRoleOwnership(valuetype System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRoleOwnership (role As ActiveDirectoryRole)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRoleOwnership(System::DirectoryServices::ActiveDirectory::ActiveDirectoryRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
      </Parameters>
      <Docs>
        <param name="role">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> elementów członkowskich, które określa roli będą przekazywane do tego kontrolera domeny.</param>
        <summary>Powoduje, że prawo własności do określonej roli, do przeniesienia do tego kontrolera domeny.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="role" /> nie jest prawidłowy.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
      </Docs>
    </Member>
    <Member MemberName="TriggerSyncReplicaFromNeighbors">
      <MemberSignature Language="C#" Value="public override void TriggerSyncReplicaFromNeighbors (string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TriggerSyncReplicaFromNeighbors(string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TriggerSyncReplicaFromNeighbors (partition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TriggerSyncReplicaFromNeighbors(System::String ^ partition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Nazwa wyróżniająca partycję, którą chcesz synchronizować.</param>
        <summary>Rozpoczyna się synchronizacja określonej partycji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie usługi katalogowej podstawowej zwróciło błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> nie jest prawidłowy.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądanie: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>