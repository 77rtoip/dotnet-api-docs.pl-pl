<Type Name="TrustDirection" FullName="System.DirectoryServices.ActiveDirectory.TrustDirection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd17d29dd5d05a88639afd834a358e45ea1b34b3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69119628" /></Metadata><TypeSignature Language="C#" Value="public enum TrustDirection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TrustDirection extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
  <TypeSignature Language="VB.NET" Value="Public Enum TrustDirection" />
  <TypeSignature Language="C++ CLI" Value="public enum class TrustDirection" />
  <TypeSignature Language="F#" Value="type TrustDirection = " />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Wskazuje kierunek zaufania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kierunek zaufania jest zawsze względem jednej strony zaufania. Jeśli na przykład domena A ma przychodzące relacje zaufania z domeną B, a następnie według definicji, domena B ma zaufanie wychodzące z domeną A.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
  </Docs>
  <Members>
    <Member MemberName="Bidirectional">
      <MemberSignature Language="C#" Value="Bidirectional" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.DirectoryServices.ActiveDirectory.TrustDirection Bidirectional = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional" />
      <MemberSignature Language="VB.NET" Value="Bidirectional" />
      <MemberSignature Language="C++ CLI" Value="Bidirectional" />
      <MemberSignature Language="F#" Value="Bidirectional = 3" Usage="System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustDirection</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Każda domena lub las ma dostęp do zasobów w innej domenie lub lesie.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inbound">
      <MemberSignature Language="C#" Value="Inbound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.DirectoryServices.ActiveDirectory.TrustDirection Inbound = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound" />
      <MemberSignature Language="VB.NET" Value="Inbound" />
      <MemberSignature Language="C++ CLI" Value="Inbound" />
      <MemberSignature Language="F#" Value="Inbound = 1" Usage="System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Jest to zaufana domena lub las. Druga domena lub las ma dostęp do zasobów tej domeny lub lasu. Ta domena lub las nie ma dostępu do zasobów należących do innej domeny lub lasu.</summary>
      </Docs>
    </Member>
    <Member MemberName="Outbound">
      <MemberSignature Language="C#" Value="Outbound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.DirectoryServices.ActiveDirectory.TrustDirection Outbound = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound" />
      <MemberSignature Language="VB.NET" Value="Outbound" />
      <MemberSignature Language="C++ CLI" Value="Outbound" />
      <MemberSignature Language="F#" Value="Outbound = 2" Usage="System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustDirection</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Jest to zaufana domena lub las. Ta domena lub las ma dostęp do zasobów w innej domenie lub lesie. Inna domena lub las nie ma dostępu do zasobów tej domeny lub lasu.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
