<Type Name="Forest" FullName="System.DirectoryServices.ActiveDirectory.Forest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ed0877c171037729091f06a5d7ad3bea265dc07" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69251341" /></Metadata><TypeSignature Language="C#" Value="public class Forest : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Forest extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Forest" />
  <TypeSignature Language="VB.NET" Value="Public Class Forest&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Forest : IDisposable" />
  <TypeSignature Language="F#" Value="type Forest = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Klasa reprezentuje Las Active Directory Domain Services.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądania:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="ApplicationPartitions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPartitions As ApplicationPartitionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ ApplicationPartitions { System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPartitions : System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich partycji aplikacji w lesie.</summary>
        <value><see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> Obiekt, który zawiera wszystkie partycje aplikacji w tym lesie.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateLocalSideOfTrustRelationship (targetForestName As String, direction As TrustDirection, trustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection direction, System::String ^ trustPassword);" />
      <MemberSignature Language="F#" Value="member this.CreateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.CreateLocalSideOfTrustRelationship (targetForestName, direction, trustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa DNS lasu, za pomocą którego jest tworzone zaufanie.</param>
        <param name="direction">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> elementów członkowskich, który określa kierunek zaufania względem tego lasu.</param>
        <param name="trustPassword">Hasło zaufania.</param>
        <summary>Tworzy lokalną stronę relacji zaufania z określonym lasem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy jedną stronę relacji zaufania. Zaufanie nie jest ustanowione do momentu utworzenia obu stron relacji zaufania.  
  
 `trustPassword` Parametr kojarzy hasło z utworzonym zaufaniem. Po utworzeniu drugiej strony zaufania zostanie podane to samo hasło, a dwa lokalne relacje zaufania są następnie powiązane ze sobą.  
  
 Aby programowo utworzyć obie strony relacji zaufania w wywołaniu pojedynczej metody, użyj <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">Relacja zaufania już istnieje.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForest" />Nazwa lub <paramref name="trustPassword" /> ciąg są puste.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" />lub <paramref name="trustPassword" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" />nie jest prawidłową <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> wartością.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.CreateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.CreateTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt, który reprezentuje Las, za pomocą którego jest tworzone zaufanie.</param>
        <param name="direction">Jeden z <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> elementów członkowskich, który określa kierunek zaufania względem tego lasu.</param>
        <summary>Tworzy obie strony relacji zaufania z określonym lasem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powoduje utworzenie obu stron relacji zaufania z pojedynczym wywołaniem metody. <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> Metoda służy do tworzenia tylko jednej strony zaufania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">Relacja zaufania już istnieje.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" />nie jest prawidłową <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> wartością.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLocalSideOfTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLocalSideOfTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.DeleteLocalSideOfTrustRelationship : string -&gt; unit" Usage="forest.DeleteLocalSideOfTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa DNS lasu, z którym istnieje relacja zaufania.</param>
        <summary>Usuwa lokalną stronę relacji zaufania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu jednej ze stron relacji zaufania nie jest już ustanowiona relacja zaufania.  
  
 Aby usunąć obie strony relacji zaufania z jednym wywołaniem metody, użyj <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> , która jest określona <paramref name="targetForestName" /> przez parametr.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.DeleteTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.DeleteTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt reprezentujący Las, z którym istnieje relacja zaufania.</param>
        <summary>Usuwa obie strony relacji zaufania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby usunąć tylko jedną stronę relacji zaufania, należy użyć <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Brak relacji zaufania z określonym <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby, które są przechowywane przez obiekt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="forest.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zarządzane i niezarządzane zasoby, które są przechowywane przez obiekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="member this.Dispose : bool -&gt; unit" Usage="forest.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see cref="T:System.Boolean" /> Wartość określająca, czy zarządzane zasoby powinny być wydane. <see langword="true" />Jeśli zarządzane zasoby powinny zostać wydane; <see langword="false" /> jeśli zostaną wydane tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zarządzane zasoby, które są używane przez obiekt i, opcjonalnie, zwalnia niezarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domains">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Domains" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Domains As DomainCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainCollection ^ Domains { System::DirectoryServices::ActiveDirectory::DomainCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Domains : System.DirectoryServices.ActiveDirectory.DomainCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich domen w lesie.</summary>
        <value>Kolekcja zawierająca domeny w bieżącym <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />. <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDiscoverableGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje wszystkie wykrywalne wykazy globalne w tym lesie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znajduje wszystkie wykrywalne wykazy globalne w tym lesie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> , który zawiera kolekcję wykazów globalnych, które zostały odnalezione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odnajdywanie kontrolerów domeny można znaleźć, badając rekordy DNS SRV.  Ta metoda zwraca tylko wykazy globalne, które rejestrują ogólny rekord SRV niezwiązany z witryną.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nazwa witryny do przeszukania.</param>
        <summary>Znajduje wszystkie wykrywalne wykazy globalne w tym lesie w określonej lokacji.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> , który zawiera kolekcję wykazów globalnych, które zostały odnalezione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wykrywalne wykazy globalne można znaleźć, badając rekordy DNS SRV.  Jeśli wykaz globalny nie rejestruje rekordu SRV dla określonej lokacji, nie zostanie on zwrócony przez tę metodę, nawet jeśli katalog globalny znajduje się fizycznie w tej lokacji.  
  
 Ta metoda będzie zwracała wszystkie wykazy globalne, które rejestrują rekord GC SRV dla określonej lokacji, nawet jeśli mogą nie być fizycznie zlokalizowane w tej lokacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje wszystkie wykazy globalne w tym lesie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znajduje wszystkie wykazy globalne w tym lesie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> , który zawiera kolekcję wykazów globalnych, które zostały odnalezione.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nazwa witryny do przeszukania.</param>
        <summary>Znajduje wszystkie wykazy globalne w tym lesie dla danej lokacji.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> Obiekt, który zawiera kolekcję wykazów globalnych, które zostały odnalezione.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindGlobalCatalog">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje pojedynczy wykaz globalny w tym lesie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog () As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog();" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znajduje wszystkie wykazy globalne w tym lesie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> .<see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można zlokalizować wykazu globalnego.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag"><see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> Wartość określająca kryteria lokalizacji.</param>
        <summary>Umożliwia znalezienie wykazu globalnego w tym lesie dla określonych kryteriów lokalizacji.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> Obiekt dla określonych kryteriów lokalizacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można zlokalizować wykazu globalnego.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nazwa witryny do przeszukania.</param>
        <summary>Znajduje wykaz globalny w tym lesie dla określonej lokacji.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> Obiekt dla określonej lokacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można zlokalizować wykazu globalnego.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String, flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string * System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog (siteName, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName">Nazwa witryny do przeszukania.</param>
        <param name="flag"><see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> Wartość określająca kryteria lokalizacji.</param>
        <summary>Znajduje wykaz globalny w tym lesie dla określonych kryteriów lokacji i lokalizacji.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> Obiekt dla określonych kryteriów lokacji i lokalizacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można zlokalizować wykazu globalnego.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="ForestMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.ForestMode ForestMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestMode As ForestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ForestMode ForestMode { System::DirectoryServices::ActiveDirectory::ForestMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestMode : System.DirectoryServices.ActiveDirectory.ForestMode" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Tryb operacyjny lasu.</summary>
        <value>Wartość, która reprezentuje bieżący tryb <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />lasu. <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="ForestModeLevel">
      <MemberSignature Language="C#" Value="public int ForestModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ForestModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestModeLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ForestModeLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestModeLevel : int" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poziom trybu operacyjnego lasu.</summary>
        <value>Poziom trybu operacyjnego lasu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTrustRelationships () As TrustRelationshipInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformationCollection ^ GetAllTrustRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetAllTrustRelationships : unit -&gt; System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" Usage="forest.GetAllTrustRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję relacji zaufania bieżącego lasu.</summary>
        <returns>Kolekcja zawierająca <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> obiekty reprezentujące relacje zaufania bieżącego <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />elementu. <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentForest () As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetCurrentForest();" />
      <MemberSignature Language="F#" Value="static member GetCurrentForest : unit -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Pobiera obiekt dla kontekstu bieżącego użytkownika.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt, który reprezentuje bieżący Las.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetForest(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetForest (context As DirectoryContext) As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetForest(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetForest : System.DirectoryServices.ActiveDirectory.DirectoryContext -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetForest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> Obiekt, który zawiera obiekt docelowy i poświadczenia używane do pobierania obiektu.</param>
        <summary><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Pobiera obiekt dla określonego kontekstu.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt reprezentujący Las, który został pobrany przez tę metodę.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można nawiązać połączenia z celem określonym w <paramref name="context" /> programie.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="context" />jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectiveAuthenticationStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelectiveAuthenticationStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSelectiveAuthenticationStatus : string -&gt; bool" Usage="forest.GetSelectiveAuthenticationStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa DNS, <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> z którą istnieje relacja zaufania przychodzącego.</param>
        <summary>Pobiera wartość logiczną wskazującą, czy w przychodzącej relacji zaufania z określonym lasem jest włączone uwierzytelnianie selektywne.  <see langword="true" />w przypadku włączenia uwierzytelniania selektywnego; w przeciwnym razie. <see langword="false" /></summary>
        <returns><see langword="true" />w przypadku włączenia uwierzytelniania selektywnego; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku zaufania lasu, jeśli wybierzesz opcję Uwierzytelnianie selektywne, uprawnienia muszą być włączane ręcznie we wszystkich domenach i zasobach w lesie lokalnym, do których użytkownicy w drugim lesie mają mieć dostęp.  
  
 Gdy użytkownik uwierzytelnia się w relacji zaufania, dla którego jest włączone uwierzytelnianie selektywne, do danych autoryzacji użytkownika zostaje dodany inny identyfikator zabezpieczeń organizacji (SID). Obecność tego identyfikatora SID monituje o sprawdzenie domeny zasobów, aby upewnić się, że użytkownik może uwierzytelniać się w określonej usłudze. Po uwierzytelnieniu użytkownika serwer uwierzytelniający użytkownika dodaje tego identyfikatora SID organizacji, jeśli inny identyfikator SID nie jest jeszcze obecny. Tylko jeden z tych specjalnych identyfikatorów SID może być obecny w kontekście uwierzytelnionego użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> , która jest określona przez. <paramref name="targetForestName" /></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie <c>LsaQueryTrustedDomainInfoByName</c> nie powiodło się. Aby uzyskać więcej informacji, zobacz <see href="/windows/desktop/api/ntsecapi/nf-ntsecapi-lsaquerytrusteddomaininfobyname">LsaQueryTrustedDomainInfoByName</see>.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSidFilteringStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSidFilteringStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSidFilteringStatus : string -&gt; bool" Usage="forest.GetSidFilteringStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> DNS obiektu, z którym istnieje relacja zaufania.</param>
        <summary>Pobiera stan filtrowania identyfikatorów SID zaufania.</summary>
        <returns><see langword="true" />Jeśli filtrowanie identyfikatorów SID jest włączone; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Brak relacji zaufania z <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiektem, który jest określony przez. <paramref name="targetForestName" /></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrustRelationship (targetForestName As String) As ForestTrustRelationshipInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ForestTrustRelationshipInformation ^ GetTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetTrustRelationship : string -&gt; System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" Usage="forest.GetTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiektu, dla którego ma zostać uzyskana informacja dotycząca relacji zaufania.</param>
        <summary>Pobiera relację zaufania między tym lasem i określonym lasem.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> Obiekt, który reprezentuje relację zaufania między tym lasem i określonym lasem.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> , która jest określona przez. <paramref name="targetForestName" /></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalCatalogs As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ GlobalCatalogs { System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalCatalogs : System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich wykazów globalnych w lesie.</summary>
        <value>Kolekcja zawierająca <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />wykazy <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> globalne w bieżącym. <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę lasu.</summary>
        <value>Nazwa tego <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />elementu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ NamingRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamingRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontroler domeny, który posiada rolę wzorca nazewnictwa FSMO dla lasu.</summary>
        <value>Obiekt reprezentujący kontroler domeny, który jest wzorcem nazw FSMO tego <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />. <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionality(valuetype System.DirectoryServices.ActiveDirectory.ForestMode forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionality(System::DirectoryServices::ActiveDirectory::ForestMode forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionality : System.DirectoryServices.ActiveDirectory.ForestMode -&gt; unit" Usage="forest.RaiseForestFunctionality forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Parameters>
      <Docs>
        <param name="forestMode">Wartość <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> wyliczenia, która określa nowy poziom operacji dla lasu.</param>
        <summary>Podnosi tryb operacji dla lasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.ActiveDirectory.ForestMode> Wartość może być podniesiona, ale nie obniżona. Oznacza to, że podnoszenie poziomu funkcjonalności lasu nie jest odwracalne i podejmowana jest ostrożność.  
  
 Aby uzyskać więcej informacji na temat trybów operacyjnych lasów, zobacz [funkcje domeny i lasu](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd894353(v%3dws.11)).
  
 Poniższa tabela zawiera definicje prawidłowych wartości `forestMode` w zależności od bieżącego trybu operacyjnego lasu.  
  
|Bieżący tryb|Tryb można podwyższyć do|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|Brak|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException">W oparciu o bieżący tryb operacyjny lasu wartość określona dla <paramref name="forestMode" /> jest nieprawidłowa.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="forestMode" />nie jest prawidłową <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> wartością wyliczenia.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionalityLevel (int forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionalityLevel(int32 forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseForestFunctionalityLevel (forestMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionalityLevel(int forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionalityLevel : int -&gt; unit" Usage="forest.RaiseForestFunctionalityLevel forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="forestMode">Podnieś poziom do tego poziomu.</param>
        <summary>Podnosi poziom funkcjonalności lasu do danego ustawienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepairTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepairTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.RepairTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.RepairTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt reprezentujący obiekt lasu, z którym istnieje relacja zaufania.</param>
        <summary>Naprawa relacji zaufania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Brak relacji zaufania z <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiektem, który jest określony przez. <paramref name="targetForest" /></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDomain">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain RootDomain" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootDomain As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ RootDomain { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDomain : System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pierwszą domenę, która została utworzona w lesie.</summary>
        <value>Obiekt, który reprezentuje pierwszą domenę, która została utworzona w tym <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />elemencie. <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As ActiveDirectorySchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ Schema { System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" Usage="System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera schemat lasu.</summary>
        <value>Obiekt reprezentujący schemat bieżącego <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />elementu. <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ SchemaRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontroler domeny, który przechowuje rolę wzorca schematu FSMO dla lasu.</summary>
        <value>Obiekt reprezentujący kontroler domeny, który jest wzorcem schematu FSMO tego <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />. <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectiveAuthenticationStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectiveAuthenticationStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSelectiveAuthenticationStatus : string * bool -&gt; unit" Usage="forest.SetSelectiveAuthenticationStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> DNS obiektu, z którym istnieje relacja zaufania przychodzącego.</param>
        <param name="enable"><see langword="true" />Jeśli uwierzytelnianie selektywne ma być włączone; w przeciwnym razie. <see langword="false" /></param>
        <summary>Włącza lub wyłącza uwierzytelnianie selektywne dla zaufania przychodzącego.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z lasem, który jest określony przez <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSidFilteringStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSidFilteringStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSidFilteringStatus : string * bool -&gt; unit" Usage="forest.SetSidFilteringStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> DNS obiektu, z którym istnieje relacja zaufania.</param>
        <param name="enable"><see langword="true" />Jeśli filtrowanie identyfikatorów SID ma być włączone; w przeciwnym razie. <see langword="false" /></param>
        <summary>Ustawia stan filtrowania identyfikatorów SID w określonym lesie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie nowe zaufania zewnętrzne i lasy w [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] Active Directory Domain Services wymuszać filtrowanie identyfikatorów SID.  Filtrowanie identyfikatorów SID służy do zapobiegania atakom ze strony złośliwych użytkowników, którzy mogą próbować udzielić podwyższonego poziomu uprawnień użytkownika innemu kontu użytkownika.  Wymuszanie filtrowania identyfikatorów SID w lasach zaufania nie zapobiega migracji do domen w tym samym lesie przy użyciu historii identyfikatorów SID i nie ma wpływu na strategię kontroli dostępu do grupy uniwersalnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z lasem, który jest określony przez <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="Sites">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sites As ReadOnlySiteCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ Sites { System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sites : System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję lokacji znajdujących się w lesie.</summary>
        <value>Zawierający lokacje w bieżącym <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />. <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="forest.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu bieżącego lasu.</summary>
        <returns>Reprezentujący nazwę <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> DNS obiektu. <see cref="T:System.String" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateLocalSideOfTrustRelationship">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aktualizuje hasło dla lokalnej strony relacji zaufania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiektu, dla którego należy zmienić hasło lokalnego zaufania.</param>
        <param name="newTrustPassword">Nowe hasło dla relacji zaufania.</param>
        <summary>Aktualizuje hasło dla lokalnej strony relacji zaufania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z lasem, który jest określony przez <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />lub <paramref name="newTrustPassword" /> jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />lub <paramref name="newTrustPassword" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustDirection As TrustDirection, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustDirection, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiektu, dla którego lokalny kierunek zaufania i hasło muszą zostać zmienione.</param>
        <param name="newTrustDirection"><see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> Wartość nowego kierunku zaufania relacji zaufania.</param>
        <param name="newTrustPassword">Nowe hasło dla relacji zaufania.</param>
        <summary>Aktualizuje hasło i kierunek zaufania dla lokalnej strony relacji zaufania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Brak relacji zaufania z <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> obiektem, który jest określony przez. <paramref name="targetForestName" /></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />lub <paramref name="newTrustPassword" /> jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />lub <paramref name="newTrustPassword" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Parametr nie jest prawidłową <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> wartością. <paramref name="newTrustDirection" /></exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTrustRelationship (targetForest As Forest, newTrustDirection As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection);" />
      <MemberSignature Language="F#" Value="member this.UpdateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.UpdateTrustRelationship (targetForest, newTrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt, dla którego należy zmienić wskazówki zaufania.</param>
        <param name="newTrustDirection"><see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> Wartość określająca nowy kierunek zaufania dla relacji zaufania.</param>
        <summary>Aktualizuje kierunek zaufania relacji zaufania. Wskazówki zaufania są aktualizowane po obu stronach zaufania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z lasem, który jest określony przez <paramref name="targetForest" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection" />nie jest prawidłową <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> wartością.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyOutboundTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyOutboundTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.VerifyOutboundTrustRelationship : string -&gt; unit" Usage="forest.VerifyOutboundTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nazwa DNS domeny, z którą istnieje relacja zaufania.</param>
        <summary>Sprawdza, czy wcześniej ustanowiona relacja zaufania wychodzącego z określonym lasem jest prawidłowa.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania wychodzącego z lasem, który jest <paramref name="targetForestName" />określony przez.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.VerifyTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.VerifyTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> Obiekt, dla którego ma zostać zweryfikowana relacja zaufania.</param>
        <param name="direction"><see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> Wartość określająca kierunek zaufania względem tego lasu.</param>
        <summary>Sprawdza, czy wcześniej ustanowione zaufanie z określonym lasem jest prawidłowe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza, czy relacja zaufania została w pełni ustanowiona. Zaufanie nie jest ustanowione do momentu utworzenia obu stron relacji zaufania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie istnieje relacja zaufania z lasem, który jest określony przez <paramref name="targetForest" />, lub las docelowy nie ma kierunku zaufania określonego przez. <paramref name="direction" /></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Wywołanie podstawowej usługi katalogowej spowodowało błąd.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Serwer docelowy jest zajęty lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Parametr nie jest prawidłową <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> wartością. <paramref name="direction" /></exception>
        <exception cref="T:System.ObjectDisposedException">Obiekt został usunięty.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Określone konto nie ma uprawnień do wykonania tej operacji.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Praca z relacjami zaufania</related>
      </Docs>
    </Member>
  </Members>
</Type>
