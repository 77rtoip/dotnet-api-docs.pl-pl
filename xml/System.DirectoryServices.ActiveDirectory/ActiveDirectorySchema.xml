<Type Name="ActiveDirectorySchema" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02da917fdfa115e929fae9c2a880468ef3f31959" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46633599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectorySchema : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchema extends System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySchema&#xA;Inherits ActiveDirectoryPartition" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySchema : System::DirectoryServices::ActiveDirectory::ActiveDirectoryPartition" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySchema = class&#xA;    inherit ActiveDirectoryPartition" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> Klasa reprezentuje partycji schematu dla określonej domeny.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="activeDirectorySchema.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby zarządzane, które są używane przez <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> obiektu i, opcjonalnie, wersje niezarządzane zasoby.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `disposing` Parametr dotyczy tylko wersji zarządzanych zasobów. Zasoby niezarządzane są zawsze wydawane przez tę metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllClasses">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wszystkie klasy w usługach domenowych Active Directory w schemacie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllClasses">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllClasses () As ReadOnlyActiveDirectorySchemaClassCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ReadOnlyActiveDirectorySchemaClassCollection ^ FindAllClasses();" />
      <MemberSignature Language="F#" Value="member this.FindAllClasses : unit -&gt; System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" Usage="activeDirectorySchema.FindAllClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wszystkie klasy w usługach domenowych Active Directory w schemacie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> obiekt, który zawiera zbiór <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> obiektów dla klas, które zostały pobrane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <Member MemberName="FindAllClasses">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses (System.DirectoryServices.ActiveDirectory.SchemaClassType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses(valuetype System.DirectoryServices.ActiveDirectory.SchemaClassType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllClasses (type As SchemaClassType) As ReadOnlyActiveDirectorySchemaClassCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ReadOnlyActiveDirectorySchemaClassCollection ^ FindAllClasses(System::DirectoryServices::ActiveDirectory::SchemaClassType type);" />
      <MemberSignature Language="F#" Value="member this.FindAllClasses : System.DirectoryServices.ActiveDirectory.SchemaClassType -&gt; System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" Usage="activeDirectorySchema.FindAllClasses type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.DirectoryServices.ActiveDirectory.SchemaClassType" />
      </Parameters>
      <Docs>
        <param name="type">Jedną z <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" /> elementów członkowskich, które identyfikuje typ klasy do pobrania.</param>
        <summary>Pobiera wszystkie klasy Active Directory Domain Services w schemacie, które są określonego typu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> obiekt, który zawiera zbiór <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> obiektów dla klas, które zostały pobrane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <Member MemberName="FindAllDefunctClasses">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDefunctClasses () As ReadOnlyActiveDirectorySchemaClassCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ReadOnlyActiveDirectorySchemaClassCollection ^ FindAllDefunctClasses();" />
      <MemberSignature Language="F#" Value="member this.FindAllDefunctClasses : unit -&gt; System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" Usage="activeDirectorySchema.FindAllDefunctClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wszystkie klasy unieczynnienia Active Directory Domain Services w schemacie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> obiekt, który zawiera zbiór <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> obiektów dla klas, które zostały pobrane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <Member MemberName="FindAllDefunctProperties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDefunctProperties () As ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ReadOnlyActiveDirectorySchemaPropertyCollection ^ FindAllDefunctProperties();" />
      <MemberSignature Language="F#" Value="member this.FindAllDefunctProperties : unit -&gt; System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" Usage="activeDirectorySchema.FindAllDefunctProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wszystkie właściwości unieczynnienia Active Directory Domain Services w schemacie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> obiekt, który zawiera zbiór <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> obiektów dla właściwości, które zostały pobrane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllProperties">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wszystkie właściwości Active Directory Domain Services w schemacie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllProperties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllProperties () As ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ReadOnlyActiveDirectorySchemaPropertyCollection ^ FindAllProperties();" />
      <MemberSignature Language="F#" Value="member this.FindAllProperties : unit -&gt; System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" Usage="activeDirectorySchema.FindAllProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wszystkie właściwości Active Directory Domain Services w schemacie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> obiekt, który zawiera zbiór <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> obiektów dla właściwości, które zostały pobrane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <Member MemberName="FindAllProperties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties (System.DirectoryServices.ActiveDirectory.PropertyTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties(valuetype System.DirectoryServices.ActiveDirectory.PropertyTypes type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllProperties (type As PropertyTypes) As ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ReadOnlyActiveDirectorySchemaPropertyCollection ^ FindAllProperties(System::DirectoryServices::ActiveDirectory::PropertyTypes type);" />
      <MemberSignature Language="F#" Value="member this.FindAllProperties : System.DirectoryServices.ActiveDirectory.PropertyTypes -&gt; System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" Usage="activeDirectorySchema.FindAllProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.DirectoryServices.ActiveDirectory.PropertyTypes" />
      </Parameters>
      <Docs>
        <param name="type">Jedną z <see cref="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" /> elementów członkowskich, które identyfikuje typ właściwości do pobrania.</param>
        <summary>Pobiera wszystkie właściwości Active Directory Domain Services w schemacie określonego typu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> obiekt, który zawiera zbiór <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> obiektów dla właściwości, które zostały pobrane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <Member MemberName="FindClass">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass (string ldapDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass(string ldapDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindClass (ldapDisplayName As String) As ActiveDirectorySchemaClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ActiveDirectorySchemaClass ^ FindClass(System::String ^ ldapDisplayName);" />
      <MemberSignature Language="F#" Value="member this.FindClass : string -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" Usage="activeDirectorySchema.FindClass ldapDisplayName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ldapDisplayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ldapDisplayName">Nazwa wyświetlana LDAP można znaleźć klasy.</param>
        <summary>Pobiera klasę o określonej nazwie.</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Obiekt, który reprezentuje klasę o określonej nazwie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można znaleźć klasy o określonej nazwie.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ldapDisplayName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ldapDisplayName" /> ma zerową długość.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      </Docs>
    </Member>
    <Member MemberName="FindDefunctClass">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass (string commonName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass(string commonName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDefunctClass (commonName As String) As ActiveDirectorySchemaClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ActiveDirectorySchemaClass ^ FindDefunctClass(System::String ^ commonName);" />
      <MemberSignature Language="F#" Value="member this.FindDefunctClass : string -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" Usage="activeDirectorySchema.FindDefunctClass commonName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commonName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commonName">Nazwa pospolita unieczynnienia klasy, aby znaleźć.</param>
        <summary>Pobiera unieczynnienia klasy, która ma określoną nazwę pospolitą.</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Obiekt, który reprezentuje klasę o określonej nazwie wspólnej.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można znaleźć klasy o określonej nazwie.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commonName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="commonName" /> ma zerową długość.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      </Docs>
    </Member>
    <Member MemberName="FindDefunctProperty">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty (string commonName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty(string commonName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDefunctProperty (commonName As String) As ActiveDirectorySchemaProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ActiveDirectorySchemaProperty ^ FindDefunctProperty(System::String ^ commonName);" />
      <MemberSignature Language="F#" Value="member this.FindDefunctProperty : string -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" Usage="activeDirectorySchema.FindDefunctProperty commonName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commonName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commonName">Nazwa pospolita unieczynnienia właściwości, aby znaleźć.</param>
        <summary>Pobiera właściwość unieczynnienia, która ma określoną nazwę pospolitą.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> obiekt, który reprezentuje właściwość.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można odnaleźć właściwości o określonej nazwie.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commonName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="commonName" /> ma zerową długość.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      </Docs>
    </Member>
    <Member MemberName="FindProperty">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty (string ldapDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty(string ldapDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindProperty (ldapDisplayName As String) As ActiveDirectorySchemaProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ActiveDirectorySchemaProperty ^ FindProperty(System::String ^ ldapDisplayName);" />
      <MemberSignature Language="F#" Value="member this.FindProperty : string -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" Usage="activeDirectorySchema.FindProperty ldapDisplayName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ldapDisplayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ldapDisplayName">Nazwa wyświetlana LDAP właściwości, aby znaleźć.</param>
        <summary>Pobiera właściwość o określonej nazwie.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> obiekt, który reprezentuje właściwość o określonej nazwie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można odnaleźć właściwości o określonej nazwie.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyName" /> ma zerową długość.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentSchema">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentSchema () As ActiveDirectorySchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ GetCurrentSchema();" />
      <MemberSignature Language="F#" Value="static member GetCurrentSchema : unit -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obiekt schematu lasu, który jest aktualnie zalogowany użytkownik jest członkiem.</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> Obiekt, który reprezentuje schematu dla domeny, które należy komputer lokalny.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Nie można nawiązać połączenia z domeną lokalną.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/2d756396-d57b-489a-ac97-2db225613751">Uzyskiwanie dostępu do schematu</related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryEntry">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.DirectoryEntry GetDirectoryEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDirectoryEntry () As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::DirectoryEntry ^ GetDirectoryEntry();" />
      <MemberSignature Language="F#" Value="override this.GetDirectoryEntry : unit -&gt; System.DirectoryServices.DirectoryEntry" Usage="activeDirectorySchema.GetDirectoryEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera <see cref="T:System.DirectoryServices.DirectoryEntry" /> obiekt, który reprezentuje partycji katalogu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> obiekt, który reprezentuje partycji katalogu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSchema (context As DirectoryContext) As ActiveDirectorySchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ GetSchema(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSchema : System.DirectoryServices.ActiveDirectory.DirectoryContext -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> obiekt, który zawiera docelowy i poświadczenia do użycia w celu pobrania obiektu. Element docelowy w kontekście musi być lasu, serwer katalogu lub zestawu konfiguracji.</param>
        <summary>Pobiera obiektu schematu dla określonego kontekstu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> obiekt, który reprezentuje schematu dla określonego kontekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Połączenia z docelowym określonych w <paramref name="context" /> nie może zostać wykonana.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> jest nieprawidłowy.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshSchema();" />
      <MemberSignature Language="F#" Value="member this.RefreshSchema : unit -&gt; unit" Usage="activeDirectorySchema.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odświeża pamięć podręczną schematu na komputerze klienckim.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaRoleOwner As DirectoryServer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DirectoryServer ^ SchemaRoleOwner { System::DirectoryServices::ActiveDirectory::DirectoryServer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaRoleOwner : System.DirectoryServices.ActiveDirectory.DirectoryServer" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DirectoryServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściciela rolę wzorca schematu.</summary>
        <value>A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> obiekt, który reprezentuje serwera, który jest wzorzec schematu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Bieżący obiekt został usunięty.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      </Docs>
    </Member>
  </Members>
</Type>