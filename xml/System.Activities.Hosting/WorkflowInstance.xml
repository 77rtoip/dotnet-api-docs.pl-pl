<Type Name="WorkflowInstance" FullName="System.Activities.Hosting.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="967cd35d8c2d0a362f62a0e182135885121d88ae" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52602480" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance abstract" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="81c64-101">
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> to lekkie środowisko uruchomieniowe na wystąpienie wykonywania przepływu pracy programu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81c64-101">
          <see cref="T:System.Activities.Hosting.WorkflowInstance" /> is a lightweight, per-instance runtime for executing a workflow program.</span>
      </span>
      <span data-ttu-id="81c64-102">Może zostać zbudowana w celu utworzenia nowego wystąpienia przepływu pracy lub istniejące wystąpienie przechodzi w stan.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81c64-102">It can be constructed to create a new workflow instance or from existing instance state.</span>
      </span>
      <span data-ttu-id="81c64-103">Interfejsy API, <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> ujawnia to minimalny zestaw kontrolek środowiska uruchomieniowego, z których można zaimplementować operacji na wyższym poziomie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81c64-103">The APIs that <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</span>
      </span>
      <span data-ttu-id="81c64-104">Ten zestaw API reprezentuje cały szeroki zakres funkcji środowiska uruchomieniowego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81c64-104">This API set represents the entire breadth of functionality of the runtime.</span>
      </span>
      <span data-ttu-id="81c64-105">
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> jest klasą abstrakcyjną i opiera się na implementacji hosta jego metody abstrakcyjne zapewnić host funkcje, takie jak synchronizacja, trwałości, śledzenia i rozszerzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81c64-105">
          <see cref="T:System.Activities.Hosting.WorkflowInstance" /> is an abstract class and relies on a host's implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c64-106"><xref:System.Activities.Hosting.WorkflowInstance> jest jednym wątków i przyjęto założenie, że host synchronizuje dostęp do niego.</span><span class="sxs-lookup"><span data-stu-id="81c64-106"><xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it.</span></span> <span data-ttu-id="81c64-107">Próba wywołania wiele interfejsów API, równocześnie spowoduje <xref:System.InvalidOperationException> zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="81c64-107">An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.</span></span>  
  
 <span data-ttu-id="81c64-108">Wewnętrznie <xref:System.Activities.Hosting.WorkflowInstance> ma dwóch stanów: uruchomiona, a wstrzymana.</span><span class="sxs-lookup"><span data-stu-id="81c64-108">Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused.</span></span> <span data-ttu-id="81c64-109">Jedynym sposobem, aby spowodować przejście ze środowiska uruchomieniowego Wstrzymano uruchomiona jest wywołanie <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="81c64-109">The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span> <span data-ttu-id="81c64-110">Wszystkie akcje (z wyjątkiem wstrzymania) może zostać pobrany tylko, gdy środowisko uruchomieniowe zostało wstrzymane.</span><span class="sxs-lookup"><span data-stu-id="81c64-110">All actions (except Pause) can only be taken while the runtime is Paused.</span></span> <span data-ttu-id="81c64-111">Środowisko uruchomieniowe stają się spontanicznie wstrzymane w następujących sytuacjach:</span><span class="sxs-lookup"><span data-stu-id="81c64-111">The runtime will become spontaneously Paused in the following situations:</span></span>  
  
-   <span data-ttu-id="81c64-112">Wystąpił błąd krytyczny do środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="81c64-112">An error fatal to the runtime has occurred.</span></span> <span data-ttu-id="81c64-113">Hosta są sygnalizowane za pośrednictwem <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (który nie sygnalizuje przejścia do wstrzymana), a następnie powiadomiony poprzez <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span><span class="sxs-lookup"><span data-stu-id="81c64-113">The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span></span>  
  
-   <span data-ttu-id="81c64-114">Wyjątek w przepływie pracy był nieprzechwycony i poprzedzone znakiem zmiany znaczenia katalogu głównego.</span><span class="sxs-lookup"><span data-stu-id="81c64-114">An exception in the workflow was uncaught and escaped the root.</span></span> <span data-ttu-id="81c64-115">Host zostanie powiadomiony poprzez <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="81c64-115">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.</span></span>  
  
-   <span data-ttu-id="81c64-116">Harmonogram ma za mało elementów roboczych i jest teraz <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span><span class="sxs-lookup"><span data-stu-id="81c64-116">The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span></span> <span data-ttu-id="81c64-117">Host zostanie powiadomiony poprzez <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="81c64-117">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method.</span></span> <span data-ttu-id="81c64-118">Należy pamiętać, że harmonogram może zabrakło elementów roboczych, ponieważ wystąpienie jest w stanie bezczynności lub wystąpienie zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="81c64-118">Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</span></span> <span data-ttu-id="81c64-119"><xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> Wartość <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwość może służyć do rozróżnienia między nimi.</span><span class="sxs-lookup"><span data-stu-id="81c64-119">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.</span></span>  
  
 <span data-ttu-id="81c64-120">Host może żądanie zmiany z systemem wstrzymana przez wywołanie metody <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> lub <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> metody <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> wystąpienie zwrócone przez <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="81c64-120">The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property.</span></span> <span data-ttu-id="81c64-121">To żądanie powinno nie można uważać za ma określoną odpowiedź, co oznacza, że host nie należy próbować skorelować onnotify — \* lub <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> przy użyciu określonego wywołania wstrzymania.</span><span class="sxs-lookup"><span data-stu-id="81c64-121">This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify\* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause.</span></span> <span data-ttu-id="81c64-122">W odpowiedzi na żądanie wstrzymania, środowisko uruchomieniowe można przejść na wstrzymana, a następnie wywołać <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> podczas harmonogram środki, nieopłacone elementów roboczych oczekujących.</span><span class="sxs-lookup"><span data-stu-id="81c64-122">In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items.</span></span> <span data-ttu-id="81c64-123"><xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> Wartość <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwość może służyć do określenia, czy harmonogram ma nie ma więcej pracy, czy został przerwany przez żądanie wstrzymania.</span><span class="sxs-lookup"><span data-stu-id="81c64-123">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</span></span>  
  
 <span data-ttu-id="81c64-124"><xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Metody <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> wystąpienie zwrócone przez <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwość jest jedyną metodą, która może być wywoływany podczas <xref:System.Activities.Hosting.WorkflowInstance> jest w stanie uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="81c64-124">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state.</span></span> <span data-ttu-id="81c64-125">Wszystkie inne metody zgłosi <xref:System.InvalidOperationException> przypadku ich wywołania. Podane zasady dotyczące <xref:System.Activities.Hosting.WorkflowInstance> przejścia z jednego stanu do drugiego, publiczne pojęcie uruchomiona i wstrzymana można zdefiniować w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="81c64-125">All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</span></span>  
  
-   <span data-ttu-id="81c64-126">Uruchamianie — stan między wywołanie <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> i WorkflowInstance.OnNotify\* dalej.</span><span class="sxs-lookup"><span data-stu-id="81c64-126">Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify\*.</span></span>  
  
-   <span data-ttu-id="81c64-127">Wstrzymano — stan między ostatniego WorkflowInstance.OnNotify\* i następnym wywołaniu <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="81c64-127">Paused – The state between the last WorkflowInstance.OnNotify\* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Hosting.WorkflowInstance" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-128">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="81c64-129">Działanie, które definiuje przepływ pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-129">The activity that defines the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Hosting.WorkflowInstance" /> klasy za pomocą definicji określonego przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-130">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="81c64-131">Działanie, które definiuje przepływ pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-131">The activity that defines the workflow.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="81c64-132">Tożsamość definicji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-132">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Hosting.WorkflowInstance" /> klasy za pomocą definicji określonego przepływu pracy i tożsamość definicji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-133">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginFlushTrackingRecords (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginFlushTrackingRecords(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginFlushTrackingRecords : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.BeginFlushTrackingRecords (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="81c64-134">Okres, po upływie którego próba przerwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-134">The time period after which to abort the attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="81c64-135">Metoda wywoływana po wykonaniu operacji śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-135">The method to be called when the track operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="81c64-136">Informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-136">The information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-137">Metoda wywoływana przez środowisko wykonawcze przepływów pracy, aby rozpocząć wysyłanie oczekujące rekordy śledzenia do śledzenia uczestników asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-137">Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-138">Stan bieżącej operacji śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-138">The status of the current track operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl Controller" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Controller As WorkflowInstance.WorkflowInstanceControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl Controller { System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl get(); };" />
      <MemberSignature Language="F#" Value="member this.Controller : System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" Usage="System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-139">Pobiera <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> wystąpienia w tym <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-139">Gets the <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> instance for this <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-140">Wystąpienie kontrolera dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-140">The controller instance for this workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinitionIdentity">
      <MemberSignature Language="C#" Value="public System.Activities.WorkflowIdentity DefinitionIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.WorkflowIdentity DefinitionIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefinitionIdentity As WorkflowIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::WorkflowIdentity ^ DefinitionIdentity { System::Activities::WorkflowIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinitionIdentity : System.Activities.WorkflowIdentity" Usage="System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-141">Pobiera lub ustawia tożsamość definicji <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-141">Gets or sets the definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-142">Tożsamość definicji <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-142">The definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeExtensions">
      <MemberSignature Language="C#" Value="protected void DisposeExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisposeExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisposeExtensions ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisposeExtensions();" />
      <MemberSignature Language="F#" Value="member this.DisposeExtensions : unit -&gt; unit" Usage="workflowInstance.DisposeExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81c64-143">Wywołania <see cref="M:System.IDisposable.Dispose" /> na wszystkie rozszerzenia, które implementują <see cref="T:System.IDisposable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-143">Calls <see cref="M:System.IDisposable.Dispose" /> on all extensions that implement <see cref="T:System.IDisposable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.EndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81c64-144">Stan operacji asynchronicznej śledzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-144">The status of the asynchronous track operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-145">Metoda wywoływana przez środowisko wykonawcze przepływów pracy, aby zakończyć operację śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-145">Called by the workflow runtime to end the track operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub FlushTrackingRecords (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void FlushTrackingRecords(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.FlushTrackingRecords : TimeSpan -&gt; unit" Usage="workflowInstance.FlushTrackingRecords timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="81c64-146">Okres, po upływie którego próba przerwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-146">The time period after which to abort the attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-147">Metoda wywoływana przez środowisko wykonawcze przepływów pracy, aby wysłać oczekujące rekordy śledzenia do śledzenia uczestników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-147">Called by the workflow runtime to send pending tracking records to tracking participants.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivitiesBlockingUpdate">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetActivitiesBlockingUpdate (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap) As IList(Of ActivityBlockingUpdate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ GetActivitiesBlockingUpdate(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="static member GetActivitiesBlockingUpdate : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;" Usage="System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="81c64-148">Stan środowiska uruchomieniowego po deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-148">The deserialized runtime state.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="81c64-149">Mapa aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-149">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-150">Pobiera listę działań, która blokuje aktualizacja przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-150">Retrieves the list of activity that is blocking the update of the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-151">Lista działań, która blokuje aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-151">The list of activity that is blocking the update.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal T GetExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance !!T GetExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtension(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetExtension();" />
      <MemberSignature Language="F#" Value="member this.GetExtension : unit -&gt; 'T (requires 'T : null)" Usage="workflowInstance.GetExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="81c64-152">Typ rozszerzenia Aby znaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-152">The type of the extension to find.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="81c64-153">Zwraca rozszerzenie określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-153">Returns an extension of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-154">Rozszerzenie o określonym typie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-154">An extension of the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IEnumerable&lt;T&gt; GetExtensions&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExtensions&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtensions(Of T As Class) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; seq&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="workflowInstance.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="81c64-155">Typ rozszerzenia Aby znaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-155">The type of the extension to find.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="81c64-156">Zwraca wszystkie rozszerzenia, które można odnaleźć określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-156">Returns all extensions found for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-157">Wszystkie rozszerzenia znaleziono dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-157">All extensions found for the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostEnvironment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment HostEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Property HostEnvironment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ HostEnvironment { System::Activities::LocationReferenceEnvironment ^ get(); void set(System::Activities::LocationReferenceEnvironment ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostEnvironment : System.Activities.LocationReferenceEnvironment with get, set" Usage="System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-158">Pobiera lub ustawia środowisko głównego dla argumentów i zmiennych wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-158">Gets or sets the root environment for the workflow instance's arguments and variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-159">Środowisko głównego argumentów i zmiennych wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-159">The root environment for the workflow instance's arguments and variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c64-160">Jeśli ta właściwość jest ustawiona, po zainicjowaniu wystąpienia przepływu pracy i <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> zwraca `true`, <xref:System.InvalidOperationException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="81c64-160">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-161">Pobiera unikatowy identyfikator dla wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-161">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-162">Unikatowy identyfikator wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-162">The unique identifier for the workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-163">Metoda wywoływana przez hosta do inicjowania wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-163">Called by the host to initialize the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj -&gt; unit" Usage="workflowInstance.Initialize deserializedRuntimeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="81c64-164">Stan czasu wykonywania, służących do wykonywania przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-164">The run-time state used to execute the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-165">Metoda wywoływana przez hosta do inicjowania wystąpienia przepływu pracy, o stanie przepływu pracy w czasie wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-165">Called by the host to initialize the workflow instance with the workflow run-time state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.Collections.Generic.IDictionary&lt;string,object&gt; workflowArgumentValues, System.Collections.Generic.IList&lt;System.Activities.Handle&gt; workflowExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; workflowArgumentValues, class System.Collections.Generic.IList`1&lt;class System.Activities.Handle&gt; workflowExecutionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (workflowArgumentValues As IDictionary(Of String, Object), workflowExecutionProperties As IList(Of Handle))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ workflowArgumentValues, System::Collections::Generic::IList&lt;System::Activities::Handle ^&gt; ^ workflowExecutionProperties);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IList&lt;System.Activities.Handle&gt; -&gt; unit" Usage="workflowInstance.Initialize (workflowArgumentValues, workflowExecutionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowArgumentValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="workflowExecutionProperties" Type="System.Collections.Generic.IList&lt;System.Activities.Handle&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowArgumentValues">
          <span data-ttu-id="81c64-166">Parametry wejściowe w przepływie pracy, kluczach nazwę argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-166">The input parameters to the workflow, keyed by argument name.</span>
          </span>
        </param>
        <param name="workflowExecutionProperties">
          <span data-ttu-id="81c64-167">Lista właściwości wykonania przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-167">The list of workflow execution properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-168">Metoda wywoływana przez hosta do inicjowania wystąpienia przepływu pracy przy użyciu wartości argumentów i właściwości wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-168">Called by the host to initialize the workflow instance with the argument values and execution properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowInstance.Initialize (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="81c64-169">Stan czasu wykonywania, służących do wykonywania przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-169">The run-time state used to execute the workflow.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="81c64-170">Mapa aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-170">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-171">Metoda wywoływana przez hosta do inicjowania wystąpienia przepływu pracy, o stanie przepływu pracy w czasie wykonywania i zaktualizować mapę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-171">Called by the host to initialize the workflow instance with the workflow run-time state and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-172">Pobiera wartość wskazującą, czy wystąpienie przepływu pracy został zainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-172">Gets a value that indicates whether the workflow instance has been initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-173">
            <see langword="true" /> Jeśli wystąpienie przepływu pracy został zainicjowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-173">
              <see langword="true" /> if the workflow instance has been initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="81c64-174">Klucze wystąpienia do skojarzenia z tym wystąpieniem przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-174">The instance keys to associate with this workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="81c64-175">Metoda wywoływana po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-175">The method to be called when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="81c64-176">Opcjonalne obiekt specyficzne dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-176">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-177">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, że nowe klucze wystąpienia powinna być skojarzona z tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-177">Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-178">Odwołanie do asynchroniczną kojarzenie kluczy operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-178">A reference to the asynchronous associate keys operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginFlushTrackingRecords(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginFlushTrackingRecords (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginFlushTrackingRecords(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginFlushTrackingRecords (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="81c64-179">Metoda wywoływana po wykonaniu operacji śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-179">The method to be called when the track operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="81c64-180">Informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-180">The information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-181">Asynchroniczne wywołanie poprosić hosta, aby opróżnić oczekujące rekordy śledzenia do śledzenia uczestników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-181">Asynchronous call to ask host to flush pending tracking records to tracking participants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-182">Stan bieżącej operacji śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-182">The status of the current track operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="81c64-183">Metoda wywoływana, gdy operacja utrwalanie została zakończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-183">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="81c64-184">Opcjonalne obiekt specyficzne dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-184">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-185">Asynchroniczne wywołanie poprosić hosta, aby utrwalić przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-185">Asynchronous call to ask the host to persist the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-186">Odwołanie do bieżącej operacji są zachowywane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-186">A reference to the current persist operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="81c64-187">Zakładki, aby wznowić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-187">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="81c64-188">Dane, które mają być przekazywane do działania, które utworzyło <see cref="T:System.Activities.Bookmark" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-188">The data to be passed to the activity that created the <see cref="T:System.Activities.Bookmark" />.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="81c64-189">Interwał, w którym przez operację wznawiania należy wykonać, zanim operacja została anulowana, a co <see cref="T:System.TimeoutException" /> zgłaszany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-189">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="81c64-190">Metoda wywoływana, gdy została zakończona przez operację wznawiania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-190">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="81c64-191">Opcjonalne obiekt specyficzne dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-191">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-192">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, który rozpoczyna operację wznowienie zakładki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-192">Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-193">Odwołanie do operacji wznowieniem asynchronicznym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-193">A reference to the asynchronous resume operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowInstance.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="81c64-194">Lista kluczy, aby usunąć skojarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-194">The list of keys to disassociate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-195">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, że określone wystąpienie klucze nie powinny już być skojarzone z tym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-195">Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81c64-196">Odwołanie do asynchroniczną kojarzenie kluczy operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-196">The reference to the asynchronous associate keys operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-197">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta o ukończeniu operacji kojarzenie kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-197">Called by the workflow runtime to notify the host that an associate keys operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndFlushTrackingRecords : IAsyncResult -&gt; unit&#xA;override this.OnEndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81c64-198">Stan asynchronicznego opróżniania operacji rekordów śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-198">The status of the asynchronous flush tracking records operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-199">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, po zakończeniu pracy opróżniania operacji rekordów śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-199">Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81c64-200">Odwołanie do asynchroniczną operację są zachowywane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-200">The reference to the asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-201">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta o ukończeniu operacji utrwalania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-201">Called by the workflow runtime to notify the host that a persist operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowInstance.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81c64-202">Odwołanie do operacji zakładki wznowieniem asynchronicznym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-202">The reference to the asynchronous resume bookmark operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-203">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta o ukończeniu operacji zakładki wznowienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-203">Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81c64-204">Jedną z wartości wyliczenia, które wskazuje wynik <see cref="T:System.Activities.Bookmark" /> wznawia działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-204">One of the enumeration values that indicates the result of a <see cref="T:System.Activities.Bookmark" /> resume operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyPaused : unit -&gt; unit" Usage="workflowInstance.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81c64-205">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, którego wystąpienie przepływu pracy przeszła ze stanu uruchomienia do stanu wstrzymania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-205">Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity source, string sourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ source, System::String ^ sourceInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowInstance.OnNotifyUnhandledException (exception, source, sourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="source" Type="System.Activities.Activity" />
        <Parameter Name="sourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="81c64-206">Nieobsługiwany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-206">The unhandled exception.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="81c64-207">Działanie, która zgłosiła wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-207">The activity that threw the exception.</span>
          </span>
        </param>
        <param name="sourceInstanceId">
          <span data-ttu-id="81c64-208">Unikatowy identyfikator <see cref="T:System.Activities.ActivityInstance" /> reprezentujący działania, który wygenerował wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-208">The unique identifier of the <see cref="T:System.Activities.ActivityInstance" /> representing the activity that threw the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-209">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, że wystąpił nieobsługiwany wyjątek w wystąpieniu przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-209">Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal abstract void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member OnRequestAbort : Exception -&gt; unit" Usage="workflowInstance.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="81c64-210">Przyczyna zostanie przerwany wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-210">The reason for aborting the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-211">Metoda wywoływana przez środowisko wykonawcze przepływów pracy w celu powiadomienia hosta, że zażądano operacji przerywania dla wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-211">Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c64-212">Gdy <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> jest wywoływana, większość <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> interfejsów API, z wyjątkiem <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> zgłosi <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="81c64-212">Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="81c64-213">Oczekuje się, że po <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> nosi nazwę hosta będzie trend kierunku stanu, w którym można spełniać przerwanie.</span><span class="sxs-lookup"><span data-stu-id="81c64-213">It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExtensionManager">
      <MemberSignature Language="C#" Value="protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterExtensionManager(class System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterExtensionManager (extensionManager As WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterExtensionManager(System::Activities::Hosting::WorkflowInstanceExtensionManager ^ extensionManager);" />
      <MemberSignature Language="F#" Value="member this.RegisterExtensionManager : System.Activities.Hosting.WorkflowInstanceExtensionManager -&gt; unit" Usage="workflowInstance.RegisterExtensionManager extensionManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionManager" Type="System.Activities.Hosting.WorkflowInstanceExtensionManager" />
      </Parameters>
      <Docs>
        <param name="extensionManager">
          <span data-ttu-id="81c64-214">W Menedżerze rozszerzeń, aby zarejestrować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-214">The extension manager to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81c64-215">Metoda wywoływana przez hosta do zarejestrować menedżera określonego rozszerzenia, zweryfikuj, czy wszystkie wymagane rozszerzenia są obecne i zainicjować Kolekcja rozszerzeń, które ma być używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-215">Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c64-216">Rozszerzenia są dostosowane przy typu i hostem, pod warunkiem, że rozszerzenie zawsze będzie używany, jeśli podano.</span><span class="sxs-lookup"><span data-stu-id="81c64-216">Extensions are keyed by type, and a host provided extension will always be used if provided.</span></span> <span data-ttu-id="81c64-217">Liczba dodanych za pośrednictwem rozszerzeń <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> używają typu środowiska uruchomieniowego obiektu jako klucz typu.</span><span class="sxs-lookup"><span data-stu-id="81c64-217">Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key.</span></span> <span data-ttu-id="81c64-218">Dostawcy rozszerzeń dodane za pomocą <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> Użyj decared typu T funkcję\<T > jako klucz typu.</span><span class="sxs-lookup"><span data-stu-id="81c64-218">Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\<T> as the type key.</span></span> <span data-ttu-id="81c64-219">Dostawców rozszerzeń, za pomocą różnych metod \*ActivityMetadata.AddDefaultExtensionProvider pochodzącego z działania są porzucane, jeśli rozszerzenie hosta istnieje zadeklarowanym typem lub występuje szerszy typ dostępne za pośrednictwem AddDefaultExtensionProvider (np.)</span><span class="sxs-lookup"><span data-stu-id="81c64-219">Extension providers contributed by activities through the various \*ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</span></span> <span data-ttu-id="81c64-220">Jeśli Func\<StreamWriter — > znajduje się i Func\<TextWriter > podano tylko Func\<StreamWriter — > zostaną zachowane).</span><span class="sxs-lookup"><span data-stu-id="81c64-220">if Func\<StreamWriter> is provided and Func\<TextWriter> is provided, only Func\<StreamWriter> will be kept).</span></span> <span data-ttu-id="81c64-221">Jeśli rozszerzenie nie istnieje w kolekcji, która jest wymagana przez działanie (wyrażona przez wywołanie metody \* ActivityMetadata.RequireExtension) <xref:System.Activities.ValidationException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="81c64-221">If an extension does not exist in the collection that is required by an activity (expressed by calling \*ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal abstract bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-222">Pobiera wartość wskazującą, czy host obsługuje skojarzenie <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> przy użyciu wystąpienia środowiska wykonawczego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-222">Gets a value that indicates whether the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a run-time instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-223">
            <see langword="true" /> Jeśli host obsługuje skojarzenie <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> z wystąpieniem przepływu pracy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-223">
              <see langword="true" /> if the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a workflow instance; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-224">Pobiera lub ustawia <see cref="T:System.Threading.SynchronizationContext" /> używana do planowania wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-224">Gets or sets the <see cref="T:System.Threading.SynchronizationContext" /> used for scheduling the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-225">Kontekst synchronizacji używane do planowania wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-225">The synchronization context used for scheduling the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c64-226">Jeśli ta właściwość jest ustawiona, po zainicjowaniu wystąpienia przepływu pracy i <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> zwraca `true`, <xref:System.InvalidOperationException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="81c64-226">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfReadOnly">
      <MemberSignature Language="C#" Value="protected void ThrowIfReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfReadOnly();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfReadOnly : unit -&gt; unit" Usage="workflowInstance.ThrowIfReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81c64-227">Zgłasza <see cref="T:System.InvalidOperationException" /> Jeśli wystąpienie przepływu pracy został zainicjowany, zgodnie z ustaleniami <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-227">Throws an <see cref="T:System.InvalidOperationException" /> if the workflow instance has been initialized, as determined by <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c64-228">Jeśli <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> zwraca `true`, a następnie <xref:System.InvalidOperationException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="81c64-228">If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity WorkflowDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity WorkflowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowDefinition As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ WorkflowDefinition { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowDefinition : System.Activities.Activity" Usage="System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81c64-229">Pobiera definicji przepływu pracy z wystąpieniem przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-229">Gets the workflow definition of the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81c64-230">Definicja przepływu pracy wystąpienie przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81c64-230">The workflow definition of the workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>