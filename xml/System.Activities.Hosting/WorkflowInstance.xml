<Type Name="WorkflowInstance" FullName="System.Activities.Hosting.WorkflowInstance">
  <TypeSignature Language="C#" Value="public abstract class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="397d6-101"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> jest lekki, środowiska uruchomieniowego na wystąpienie wykonywania przepływu pracy programu.</span><span class="sxs-lookup"><span data-stu-id="397d6-101"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> is a lightweight, per-instance runtime for executing a workflow program.</span></span> <span data-ttu-id="397d6-102">Może zostać zbudowana w celu utworzenia nowego wystąpienia przepływu pracy lub istniejącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="397d6-102">It can be constructed to create a new workflow instance or from existing instance state.</span></span> <span data-ttu-id="397d6-103">Interfejsy API który <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> ujawnia są minimalny zestaw kontrolek środowiska uruchomieniowego, z których można zaimplementować wyższej liczby operacji poziomu.</span><span class="sxs-lookup"><span data-stu-id="397d6-103">The APIs that <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</span></span> <span data-ttu-id="397d6-104">Ten zestaw interfejsu API reprezentuje cały szerokość funkcji środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="397d6-104">This API set represents the entire breadth of functionality of the runtime.</span></span> <span data-ttu-id="397d6-105"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> jest klasą abstrakcyjną i zależy od wykonania hosta jego metody abstrakcyjne zapewnić host funkcje, takie jak synchronizacji, utrwalania, śledzenia i rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-105"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="397d6-106"><xref:System.Activities.Hosting.WorkflowInstance> jest jednym wątku przyjęto założenie, że host synchronizuje wszystkie do niego dostęp.</span><span class="sxs-lookup"><span data-stu-id="397d6-106"><xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it.</span></span> <span data-ttu-id="397d6-107">Próba wywołania jednocześnie wiele interfejsów API spowoduje <xref:System.InvalidOperationException> został zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="397d6-107">An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.</span></span>  
  
 <span data-ttu-id="397d6-108">Wewnętrznie <xref:System.Activities.Hosting.WorkflowInstance> ma dwa stany: uruchamianie i wstrzymana.</span><span class="sxs-lookup"><span data-stu-id="397d6-108">Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused.</span></span> <span data-ttu-id="397d6-109">Jedynym sposobem, aby spowodować przejście ze środowiska uruchomieniowego Wstrzymano uruchomiona jest wywołanie <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="397d6-109">The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span> <span data-ttu-id="397d6-110">Wszystkie akcje (z wyjątkiem Wstrzymaj) może zostać pobrany, tylko gdy środowisko wykonawcze zostało wstrzymane.</span><span class="sxs-lookup"><span data-stu-id="397d6-110">All actions (except Pause) can only be taken while the runtime is Paused.</span></span> <span data-ttu-id="397d6-111">Środowisko uruchomieniowe stają się samorzutnie wstrzymana w następujących sytuacjach:</span><span class="sxs-lookup"><span data-stu-id="397d6-111">The runtime will become spontaneously Paused in the following situations:</span></span>  
  
-   <span data-ttu-id="397d6-112">Wystąpił błąd krytyczny do środowiska wykonawczego.</span><span class="sxs-lookup"><span data-stu-id="397d6-112">An error fatal to the runtime has occurred.</span></span> <span data-ttu-id="397d6-113">Host zostanie zasygnalizowane przez <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (który nie można sygnalizować przejście może zostać wstrzymana), a następnie powiadomienie za pośrednictwem <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span><span class="sxs-lookup"><span data-stu-id="397d6-113">The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span></span>  
  
-   <span data-ttu-id="397d6-114">Wystąpił wyjątek w przepływie pracy był nieprzechwycony i znaki ucieczki katalogu głównego.</span><span class="sxs-lookup"><span data-stu-id="397d6-114">An exception in the workflow was uncaught and escaped the root.</span></span> <span data-ttu-id="397d6-115">Host zostanie powiadomiony poprzez <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="397d6-115">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.</span></span>  
  
-   <span data-ttu-id="397d6-116">Planista ma za mało elementów roboczych i jest teraz <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span><span class="sxs-lookup"><span data-stu-id="397d6-116">The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span></span> <span data-ttu-id="397d6-117">Host zostanie powiadomiony poprzez <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="397d6-117">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method.</span></span> <span data-ttu-id="397d6-118">Należy pamiętać, że harmonogram może zabrakło elementów roboczych, ponieważ wystąpienie jest w stanie bezczynności lub wystąpienia jest pełny.</span><span class="sxs-lookup"><span data-stu-id="397d6-118">Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</span></span> <span data-ttu-id="397d6-119"><xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> Wartość <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwości może służyć do rozróżniania między nimi.</span><span class="sxs-lookup"><span data-stu-id="397d6-119">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.</span></span>  
  
 <span data-ttu-id="397d6-120">Host może żądanie zmiany uruchomienie wstrzymana przez wywołanie metody <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> lub <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> metody <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> zwrócone przez wystąpienie <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="397d6-120">The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property.</span></span> <span data-ttu-id="397d6-121">Nie należy traktować tego żądania ma określoną odpowiedź, co oznacza, że host nie należy próbować skorelowania OnNotify \* lub <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> z określonym wywołaniem wstrzymania.</span><span class="sxs-lookup"><span data-stu-id="397d6-121">This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify\* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause.</span></span> <span data-ttu-id="397d6-122">W odpowiedzi na żądanie wstrzymania, środowisko uruchomieniowe można przejść na wstrzymana i wywołanie <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> podczas planista ma nadal elementów roboczych oczekujących.</span><span class="sxs-lookup"><span data-stu-id="397d6-122">In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items.</span></span> <span data-ttu-id="397d6-123"><xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> Wartość <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwości można użyć do sprawdzenia, czy harmonogram ma nie więcej pracy został przerwany przez żądanie wstrzymania.</span><span class="sxs-lookup"><span data-stu-id="397d6-123">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</span></span>  
  
 <span data-ttu-id="397d6-124"><xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Metody <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> zwrócone przez wystąpienie <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> właściwość jest jedyną metodą, które można wywołać podczas <xref:System.Activities.Hosting.WorkflowInstance> jest w stanie działania.</span><span class="sxs-lookup"><span data-stu-id="397d6-124">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state.</span></span> <span data-ttu-id="397d6-125">Wszystkie inne metody spowoduje zgłoszenie <xref:System.InvalidOperationException> Jeśli wywołany. Podane zasady dotyczące <xref:System.Activities.Hosting.WorkflowInstance> przejść z jednego stanu do innego, publiczny pojęcie uruchomiona i wstrzymana można zdefiniować w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="397d6-125">All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</span></span>  
  
-   <span data-ttu-id="397d6-126">Uruchamianie — stan między wywołanie <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> i WorkflowInstance.OnNotify\* dalej.</span><span class="sxs-lookup"><span data-stu-id="397d6-126">Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify\*.</span></span>  
  
-   <span data-ttu-id="397d6-127">Wstrzymane — stan między ostatnim WorkflowInstance.OnNotify\* i następne wywołanie <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="397d6-127">Paused – The state between the last WorkflowInstance.OnNotify\* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="397d6-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Hosting.WorkflowInstance" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="397d6-128">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="397d6-129">Działanie, który definiuje przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-129">The activity that defines the workflow.</span></span></param>
        <summary><span data-ttu-id="397d6-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Hosting.WorkflowInstance" /> klasy z definicją określonego przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-130">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="397d6-131">Działanie, który definiuje przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-131">The activity that defines the workflow.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="397d6-132">Tożsamość definicji.</span><span class="sxs-lookup"><span data-stu-id="397d6-132">The definition identity.</span></span></param>
        <summary><span data-ttu-id="397d6-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Hosting.WorkflowInstance" /> z definicji określonego przepływu pracy i definicję tożsamości.</span><span class="sxs-lookup"><span data-stu-id="397d6-133">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginFlushTrackingRecords (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginFlushTrackingRecords(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="397d6-134">Okres, po którym próba przerwania.</span><span class="sxs-lookup"><span data-stu-id="397d6-134">The time period after which to abort the attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="397d6-135">Metoda wywoływana po wykonaniu operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-135">The method to be called when the track operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="397d6-136">Informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="397d6-136">The information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="397d6-137">Wywoływane przez środowisko uruchomieniowe przepływu pracy, aby rozpocząć wysyłanie oczekujących śledzenie rekordów asynchronicznie Śledzenie uczestników.</span><span class="sxs-lookup"><span data-stu-id="397d6-137">Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</span></span></summary>
        <returns><span data-ttu-id="397d6-138">Stan bieżącej operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-138">The status of the current track operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl Controller" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Controller As WorkflowInstance.WorkflowInstanceControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl Controller { System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-139">Pobiera <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> wystąpienia tego <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-139">Gets the <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> instance for this <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span></span></summary>
        <value><span data-ttu-id="397d6-140">Wystąpienie kontrolera dla tego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-140">The controller instance for this workflow instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinitionIdentity">
      <MemberSignature Language="C#" Value="public System.Activities.WorkflowIdentity DefinitionIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.WorkflowIdentity DefinitionIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefinitionIdentity As WorkflowIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::WorkflowIdentity ^ DefinitionIdentity { System::Activities::WorkflowIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-141">Pobiera lub ustawia tożsamość definicji <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-141">Gets or sets the definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span></span></summary>
        <value><span data-ttu-id="397d6-142">Tożsamość definicji <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-142">The definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeExtensions">
      <MemberSignature Language="C#" Value="protected void DisposeExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisposeExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisposeExtensions ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisposeExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="397d6-143">Wywołania <see cref="M:System.Disposable.Dispose" /> na wszystkie rozszerzenia, które implementują <see cref="T:System.IDisposable" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-143">Calls <see cref="M:System.Disposable.Dispose" /> on all extensions that implement <see cref="T:System.IDisposable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="397d6-144">Stan operacji asynchronicznej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="397d6-144">The status of the asynchronous track operation.</span></span></param>
        <summary><span data-ttu-id="397d6-145">Wywoływane przez środowisko uruchomieniowe przepływu pracy, aby zakończyć operację śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-145">Called by the workflow runtime to end the track operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub FlushTrackingRecords (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void FlushTrackingRecords(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="397d6-146">Okres, po którym próba przerwania.</span><span class="sxs-lookup"><span data-stu-id="397d6-146">The time period after which to abort the attempt.</span></span></param>
        <summary><span data-ttu-id="397d6-147">Wywoływane przez środowisko uruchomieniowe przepływu pracy do wysłania oczekujących śledzenie rekordów Śledzenie uczestników.</span><span class="sxs-lookup"><span data-stu-id="397d6-147">Called by the workflow runtime to send pending tracking records to tracking participants.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivitiesBlockingUpdate">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetActivitiesBlockingUpdate (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap) As IList(Of ActivityBlockingUpdate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ GetActivitiesBlockingUpdate(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState"><span data-ttu-id="397d6-148">Stan środowiska uruchomieniowego zdeserializowany.</span><span class="sxs-lookup"><span data-stu-id="397d6-148">The deserialized runtime state.</span></span></param>
        <param name="updateMap"><span data-ttu-id="397d6-149">Mapa aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="397d6-149">The update map.</span></span></param>
        <summary><span data-ttu-id="397d6-150">Pobiera listę działań, która blokuje aktualizacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-150">Retrieves the list of activity that is blocking the update of the workflow.</span></span></summary>
        <returns><span data-ttu-id="397d6-151">Lista działań, która blokuje aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="397d6-151">The list of activity that is blocking the update.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal T GetExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance !!T GetExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtension(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetExtension();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="397d6-152">Typ rozszerzenia można znaleźć.</span><span class="sxs-lookup"><span data-stu-id="397d6-152">The type of the extension to find.</span></span></typeparam>
        <summary><span data-ttu-id="397d6-153">Zwraca rozszerzenie określonego typu.</span><span class="sxs-lookup"><span data-stu-id="397d6-153">Returns an extension of the specified type.</span></span></summary>
        <returns><span data-ttu-id="397d6-154">Rozszerzenie określonego typu.</span><span class="sxs-lookup"><span data-stu-id="397d6-154">An extension of the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IEnumerable&lt;T&gt; GetExtensions&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExtensions&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtensions(Of T As Class) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="397d6-155">Typ rozszerzenia można znaleźć.</span><span class="sxs-lookup"><span data-stu-id="397d6-155">The type of the extension to find.</span></span></typeparam>
        <summary><span data-ttu-id="397d6-156">Zwraca wszystkie rozszerzenia znaleziono dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="397d6-156">Returns all extensions found for the specified type.</span></span></summary>
        <returns><span data-ttu-id="397d6-157">Wszystkie rozszerzenia znaleziono dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="397d6-157">All extensions found for the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostEnvironment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment HostEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Property HostEnvironment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ HostEnvironment { System::Activities::LocationReferenceEnvironment ^ get(); void set(System::Activities::LocationReferenceEnvironment ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-158">Pobiera lub ustawia środowisko głównego dla argumentów i zmienne wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-158">Gets or sets the root environment for the workflow instance’s arguments and variables.</span></span></summary>
        <value><span data-ttu-id="397d6-159">Środowisko głównego dla argumentów i zmienne wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-159">The root environment for the workflow instance’s arguments and variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="397d6-160">Jeśli ta właściwość jest ustawiona, po zainicjowaniu wystąpienia przepływu pracy i <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> zwraca `true`, <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="397d6-160">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-161">Pobiera unikatowy identyfikator dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-161">Gets the unique identifier for the workflow instance.</span></span></summary>
        <value><span data-ttu-id="397d6-162">Unikatowy identyfikator wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-162">The unique identifier for the workflow instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="397d6-163">Wywołanie przez hosta do inicjowania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-163">Called by the host to initialize the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState"><span data-ttu-id="397d6-164">Stan czasu wykonywania, używany do wykonania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-164">The run-time state used to execute the workflow.</span></span></param>
        <summary><span data-ttu-id="397d6-165">Wywołanie przez hosta do inicjowania wystąpienia przepływu pracy ze stanu czasu wykonywania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-165">Called by the host to initialize the workflow instance with the workflow run-time state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.Collections.Generic.IDictionary&lt;string,object&gt; workflowArgumentValues, System.Collections.Generic.IList&lt;System.Activities.Handle&gt; workflowExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; workflowArgumentValues, class System.Collections.Generic.IList`1&lt;class System.Activities.Handle&gt; workflowExecutionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (workflowArgumentValues As IDictionary(Of String, Object), workflowExecutionProperties As IList(Of Handle))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ workflowArgumentValues, System::Collections::Generic::IList&lt;System::Activities::Handle ^&gt; ^ workflowExecutionProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowArgumentValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="workflowExecutionProperties" Type="System.Collections.Generic.IList&lt;System.Activities.Handle&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowArgumentValues"><span data-ttu-id="397d6-166">Parametry wejściowe w przepływie pracy, wyznaczaną przez Nazwa argumentu.</span><span class="sxs-lookup"><span data-stu-id="397d6-166">The input parameters to the workflow, keyed by argument name.</span></span></param>
        <param name="workflowExecutionProperties"><span data-ttu-id="397d6-167">Lista właściwości wykonania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-167">The list of workflow execution properties.</span></span></param>
        <summary><span data-ttu-id="397d6-168">Wywołanie przez hosta do inicjowania wystąpienia przepływu pracy z wartości argumentów i właściwości wykonania.</span><span class="sxs-lookup"><span data-stu-id="397d6-168">Called by the host to initialize the workflow instance with the argument values and execution properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState"><span data-ttu-id="397d6-169">Stan czasu wykonywania, używany do wykonania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-169">The run-time state used to execute the workflow.</span></span></param>
        <param name="updateMap"><span data-ttu-id="397d6-170">Mapa aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="397d6-170">The update map.</span></span></param>
        <summary><span data-ttu-id="397d6-171">Wywołanie przez hosta do zainicjowania wystąpienia przepływu pracy ze stanu czasu wykonywania przepływu pracy i aktualizować mapy.</span><span class="sxs-lookup"><span data-stu-id="397d6-171">Called by the host to initialize the workflow instance with the workflow run-time state and update map.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-172">Pobiera wartość wskazującą, czy wystąpienie przepływu pracy zostało zainicjowane.</span><span class="sxs-lookup"><span data-stu-id="397d6-172">Gets a value that indicates whether the workflow instance has been initialized.</span></span></summary>
        <value>
          <span data-ttu-id="397d6-173"><see langword="true" /> Jeśli wystąpienie przepływu pracy zostało zainicjowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-173"><see langword="true" /> if the workflow instance has been initialized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="397d6-174">Klucze wystąpienia do skojarzenia z tym wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-174">The instance keys to associate with this workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="397d6-175">Metoda wywoływana po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="397d6-175">The method to be called when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="397d6-176">Opcjonalne obiekt specyficzne dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="397d6-176">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="397d6-177">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta, że nowe klucze wystąpienia powinna być skojarzona z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="397d6-177">Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</span></span></summary>
        <returns><span data-ttu-id="397d6-178">Odwołanie do asynchroniczną skojarzyć operacji kluczy.</span><span class="sxs-lookup"><span data-stu-id="397d6-178">A reference to the asynchronous associate keys operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginFlushTrackingRecords(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginFlushTrackingRecords (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginFlushTrackingRecords(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="397d6-179">Metoda wywoływana po wykonaniu operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-179">The method to be called when the track operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="397d6-180">Informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="397d6-180">The information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="397d6-181">Asynchroniczne wywołanie poprosić hosta, aby opróżnić oczekujących śledzenie rekordów Śledzenie uczestników.</span><span class="sxs-lookup"><span data-stu-id="397d6-181">Asynchronous call to ask host to flush pending tracking records to tracking participants.</span></span></summary>
        <returns><span data-ttu-id="397d6-182">Stan bieżącej operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-182">The status of the current track operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="397d6-183">Metoda wywoływana po wykonaniu operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="397d6-183">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="397d6-184">Opcjonalne obiekt specyficzne dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="397d6-184">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="397d6-185">Asynchroniczne wywołanie poprosić hosta, aby utrwalić przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-185">Asynchronous call to ask the host to persist the workflow.</span></span></summary>
        <returns><span data-ttu-id="397d6-186">Odwołanie do bieżącego utrwalić operacji.</span><span class="sxs-lookup"><span data-stu-id="397d6-186">A reference to the current persist operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="397d6-187">Zakładka wznowienia.</span><span class="sxs-lookup"><span data-stu-id="397d6-187">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="397d6-188">Dane do przekazania do działania, które utworzyło <see cref="T:System.Activities.Bookmark" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-188">The data to be passed to the activity that created the <see cref="T:System.Activities.Bookmark" />.</span></span></param>
        <param name="timeout"><span data-ttu-id="397d6-189">Interwał przez operację wznawiania należy wykonać, zanim operacja została anulowana, a co <see cref="T:System.TimeoutException" /> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="397d6-189">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="397d6-190">Metoda wywoływana po wykonaniu operacji wznowienia.</span><span class="sxs-lookup"><span data-stu-id="397d6-190">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="397d6-191">Opcjonalne obiekt specyficzne dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="397d6-191">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="397d6-192">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta, który rozpoczyna operację zakładki wznawiania.</span><span class="sxs-lookup"><span data-stu-id="397d6-192">Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</span></span></summary>
        <returns><span data-ttu-id="397d6-193">Odwołanie do operacji asynchronicznych wznowienia.</span><span class="sxs-lookup"><span data-stu-id="397d6-193">A reference to the asynchronous resume operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="397d6-194">Lista kluczy, aby usunąć skojarzenie.</span><span class="sxs-lookup"><span data-stu-id="397d6-194">The list of keys to disassociate.</span></span></param>
        <summary><span data-ttu-id="397d6-195">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta, że określone klucze wystąpienia nie powinny już być skojarzone z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="397d6-195">Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="397d6-196">Odwołanie do asynchroniczną skojarzyć operacji kluczy.</span><span class="sxs-lookup"><span data-stu-id="397d6-196">The reference to the asynchronous associate keys operation.</span></span></param>
        <summary><span data-ttu-id="397d6-197">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta o ukończeniu operacji kojarzenie kluczy.</span><span class="sxs-lookup"><span data-stu-id="397d6-197">Called by the workflow runtime to notify the host that an associate keys operation is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="397d6-198">Stan asynchronicznego opróżniania rekordów operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-198">The status of the asynchronous flush tracking records operation.</span></span></param>
        <summary><span data-ttu-id="397d6-199">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta po zakończeniu opróżniania rekordów operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="397d6-199">Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="397d6-200">Odwołanie do asynchroniczną utrwalić operacji.</span><span class="sxs-lookup"><span data-stu-id="397d6-200">The reference to the asynchronous persist operation.</span></span></param>
        <summary><span data-ttu-id="397d6-201">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta o ukończeniu operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="397d6-201">Called by the workflow runtime to notify the host that a persist operation is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="397d6-202">Odwołanie do wznowienia asynchronicznych operacji zakładki.</span><span class="sxs-lookup"><span data-stu-id="397d6-202">The reference to the asynchronous resume bookmark operation.</span></span></param>
        <summary><span data-ttu-id="397d6-203">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta o ukończeniu operacji wznawiania zakładki.</span><span class="sxs-lookup"><span data-stu-id="397d6-203">Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</span></span></summary>
        <returns><span data-ttu-id="397d6-204">Jedną z wartości wyliczenia, które wskazuje wynik <see cref="T:System.Activities.Bookmark" /> wznawia działania.</span><span class="sxs-lookup"><span data-stu-id="397d6-204">One of the enumeration values that indicates the result of a <see cref="T:System.Activities.Bookmark" /> resume operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="397d6-205">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta, którego wystąpienia przepływu pracy przeszła ze stanu uruchomienia do stanu wstrzymania.</span><span class="sxs-lookup"><span data-stu-id="397d6-205">Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity source, string sourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ source, System::String ^ sourceInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="source" Type="System.Activities.Activity" />
        <Parameter Name="sourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="397d6-206">Nieobsługiwany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="397d6-206">The unhandled exception.</span></span></param>
        <param name="source"><span data-ttu-id="397d6-207">Działanie, która zgłosiła wyjątek.</span><span class="sxs-lookup"><span data-stu-id="397d6-207">The activity that threw the exception.</span></span></param>
        <param name="sourceInstanceId"><span data-ttu-id="397d6-208">Unikatowy identyfikator <see cref="T:System.Activities.ActivityInstance" /> reprezentujący działania, która zgłosiła wyjątek.</span><span class="sxs-lookup"><span data-stu-id="397d6-208">The unique identifier of the <see cref="T:System.Activities.ActivityInstance" /> representing the activity that threw the exception.</span></span></param>
        <summary><span data-ttu-id="397d6-209">Metoda wywoływana przez hosta powiadomi Wystąpił nieobsługiwany wyjątek w wystąpieniu przepływu pracy środowiska uruchomieniowego przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-209">Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal abstract void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnRequestAbort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="397d6-210">Przyczyna przerywanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-210">The reason for aborting the workflow instance.</span></span></param>
        <summary><span data-ttu-id="397d6-211">Wywoływane przez środowisko uruchomieniowe przepływu pracy do powiadamiania hosta, że zażądano operacji przerwania dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-211">Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="397d6-212">Raz <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> jest nazywany większość <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> interfejsów API, z wyjątkiem <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> zgłosi <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="397d6-212">Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="397d6-213">Oczekuje się, że po <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> nosi nazwę hosta będzie trend kierunku stanu, w którym mogą spełniać przerwanie.</span><span class="sxs-lookup"><span data-stu-id="397d6-213">It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExtensionManager">
      <MemberSignature Language="C#" Value="protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterExtensionManager(class System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterExtensionManager (extensionManager As WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterExtensionManager(System::Activities::Hosting::WorkflowInstanceExtensionManager ^ extensionManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionManager" Type="System.Activities.Hosting.WorkflowInstanceExtensionManager" />
      </Parameters>
      <Docs>
        <param name="extensionManager"><span data-ttu-id="397d6-214">Menedżer rozszerzenia, aby zarejestrować.</span><span class="sxs-lookup"><span data-stu-id="397d6-214">The extension manager to register.</span></span></param>
        <summary><span data-ttu-id="397d6-215">Metoda wywoływana przez hosta, aby zarejestrować menedżera określonego rozszerzenia, zweryfikuj, czy wszystkie wymagane rozszerzenia są obecne i zainicjować kolekcji rozszerzeń do użycia.</span><span class="sxs-lookup"><span data-stu-id="397d6-215">Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="397d6-216">Rozszerzenia określonemu według typu i hosta, pod warunkiem, że rozszerzenie zawsze zostaną użyte, jeśli podana.</span><span class="sxs-lookup"><span data-stu-id="397d6-216">Extensions are keyed by type, and a host provided extension will always be used if provided.</span></span> <span data-ttu-id="397d6-217">Dodane za pośrednictwem rozszerzenia <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> użyć typu środowiska uruchomieniowego obiektu jako typ klucza.</span><span class="sxs-lookup"><span data-stu-id="397d6-217">Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key.</span></span> <span data-ttu-id="397d6-218">Dostawcy rozszerzeń dodane za pośrednictwem <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> decared typ T funkcję\<T > jako typ klucza.</span><span class="sxs-lookup"><span data-stu-id="397d6-218">Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\<T> as the type key.</span></span> <span data-ttu-id="397d6-219">Zamieszczone przez działania przy użyciu różnych metod \*ActivityMetadata.AddDefaultExtensionProvider dostawców rozszerzeń są usuwane, jeśli rozszerzenia hosta nie istnieje dla typu zadeklarowany lub jest typem szerszych realizowane za pośrednictwem AddDefaultExtensionProvider (np.</span><span class="sxs-lookup"><span data-stu-id="397d6-219">Extension providers contributed by activities through the various \*ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</span></span> <span data-ttu-id="397d6-220">Jeśli Func\<StreamWriter > podano i Func\<TextWriter > jest dostępne tylko Func\<StreamWriter > zostaną zachowane).</span><span class="sxs-lookup"><span data-stu-id="397d6-220">if Func\<StreamWriter> is provided and Func\<TextWriter> is provided, only Func\<StreamWriter> will be kept).</span></span> <span data-ttu-id="397d6-221">Jeśli rozszerzenie nie istnieje w kolekcji, która jest wymagana przez działanie (wyrażonych przez wywołanie metody \* ActivityMetadata.RequireExtension) <xref:System.Activities.ValidationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="397d6-221">If an extension does not exist in the collection that is required by an activity (expressed by calling \*ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal abstract bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property bool SupportsInstanceKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-222">Pobiera wartość wskazującą, czy host obsługuje skojarzenie <see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /> z wystąpieniem środowiska wykonawczego.</span><span class="sxs-lookup"><span data-stu-id="397d6-222">Gets a value that indicates whether the host supports the association of <see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /> with a run-time instance.</span></span></summary>
        <value>
          <span data-ttu-id="397d6-223"><see langword="true" /> Jeśli host obsługuje skojarzenie <see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /> z wystąpieniem przepływu pracy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-223"><see langword="true" /> if the host supports the association of <see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /> with a workflow instance; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-224">Pobiera lub ustawia <see cref="T:System.Threading.SynchronizationContext" /> używane do planowania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-224">Gets or sets the <see cref="T:System.Threading.SynchronizationContext" /> used for scheduling the workflow instance.</span></span></summary>
        <value><span data-ttu-id="397d6-225">Kontekst synchronizacji używane do planowania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-225">The synchronization context used for scheduling the workflow instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="397d6-226">Jeśli ta właściwość jest ustawiona, po zainicjowaniu wystąpienia przepływu pracy i <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> zwraca `true`, <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="397d6-226">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfReadOnly">
      <MemberSignature Language="C#" Value="protected void ThrowIfReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="397d6-227">Zgłasza wyjątek <see cref="T:System.InvalidOperationException" /> Jeśli wystąpienie przepływu pracy zostało zainicjowane, zgodnie z ustaleniami <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="397d6-227">Throws an <see cref="T:System.InvalidOperationException" /> if the workflow instance has been initialized, as determined by <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="397d6-228">Jeśli <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> zwraca `true`, a następnie <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="397d6-228">If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity WorkflowDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity WorkflowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowDefinition As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ WorkflowDefinition { System::Activities::Activity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="397d6-229">Pobiera definicję przepływu pracy z wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-229">Gets the workflow definition of the workflow instance.</span></span></summary>
        <value><span data-ttu-id="397d6-230">Definicja przepływu pracy wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="397d6-230">The workflow definition of the workflow instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>