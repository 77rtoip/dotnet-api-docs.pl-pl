<Type Name="PipeSecurity" FullName="System.IO.Pipes.PipeSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6395ffca711bde2a83b68a0c3787b250ead66c5b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69244326" /></Metadata><TypeSignature Language="C#" Value="public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipeSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeSecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class PipeSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeSecurity : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type PipeSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kontrolę dostępu i zabezpieczenia inspekcji dla potoku.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity> Klasa określa prawa dostępu do potoku oraz sposób inspekcji prób dostępu.  Ta klasa reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.IO.Pipes.PipeAccessRule> obiekt, podczas gdy Każda reguła inspekcji jest reprezentowana <xref:System.IO.Pipes.PipeAuditRule> przez obiekt.  
  
 <xref:System.IO.Pipes.PipeSecurity> Klasa jest abstrakcją podstawowego systemu zabezpieczeń plików systemu Microsoft Windows. W tym systemie każdy potok ma poufną listę kontroli dostępu (DACL), która kontroluje dostęp do potoku oraz systemową listę kontroli dostępu (SACL), która określa inspekcje kontroli dostępu.  Klasy <xref:System.IO.Pipes.PipeAccessRule> i<xref:System.IO.Pipes.PipeAuditRule> są abstrakcją wpisów kontroli dostępu (ACE), które składają się na listy DACL i SACL.  
  
 <xref:System.IO.Pipes.PipeSecurity> Klasa ukrywa wiele szczegółów list DACL i SACL; nie trzeba martwić się o kolejność wpisów ACE ani na listy DACL o wartości null.  
  
 <xref:System.IO.Pipes.PipeSecurity> Użyj klasy, aby pobrać, dodać lub zmienić reguły dostępu reprezentujące listę DACL i listę SACL potoku.  
  
 Aby zachować nowe lub zmienione reguły dostępu lub inspekcji do potoku, użyj <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> metody. Aby pobrać reguły dostępu lub inspekcji z istniejącego pliku, należy użyć <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> metody.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PipeSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.PipeSecurity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy pusty <xref:System.IO.Pipes.PipeSecurity> obiekt, który nie jest oparty na istniejącym potoku. Następnie można wypełnić obiekt informacjami o kontroli dostępu i zastosować go do potoku.  
  
 Można dodać reguły dostępu lub inspekcji do <xref:System.IO.Pipes.PipeSecurity> obiektu <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> za pomocą metody. Reguły dostępu lub inspekcji można usunąć przy użyciu <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> metody.  
  
 Aby zachować nowe lub zmienione reguły dostępu lub inspekcji do potoku, użyj <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> metody. Aby pobrać reguły dostępu lub inspekcji z istniejącego pliku, należy użyć <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt zabezpieczany, który jest skojarzony z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem. <see cref="T:System.Type" /></summary>
        <value>Typ zabezpieczanego obiektu, który jest skojarzony z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą od <xref:System.Security.AccessControl.ObjectSecurity> klasy <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> przesłaniają Właściwość i zwracają typ, którego używają do reprezentowania praw dostępu. Podczas pracy z tablicami lub kolekcjami, które zawierają wiele typów obiektów zabezpieczeń, Użyj tej właściwości, aby określić poprawny typ wyliczenia do użycia z każdym obiektem zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="pipeSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Tożsamość stosowana przez regułę dostępu. Musi być obiektem, który może być rzutowany jako <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiekt.</param>
        <param name="accessMask">Maska dostępu tej reguły. Maska dostępu to 32-bitowa kolekcja anonimowych bitów, której znaczenie jest zdefiniowane przez poszczególne Integratory</param>
        <param name="isInherited"><see langword="true" />Jeśli ta reguła jest dziedziczona z kontenera nadrzędnego; w przeciwnym razie. <see langword="false" /></param>
        <param name="inheritanceFlags">Jedna z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, która określa właściwości dziedziczenia reguły dostępu.</param>
        <param name="propagationFlags">Jedna z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, która określa, czy dziedziczone reguły dostępu są automatycznie propagowane. Flagi propagacji są ignorowane, jeśli <paramref name="inheritanceFlags" /> jest ustawiona na <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
        <param name="type">Określa prawidłowy typ kontroli dostępu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.AccessRule" /> klasy z określonymi wartościami.</summary>
        <returns><see cref="T:System.Security.AccessControl.AccessRule" /> Obiekt tworzony przez tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecanym sposobem tworzenia reguł kontroli dostępu jest użycie konstruktorów <xref:System.IO.Pipes.PipeAccessRule> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> lub<paramref name="type" /> określa nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="accessMask" />ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" />nie jest typem <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani typu, takim jak <see cref="T:System.Security.Principal.NTAccount" />, który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który jest skojarzony z regułami dostępu bieżącego <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektu. <see cref="T:System.Type" /></summary>
        <value>Typ obiektu, który jest skojarzony z regułami dostępu bieżącego <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą od <xref:System.Security.AccessControl.ObjectSecurity> klasy <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> przesłaniają Właściwość i zwracają typ, którego używają do reprezentowania praw dostępu. Podczas pracy z tablicami lub kolekcjami, które zawierają wiele typów obiektów zabezpieczeń, Użyj tej właściwości, aby określić poprawny typ wyliczenia do użycia z każdym obiektem zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do dodania.</param>
        <summary>Dodaje regułę dostępu do listy arbitralnej Access Control (DACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje nową regułę do listy reguł <xref:System.IO.Pipes.PipeSecurity> , które zawiera obiekt. <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> Jeśli lista kontroli dostępu (ACL) już istnieje dla określonej reguły, <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> metoda nadal doda regułę z jednym wyjątkiem <xref:System.IO.Pipes.PipeAccessRule> : obiekt <xref:System.Security.AccessControl.AccessControlType.Deny> , który jest tworzony przy użyciu wartości, zastępuje obiekt, który jest tworzony za pomocą <xref:System.Security.AccessControl.AccessControlType.Allow> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do dodania.</param>
        <summary>Dodaje regułę inspekcji do listy Access Control systemu (SACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje nową regułę inspekcji do listy reguł <xref:System.IO.Pipes.PipeSecurity> , które zawiera obiekt. <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A>  
  
 Jeśli reguła inspekcji już istnieje dla określonej reguły, <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> metoda nadal będzie dodawać regułę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="pipeSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Tożsamość stosowana przez regułę dostępu. Musi być obiektem, który może być rzutowany jako <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiekt.</param>
        <param name="accessMask">Maska dostępu tej reguły. Maska dostępu to 32-bitowa kolekcja anonimowych bitów, której znaczenie jest zdefiniowane przez poszczególne Integratory</param>
        <param name="isInherited"><see langword="true" />Jeśli ta reguła jest dziedziczona z kontenera nadrzędnego; w przeciwnym razie false.</param>
        <param name="inheritanceFlags">Jedna z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, która określa właściwości dziedziczenia reguły dostępu.</param>
        <param name="propagationFlags">Jedna z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, która określa, czy dziedziczone reguły dostępu są automatycznie propagowane. Flagi propagacji są ignorowane, jeśli <paramref name="inheritanceFlags" /> jest ustawiona na <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
        <param name="flags">Jedna z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, która określa prawidłowy typ kontroli dostępu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.AuditRule" /> klasy z określonymi wartościami.</summary>
        <returns><see cref="T:System.Security.AccessControl.AuditRule" /> Obiekt tworzony przez tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecanym sposobem tworzenia reguł inspekcji jest użycie konstruktorów <xref:System.IO.Pipes.PipeAuditRule> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwości <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />lub określająnieprawidłowąwartość.<paramref name="flags" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> Właściwość jest<see langword="null" />.  
  
—lub— 
<paramref name="accessMask" /> Właściwość ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException">Właściwość nie jest typem <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani typu, na przykład <see cref="T:System.Security.Principal.NTAccount" />, który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />. <paramref name="identityReference" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt skojarzony z regułami inspekcji bieżącego <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektu. <see cref="T:System.Type" /></summary>
        <value>Typ obiektu, który jest skojarzony z regułami inspekcji bieżącego <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą od <xref:System.Security.AccessControl.ObjectSecurity> klasy <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> przesłaniają Właściwość i zwracają typ, którego używają do reprezentowania praw dostępu. Podczas pracy z tablicami lub kolekcjami, które zawierają wiele typów obiektów zabezpieczeń, Użyj tej właściwości, aby określić poprawny typ wyliczenia do użycia z każdym obiektem zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje określone sekcje deskryptora zabezpieczeń, które są skojarzone z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem do magazynu trwałego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (handle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="override this.Persist : System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="pipeSecurity.Persist handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">Dojście zabezpieczanego obiektu, z którym skojarzony <see cref="T:System.IO.Pipes.PipeSecurity" /> jest bieżący obiekt.</param>
        <summary>Zapisuje określone sekcje deskryptora zabezpieczeń, które są skojarzone z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem do magazynu trwałego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.Persist : string -&gt; unit" Usage="pipeSecurity.Persist name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zabezpieczanego obiektu, z którym skojarzony jest <see cref="T:System.IO.Pipes.PipeSecurity" /> bieżący obiekt.</param>
        <summary>Zapisuje określone sekcje deskryptora zabezpieczeń, które są skojarzone z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem do magazynu trwałego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As PipeAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.IO.Pipes.PipeAccessRule -&gt; bool" Usage="pipeSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do usunięcia.</param>
        <summary>Usuwa regułę dostępu z listy arbitralnej Access Control (DACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <returns><see langword="true" />Jeśli operacja się powiedzie; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.IO.Pipes.PipeSecurity> obiektu. <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> Można na przykład użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć wszystkie reguły dostępu dla użytkownika przez <xref:System.IO.Pipes.PipeAccessRule> przekazanie obiektu utworzonego <xref:System.IO.Pipes.PipeAccessRights.Read> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika. Metoda usuwa wszystkie reguły Odmów, które <xref:System.IO.Pipes.PipeAccessRights.Read> określają wartość lub <xref:System.IO.Pipes.PipeAccessRights.Write> wartość. <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do usunięcia.</param>
        <summary>Usuwa określoną regułę dostępu z listy arbitralnej Access Control (DACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.IO.Pipes.PipeSecurity> obiektu. <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> Można na przykład użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć wszystkie reguły dostępu dla użytkownika przez <xref:System.IO.Pipes.PipeAccessRule> przekazanie obiektu utworzonego <xref:System.IO.Pipes.PipeAccessRights.Read> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika. Metoda usuwa wszystkie reguły Odmów, które <xref:System.IO.Pipes.PipeAccessRights.Read> określają wartość lub <xref:System.IO.Pipes.PipeAccessRights.Write> wartość. <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As PipeAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.IO.Pipes.PipeAuditRule -&gt; bool" Usage="pipeSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do usunięcia.</param>
        <summary>Usuwa regułę inspekcji z listy Access Control systemu (SACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <returns><see langword="true" />Jeśli reguła inspekcji została usunięta; przypadku<see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> reguły inspekcji lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> reguły inspekcji z bieżącego <xref:System.IO.Pipes.PipeSecurity> obiektu. <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A>  Na przykład można użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć wszystkie reguły inspekcji dla użytkownika przez <xref:System.Security.AccessControl.FileSystemAuditRule> przekazanie obiektu utworzonego <xref:System.Security.AccessControl.AuditFlags.Failure> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika.  Gdy to zrobisz, <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> Metoda usuwa wszystkie reguły Odmów, które <xref:System.Security.AccessControl.AuditFlags.Failure> określają wartość lub <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do usunięcia.</param>
        <summary>Usuwa wszystkie reguły inspekcji mające taki sam identyfikator zabezpieczeń co określona reguła inspekcji z listy Access Control systemu (SACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> Metoda usuwa wszystkie reguły inspekcji dla określonego użytkownika.  Ignoruje wszystkie wartości w <xref:System.IO.Pipes.PipeAuditRule> obiekcie z wyjątkiem konta użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do usunięcia.</param>
        <summary>Usuwa określoną regułę inspekcji z listy Access Control systemu (SACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa określoną pasującą <xref:System.Security.AccessControl.AccessControlType.Deny> regułę inspekcji lub określoną zgodną <xref:System.Security.AccessControl.AccessControlType.Allow> regułę inspekcji z bieżącego <xref:System.IO.Pipes.PipeSecurity> obiektu. <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A>  Na przykład można użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć określoną regułę inspekcji dla użytkownika przez <xref:System.Security.AccessControl.FileSystemAuditRule> przekazanie obiektu utworzonego <xref:System.Security.AccessControl.AuditFlags.Failure> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika.  Gdy to zrobisz, <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> Metoda usunie tylko regułę Odmów, która <xref:System.Security.AccessControl.AuditFlags.Failure> określa wartość.  Nie usuwa żadnych reguł Odmów, które określają <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do dodania.</param>
        <summary>Usuwa wszystkie reguły dostępu na liście arbitralnej Access Control (DACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem, a następnie dodaje określoną regułę dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje określoną regułę listy kontroli dostępu (ACL) lub zastępuje wszystkie identyczne reguły listy ACL, które pasują do `rule` parametru. <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A>  Na przykład, `rule` Jeśli parametr <xref:System.IO.Pipes.PipeAccessRights.Read> określa wartość, a <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> Metoda <xref:System.IO.Pipes.PipeAccessRights.Read> odnajdzie identyczną regułę listy ACL, która określa wartość, taka sama reguła zostanie nadpisana.  Jeśli metoda znajdzie identyczną regułę listy ACL, która <xref:System.IO.Pipes.PipeAccessRights.Write> określa wartość, identyczna reguła zostanie również nadpisywana. <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła do ustawienia.</param>
        <summary>Ustawia regułę dostępu na liście arbitralnego Access Control (DACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje określoną regułę listy kontroli dostępu (ACL) lub zastępuje wszystkie identyczne reguły listy ACL, które pasują do <xref:System.IO.Pipes.PipeAccessRights> wartości `rule` parametru. <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A>  Na przykład, `rule` Jeśli parametr <xref:System.IO.Pipes.PipeAccessRights.Read> określa wartość, a <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> Metoda <xref:System.IO.Pipes.PipeAccessRights.Read> odnajdzie identyczną regułę listy ACL, która określa wartość, taka sama reguła zostanie nadpisana.  Jeśli metoda znajdzie identyczną regułę listy ACL, która <xref:System.IO.Pipes.PipeAccessRights.Write> określa wartość, identyczna reguła nie zostanie nadpisana. <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła do ustawienia.</param>
        <summary>Ustawia regułę inspekcji na liście Access Control systemu (SACL), która jest skojarzona z bieżącym <see cref="T:System.IO.Pipes.PipeSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje określoną regułę inspekcji lub zastępuje wszystkie identyczne reguły inspekcji, które pasują do <xref:System.IO.Pipes.PipeAccessRights> wartości `rule` parametru. <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A>  Na przykład jeśli `rule` parametr <xref:System.IO.Pipes.PipeAccessRights.Read> określa wartość, a <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> Metoda <xref:System.IO.Pipes.PipeAccessRights.Read> odnajdzie identyczną regułę inspekcji, która określa wartość, identyczna reguła zostanie nadpisywana.  Jeśli metoda odnajdzie identyczną regułę inspekcji, która <xref:System.IO.Pipes.PipeAccessRights.Write> określa wartość, identyczna reguła nie zostanie zastępowana. <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
