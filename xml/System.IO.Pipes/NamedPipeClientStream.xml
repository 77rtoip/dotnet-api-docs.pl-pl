<Type Name="NamedPipeClientStream" FullName="System.IO.Pipes.NamedPipeClientStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8fafd7c051d23a6085c7fca74c7d67e26f5049c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485236" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NamedPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.NamedPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NamedPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamedPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type NamedPipeClientStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przedstawia <see cref="T:System.IO.Stream" /> wokół nazwany potok, który obsługuje synchroniczne i asynchroniczne operacje odczytu i zapisu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwane potoki zapewniają jednokierunkowe lub dupleks potoków do komunikacji między serwerem potoku i co najmniej jeden klient potoku. Nazwane potoki może służyć do komunikacji międzyprocesowej lokalnie lub za pośrednictwem sieci. Nazwa pojedynczego potoku mogą być współużytkowane przez wiele <xref:System.IO.Pipes.NamedPipeClientStream> obiektów.  
  
 Każdy proces może działać jako serwera potoków nazwanych lub klienta lub obie.  
  
> [!NOTE]
>  Aby uzyskać [!INCLUDE[winxppro](~/includes/winxppro-md.md)] i [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], maksymalnie 10 potoków mogą jednocześnie połączyć za pośrednictwem sieci.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób wysyłania ciąg z procesu nadrzędnego procesów podrzędnych na w tym samym komputerze przy użyciu nazwanych potoków. Ten przykład tworzy <xref:System.IO.Pipes.NamedPipeServerStream> obiekt w ramach procesu nadrzędnego. <xref:System.IO.Pipes.NamedPipeServerStream> Obiekt ma <xref:System.IO.Pipes.PipeDirection> wartość <xref:System.IO.Pipes.PipeDirection.Out>. Serwer czeka na <xref:System.IO.Pipes.NamedPipeClientStream> obiekt w ramach procesu podrzędnego się z nią połączyć. W tym przykładzie są oba procesy na tym samym komputerze i <xref:System.IO.Pipes.NamedPipeClientStream> obiekt ma <xref:System.IO.Pipes.PipeDirection> wartość <xref:System.IO.Pipes.PipeDirection.In>. Proces nadrzędny wysyła następnie ciągu podanego przez użytkownika do procesu podrzędnego. Ten ciąg jest wyświetlana w konsoli.  
  
 W tym przykładzie jest przez proces klienta, który jest połączony do procesu serwera. Dla przykładu całego kodu, w tym kod dla potoku klienta i serwera, zobacz [porady: użycie nazwanych potoków do sieciowej komunikacji międzyprocesowej](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ pipeName);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream pipeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeName">Nazwa potoku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> klasy o nazwie określonej potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor korzysta z następujących wartości domyślne:  
  
-   Domyślną nazwę serwera ".".  
  
-   Domyślnie <xref:System.IO.Pipes.PipeDirection> wartość <xref:System.IO.Pipes.PipeDirection.InOut>.  
  
-   Domyślnie <xref:System.IO.Pipes.PipeOptions> wartość <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Domyślnie <xref:System.Security.Principal.TokenImpersonationLevel> wartość <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Domyślnie <xref:System.IO.HandleInheritability> wartość <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string * string -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (serverName, pipeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serverName">Nazwa komputera zdalnego, aby nawiązać połączenie, lub ".", aby określić komputer lokalny.</param>
        <param name="pipeName">Nazwa potoku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> klasy z określonej nazwy potoku i serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor korzysta z następujących wartości domyślne:  
  
-   Domyślnie <xref:System.IO.Pipes.PipeDirection> wartość <xref:System.IO.Pipes.PipeDirection.InOut>.  
  
-   Domyślnie <xref:System.IO.Pipes.PipeOptions> wartość <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Domyślnie <xref:System.Security.Principal.TokenImpersonationLevel> wartość <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Domyślnie <xref:System.IO.HandleInheritability> wartość <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string * string * System.IO.Pipes.PipeDirection -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (serverName, pipeName, direction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="serverName">Nazwa komputera zdalnego, aby nawiązać połączenie, lub ".", aby określić komputer lokalny.</param>
        <param name="pipeName">Nazwa potoku.</param>
        <param name="direction">Jedna z wartości wyliczenia, które określa kierunek potoku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> klasy z określonej nazwy potoku i serwera, a kierunek określony potok.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor korzysta z następujących wartości domyślne:  
  
-   Domyślnie <xref:System.IO.Pipes.PipeOptions> wartość <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Domyślnie <xref:System.Security.Principal.TokenImpersonationLevel> wartość <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Domyślnie <xref:System.IO.HandleInheritability> wartość <xref:System.IO.HandleInheritability.None>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób wysyłania ciąg z procesu nadrzędnego do podrzędnego procesu używającego potoków nazwanych. Ten przykład tworzy <xref:System.IO.Pipes.NamedPipeClientStream> obiektu w procesie podrzędne, które następnie łączy do potoku na komputerze lokalnym. Przykład serwera są widoczne w <xref:System.IO.Pipes.NamedPipeServerStream> klasy. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.IO.Pipes.NamedPipeServerStream> i <xref:System.IO.Pipes.NamedPipeClientStream> klasy.  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".  - lub - <paramref name="direction" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeDirection" /> wartość.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::IO::Pipes::PipeDirection direction, bool isAsync, bool isConnected, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : System.IO.Pipes.PipeDirection * bool * bool * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (direction, isAsync, isConnected, safePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="isAsync" Type="System.Boolean" />
        <Parameter Name="isConnected" Type="System.Boolean" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">Jedna z wartości wyliczenia, które określa kierunek potoku.</param>
        <param name="isAsync">
          <see langword="true" /> Aby wskazać, że dojście zostało otwarte asynchronicznie; w przeciwnym razie <see langword="false" />.</param>
        <param name="isConnected">
          <see langword="true" /> Aby wskazać, że jest połączony potoku; w przeciwnym razie <see langword="false" />.</param>
        <param name="safePipeHandle">Sejfie obsługi dla potoku tego <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> będzie Hermetyzowanie obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> klasy dla dojścia potoku określonego kierunku określony potok.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">Strumień został zamknięty.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="safePipeHandle" /> nie jest prawidłowe.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="safePipeHandle" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="direction" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeDirection" /> wartość.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection, options As PipeOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeOptions options);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string * string * System.IO.Pipes.PipeDirection * System.IO.Pipes.PipeOptions -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (serverName, pipeName, direction, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
      </Parameters>
      <Docs>
        <param name="serverName">Nazwa komputera zdalnego, aby nawiązać połączenie, lub ".", aby określić komputer lokalny.</param>
        <param name="pipeName">Nazwa potoku.</param>
        <param name="direction">Jedna z wartości wyliczenia, które określa kierunek potoku.</param>
        <param name="options">Jedna z wartości wyliczenia, które określa, jak otworzyć lub utworzyć potoku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> z określonej nazwy potoku i serwera, a kierunek określony potok i opcje potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor korzysta z następujących wartości domyślne:  
  
-   Domyślnie <xref:System.Security.Principal.TokenImpersonationLevel> wartość <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Domyślnie <xref:System.IO.HandleInheritability> wartość <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".  - lub - <paramref name="direction" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeDirection" /> wartość.  - lub - <paramref name="options" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeOptions" /> wartość.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeOptions options, valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection, options As PipeOptions, impersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeOptions options, System::Security::Principal::TokenImpersonationLevel impersonationLevel);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string * string * System.IO.Pipes.PipeDirection * System.IO.Pipes.PipeOptions * System.Security.Principal.TokenImpersonationLevel -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (serverName, pipeName, direction, options, impersonationLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="serverName">Nazwa komputera zdalnego, aby nawiązać połączenie, lub ".", aby określić komputer lokalny.</param>
        <param name="pipeName">Nazwa potoku.</param>
        <param name="direction">Jedna z wartości wyliczenia, które określa kierunek potoku.</param>
        <param name="options">Jedna z wartości wyliczenia, które określa, jak otworzyć lub utworzyć potoku.</param>
        <param name="impersonationLevel">Jedna z wartości wyliczenia, które określa poziom personifikacji zabezpieczeń.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> z określonej nazwy potoku i serwera, a kierunek określony potok, opcje potoku i poziom personifikacji zabezpieczeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor korzysta z domyślnego <xref:System.IO.HandleInheritability> wartość <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".  - lub - <paramref name="direction" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeDirection" /> wartość.  - lub - <paramref name="options" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeOptions" /> wartość.  - lub - <paramref name="impersonationLevel" /> nie jest prawidłową <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> wartość.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeAccessRights desiredAccessRights, valuetype System.IO.Pipes.PipeOptions options, valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, desiredAccessRights As PipeAccessRights, options As PipeOptions, impersonationLevel As TokenImpersonationLevel, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeAccessRights desiredAccessRights, System::IO::Pipes::PipeOptions options, System::Security::Principal::TokenImpersonationLevel impersonationLevel, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string * string * System.IO.Pipes.PipeAccessRights * System.IO.Pipes.PipeOptions * System.Security.Principal.TokenImpersonationLevel * System.IO.HandleInheritability -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (serverName, pipeName, desiredAccessRights, options, impersonationLevel, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.Pipes.PipeAccessRights" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="serverName">Nazwa komputera zdalnego, aby nawiązać połączenie, lub ".", aby określić komputer lokalny.</param>
        <param name="pipeName">Nazwa potoku.</param>
        <param name="desiredAccessRights">Jedna z wartości wyliczenia, które określa prawa dostępu do żądanego potoku.</param>
        <param name="options">Jedna z wartości wyliczenia, które określa, jak otworzyć lub utworzyć potoku.</param>
        <param name="impersonationLevel">Jedna z wartości wyliczenia, które określa poziom personifikacji zabezpieczeń.</param>
        <param name="inheritability">Jedna z wartości wyliczenia, które określa, czy podstawowy dojścia będą dziedziczone przez procesy podrzędne.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> z określonej nazwy potoku i serwera, a opcje określony potok, poziom personifikacji zabezpieczeń i tryb inheritability.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kierunek potoku dla tego konstruktora jest określany przez `desiredAccessRights` parametru. Jeśli `desiredAccessRights` wartość jest <xref:System.IO.Pipes.PipeAccessRights.ReadData>, będzie kierunek potoku <xref:System.IO.Pipes.PipeDirection.In>. Jeśli wartość `desiredAccessRights` jest <xref:System.IO.Pipes.PipeAccessRights.WriteData>, będzie kierunek potoku <xref:System.IO.Pipes.PipeDirection.Out>. Jeśli wartość `desiredAccessRights` obejmuje zarówno <xref:System.IO.Pipes.PipeAccessRights.ReadData> i <xref:System.IO.Pipes.PipeAccessRights.WriteData>, będzie kierunek potoku <xref:System.IO.Pipes.PipeDirection.InOut>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".  - lub - <paramref name="options" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeOptions" /> wartość.  - lub - <paramref name="impersonationLevel" /> nie jest prawidłową <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> wartość.  - lub - <paramref name="inheritability" /> nie jest prawidłową <see cref="T:System.IO.HandleInheritability" /> wartość.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeOptions options, valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection, options As PipeOptions, impersonationLevel As TokenImpersonationLevel, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeOptions options, System::Security::Principal::TokenImpersonationLevel impersonationLevel, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeClientStream : string * string * System.IO.Pipes.PipeDirection * System.IO.Pipes.PipeOptions * System.Security.Principal.TokenImpersonationLevel * System.IO.HandleInheritability -&gt; System.IO.Pipes.NamedPipeClientStream" Usage="new System.IO.Pipes.NamedPipeClientStream (serverName, pipeName, direction, options, impersonationLevel, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="serverName">Nazwa komputera zdalnego, aby nawiązać połączenie, lub ".", aby określić komputer lokalny.</param>
        <param name="pipeName">Nazwa potoku.</param>
        <param name="direction">Jedna z wartości wyliczenia, które określa kierunek potoku.</param>
        <param name="options">Jedna z wartości wyliczenia, które określa, jak otworzyć lub utworzyć potoku.</param>
        <param name="impersonationLevel">Jedna z wartości wyliczenia, które określa poziom personifikacji zabezpieczeń.</param>
        <param name="inheritability">Jedna z wartości wyliczenia, które określa, czy podstawowy dojścia będą dziedziczone przez procesy podrzędne.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> z określonej nazwy potoku i serwera i kierunek określony potok, opcje potoku, poziom personifikacji zabezpieczeń i tryb inheritability.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> lub <paramref name="serverName" /> jest ciągiem o zerowej długości.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> jest ustawiony na "anonymous".  - lub - <paramref name="direction" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeDirection" /> wartość.  - lub - <paramref name="options" /> nie jest prawidłową <see cref="T:System.IO.Pipes.PipeOptions" /> wartość.  - lub - <paramref name="impersonationLevel" /> nie jest prawidłową <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> wartość.  - lub - <paramref name="inheritability" /> nie jest prawidłową <see cref="T:System.IO.HandleInheritability" /> wartość.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckPipePropertyOperations">
      <MemberSignature Language="C#" Value="protected internal override void CheckPipePropertyOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CheckPipePropertyOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CheckPipePropertyOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CheckPipePropertyOperations();" />
      <MemberSignature Language="F#" Value="override this.CheckPipePropertyOperations : unit -&gt; unit" Usage="namedPipeClientStream.CheckPipePropertyOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Nawiązuje połączenie z serwerem oczekiwania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect();" />
      <MemberSignature Language="F#" Value="member this.Connect : unit -&gt; unit" Usage="namedPipeClientStream.Connect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Połączenie z serwerem oczekiwania z wartością nieskończonego limitu czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wywołuje <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> metody z wartością nieskończonego limitu czasu.  
  
 Ta metoda oczekuje na wystąpienie potoku, stanie się dostępne. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> może zwrócić przed <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> jest wywoływana z <xref:System.IO.Pipes.NamedPipeServerStream> obiektu, ale <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> nie zwróci do <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> zwrócił.  
  
 Wszystkie dane zapisane do potoku po <xref:System.IO.Pipes.NamedPipeClientStream> obiekt został podłączony, ale przed serwera została wywołana <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, będą dostępne na serwerze następującej po wywołaniu <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób wysyłania ciąg z procesu nadrzędnego do podrzędnego procesu używającego potoków nazwanych. Ten przykład tworzy <xref:System.IO.Pipes.NamedPipeClientStream> obiektu w procesie podrzędne, które następnie łączy do potoku na komputerze lokalnym. Przykład serwera są widoczne w <xref:System.IO.Pipes.NamedPipeServerStream> klasy. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.IO.Pipes.NamedPipeServerStream> i <xref:System.IO.Pipes.NamedPipeClientStream> klasy.  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Klient jest już połączony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int timeout);" />
      <MemberSignature Language="F#" Value="member this.Connect : int -&gt; unit" Usage="namedPipeClientStream.Connect timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">Wyrażony w milisekundach czas oczekiwania na odpowiedź przed połączeniem serwera upłynął limit czasu.</param>
        <summary>Nawiązuje połączenie z serwerem oczekiwania w określonym limicie czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda oczekuje na wystąpienie potoku, stanie się dostępne. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> może zwrócić przed <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> jest wywoływana z <xref:System.IO.Pipes.NamedPipeServerStream>, ale <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> nie zwróci do <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> zwrócił. Możesz ustawić `timeout` parametr <xref:System.Threading.Timeout.Infinite> Aby określić nieskończony limit czasu.  
  
 Wszystkie dane zapisane do potoku po <xref:System.IO.Pipes.NamedPipeClientStream> obiekt został podłączony, ale przed serwera została wywołana <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, będą dostępne na serwerze następującej po wywołaniu <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException">Nie można nawiązać połączenia z serwerem w obrębie określonego <paramref name="timeout" /> okresu.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" /> jest mniejsza niż 0 i nie ustawiony na <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">Klient jest już połączony.</exception>
        <exception cref="T:System.IO.IOException">Serwer jest połączony z innym klientem i upłynął okres limitu czasu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zadanie reprezentujące asynchroniczną operację łączenia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync();" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : unit -&gt; System.Threading.Tasks.Task" Usage="namedPipeClientStream.ConnectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie nawiązuje połączenie z serwerem oczekiwania z okresem nieskończonego limitu czasu.</summary>
        <returns>Zadanie reprezentujące asynchroniczną operację łączenia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (timeout As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(int timeout);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : int -&gt; System.Threading.Tasks.Task" Usage="namedPipeClientStream.ConnectAsync timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">Wyrażony w milisekundach czas oczekiwania na odpowiedź przed połączeniem serwera upłynął limit czasu.</param>
        <summary>Asynchronicznie nawiązuje połączenie z serwerem oczekiwania przed upływem określonego limitu czasu.</summary>
        <returns>Zadanie reprezentujące asynchroniczną operację łączenia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="namedPipeClientStream.ConnectAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Token do monitorowania żądań anulowania. Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Asynchronicznie nawiązuje połączenie z serwerem oczekiwania i monitorowanie żądań anulowania.</summary>
        <returns>Zadanie reprezentujące asynchroniczną operację łączenia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(int32 timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(int timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="namedPipeClientStream.ConnectAsync (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">Wyrażony w milisekundach czas oczekiwania na odpowiedź przed połączeniem serwera upłynął limit czasu.</param>
        <param name="cancellationToken">Token do monitorowania żądań anulowania. Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Asynchronicznie nawiązuje połączenie z serwerem oczekiwania przed upływem określonego limitu czasu i monitorowanie żądań anulowania.</summary>
        <returns>Zadanie reprezentujące asynchroniczną operację łączenia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NamedPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NamedPipeClientStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="namedPipeClientStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby niezarządzane, a następnie wykonuje inne operacje oczyszczania przed <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> wystąpienia jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfServerInstances">
      <MemberSignature Language="C#" Value="public int NumberOfServerInstances { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfServerInstances" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfServerInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfServerInstances { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfServerInstances : int" Usage="System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę wystąpień serwera, które mają taką samą nazwę potoku.</summary>
        <value>Liczba wystąpień serwera, które mają taką samą nazwę potoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca liczbę wystąpień serwera <xref:System.IO.Pipes.NamedPipeServerStream> obiekt, który bieżącego <xref:System.IO.Pipes.NamedPipeClientStream> obiekt ma uchwyt do lub jest połączony. Jeśli bieżący <xref:System.IO.Pipes.NamedPipeClientStream> obiekt nie został jeszcze połączony z serwera potoków nazwanych, lub jeśli bieżący dojścia potoku nie została ustawiona, ta właściwość zwraca <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób wysyłania ciąg z procesu nadrzędnego do podrzędnego procesu używającego potoków nazwanych. W tym przykładzie <xref:System.IO.Pipes.NamedPipeClientStream> obiekt jest tworzony w procesie podrzędne, które następnie łączy do potoku na komputerze lokalnym. Przykład serwera są widoczne w <xref:System.IO.Pipes.NamedPipeServerStream> klasy. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.IO.Pipes.NamedPipeServerStream> i <xref:System.IO.Pipes.NamedPipeClientStream> klasy.  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie ustawiono dojścia potoku.  - lub - bieżącego <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> obiekt nie został jeszcze połączony z <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> obiektu.</exception>
        <exception cref="T:System.IO.IOException">Potok jest uszkodzony lub wystąpił błąd We/Wy.</exception>
        <exception cref="T:System.ObjectDisposedException">Podstawowy dojścia potoku jest zamknięty.</exception>
      </Docs>
    </Member>
  </Members>
</Type>