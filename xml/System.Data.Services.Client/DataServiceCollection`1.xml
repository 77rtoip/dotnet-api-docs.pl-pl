<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b24f12be9fdf857dc365785bc9a39fda9b13ba6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69125702" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type DataServiceCollection&lt;'T&gt; = class&#xA;    inherit ObservableCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ jednostki.</typeparam>
    <summary>Reprezentuje dynamiczną kolekcję jednostek, która dostarcza powiadomienia, gdy elementy zostaną dodane, usunięte lub gdy lista zostanie odświeżona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]<xref:System.Data.Services.Client.DataServiceCollection%601> udostępnia klasę do obsługi powiązań danych do kontrolek w aplikacjach klienckich. Ta klasa dziedziczy z <xref:System.Collections.ObjectModel.ObservableCollection%601> klasy, która <xref:System.Collections.Specialized.INotifyCollectionChanged> implementuje interfejs i jest mechanizmem podstawowego powiązania danych dla Windows Presentation Foundation (WPF) i aplikacji opartych na technologii Silverlight.  
  
 Kolekcję <xref:System.Collections.ObjectModel.ObservableCollection%601> powiązań można załadować przy użyciu dowolnej kolekcji <xref:System.Collections.Generic.IEnumerable%601> implementującej interfejs. Elementy ładowane do kolekcji powiązań muszą implementować <xref:System.ComponentModel.INotifyPropertyChanged> interfejs. Aby uzyskać więcej informacji, zobacz [Powiązywanie danych z kontrolkami](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  
  
   
  
## Examples  
 Poniższy przykład pochodzi ze strony `SalesOrders` powiązanej z kodem dla strony Extensible Application Markup Language (XAML), która definiuje okno w WPF. Po załadowaniu <xref:System.Data.Services.Client.DataServiceCollection%601> okna jest tworzone na podstawie wyniku zapytania, które zwraca klientów z powiązanymi obiektami, filtrowanych według kraju/regionu. Ten wynik jest powiązany z <xref:System.Windows.FrameworkElement.DataContext%2A> właściwością <xref:System.Windows.Controls.StackPanel> będącą głównym formantem układu okna WPF.  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 Poniżej znajduje się kod XAML, który definiuje `SalesOrders` okno w WPF dla poprzedniego przykładu.  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">Powiązywanie danych z kontrolkami (Usługi danych programu WCF)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienie <xref:System.Data.Services.Client.DataServiceCollection%601> , które używa ręcznego śledzenia zmian podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie <xref:System.Data.Services.Client.TrackingMode.None> wartości dla <xref:System.Data.Services.Client.TrackingMode>. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 Automatyczne śledzenie zmian rozpoczyna się po załadowaniu elementów do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Zapytanie <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> programu LINQ <see cref="T:System.Collections.Generic.IEnumerable`1" /> zwracające kolekcję obiektów, które są używane do inicjowania kolekcji.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy na podstawie wykonywania zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja obiektów dostarczonych dla `items` jest zwykle kwerendą zwracającą elementy w kolekcji. <xref:System.Collections.Generic.IEnumerable%601> Jednakże można podać <xref:System.Collections.Generic.IEnumerable%601> dowolną kolekcję poprawnego typu.  
  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienie <xref:System.Data.Services.Client.DataServiceCollection%601> , które używa ręcznego śledzenia zmian podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie <xref:System.Data.Services.Client.TrackingMode.None> wartości dla <xref:System.Data.Services.Client.TrackingMode>. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> Służy do śledzenia zmian obiektów w kolekcji.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy, która używa określonego <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia utworzenie pustego <xref:System.Data.Services.Client.DataServiceCollection%601> obiektu, do którego można dodać obiekty jednostek, bez wykonywania zapytania dotyczącego usługi lub <xref:System.Collections.Generic.IEnumerable%601> niedostępności.  
  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienie <xref:System.Data.Services.Client.DataServiceCollection%601> , które używa ręcznego śledzenia zmian podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie <xref:System.Data.Services.Client.TrackingMode.None> wartości dla <xref:System.Data.Services.Client.TrackingMode>. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items">Zapytanie <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> programu LINQ <see cref="T:System.Collections.Generic.IEnumerable`1" /> zwracające kolekcję obiektów, które są używane do inicjowania kolekcji.</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> Wartość wskazująca, czy zmiany wprowadzone do elementów w kolekcji są automatycznie śledzone.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy na podstawie wykonywania zapytania i z określonym trybem śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Użyj tego konstruktora klasy i podaj wartość <xref:System.Data.Services.Client.TrackingMode.None> dla `trackingMode` <xref:System.Data.Services.Client.DataServiceCollection%601> , aby utworzyć wystąpienie, które używa ręcznego śledzenia zmian. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 Kolekcja obiektów dostarczonych dla `items` jest zwykle kwerendą zwracającą elementy w kolekcji. <xref:System.Collections.Generic.IEnumerable%601> Jednakże można podać <xref:System.Collections.Generic.IEnumerable%601> dowolną kolekcję poprawnego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> Służy do śledzenia elementów w kolekcji.</param>
        <param name="entitySetName">Zestaw jednostek obiektów w kolekcji.</param>
        <param name="entityChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana w przypadku zmiany jednostki.</param>
        <param name="collectionChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana w przypadku zmiany kolekcji jednostek.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy z dostarczonymi delegatami metody zmiany i używające określonego <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia utworzenie pustego <xref:System.Data.Services.Client.DataServiceCollection%601> obiektu, do którego można dodać obiekty jednostek, bez wykonywania zapytania dotyczącego usługi lub <xref:System.Collections.Generic.IEnumerable%601> niedostępności.  
  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienie <xref:System.Data.Services.Client.DataServiceCollection%601> , które używa ręcznego śledzenia zmian podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie <xref:System.Data.Services.Client.TrackingMode.None> wartości dla <xref:System.Data.Services.Client.TrackingMode>. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Zapytanie <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> programu LINQ <see cref="T:System.Collections.Generic.IEnumerable`1" /> zwracające kolekcję obiektów, które są używane do inicjowania kolekcji.</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> Wartość wskazująca, czy zmiany wprowadzone do elementów w kolekcji są automatycznie śledzone.</param>
        <param name="entitySetName">Zestaw jednostek obiektów w kolekcji.</param>
        <param name="entityChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana w przypadku zmiany jednostki.</param>
        <param name="collectionChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana w przypadku zmiany kolekcji jednostek.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy a na podstawie wykonywania zapytania i z podaną delegatem metody zmiany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funkcje i są`collectionChanged` wywoływane odpowiednio przez <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> i zdarzenia. <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> `entityChanged` Metoda przyjmuje wartość, a `collectionChanged` Metoda przyjmuje wartość.<xref:System.Data.Services.Client.EntityChangedParams> <xref:System.Data.Services.Client.EntityCollectionChangedParams> `entityChanged` Obie metody muszą zwracać wartość logiczną, która wskazuje, czy zdarzenie zostało obsłużone przez funkcję. Gdy metoda zwraca `true`, zachowanie domyślne nadal występuje.  
  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienie <xref:System.Data.Services.Client.DataServiceCollection%601> , które używa ręcznego śledzenia zmian podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie <xref:System.Data.Services.Client.TrackingMode.None> wartości dla <xref:System.Data.Services.Client.TrackingMode>. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> Służy do śledzenia elementów w kolekcji.</param>
        <param name="items">Zapytanie <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> programu LINQ <see cref="T:System.Collections.Generic.IEnumerable`1" /> zwracające kolekcję obiektów, które są używane do inicjowania kolekcji.</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> Wartość wskazująca, czy zmiany wprowadzone do elementów w kolekcji są automatycznie śledzone.</param>
        <param name="entitySetName">Zestaw jednostek obiektów w kolekcji.</param>
        <param name="entityChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana w przypadku zmiany jednostki.</param>
        <param name="collectionChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana w przypadku zmiany kolekcji jednostek.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy a oparte na wykonywaniu zapytania, z dostarczanymi delegatami metody zmiany i używające podanego <see cref="T:System.Data.Services.Client.DataServiceContext" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie funkcja automatycznego śledzenia zmian jest włączona dla elementu <xref:System.Data.Services.Client.DataServiceCollection%601>. Użyj tego konstruktora klasy, aby podać wartość <xref:System.Data.Services.Client.TrackingMode.None> dla `trackingMode` <xref:System.Data.Services.Client.DataServiceCollection%601> , aby utworzyć wystąpienie, które używa ręcznego śledzenia zmian. W przypadku korzystania z funkcji ręcznego śledzenia należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> obsłużyć zdarzenia wywołania, aby <xref:System.Data.Services.Client.DataServiceContext>ręcznie zgłosić zmiany w programie.  
  
 Należy <xref:System.Data.Services.Client.DataServiceContext> podać, gdy `items` nie <xref:System.Data.Services.Client.DataServiceQuery%601> jest lub <xref:System.Data.Services.Client.QueryOperationResponse%601> ma odwołanie do <xref:System.Data.Services.Client.DataServiceContext> wystąpienia.  
  
 Funkcje i są`collectionChanged` wywoływane odpowiednio przez <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> i zdarzenia. <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> `entityChanged` Metoda przyjmuje wartość, a `collectionChanged` Metoda przyjmuje wartość.<xref:System.Data.Services.Client.EntityChangedParams> <xref:System.Data.Services.Client.EntityCollectionChangedParams> `entityChanged` Obie metody muszą zwracać wartość logiczną, która wskazuje, czy zdarzenie zostało obsłużone przez funkcję. Gdy metoda zwraca `true`, zachowanie domyślne będzie nadal wykonywane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberSignature Language="F#" Value="override this.Clear : bool -&gt; unit" Usage="dataServiceCollection.Clear stopTracking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">Gdy <see langword="true" />program Odłącza wszystkie elementy <see cref="T:System.Data.Services.Client.DataServiceContext" />od.</param>
        <summary>Usuwa wszystkie elementy z kolekcji i opcjonalnie Odłącza wszystkie elementy od <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po odłączeniu elementu wszystkie powiązane obiekty na grafie danych również są odłączone od <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Continuation : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; with get, set" Usage="System.Data.Services.Client.DataServiceCollection&lt;'T&gt;.Continuation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt kontynuacji, który jest używany do zwrócenia następnego zestawu wyników stronicowanych.</summary>
        <value><see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> Obiekt, który zawiera identyfikator URI do zwrócenia następnego zestawu wyników stronicowanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> Właściwość zwraca link, który jest używany w celu uzyskania dostępu do następnego zestawu wyników stronicowanych po włączeniu stronicowania w usłudze danych. Aby uzyskać więcej informacji, zobacz [Konfigurowanie usługi danych](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md).  
  
 <xref:System.Data.Services.Client.DataServiceCollection%601>Podczas ładowania stronicowanego wyniku do, należy jawnie załadować strony, <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> wywołując metodę w <xref:System.Data.Services.Client.DataServiceCollection%601> przez przekazanie wyniku wykonania identyfikatora URI uzyskanego z <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pochodzi ze strony `SalesOrders` powiązanej z kodem dla strony Extensible Application Markup Language (XAML), która definiuje okno w WPF. Po załadowaniu <xref:System.Data.Services.Client.DataServiceCollection%601> okna jest tworzone na podstawie wyniku zapytania, które zwraca klientów, filtrowane według kraju/regionu. Wszystkie strony tego wyniku stronicowanego są wczytywane wraz z powiązanymi zamówieniami i są powiązane z <xref:System.Windows.FrameworkElement.DataContext%2A> właściwością <xref:System.Windows.Controls.StackPanel> , która jest głównym formantem układu dla okna WPF. Aby uzyskać więcej informacji, zobacz [jak: Powiąż dane z elementami](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md)Windows Presentation Foundation.  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Ładowanie odroczonej zawartości (Usługi danych programu WCF)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">Powiązywanie danych z kontrolkami (Usługi danych programu WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberSignature Language="F#" Value="member this.Detach : unit -&gt; unit" Usage="dataServiceCollection.Detach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza <see cref="T:System.Data.Services.Client.DataServiceContext" /> śledzenie wszystkich elementów w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metodę można wywołać tylko wtedy, gdy <xref:System.Data.Services.Client.DataServiceCollection%601> jest kolekcją główną. <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A>  
  
 <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> Gdy metoda jest wywoływana w kolekcji, która jest kolekcją główną, śledzenie jest również zatrzymane dla wszystkich powiązanych obiektów na grafie danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="dataServiceCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">Indeks, przy użyciu którego ma zostać dodany element.</param>
        <param name="item">Element do dodania.</param>
        <summary>Dodaje określony element do kolekcji o określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku ręcznego śledzenia zmian w kolekcji należy zastąpić <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A> metodę, aby zapobiec automatycznemu dodawaniu elementów do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładuje jednostki do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.Load : seq&lt;'T&gt; -&gt; unit" Usage="dataServiceCollection.Load items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Kolekcja obiektów jednostek, które mają zostać dodane do <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
        <summary>Ładuje kolekcję obiektów Entity do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie metody dołącza wszystkie obiekty w kolekcji, jeśli nie zostały one jeszcze dołączone do programu <xref:System.Data.Services.Client.DataServiceContext> <xref:System.Data.Services.Client.DataServiceCollection%601>, który jest skojarzony z. <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>  
  
 Po dołączeniu obiektu za pomocą <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> metody są również dołączone wszystkie powiązane obiekty.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberSignature Language="F#" Value="member this.Load : 'T -&gt; unit" Usage="dataServiceCollection.Load item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt jednostki do dodania.</param>
        <summary>Ładuje obiekt pojedynczej jednostki do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie metody dołącza obiekt, jeśli nie jest jeszcze dołączony <xref:System.Data.Services.Client.DataServiceContext> do obiektu, <xref:System.Data.Services.Client.DataServiceCollection%601>który jest skojarzony z. <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>  
  
 Po dołączeniu obiektu za pomocą <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> metody są również dołączone wszystkie powiązane obiekty.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
