<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f7b278d015e6d86633b4ded520037c7d887e501" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30446610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ jednostki.</typeparam>
    <summary>Reprezentuje kolekcję dynamiczne jednostki, która zawiera powiadomienia, gdy elementy zostaną dodane, usunięte, lub po odświeżeniu listy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] udostępnia <xref:System.Data.Services.Client.DataServiceCollection%601> klasy do obsługi powiązania danych do formantów w aplikacjach klienckich. Ta klasa dziedziczy <xref:System.Collections.ObjectModel.ObservableCollection%601> klasy, która implementuje <xref:System.Collections.Specialized.INotifyCollectionChanged> interfejsu i jest mechanizm powiązania danych pierwotnych dla Windows Presentation Foundation (WPF) i aplikacje oparte na technologii Silverlight.  
  
 Można załadować <xref:System.Collections.ObjectModel.ObservableCollection%601> powiązanie kolekcji za pomocą kolekcji, która implementuje <xref:System.Collections.Generic.IEnumerable%601> interfejsu. Elementy załadowany do kolekcji powiązania musi implementować <xref:System.ComponentModel.INotifyPropertyChanged> interfejsu. Aby uzyskać więcej informacji, zobacz [wiązanie danych do kontrolek](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  
  
   
  
## Examples  
 Poniższy przykład pochodzi ze strony CodeBehind dla strony Extensible Application Markup Language (XAML), który definiuje `SalesOrders` okna na platformie WPF. Po załadowaniu okna <xref:System.Data.Services.Client.DataServiceCollection%601> jest tworzony na podstawie wyniku zapytania, które zwraca klientów z powiązane obiekty filtrowane według kraju. Ten wynik jest powiązany z <xref:System.Windows.FrameworkElement.DataContext%2A> właściwość <xref:System.Windows.Controls.StackPanel> czyli formant układu głównego okna WPF.  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 Poniżej przedstawiono XAML, który definiuje `SalesOrders` okna na platformie WPF w poprzednim przykładzie.  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używającą ręcznej zmiany śledzenia podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie wartości <xref:System.Data.Services.Client.TrackingMode.None> dla <xref:System.Data.Services.Client.TrackingMode>. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Automatyczne śledzenie zmian zaczyna się po załadowaniu elementów do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> lub zapytań LINQ, która zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji obiektów, które są używane do zainicjowania dla kolekcji.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy oparte na wykonanie kwerendy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.IEnumerable%601> Kolekcji obiektów podany dla `items` zazwyczaj jest to zapytanie zwracające elementów w kolekcji. Jednak wszystkie <xref:System.Collections.Generic.IEnumerable%601> mogą być dostarczane kolekcji poprawnego typu.  
  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używającą ręcznej zmiany śledzenia podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie wartości <xref:System.Data.Services.Client.TrackingMode.None> dla <xref:System.Data.Services.Client.TrackingMode>. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Data.Services.Client.DataServiceContext" /> Umożliwia śledzenie zmian obiektów w kolekcji.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy, która używa określonego <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć pustą <xref:System.Data.Services.Client.DataServiceCollection%601> do jakiej encji obiekty mogą być dodawane bez wykonania zapytania względem usługi lub gdy <xref:System.Collections.Generic.IEnumerable%601> nie jest dostępna.  
  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używającą ręcznej zmiany śledzenia podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie wartości <xref:System.Data.Services.Client.TrackingMode.None> dla <xref:System.Data.Services.Client.TrackingMode>. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> lub zapytań LINQ, która zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji obiektów, które są używane do zainicjowania dla kolekcji.</param>
        <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> wartość, która wskazać, czy lub nie automatycznie są śledzone zmiany wprowadzone do elementów w kolekcji.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> na podstawie wykonywania zapytań i tryb śledzenia określonej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Użyj tego konstruktora klasy i podaj wartość <xref:System.Data.Services.Client.TrackingMode.None> dla `trackingMode` można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używający śledzenia zmian ręcznie. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 <xref:System.Collections.Generic.IEnumerable%601> Kolekcji obiektów podany dla `items` zazwyczaj jest to zapytanie zwracające elementów w kolekcji. Jednak wszystkie <xref:System.Collections.Generic.IEnumerable%601> mogą być dostarczane kolekcji poprawnego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Data.Services.Client.DataServiceContext" /> Używane do śledzenia elementów w kolekcji.</param>
        <param name="entitySetName">Zestaw jednostek obiektów w kolekcji.</param>
        <param name="entityChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana po zmianie jednostki.</param>
        <param name="collectionChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana po zmianie kolekcji jednostek.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy z podana zmiana delegatów — metoda, która używa określonego <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć pustą <xref:System.Data.Services.Client.DataServiceCollection%601> do jakiej encji obiekty mogą być dodawane bez wykonania zapytania względem usługi lub gdy <xref:System.Collections.Generic.IEnumerable%601> nie jest dostępna.  
  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używającą ręcznej zmiany śledzenia podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie wartości <xref:System.Data.Services.Client.TrackingMode.None> dla <xref:System.Data.Services.Client.TrackingMode>. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> lub zapytań LINQ, która zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji obiektów, które są używane do zainicjowania dla kolekcji.</param>
        <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> wartość, która wskazać, czy lub nie automatycznie są śledzone zmiany wprowadzone do elementów w kolekcji.</param>
        <param name="entitySetName">Zestaw jednostek obiektów w kolekcji.</param>
        <param name="entityChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana po zmianie jednostki.</param>
        <param name="collectionChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana po zmianie kolekcji jednostek.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy oparte na na wykonanie kwerendy i delegatów metody podane zmiany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entityChanged` i `collectionChanged` funkcje są wywoływane przez <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> zdarzenia, odpowiednio. `entityChanged` Ma metodę <xref:System.Data.Services.Client.EntityCollectionChangedParams> wartość i `collectionChanged` ma metodę <xref:System.Data.Services.Client.EntityChangedParams> wartość. Obie metody musi zwracać wartość logiczną wskazującą, czy zdarzenie zostało obsługiwane przez funkcję. Gdy metoda zwraca `true`, domyślne zachowanie nadal występuje.  
  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używającą ręcznej zmiany śledzenia podczas tworzenia wystąpienia przy użyciu konstruktora, który umożliwia podanie wartości <xref:System.Data.Services.Client.TrackingMode.None> dla <xref:System.Data.Services.Client.TrackingMode>. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Data.Services.Client.DataServiceContext" /> Używane do śledzenia elementów w kolekcji.</param>
        <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> lub zapytań LINQ, która zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji obiektów, które są używane do zainicjowania dla kolekcji.</param>
        <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> wartość, która wskazać, czy lub nie automatycznie są śledzone zmiany wprowadzone do elementów w kolekcji.</param>
        <param name="entitySetName">Zestaw jednostek obiektów w kolekcji.</param>
        <param name="entityChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana po zmianie jednostki.</param>
        <param name="collectionChangedCallback">Delegat, który hermetyzuje metodę, która jest wywoływana po zmianie kolekcji jednostek.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> klasy oparte na wykonywanie zapytania o delegatów Metoda podana zmiana, i który korzysta z podane <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie automatyczne śledzenie zmian jest włączona dla <xref:System.Data.Services.Client.DataServiceCollection%601>. Użyj tego konstruktora klasy, aby określić wartość <xref:System.Data.Services.Client.TrackingMode.None> dla `trackingMode` można utworzyć wystąpienia <xref:System.Data.Services.Client.DataServiceCollection%601> używający śledzenia zmian ręcznie. Użycie opcji ręcznego śledzenia, należy zaimplementować <xref:System.ComponentModel.INotifyPropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged> i obsługi zdarzeń Zgłoś ręcznie raportu zmiany <xref:System.Data.Services.Client.DataServiceContext>.  
  
 <xref:System.Data.Services.Client.DataServiceContext> Należy podać podczas `items` nie jest <xref:System.Data.Services.Client.DataServiceQuery%601> lub <xref:System.Data.Services.Client.QueryOperationResponse%601> który odwołuje się do <xref:System.Data.Services.Client.DataServiceContext> wystąpienia.  
  
 `entityChanged` i `collectionChanged` funkcje są wywoływane przez <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> i <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> zdarzenia, odpowiednio. `entityChanged` Ma metodę <xref:System.Data.Services.Client.EntityCollectionChangedParams> wartość i `collectionChanged` ma metodę <xref:System.Data.Services.Client.EntityChangedParams> wartość. Obie metody musi zwracać wartość logiczną wskazującą, czy zdarzenie zostało obsługiwane przez funkcję. Gdy metoda zwraca `true`, nastąpi zachowanie domyślne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">Gdy <see langword="true" />, odłącza wszystkie elementy z <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Usuwa wszystkie elementy z kolekcji i opcjonalnie Odłącza wszystkie elementy z <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element jest odłączony, wszystkie powiązane obiekty na wykresie danych są również odłączyć od <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt kontynuacji, który służy do zwracania następnego zestawu wyników stronicowania.</summary>
        <value>A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> obiekt, który zawiera identyfikator URI do zwrócenia następnego zestawu stronicowanej wyników.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> Właściwość zwraca łącze, które jest używane do dostępu następnego zestawu wyników stronicowania, gdy włączono stronicowania w usłudze danych. Aby uzyskać więcej informacji, zobacz [Konfigurowanie usługi danych](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md).  
  
 Podczas ładowania stronicowanych wynik w <xref:System.Data.Services.Client.DataServiceCollection%601>, należy jawnie załadować stron przez wywołanie metody <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> metoda <xref:System.Data.Services.Client.DataServiceCollection%601> przez przekazanie wynik wykonania identyfikatora URI, który został uzyskany z <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pochodzi ze strony CodeBehind dla strony Extensible Application Markup Language (XAML), który definiuje `SalesOrders` okna na platformie WPF. Po załadowaniu okna <xref:System.Data.Services.Client.DataServiceCollection%601> jest tworzony na podstawie wyniku zapytania, które zwraca klientów filtrowane według kraju. Wszystkie strony tego wyniku stronicowanych zostały załadowane oraz powiązane zamówienia i są powiązane z <xref:System.Windows.FrameworkElement.DataContext%2A> właściwość <xref:System.Windows.Controls.StackPanel> czyli formant układu głównego okna WPF. Aby uzyskać więcej informacji, zobacz [porady: powiązanie danych do systemu Windows Presentation Foundation elementów](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md).  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza <see cref="T:System.Data.Services.Client.DataServiceContext" /> śledzenia dla wszystkich elementów w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> Metodę można wywołać tylko podczas <xref:System.Data.Services.Client.DataServiceCollection%601> jest kolekcji głównej.  
  
 Gdy <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> metoda jest wywoływana w kolekcji, która jest kolekcją głównego, śledzenie również jest zatrzymana na wszystkie powiązane obiekty na wykresie danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">Indeks, w którym można dodać elementu.</param>
        <param name="item">Element do dodania.</param>
        <summary>Dodaje określony element do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy do kolekcji są ręcznie śledzenia zmian, konieczne jest przesłonięcie <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A> metodę, aby zapobiec elementów automatycznie dodany do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładuje jednostek do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Kolekcja obiektów jednostek, które mają zostać dodane do <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
        <summary>Ładuje kolekcję obiektów jednostki do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> metody dołącza wszystkie obiekty w kolekcji, jeśli nie są one już dołączone do <xref:System.Data.Services.Client.DataServiceContext> skojarzony z <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Gdy obiekt jest podłączany przy użyciu <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> metody, wszystkie powiązane obiekty również są dołączone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt jednostki, która ma zostać dodana.</param>
        <summary>Ładuje jeden obiekt jednostki w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> metody dołącza obiektu, jeśli nie jest już dołączony do <xref:System.Data.Services.Client.DataServiceContext> skojarzony z <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Gdy obiekt jest podłączany przy użyciu <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> metody, wszystkie powiązane obiekty również są dołączone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>