<Type Name="DataServiceQuery&lt;TElement&gt;" FullName="System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d15bc1184c523b92476137b418069825fa6dfb40" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36682625" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceQuery&lt;TElement&gt; : System.Data.Services.Client.DataServiceQuery, System.Collections.Generic.IEnumerable&lt;TElement&gt;, System.Linq.IQueryable&lt;TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceQuery`1&lt;TElement&gt; extends System.Data.Services.Client.DataServiceQuery implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceQuery(Of TElement)&#xA;Inherits DataServiceQuery&#xA;Implements IEnumerable(Of TElement), IQueryable(Of TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TElement&gt;&#xA;public ref class DataServiceQuery : System::Data::Services::Client::DataServiceQuery, System::Collections::Generic::IEnumerable&lt;TElement&gt;, System::Linq::IQueryable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type DataServiceQuery&lt;'Element&gt; = class&#xA;    inherit DataServiceQuery&#xA;    interface IQueryable&lt;'Element&gt;&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Services.Client.DataServiceQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TElement">
      <span data-ttu-id="78be4-101">Typ wyników zwróconych przez kwerendę.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78be4-101">Type of results returned by the query.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="78be4-102">Reprezentuje żądanie pojedynczego zapytania do usługi danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78be4-102">Represents a single query request to a data service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-103">Brak konstruktorów publicznych są definiowane w tej klasie.</span><span class="sxs-lookup"><span data-stu-id="78be4-103">No public constructors are defined on this class.</span></span> <span data-ttu-id="78be4-104">Wystąpienia obiektu są tworzone za pomocą <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> lub <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> na <xref:System.Data.Services.Client.DataServiceContext> klasy.</span><span class="sxs-lookup"><span data-stu-id="78be4-104">Object instances are created by using <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> or <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> on the <xref:System.Data.Services.Client.DataServiceContext> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddQueryOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;TElement&gt; AddQueryOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!TElement&gt; AddQueryOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.AddQueryOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddQueryOption (name As String, value As Object) As DataServiceQuery(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceQuery&lt;TElement&gt; ^ AddQueryOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddQueryOption : string * obj -&gt; System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;" Usage="dataServiceQuery.AddQueryOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="78be4-105">Wartość ciągu zawierającego nazwę opcji ciągu zapytania do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-105">The string value that contains the name of the query string option to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="78be4-106">Obiekt, który zawiera wartość opcji ciągu zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-106">The object that contains the value of the query string option.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78be4-107">Tworzy nową <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> with opcja zapytania jest ustawiona w identyfikatorze URI, generowany przez zapytanie zwrócony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-107">Creates a new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> with the query option set in the URI generated by the returned query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-108">Nowe zapytanie, które zawiera opcję żądanego zapytania dołączany do identyfikatora URI dostarczony zapytania</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-108">A new query that includes the requested query option appended to the URI of the supplied query</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-109">Opcje zapytania są dodawane do wynikowe identyfikator URI przy użyciu `?name=value&name2=value2`...</span><span class="sxs-lookup"><span data-stu-id="78be4-109">The query options are added to the resultant URI using `?name=value&name2=value2`…</span></span> <span data-ttu-id="78be4-110">składni, gdzie nazwa mapy bezpośrednio do `name` parametru i `value` są uzyskiwane przez wywołanie metody ToString na `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="78be4-110">syntax where the name maps directly to the `name` parameter and the `value` is obtained by calling ToString on the `value` parameter.</span></span> <span data-ttu-id="78be4-111">`name` Rozpoczyna się od `$`.</span><span class="sxs-lookup"><span data-stu-id="78be4-111">The `name` starts with `$`.</span></span>  
  
 <span data-ttu-id="78be4-112">Z systemem innym niż[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] składni nie rozpoczyna się `$`.</span><span class="sxs-lookup"><span data-stu-id="78be4-112">Non-[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] syntax does not start with `$`.</span></span> <span data-ttu-id="78be4-113">Z systemem innym niż[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] opcje zapytania można dodać za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="78be4-113">Non-[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] query options can be added using this method.</span></span> <span data-ttu-id="78be4-114">Dozwolone jest taki sam dodać opcji zapytania dwa razy, jeśli ta opcja jest [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] opcji zapytania.</span><span class="sxs-lookup"><span data-stu-id="78be4-114">It is legal to add the same query option twice if the option is not an [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] query option.</span></span> <span data-ttu-id="78be4-115">Jeśli opcja zapytania jest dodawany jest już obecny w podstawowy identyfikator URI, jest zwracany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="78be4-115">If a query option is added that is already present in the underlying URI, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78be4-116">W poniższym przykładzie przedstawiono <xref:System.Data.Services.Client.DataServiceQuery%601> używana przez kolejne <xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A> wywołania metody, aby zwracał tylko zamówień z kosztem transport ponad 30 $ i kolejność wyniki według daty w kolejności malejącej.</span><span class="sxs-lookup"><span data-stu-id="78be4-116">The following example shows a <xref:System.Data.Services.Client.DataServiceQuery%601> that is used with sequential <xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A> method calls to only return orders with a freight cost of more than $30 and to order the results by the ship date in descending order.</span></span>  
  
 [!code-csharp[Astoria Northwind Client#AddQueryOptions](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addqueryoptions)]
 [!code-vb[Astoria Northwind Client#AddQueryOptions](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addqueryoptions)]  
  
 <span data-ttu-id="78be4-117">Poniższy przykład przedstawia sposób tworzenia zapytania LINQ, który jest odpowiednikiem poprzedniego zapytania, używany <xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A>.</span><span class="sxs-lookup"><span data-stu-id="78be4-117">The following example shows how to compose a LINQ query that is equivalent to the previous query that used <xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A>.</span></span>  
  
 [!code-csharp[Astoria Northwind Client#AddQueryOptionsLinq](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addqueryoptionslinq)]
 [!code-vb[Astoria Northwind Client#AddQueryOptionsLinq](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addqueryoptionslinq)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.BeginExecute(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginExecute : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceQuery.BeginExecute (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="78be4-118">Delegat do wywołania po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-118">The delegate to invoke when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="78be4-119">Zdefiniowane przez obiekt używany do przesyłania stanu między początku operacji wywołania zwrotnego, zdefiniowane przez użytkownika <c>wywołania zwrotnego</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-119">User defined object used to transfer state between the start of the operation and the callback defined by <c>callback</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78be4-120">Rozpoczyna operację asynchroniczną sieci, która wykonuje zapytanie reprezentowanym przez to wystąpienie obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-120">Starts an asynchronous network operation that executes the query represented by this object instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-121">
            <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-121">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public override Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementType : Type" Usage="System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78be4-122">Zwraca typ obiektu używany w szablonie do tworzenia <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-122">Returns the type of the object used in the template to create the <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78be4-123">Zwraca <see cref="T:System.Type" /> reprezentujący typ używany w szablonie podczas tworzenia zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-123">Returns <see cref="T:System.Type" /> representing the type used in the template when the query is created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-124">Pobiera typ reprezentowany przez T w metody ogólne: <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> lub <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="78be4-124">Gets the type represented by T in the generic methods: <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> or <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt; EndExecute(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceQuery.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="78be4-125">Żądania oczekujące zapytania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-125">The pending asynchronous query request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78be4-126">Kończy żądanie asynchroniczne zapytania do usługi danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-126">Ends an asynchronous query request to a data service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-127">Zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> zawierającego wyniki operacji zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-127">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the results of the query operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">
          <span data-ttu-id="78be4-128">Gdy usługa danych zwraca HTTP 404: nie można odnaleźć zasobu błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-128">When the data service returns an HTTP 404: Resource Not Found error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt; Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; seq&lt;'Element&gt;" Usage="dataServiceQuery.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78be4-129">Wykonuje zapytanie i zwraca wynik jako kolekcja, która implementuje <see langword="IEnumerable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-129">Executes the query and returns the results as a collection that implements <see langword="IEnumerable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-130">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> w którym <paramref name="T" /> reprezentuje typ wyników zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-130">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> in which <paramref name="T" /> represents the type of the query results.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-131">Podczas wykonywania iteracji w zwracanej kolekcji, jeśli w strumieniu wejściowym, który nie można rozszeregować na wystąpienie obiektu `T` , a następnie <xref:System.NotSupportedException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="78be4-131">When iterating over the returned collection, if an object is encountered in the input stream that cannot be deserialized to an instance of `T` then a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">
          <span data-ttu-id="78be4-132">Gdy usługa danych zwraca HTTP 404: nie można odnaleźć zasobu błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-132">When the data service returns an HTTP 404: Resource Not Found error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;TElement&gt; Expand (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!TElement&gt; Expand(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.Expand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expand (path As String) As DataServiceQuery(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceQuery&lt;TElement&gt; ^ Expand(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Expand : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;" Usage="dataServiceQuery.Expand path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="78be4-133">Wartość ciągu, który zawiera identyfikator URI żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-133">A string value that contains the requesting URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78be4-134">Tworzy nową <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> z opcją rozwiń ustawiony w identyfikatorze URI, generowany przez zapytanie zwrócony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-134">Creates a new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> with the expand option set in the URI generated by the returned query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-135">Nowe zapytanie, które zawiera żądanie <see langword="$expand" /> opcji dołączany do zapytania dostarczonego identyfikatora URI zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-135">A new query that includes the requested <see langword="$expand" /> query option appended to the URI of the supplied query.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Linq.Expressions.Expression" Usage="System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78be4-136">Reprezentuje wyrażenie zawierającego zapytanie do usługi danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-136">Represents an expression containing the query to the data service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78be4-137">A <see cref="T:System.Linq.Expressions.Expression" /> obiekt reprezentujący zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-137">A <see cref="T:System.Linq.Expressions.Expression" /> object representing the query.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TElement&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TElement&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TElement&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Element&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Element&gt;" Usage="dataServiceQuery.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78be4-138">Wykonuje zapytanie i zwraca wynik jako kolekcja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-138">Executes the query and returns the results as a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-139">Typizowany modułu wyliczającego wynikami, w którym <paramref name="TEntity" /> reprezentuje typ wyników zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-139">A typed enumerator over the results in which <paramref name="TEntity" /> represents the type of the query results.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-140">Gdy <xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A> metoda jest wywoływana, <xref:System.Data.Services.Client.DataServiceQuery%601> jest wykonywane względem usługi.</span><span class="sxs-lookup"><span data-stu-id="78be4-140">When the <xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A> method is called, the <xref:System.Data.Services.Client.DataServiceQuery%601> is executed against the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTotalCount">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;TElement&gt; IncludeTotalCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!TElement&gt; IncludeTotalCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.IncludeTotalCount" />
      <MemberSignature Language="VB.NET" Value="Public Function IncludeTotalCount () As DataServiceQuery(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceQuery&lt;TElement&gt; ^ IncludeTotalCount();" />
      <MemberSignature Language="F#" Value="member this.IncludeTotalCount : unit -&gt; System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;" Usage="dataServiceQuery.IncludeTotalCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78be4-141">Ustaw liczbę wszystkich jednostek w jednostce żądania zwracaną wbudowany z wyników zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-141">Requests that the count of all entities in the entity set be returned inline with the query results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-142">Nowy <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> obiektu, który ma ustaw opcję liczenia w tekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-142">A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> object that has the inline count option set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-143">Wywoływanie <xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A> metoda jest odpowiednikiem tym `$inlinecount` opcji zapytania identyfikatora URI zapytania.</span><span class="sxs-lookup"><span data-stu-id="78be4-143">Calling the <xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A> method is equivalent to including the `$inlinecount` query option in the query URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78be4-144">W tym przykładzie wykonuje zapytanie po wywołuje <xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="78be4-144">This example executes a query after it calls the <xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A> method.</span></span> <span data-ttu-id="78be4-145"><xref:System.Data.Services.Client.QueryOperationResponse%601.TotalCount%2A> Właściwość jest używana do określania liczby jednostek zwróconych przez kwerendę.</span><span class="sxs-lookup"><span data-stu-id="78be4-145">The <xref:System.Data.Services.Client.QueryOperationResponse%601.TotalCount%2A> property is used to determine number of entities returned by the query.</span></span>  
  
 [!code-csharp[Astoria Northwind Client#CountAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#countallcustomers)]
 [!code-vb[Astoria Northwind Client#CountAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#countallcustomers)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Provider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryProvider ^ Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Linq.IQueryProvider" Usage="System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78be4-146">Reprezentuje wystąpienie dostawcy zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-146">Represents the query provider instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78be4-147">A <see cref="T:System.Linq.IQueryProvider" /> reprezentujący dostawcy źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-147">A <see cref="T:System.Linq.IQueryProvider" /> representing the data source provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Data.Services.Client.DataServiceQuery&lt;'Element&gt;.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78be4-148">Pobierz identyfikator URI dla zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-148">Get the URI for the query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78be4-149">Identyfikator URI żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-149">The URI of the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78be4-150">Wykonuje zapytanie i zwraca wynik jako kolekcja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-150">Executes the query and returns the results as a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-151">Moduł wyliczający w wynikach zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-151">An enumerator over the query results.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be4-152">Gdy <xref:System.Data.Services.Client.DataServiceQuery%601.System%23Collections%23IEnumerable%23GetEnumerator%2A> metoda jest wywoływana, <xref:System.Data.Services.Client.DataServiceQuery%601> jest wykonywane względem usługi.</span><span class="sxs-lookup"><span data-stu-id="78be4-152">When the <xref:System.Data.Services.Client.DataServiceQuery%601.System%23Collections%23IEnumerable%23GetEnumerator%2A> method is called, the <xref:System.Data.Services.Client.DataServiceQuery%601> is executed against the service.</span></span>  
  
 <span data-ttu-id="78be4-153"><xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A> Zwraca element wyliczalny jest ona wywoływana po raz pierwszy.</span><span class="sxs-lookup"><span data-stu-id="78be4-153"><xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A> returns an enumerable the first time it is called.</span></span> <span data-ttu-id="78be4-154">W kolejnych wywołaniach zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="78be4-154">On successive calls it returns null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataServiceQuery.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78be4-155">Reprezentuje identyfikator URI zapytania do usługi danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-155">Represents the URI of the query to the data service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78be4-156">Identyfikator URI jako ciąg, który reprezentuje zapytanie do usługi danych dla tego <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78be4-156">A URI as string that represents the query to the data service for this <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>