<Type Name="DataServiceContext" FullName="System.Data.Services.Client.DataServiceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7dbcad4a09c227813557444fbceb4f4248f8a8a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36683535" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceContext" />
  <TypeSignature Language="F#" Value="type DataServiceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.Services.Client.DataServiceContext" /> Reprezentuje kontekstu środowiska uruchomieniowego usługi danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] są bezstanowych, ale <xref:System.Data.Services.Client.DataServiceContext> nie jest. Stan na komputerze klienckim jest obsługiwana między interakcji, aby zapewnić obsługę funkcji, takich jak zarządzanie aktualizacjami. Ta klasa i <xref:System.Data.Services.Client.DataServiceQuery> klasa, która reprezentuje określonego żądania HTTP z usługą danych są dwie klasy głównym w bibliotece klienta.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi, aby niejawnie wykonywanie zapytań względem usługi danych Northwind, która zwraca wszystkich klientów. Identyfikator URI żądanego `Customers` zestawu jednostek jest wyznaczany automatycznie na podstawie kontekstu. Kwerenda została wykonana niejawnie podczas wyliczania. Usługi danych Northwind jest utworzone po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getallcustomers)]
 [!code-vb[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getallcustomers)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceContext (Uri serviceRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri serviceRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceRoot As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceContext(Uri ^ serviceRoot);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceContext : Uri -&gt; System.Data.Services.Client.DataServiceContext" Usage="new System.Data.Services.Client.DataServiceContext serviceRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceRoot" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceRoot">Bezwzględny identyfikator URI, który identyfikuje katalog główny usługi danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Services.Client.DataServiceContext" /> klasy z określonym <paramref name="serviceRoot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Biblioteka klienta oczekuje `baseURI` do punktu danych w katalogu głównym usługi, ale nie wystawiać żądanie, aby go zweryfikować. Jeśli `baseURI` nie identyfikuje katalogu głównego usługi, biblioteki klienta jest niezdefiniowany.  
  
 Identyfikator URI znakiem ukośnika jest odpowiednikiem bez końcowych znaków.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="serviceRoot" /> ma wartość null.</exception>
        <exception cref="T:System.ArgumentException">Jeśli <paramref name="serviceRoot" /> nie jest bezwzględnym identyfikatorem URI - lub - jeśli <paramref name="serviceRoot" /> jest poprawnie sformułowanym identyfikatorem URI bez zapytania lub fragmentu zapytania.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLink">
      <MemberSignature Language="C#" Value="public void AddLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt źródłowy dla nowego łącza.</param>
        <param name="sourceProperty">Nazwa właściwości nawigacji zwracającej obiekt pokrewny obiektu źródłowego.</param>
        <param name="target">Obiekt powiązane z obiektem źródłowym przez nowy link.</param>
        <summary>Dodaje określone łącze do zestawu obiektów <see cref="T:System.Data.Services.Client.DataServiceContext" /> służy do śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiadamia <xref:System.Data.Services.Client.DataServiceContext> czy nowy link istnieje między źródłem pokrewnych i obiektów docelowych i że łącze jest reprezentowany przez właściwość określonego źródła. <xref:System.Data.Services.Client.DataServiceContext> Dodaje ten link do zestawu nowo utworzonego łącza, które będą wysyłane do usługi data na następne wywołanie <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Jednokierunkowe relacje są łącza. Ponieważ skojarzenia dwukierunkowe, w jeden do jednego skojarzenia należy wywołać albo <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> ponownie, aby utworzyć łącze wstecznego w skojarzenia wiele do jednego, należy wywołać <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> można utworzyć łącza do "jeden" końcu skojarzenia.  
  
 Obiekt docelowy musi być typu identyfikowane przez `sourceProperty` parametru lub podtyp typu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> i <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> metody tworzenia łączy definiowania relacji. W tym przykładzie właściwości nawigacji na `Order_Details` obiektu są również jawnie ustawione. W tym przykładzie użyto <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi na podstawie usługi danych Northwind, który jest tworzony po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" />, <paramref name="sourceProperty" />, lub <paramref name="target" /> mają wartość null.</exception>
        <exception cref="T:System.InvalidOperationException">Jeśli link już istnieje.  - lub - jeśli <paramref name="source" /> lub <paramref name="target" /> obiekty znajdują się w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> stanu.  - lub - jeśli <paramref name="sourceProperty" /> nie jest kolekcją.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="dataServiceContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Nazwa zestawu jednostek, do którego będzie można dodać zasobu.</param>
        <param name="entity">Mają być śledzone przez obiekt <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Dodaje określony obiekt do zestawu obiektów, które <see cref="T:System.Data.Services.Client.DataServiceContext" /> służy do śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt jest umieszczany w zestawie śledzenia <xref:System.Data.Services.Client.DataServiceContext> w <xref:System.Data.Services.Client.EntityStates.Added> stanu. <xref:System.Data.Services.Client.DataServiceContext> Zostanie próba wstawienia obiektu przez HTTP POST na następne wywołanie <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. Ta metoda nie powoduje dodania obiektów związanych z określona jednostka <xref:System.Data.Services.Client.DataServiceContext>. Każdy obiekt musi zostać dodany do oddzielnego wywołania do <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>.  
  
 Metoda sprawdza, czy jednostka określony zestaw jest w usłudze danych skojarzonych z <xref:System.Data.Services.Client.DataServiceContext> lub że dodany obiekt ma wymagane właściwości niezbędne do dodania do określonego `entity set`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entitySetName" /> lub <paramref name="entity" /> ma wartość null.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="entitySetName" /> jest pusta.  - lub - gdy <paramref name="entity" /> nie ma właściwości klucza zdefiniowanej.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy obiekt jest już śledzony przez kontekst.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRelatedObject">
      <MemberSignature Language="C#" Value="public void AddRelatedObject (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelatedObject(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRelatedObject (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRelatedObject(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddRelatedObject : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddRelatedObject (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt nadrzędny, który jest śledzony przez kontekst.</param>
        <param name="sourceProperty">Nazwa właściwości nawigacji zwracającej obiekt pokrewny oparte na skojarzenie między dwiema jednostkami.</param>
        <param name="target">Powiązany obiekt, który jest dodawany.</param>
        <summary>Dodaje powiązanego obiektu do kontekstu i tworzy link, który definiuje relację między tymi dwoma obiektami pojedyncze żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wywołać <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> metody w celu dodania obiektu pokrewnego zamiast kontaktować się z tych trzech metod: <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingChanges">
      <MemberSignature Language="C#" Value="public bool ApplyingChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyingChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyingChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyingChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyingChanges : bool" Usage="System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Data.Services.Client.DataServiceContext" /> obecnie jest wprowadzanie zmian do śledzonych obiektów.</summary>
        <value>Zwraca <see langword="true" /> podczas zmiany są obecnie stosowane; w przeciwnym razie zwraca <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachLink">
      <MemberSignature Language="C#" Value="public void AttachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AttachLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AttachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt źródłowy nowe łącza.</param>
        <param name="sourceProperty">Nazwa właściwości w obiekcie źródłowym reprezentujący łącze między obiektu źródłowego i docelowego.</param>
        <param name="target">Obiekt docelowy łącza, które jest powiązany z obiektem źródłowym, w tym wywołaniu. Obiekt docelowy musi być określona przez właściwość source lub podtyp typu.</param>
        <summary>Powiadamia <see cref="T:System.Data.Services.Client.DataServiceContext" /> mógł uruchomić śledzenia określone łącze, który definiuje relację między obiektami jednostki.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" />, <paramref name="sourceProperty" />, lub <paramref name="target" /> ma wartość null.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy łącze między dwiema jednostkami już istnieje.  - lub - gdy <paramref name="source" /> lub <paramref name="target" /> w <see cref="F:System.Data.Services.Client.EntityStates.Added" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> stanu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Powiadamia <see cref="T:System.Data.Services.Client.DataServiceContext" /> można uruchomić śledzenia określonego zasobu i dostaw lokalizacja zasobu określonego zasobu ustawiona.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Nazwa zestawu, który zawiera zasób.</param>
        <param name="entity">Zasobów, które mają być śledzone przez <see cref="T:System.Data.Services.Client.DataServiceContext" />. Zasób jest dołączony w niezmienionym stanie.</param>
        <summary>Powiadamia <see cref="T:System.Data.Services.Client.DataServiceContext" /> można uruchomić śledzenia określonego zasobu i dostaw lokalizacja zasobu w ramach określonego zasobu ustawiona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli jednostka jest częścią wykresu obiektów, ta operacja nie przechodzą przez wykres tak, aby dodać powiązane obiekty. Jest skrócona operacji.  
  
 Metody nie sprawdza, czy zestaw określonej jednostki występuje w usłudze danych skojarzonych z <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> lub <paramref name="entitySetName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="entitySetName" /> jest pustym ciągiem.  - lub - gdy <paramref name="entity" /> nie ma właściwości klucza zdefiniowanej.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy <paramref name="entity" /> jest już śledzony przez kontekst.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object, etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity, System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj * string -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Ustaw wartość ciągu, który zawiera nazwę podmiotu jest dołączony do jednostki.</param>
        <param name="entity">Jednostka do dodania.</param>
        <param name="etag">Wartość etag, który reprezentuje stan jednostki czasu, gdy został pobrany z usługi danych. Ta wartość jest traktowany jako ciąg z ogólnym opisem; Weryfikacja nie jest przeprowadzana na nim przez bibliotekę klienta.</param>
        <summary>Powiadamia <see cref="T:System.Data.Services.Client.DataServiceContext" /> można uruchomić śledzenia określonego zasobu i dostaw lokalizacja zasobu określonego zasobu ustawiona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody powiadamia <xref:System.Data.Services.Client.DataServiceContext> mógł uruchomić śledzenia określonej jednostki i identyfikuje zestaw jednostek, do którego należy obiekt.  
  
 Jeśli jednostka jest częścią wykresu obiektów, ta operacja nie przechodzą przez wykres tak, aby dodać powiązane obiekty. Obiekt jest dodany do <xref:System.Data.Services.Client.DataServiceContext> w niezmienionym stanie. Metoda nie sprawdza, czy jednostka określony zestaw występuje w usłudze danych skojarzonych z <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Użycie przeładowania z tag etag określony element etag jest skojarzony z nowo dołączona jednostki. Element etag zostanie przesłany do usługi danych z wszystkich kolejnych operacji aktualizacji lub kwerendę dla obiektu, zgodnie z semantyki HTTP. Ręczne Generowanie wartości etag nie jest zalecane, ale tego przeciążenia są dostarczane umożliwiające jednostek, które mogą zostały serializowane i zapisać można dołączyć ponownie wtedy wraz z odpowiednich współbieżności metadanych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entitySetName" /> jest <see langword="null" />.  - lub - gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="entitySetName" /> jest pustym ciągiem.  - lub - gdy podany obiekt nie ma właściwości klucza.</exception>
        <exception cref="T:System.InvalidOperationException">Jeśli podany obiekt jest już śledzony przez kontekst</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bezwzględnego identyfikatora URI identyfikujący katalog główny usługi danych docelowych.</summary>
        <value>Bezwzględny identyfikator URI, który identyfikuje katalog główny usługi danych T.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator URI dostarczony znakiem ukośnika jest odpowiednikiem bez końcowych znaków.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronicznie wysyła żądanie do usługi danych można wykonać określonego identyfikatora URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of T) (continuation As DataServiceQueryContinuation(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; IAsyncResult ^ BeginExecute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ zwracany przez zapytanie.</typeparam>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> obiekt, który reprezentuje następnej strony danych do zwrócenia z usługi danych.</param>
        <param name="callback">Delegat do wywołania, gdy wyniki są dostępne do użycia przez klienta.</param>
        <param name="state">Stan zdefiniowane przez użytkownika obiekt przekazywany do wywołania zwrotnego.</param>
        <summary>Asynchronicznie wysyła żądanie do usługi danych do pobrania następnej strony danych w wyniku zapytania stronicowanej.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podana <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> obiekt zawiera identyfikator URI, który po wykonaniu zwraca następnej strony danych w wyniku zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;TElement&gt; (Uri requestUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;TElement&gt;(class System.Uri requestUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of TElement) (requestUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; IAsyncResult ^ BeginExecute(Uri ^ requestUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (requestUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Typ zwracany przez zapytanie.</typeparam>
        <param name="requestUri">Identyfikator URI, do którego będą wysyłane żądania zapytania. Identyfikator URI może być żadnych prawidłowych danych usługi URI; Nazwa może zawierać <c> $ </c> parametry zapytania.</param>
        <param name="callback">Delegat do wywołania, gdy wyniki są dostępne do użycia przez klienta.</param>
        <param name="state">Stan zdefiniowane przez użytkownika obiekt przekazywany do wywołania zwrotnego.</param>
        <summary>Asynchronicznie wysyła żądanie, dzięki czemu to wywołanie nie blokuje przetwarzania podczas oczekiwania na wyniki z usługi.</summary>
        <returns>Obiekt, który służy do śledzenia stanu operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócona <xref:System.IAsyncResult> obiekt jest używany do określenia, po zakończeniu operacji asynchronicznej. Aby uzyskać więcej informacji, zobacz [operacji asynchronicznych](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Metoda <xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A> używa tej samej semantyki jako <xref:System.Data.Services.Client.DataServiceContext.Execute%2A>, jednak ta metoda asynchronicznie wysyła żądanie, dzięki czemu to wywołanie nie blokuje przetwarzania podczas oczekiwania na wyniki z usługi. Zgodnie z wzorca asynchronicznego begin-end standardowe dostarczone wywołanie zwrotne wywoływane, gdy pobierane są wyniki zapytania.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wykonania zapytania asynchronicznego przez wywołanie metody <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> metodę, aby uruchomić zapytanie. Wbudowanej delegata wywołania <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> metodę w celu wyświetlenia wyników zapytania. W tym przykładzie użyto <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi na podstawie usługi danych Northwind, który jest tworzony po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteBatch">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteBatch(class System.AsyncCallback callback, object state, class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteBatch (callback As AsyncCallback, state As Object, ParamArray queries As DataServiceRequest()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteBatch(AsyncCallback ^ callback, System::Object ^ state, ... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteBatch : AsyncCallback * obj * System.Data.Services.Client.DataServiceRequest[] -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecuteBatch (callback, state, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">Delegat, który jest wywoływana po otrzymaniu odpowiedzi na żądania wsadowego.</param>
        <param name="state">Obiekt stanu użytkownika, który jest używany do przekazywania danych kontekstu wywołania zwrotnego metody.</param>
        <param name="queries">Tablica żądań zapytań do uwzględnienia w żądania wsadowego.</param>
        <summary>Asynchronicznie przesyła grupy zapytań, łącznie z usługą danych.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Obiekt, który służy do śledzenia stanu operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócona <xref:System.IAsyncResult> obiekt jest używany do określenia, po zakończeniu operacji asynchronicznej. Aby uzyskać więcej informacji, zobacz [operacji asynchronicznych](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Zapytania są określone jako <xref:System.Data.Services.Client.DataServiceRequest%601> wystąpień. Zwraca <xref:System.Data.Services.Client.DataServiceResponse> reprezentujący odpowiedź żądanie wsadowe jako całość. Odpowiedzi na kwerendy poszczególnych są reprezentowane jako <xref:System.Data.Services.Client.DataServiceResponse> obiektów, które mogą być udostępniane przez wyliczania <xref:System.Data.Services.Client.DataServiceResponse> wystąpienia.  
  
 Gdy metoda zwróci wartość, wszystkie odpowiedzi HTTP dla żądania wsadowego odczytane ze strumienia sieci, ale odpowiedzi nie zostały przetworzone. Materialization rozwiązania lub obiekt nie tożsamości występuje dla określonej jednostki w odpowiedzi do momentu jej wyliczeniu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetReadStream">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetReadStream (entity As Object, args As DataServiceRequestArgs, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginGetReadStream (entity, args, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwości binarnej do pobrania.</param>
        <param name="args">Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> klasy, który zawiera ustawienia dla komunikatu żądania HTTP.</param>
        <param name="callback">Delegat do wywołania, gdy wyniki są dostępne do użycia przez klienta.</param>
        <param name="state">Stan zdefiniowane przez użytkownika obiekt przekazywany do wywołania zwrotnego.</param>
        <summary>Asynchronicznie pobiera dane binarne właściwości dla określonej jednostki jako strumień danych wraz z nagłówków określonego komunikatu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Obiekt, który służy do śledzenia stanu operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> Metoda asynchronicznie żąda strumień danych, który zawiera właściwości binarnej do żądanej `entity`.  
  
 W protokole AtomPub `entity` jest wpisem Media Link Entry i właściwości binarnej jest skojarzony zasobu multimediów.  
  
 Weryfikacja nie jest przeprowadzana na nagłówkach, które są ustawiane w `args`. W związku z tym nie należy zmieniać nagłówka HTTP w taki sposób, który znaczenia żądania zmiany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wszystkie parametry dostarczony do metody jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie są śledzone przez to <see cref="T:System.Data.Services.Client.DataServiceContext" />.  - lub - <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.  - lub - <paramref name="entity" /> nie jest wpisem Media Link Entry i ma właściwość binarną.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna operację, aby załadować wartość określonej właściwości z usługą danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości w określonej jednostki do załadowania.</param>
        <param name="callback">Delegat wywoływany w przypadku otrzymania odpowiedzi na żądanie.</param>
        <param name="state">Obiekt stanu użytkownika, który jest używany do przekazywania danych kontekstu wywołania zwrotnego metody.</param>
        <summary>Usługi danych asynchronicznie ładuje wartość określonej właściwości.</summary>
        <returns>
          <see langword="IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wywołuje operację sieci można pobrać wartości właściwości. Określona właściwość może być jedna z właściwości jednostki, w tym właściwości, które reprezentują skojarzeń lub łącza. Jeśli właściwość reprezentuje skojarzenie lub łącze lub właściwość odroczonego, wywołanie tej metody zawiera klienta z opóźnieniem załadować powiązane zasoby sposób. Jeśli jednostka jest w stanie zmodyfikowany, wartość właściwości ładuje powiązanych jednostek i oznacza je i wszystkie linki jako bez zmian.  
  
 Jeśli właściwość jest już załadowany, wywołanie tej metody umożliwia odświeżanie wartości właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości do ładowania określonej jednostki.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> jednostki danych ma zostać zwrócony przez usługę danych związanych z obiekt, który reprezentuje następnej strony.</param>
        <param name="callback">Delegat do wywołania, gdy wyniki są dostępne do użycia przez klienta.</param>
        <param name="state">Stan zdefiniowane przez użytkownika obiekt przekazywany do wywołania zwrotnego.</param>
        <summary>Asynchronicznie ładuje następnej strony jednostek powiązanych z usługi danych za pomocą obiektu kontynuacji podana kwerenda.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podana <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> obiekt zawiera identyfikator URI, który po wykonaniu zwraca następnej strony danych w wyniku zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Uri nextLinkUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, nextLinkUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości do ładowania określonej jednostki.</param>
        <param name="nextLinkUri">Identyfikator URI używany do załadowania następnej strony wyników.</param>
        <param name="callback">Delegat do wywołania, gdy wyniki są dostępne do użycia przez klienta.</param>
        <param name="state">Stan zdefiniowane przez użytkownika obiekt przekazywany do wywołania zwrotnego.</param>
        <summary>Asynchronicznie ładuje stronę powiązanych jednostek z usługą danych przy użyciu dostarczonego łącze do następnej identyfikatora URI.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Obiekt, który służy do śledzenia stanu operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Unchanged> lub <xref:System.Data.Services.Client.EntityStates.Modified> stanu powiązanych jednostek są ładowane w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu i linki między jednostkami również są tworzone w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu.  
  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu powiązanych jednostek są ładowane w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu i linki między jednostkami, które są tworzone w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przesyła oczekujących zmian z usługą danych zebranych przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> od czasu ostatniej zmiany zostały zapisane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegat do wywołania po ukończeniu operacji.</param>
        <param name="state">Obiekt stanu użytkownika, który jest używany do przekazywania danych kontekstu wywołania zwrotnego metody.</param>
        <summary>Asynchronicznie przesyła oczekujących zmian z usługą danych zebranych przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> od czasu ostatniej zmiany zostały zapisane.</summary>
        <returns>
          <see langword="IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany są dodawane do <xref:System.Data.Services.Client.DataServiceContext> przez wywołanie metody <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>, lub <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Zmiany są wysyłane do danych usługi jako z <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metoda, operacja jednej zmiany na żądania HTTP.  
  
 Jeśli wystąpi błąd podczas przetwarzania operacji, żadne dodatkowe operacje są przetwarzane przez usługę danych. Zamiast tego odpowiedzi jest generowany informuje klienta, jakie operacje zostały wykonane, wyniki i jakie operacje nie zostały zainstalowane z powodu błędu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (options As SaveChangesOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(System::Data::Services::Client::SaveChangesOptions options, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : System.Data.Services.Client.SaveChangesOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">Opcje dotyczące klienta można zapisać zestawu oczekujące zmiany.</param>
        <param name="callback">Delegat do wywołania po ukończeniu operacji.</param>
        <param name="state">Obiekt stanu użytkownika, który jest używany do przekazywania danych kontekstu wywołania zwrotnego metody.</param>
        <summary>Asynchronicznie przesyła oczekujących zmian z usługą danych zebranych przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> od czasu ostatniej zmiany zostały zapisane.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany są dodawane do <xref:System.Data.Services.Client.DataServiceContext> przez wywołanie metody <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>, lub <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Jeśli <xref:System.Data.Services.Client.SaveChangesOptions.Batch> jest ustawiona, wszystkie oczekujące zmiany zostaną uwzględnione w jednej zmiany w partii i przesyłane do usługi data pojedyncze żądanie HTTP. Wymaga to, że Usługa docelowa obsługuje przetwarzanie wsadowe.  
  
 Jeśli <xref:System.Data.Services.Client.SaveChangesOptions.Batch> nie ustawiono:  
  
-   Zmiany są wysyłane do usługi data takim jak <xref:System.Data.Services.Client.DataServiceContext.SaveChanges> metody: jednej operacji jedno żądanie HTTP.  
  
-   <xref:System.Data.Services.Client.OperationResponse.StatusCode%2A> Jest zawsze 200.  
  
-   <xref:System.Data.Services.Client.OperationResponse.Headers%2A> Właściwość zwraca pustą kolekcję.  
  
 Jeśli <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> ustawiono:  
  
-   Jeśli wystąpi błąd przetwarzania operacji w zestawie zmian, kolejne operacje w zestawie zmian nie zostaną sprawdzone; Jednak usługa danych będą w dalszym ciągu przetworzyć następnej zmiany w partii.  
  
-   Ta opcja nie można ustawić podczas <xref:System.Data.Services.Client.SaveChangesOptions.Batch> jest ustawiona, ponieważ podczas przetwarzania wsadowego jest włączona, wszystkie operacje będą umieszczane w zestawie jednej zmiany.  
  
 Jeśli <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> nie ustawiono:  
  
-   Jeśli wystąpi błąd podczas przetwarzania operacji, żadne dodatkowe operacje są przetwarzane przez usługę danych.  
  
 Odpowiedź jest generowany informuje klienta, które operacje zostały wykonane, wyniki i jakie operacje nie zostały zainstalowane z powodu błędu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRequest">
      <MemberSignature Language="C#" Value="public void CancelRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRequest (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.CancelRequest : IAsyncResult -&gt; unit" Usage="dataServiceContext.CancelRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Obiektu z operacji anulowania.</param>
        <summary>Próbuje anulować operację, która jest skojarzona z podane <see cref="T:System.IAsyncResult" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IAsyncResult> Obiekt przekazywany do `asyncResult` parametr jest zwracany, gdy operacja jest wykonywana asynchronicznie obiektu. Aby uzyskać więcej informacji, zobacz [operacji asynchronicznych](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md). Do czasu przetwarzania tego żądania <xref:System.Data.Services.Client.DataServiceContext> wystąpienie nie jest w stanie przewidywalne. <xref:System.Data.Services.Client.DataServiceContext> Może być bezpiecznie stosowany podczas <xref:System.IAsyncResult.IsCompleted%2A> właściwość `asyncResult` zwraca wartość `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;T&gt; CreateQuery&lt;T&gt; (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (entitySetName As String) As DataServiceQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::DataServiceQuery&lt;T&gt; ^ CreateQuery(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'T&gt;" Usage="dataServiceContext.CreateQuery entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ zwracany przez zapytanie</typeparam>
        <param name="entitySetName">Ciąg, który jest rozpoznawany jako identyfikatora URI.</param>
        <summary>Tworzy zapytanie usługi danych danych określonego typu ogólnego.</summary>
        <returns>Nowy <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> wystąpienie reprezentującego kwerendy usługi danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informacje uwierzytelniania jest używana przez każdego zapytania utworzone za pomocą <see cref="T:System.Data.Services.Client.DataServiceContext" /> obiektu.</summary>
        <value>Interfejs podstawowego uwierzytelniania w celu pobierania poświadczeń do uwierzytelniania klientów sieci Web.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNamespace">
      <MemberSignature Language="C#" Value="public string DataNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DataNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataNamespace : string with get, set" Usage="System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar nazw XML dla elementów danych, nie elementów metadanych ładunku Atom.</summary>
        <value>Ciąg reprezentujący przestrzeń nazw XML dla elementów danych ładunku w ATOM formatu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna tej właściwości to wartość domyślna [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] przestrzeni nazw: `http://schemas.microsoft.com/ado/2007/08/dataservices`.  
  
 Ta właściwość dotyczy zarówno obszar nazw, który jest używany podczas analizowania zawartości z usługi danych, jak i przestrzeni nazw używany do generowania zawartości wysyłane do usługi danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLink">
      <MemberSignature Language="C#" Value="public void DeleteLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DeleteLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.DeleteLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt źródłowy łącza może być oznaczony do usunięcia.</param>
        <param name="sourceProperty">Nazwa właściwości nawigacji na obiekt źródłowy, który służy do dostępu do obiektu docelowego.</param>
        <param name="target">Obiekt docelowy objętego łącza, który jest powiązany z obiektem źródłowym. Obiekt docelowy musi być określona przez właściwość source lub podtyp typu.</param>
        <summary>Zmienia stan łącza do usunięty z listy łączy śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszelkie link śledzony przez <xref:System.Data.Services.Client.DataServiceContext>, niezależnie od bieżącego stanu może być odłączony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" />, <paramref name="sourceProperty" />, lub <paramref name="target" /> ma wartość null.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy <paramref name="source" /> lub <paramref name="target" /> w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.  - lub - gdy <paramref name="sourceProperty" /> nie jest kolekcją.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="dataServiceContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka śledzonych zostać zmienione w stanie usunięty.</param>
        <summary>Zmienia stan określony obiekt do usunięcia w <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie łącza do określonej jednostki są również oznaczane usunięte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Jeśli obiekt nie jest śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public bool Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detach (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; bool" Usage="dataServiceContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Śledzonych obiekt, który ma zostać odłączony <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Usuwa obiekt z listy jednostek który <see cref="T:System.Data.Services.Client.DataServiceContext" /> służy do śledzenia.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli określonej jednostki został odłączony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy obiekt jest odłączony, nie jest już śledzony przez <xref:System.Data.Services.Client.DataServiceContext>.  
  
 <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> Można wywołać metody można odłączyć dowolnego obiektu, niezależnie od jego <xref:System.Data.Services.Client.EntityStates>.  
  
 Po odłączanie określonej jednostki, ta metoda Odłącza wszystkie łącza powiązane z jednostką.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachLink">
      <MemberSignature Language="C#" Value="public bool DetachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DetachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetachLink (source As Object, sourceProperty As String, target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DetachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DetachLink : obj * string * obj -&gt; bool" Usage="dataServiceContext.DetachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt źródłowy należący do łącza może być oznaczony do usunięcia.</param>
        <param name="sourceProperty">Nazwa właściwości w obiekcie źródłowym, które reprezentuje źródło łącza między serwerem źródłowym a docelowym.</param>
        <param name="target">Obiekt docelowy objętego łącza, który jest powiązany z obiektem źródłowym. Obiekt docelowy musi być określona przez właściwość source lub podtyp typu.</param>
        <summary>Usuwa określone łącze z listy łączy śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <returns>Zwraca wartość PRAWDA, jeśli określona jednostka została odłączona; w przeciwnym razie wartość false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszelkie link śledzony przez <xref:System.Data.Services.Client.DataServiceContext>, niezależnie od bieżącego stanu może być odłączony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" /> lub <paramref name="sourceProperty" /> są <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="sourceProperty" /> jest pustym ciągiem.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute&lt;TElement&gt; (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; EndExecute&lt;TElement&gt;(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute(Of TElement) (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Typ zwracany przez zapytanie.</typeparam>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> obiekt.</param>
        <summary>Wywołuje się, by zakończyć <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />.</summary>
        <returns>Wyniki zwrócone przez operację zapytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zgodnie z wzorca asynchronicznego begin-end standardowe dostarczone wywołanie zwrotne wywoływane, gdy pobierane są wyniki zapytania. Aby uzyskać więcej informacji, zobacz [operacji asynchronicznych](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Po wywołaniu wywołania zwrotnego wszystkie wyniki zostały odczytane z strumienia HTTP, ale nie zostały przetworzone; materializować lub zmodyfikować nie lokalnych obiektów dla użytkownika i nie przeprowadzono rozpoznawania tożsamości. Gdy <xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A> zostanie wywołany, <xref:System.Data.Services.Client.DataServiceResponse> zostanie utworzona i zwrócona, ale wyniki nadal nie zostały przetworzone. Rozdzielczość tożsamości, materialization obiektu i manipulowania występują tylko, gdy użytkownik wylicza wyniki.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wykonania zapytania asynchronicznego przez wywołanie metody <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> metodę, aby uruchomić zapytanie. Wbudowanej delegata wywołania <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> metodę w celu wyświetlenia wyników zapytania. W tym przykładzie użyto <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi na podstawie usługi danych Northwind, który jest tworzony po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="asyncResult" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="asyncResult" /> nie pochodzi z to <see cref="T:System.Data.Services.Client.DataServiceContext" /> wystąpienia.  - lub - jeśli <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> wcześniej wywołano metodę.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy występuje błąd podczas wykonywania żądania lub zawartość komunikatu odpowiedzi są konwertowane na obiekty.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndExecuteBatch(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteBatch (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndExecuteBatch(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteBatch : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndExecuteBatch asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</param>
        <summary>Wywołuje się, by zakończyć <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />.</summary>
        <returns>
          <see langword="DataServiceResult" /> Obiekt, który wskazuje wynik operacji zbiorczej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przesyła grupy zapytań, łącznie z usługą danych. Odpowiedzi na kwerendy poszczególnych są reprezentowane jako <xref:System.Data.Services.Client.DataServiceResponse> obiekty pochodne <xref:System.Data.Services.Client.OperationResponse> który można uzyskać z <xref:System.Data.Services.Client.DataServiceResponse> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetReadStream (asyncResult As IAsyncResult) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ EndGetReadStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetReadStream : IAsyncResult -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.EndGetReadStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Wynik <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> operacja, która zawiera strumień danych binarnych.</param>
        <summary>Wywołuje się, by zakończyć operację asynchroniczną pobierania właściwości binarnej jako strumień.</summary>
        <returns>Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> zawierającą w strumieniu odpowiedzi wraz z jego metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> Metoda jest wywoływana, aby otrzymywać wyniki z <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> metody.  
  
 <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> — Metoda nie zostanie zakończone, do momentu otrzymania odpowiedzi z <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse EndLoadProperty(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndLoadProperty (asyncResult As IAsyncResult) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ EndLoadProperty(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndLoadProperty : IAsyncResult -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.EndLoadProperty asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</param>
        <summary>Wywołuje się, by zakończyć <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> operacji.</summary>
        <returns>Odpowiedź operacji ładowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpi błąd podczas żądania lub podczas przetwarzania odpowiedzi z usług danych, jest zwracany wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndSaveChanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSaveChanges (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndSaveChanges(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSaveChanges : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndSaveChanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</param>
        <summary>Wywołuje się, by zakończyć <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> operacji.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> obiekt, który wskazuje wynik operacji zbiorczej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A> Należy sprawdzić, aby zobaczyć wynik operacji wsadowych. Wyniki poszczególnych działań można pobrać na operację obiektów zwróconych przez <xref:System.Data.Services.Client.DataServiceResponse> modułu wyliczającego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt; Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.EntityDescriptor&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As ReadOnlyCollection(Of EntityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ Entities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkich zasobów, które są śledzone przez <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <value>Lista <see cref="T:System.Data.Services.Client.EntityDescriptor" /> obiektów, które reprezentują wszystkie zasoby, które są śledzone przez <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żadne zasoby są śledzone, zwracany jest listę, która nie ma elementów zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła żądanie do usługi danych można wykonać określonego identyfikatora URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; Execute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; Execute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of T) (continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ Execute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.Execute continuation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ zwracany przez zapytanie.</typeparam>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> obiekt, który reprezentuje następnej strony danych do zwrócenia z usługi danych.</param>
        <summary>Wysyła żądanie do usługi danych do pobrania następnej strony danych w wyniku zapytania stronicowanej.</summary>
        <returns>Odpowiedź, która zawiera następnej strony danych w wyniku zapytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podana <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> obiekt zawiera identyfikator URI, który po wykonaniu zwraca następnej strony danych w wyniku zapytania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy występuje błąd podczas wykonywania żądania lub zawartość komunikatu odpowiedzi są konwertowane na obiekty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute&lt;TElement&gt; (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; Execute&lt;TElement&gt;(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TElement) (requestUri As Uri) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.Execute : Uri -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.Execute requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Typ, który zwraca zapytanie.</typeparam>
        <param name="requestUri">Identyfikator URI, do którego będą wysyłane żądania zapytania. Identyfikator URI może być identyfikator URI usługi żadnych prawidłowych danych. Może zawierać parametrów zapytania $.</param>
        <summary>Wysyła żądanie do usługi danych można wykonać określonego identyfikatora URI.</summary>
        <returns>Wyniki operacji zapytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> Metoda jest używana do zapytań usługi danych przez identyfikator URI; metoda powoduje, że żądanie HTTP GET zostanie wysłane do usługi danych. Określony identyfikator URI żądania może być bezwzględny lub względny.  
  
 Jeśli `requestUri` jest bezwzględnym, ta metoda sprawdza, czy identyfikator URI wskazuje na tej samej usługi danych, który został określony podczas konstruowania <xref:System.Data.Services.Client.DataServiceContext>. Jeśli `requestUri` jest względna, ta metoda usuwa Wyłącz wszelkie wiodące ukośniki i dołącza `requestUri` do została podana podczas konstruowania <xref:System.Data.Services.Client.DataServiceContext>. Ukośnika jest dołączany po identyfikatora URI przekazane do <xref:System.Data.Services.Client.DataServiceContext> konstruktora, jeśli jeszcze nie została już istnieje.  
  
 Gdy metoda zwróci wartość, wszystkie odpowiedzi HTTP dla żądania odczytane ze strumienia sieci, ale odpowiedź zostanie nie został przetworzony; nie tożsamości materialization rozwiązania lub obiekt nie istnieje. Rozdzielczość tożsamości i materialization obiektowego nie występują dla określonej jednostki w odpowiedzi do momentu jej wyliczeniu.  
  
   
  
## Examples  
 W tym przykładzie użyto `do…while` pętli załadować `Customers` jednostek z wyników stronicowania z usługi danych. <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> Metoda jest wywoływana przy użyciu łącze do następnej identyfikator URI do odebrania następnej strony danych.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getcustomerspaged)]
 [!code-vb[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getcustomerspaged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Jeśli nie odebrano odpowiedź z żądania do <paramref name="requestUri" />.</exception>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="requestUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="requestUri" /> nie jest prawidłowym identyfikatorem URI usługi danych.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy występuje błąd podczas wykonywania żądania lub zawartość komunikatu odpowiedzi są konwertowane na obiekty.</exception>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">Gdy usługa danych zwraca HTTP 404: nie można odnaleźć zasobu błędu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse ExecuteBatch (params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse ExecuteBatch(class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteBatch (ParamArray queries As DataServiceRequest()) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ ExecuteBatch(... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.ExecuteBatch : System.Data.Services.Client.DataServiceRequest[] -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.ExecuteBatch queries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queries">Tablica <see cref="T:System.Data.Services.Client.DataServiceRequest[]" /> obiektów, które tworzą zapytania.</param>
        <summary>Przesyła grupy zapytań, łącznie z usługą danych.</summary>
        <returns>Odpowiedź operacji zbiorczej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapytania są określone jako <xref:System.Data.Services.Client.DataServiceRequest%601> wystąpień. Zwraca <xref:System.Data.Services.Client.DataServiceResponse> reprezentujący odpowiedź żądanie wsadowe jako całość. Odpowiedzi na kwerendy poszczególnych są reprezentowane jako osoba <xref:System.Data.Services.Client.OperationResponse> obiektów, które mogą być udostępniane przez wyliczania <xref:System.Data.Services.Client.DataServiceResponse> wystąpienia.  
  
 Ta metoda zwraca całej odpowiedzi HTTP dla partii żądania odczytane ze strumienia sieci, ale odpowiedzi nie zostały przetworzone. Materialization rozwiązania lub obiekt nie tożsamości występuje dla określonej jednostki w odpowiedzi do momentu jej wyliczeniu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania <xref:System.Data.Services.Client.DataServiceContext.ExecuteBatch*> metoda używana tablica <xref:System.Data.Services.Client.DataServiceRequest%601> obiektów, które zawiera zapytań zwracających zarówno `Customers` i `Products` obiektów z usług danych Northwind. Kolekcja <xref:System.Data.Services.Client.QueryOperationResponse%601> obiektów w zwróconym <xref:System.Data.Services.Client.DataServiceResponse> wyliczeniu i kolekcji obiektów, który jest zawarty w każdym <xref:System.Data.Services.Client.QueryOperationResponse%601> również wyliczeniu. W tym przykładzie użyto <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi na podstawie usługi danych Northwind, który jest tworzony po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#BatchQuery](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#batchquery)]
 [!code-vb[Astoria Northwind Client#BatchQuery](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#batchquery)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.EntityDescriptor GetEntityDescriptor(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityDescriptor (entity As Object) As EntityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::EntityDescriptor ^ GetEntityDescriptor(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetEntityDescriptor : obj -&gt; System.Data.Services.Client.EntityDescriptor" Usage="dataServiceContext.GetEntityDescriptor entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.EntityDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Obiekt której deskryptora jednostki.</param>
        <summary>Pobiera <see cref="T:System.Data.Services.Client.EntityDescriptor" /> dla obiekt przekazana jednostka.</summary>
        <returns>
          <see cref="T:System.Data.Services.Client.EntityDescriptor" /> Wystąpienie <paramref name="entity" />, lub <see langword="null" /> Jeśli <see cref="T:System.Data.Services.Client.EntityDescriptor" /> dla obiekt nie istnieje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkDescriptor (source As Object, sourceProperty As String, target As Object) As LinkDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::LinkDescriptor ^ GetLinkDescriptor(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.GetLinkDescriptor : obj * string * obj -&gt; System.Data.Services.Client.LinkDescriptor" Usage="dataServiceContext.GetLinkDescriptor (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.LinkDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt źródłowy łącza</param>
        <param name="sourceProperty">Nazwa właściwości nawigacji na <c>źródła</c> obiekt, który zwraca powiązanego obiektu.</param>
        <param name="target">Powiązanej jednostki.</param>
        <summary>Pobiera <see cref="T:System.Data.Services.Client.LinkDescriptor" /> dla określonych łącza, który definiuje relację między dwiema jednostkami.</summary>
        <returns>
          <see cref="T:System.Data.Services.Client.LinkDescriptor" /> Wystąpienia dla określonej relacji lub <see langword="null" /> Jeśli <see cref="T:System.Data.Services.Client.LinkDescriptor" /> nie istnieje dla tej relacji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataUri">
      <MemberSignature Language="C#" Value="public Uri GetMetadataUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetMetadataUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetMetadataUri();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataUri : unit -&gt; Uri" Usage="dataServiceContext.GetMetadataUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera identyfikator URI lokalizacji edmx metadanych.</summary>
        <returns>Identyfikator URI, który określa lokalizację opis metadanych, w formacie edmx, dla usługi data identyfikowane przez podstawowy identyfikator URI, który jest przekazywany do konstruktora.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca identyfikator URI przekazany do konstruktora z segmentem pojedynczą ścieżkę (`/$metadata`) dołączona. Wywołanie tej metody może generować operację sieci w celu dynamicznego odnajdowania metadanych identyfikatora URI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReadStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera dane binarne właściwości dla określonej jednostki jako strumienia danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwości binarnej do pobrania.</param>
        <summary>Pobiera dane binarne właściwości dla określonej jednostki jako strumienia danych.</summary>
        <returns>Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> reprezentujący odpowiedź.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> Metoda synchronicznie żąda strumień danych, który zawiera właściwości binarnej do żądanej `entity`.  
  
 W protokole AtomPub `entity` jest wpisem Media Link Entry i właściwości binarnej jest skojarzony zasobu multimediów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie są śledzone przez to <see cref="T:System.Data.Services.Client.DataServiceContext" />.  - lub - <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.  - lub - <paramref name="entity" /> nie jest wpisem Media Link Entry i ma właściwość binarną.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, args As DataServiceRequestArgs) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwości binarnej do pobrania.</param>
        <param name="args">Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> klasy, który zawiera ustawienia dla komunikatu żądania HTTP.</param>
        <summary>Pobiera dane binarne właściwości dla określonej jednostki jako strumień danych wraz z nagłówków określony komunikat.</summary>
        <returns>Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> reprezentujący odpowiedź.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> Metoda synchronicznie żąda strumień danych, który zawiera właściwości binarnej do żądanej `entity`.  
  
 W protokole AtomPub `entity` jest wpisem Media Link Entry i właściwości binarnej jest skojarzony zasobu multimediów.  
  
 Weryfikacja nie jest przeprowadzana na nagłówkach, które są ustawiane w `args`. W związku z tym nie należy zmieniać nagłówka HTTP w taki sposób, który znaczenia żądania zmiany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> jest <see langword="null" />.  - lub - <paramref name="args" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie są śledzone przez to <see cref="T:System.Data.Services.Client.DataServiceContext" />.  - lub - <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.  - lub - <paramref name="entity" /> nie jest wpisem Media Link Entry i ma właściwość binarną.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, string acceptContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, acceptContentType As String) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::String ^ acceptContentType);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * string -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, acceptContentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="acceptContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwości binarnej do pobrania.</param>
        <param name="acceptContentType">Typ zawartości żądane dane z usługi danych określony w nagłówku Accept.</param>
        <summary>Pobiera dane binarne właściwości dla określonej jednostki jako strumień danych z określonego nagłówka Accept w wiadomości.</summary>
        <returns>Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> reprezentujący odpowiedź.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `acceptContentType` Parametr powinien być prawidłową wartością nagłówka HTTP zaakceptować.  
  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> Metoda synchronicznie żąda strumień danych, który zawiera właściwości binarnej do żądanej `entity`.  
  
 W protokole AtomPub `entity` jest wpisem Media Link Entry i właściwości binarnej jest skojarzony zasobu multimediów.  
  
 Weryfikacja nie jest przeprowadzana na nagłówkach, które są ustawiane w `acceptContentType`. W związku z tym nie należy zmieniać tego nagłówka HTTP w taki sposób, który znaczenia żądania zmiany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> jest <see langword="null" />.  - lub - <paramref name="acceptContentType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie są śledzone przez to <see cref="T:System.Data.Services.Client.DataServiceContext" />.  - lub - <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.  - lub - <paramref name="entity" /> nie jest wpisem Media Link Entry i ma właściwość binarną.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStreamUri">
      <MemberSignature Language="C#" Value="public Uri GetReadStreamUri (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetReadStreamUri(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStreamUri (entity As Object) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetReadStreamUri(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStreamUri : obj -&gt; Uri" Usage="dataServiceContext.GetReadStreamUri entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwości binarnej do pobrania.</param>
        <summary>Pobiera identyfikator URI, który służy do zwracania danych binarnych właściwości jako strumienia danych.</summary>
        <returns>Odczyt URI strumień danych binarnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony `entity` jest wpisem Media Link Entry <xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A> metoda zwraca identyfikator URI, który jest używany do uzyskania dostępu do zawartości zasobu multimediów.  
  
 Ten identyfikator URI służy tylko do żądania GET do odczytu zawartości zasobu multimediów. Może nie odpowiadać POST, PUT i usuwania żądań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli określony obiekt jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie są śledzone przez to <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreMissingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMissingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMissingProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMissingProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreMissingProperties : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy właściwości do odczytu z typu muszą być zamapowane na właściwości w typie po stronie klienta.</summary>
        <value>Wartość logiczna wskazująca, czy właściwości do odczytu z typu muszą być zamapowane na właściwości w typie po stronie klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `true`, materialization zakończy się powodzeniem, nawet jeśli nie można zamapować właściwości z typu właściwości typu klienta. Jeśli `false`, niezgodność właściwości zgłasza wyjątek w trakcie materialization obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreResourceNotFoundException">
      <MemberSignature Language="C#" Value="public bool IgnoreResourceNotFoundException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreResourceNotFoundException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreResourceNotFoundException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreResourceNotFoundException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreResourceNotFoundException : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy wyjątek jest zgłaszany, gdy zwracany jest błąd 404 (nie znaleziono zasobu) przez usługę danych.</summary>
        <value>Wartość <see langword="true" />, biblioteki klienckiej zwraca pusty zestaw zamiast wywoływanie <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> gdy usługa danych zwraca HTTP 404: nie można odnaleźć zasobu błąd.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.LinkDescriptor&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As ReadOnlyCollection(Of LinkDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ Links { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkie skojarzenia lub łączy śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> obiektu.</summary>
        <value>Kolekcja <see cref="T:System.Data.Services.Client.LinkDescriptor" /> obiekty reprezentujące wszystkie skojarzenia lub łączy bieżące śledzony przez bieżący śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie łącza obecnie są śledzone, zwracany jest listę, która ma 0 elementów. Kolekcja jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładunki odroczone zawartość z usługi danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości do ładowania określonej jednostki.</param>
        <summary>Ładunki odroczone zawartości dla określonej właściwości z usługi danych.</summary>
        <returns>Odpowiedź operacji ładowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wywołuje operację sieci można pobrać wartości właściwości. Określona właściwość może być jedna z właściwości jednostki, w tym właściwości, które reprezentują skojarzeń lub łącza.  
  
 Jeśli właściwość reprezentuje skojarzenie, łącze lub właściwość odroczonego, wywołanie tej metody umożliwia klienta opóźnieniem załadować powiązane zasoby.  
  
 Jeśli jednostka jest w stanie niezmieniony lub zmodyfikowany, wartość właściwości ładuje powiązanych jednostek i oznacza je bez zmian z łączami bez zmian  
  
 Jeśli właściwość jest już załadowany, wywołanie tej metody umożliwia odświeżanie wartości właściwości.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób w sposób jawny załadować `Customers` obiekt, który jest powiązany z każdego zwrócił `Orders` wystąpienia. W tym przykładzie użyto <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi na podstawie usługi danych Northwind, który jest tworzony po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#loadrelatedordercustomer)]
 [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#loadrelatedordercustomer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości do ładowania określonej jednostki.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> obiekt, który reprezentuje następnej strony powiązanych jednostek można załadować z usługą danych.</param>
        <summary>Ładuje następnej strony jednostek powiązanych z usługi danych przy użyciu obiektu kontynuacji podana kwerenda.</summary>
        <returns>Odpowiedź, która zawiera następnej strony danych powiązanej jednostki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Unchanged> lub <xref:System.Data.Services.Client.EntityStates.Modified> stanu powiązanych jednostek są ładowane jako obiekty w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu z łączami również w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu.  
  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu powiązanych jednostek są ładowane jako obiekty w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu z łącza, które znajdują się w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Uri nextLinkUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * Uri -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, nextLinkUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości do ładowania określonej jednostki.</param>
        <param name="nextLinkUri">Identyfikator URI, który jest używany do załadowania następnej strony wyników.</param>
        <summary>Ładuje stronę powiązanych jednostek przy użyciu dostarczonego łącze do następnej identyfikatora URI.</summary>
        <returns>Wystąpienie <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> zawierającego wyniki żądania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Unchanged> lub <xref:System.Data.Services.Client.EntityStates.Modified> stanu powiązanych jednostek są ładowane w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu i linki między jednostkami również są tworzone w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu.  
  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu powiązanych jednostek są ładowane w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu i linki między jednostkami, które są tworzone w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu.  
  
   
  
## Examples  
 W tym przykładzie Zwraca powiązane `Orders` jednostek z każdym `Customers` jednostki i używa `do…while` pętli załadować `Customers` strony jednostek i zagnieżdżoną `while` pętli do załadowania strony powiązane `Orders` jednostek z usługi danych . <xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A> Metoda jest używana do załadowania strony powiązane `Orders` jednostek.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getcustomerspagednested)]
 [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getcustomerspagednested)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; LoadProperty&lt;T&gt; (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; LoadProperty&lt;T&gt;(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty(Of T) (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ elementu kolekcji do załadowania.</typeparam>
        <param name="entity">Jednostka, która zawiera właściwość do załadowania.</param>
        <param name="propertyName">Nazwa właściwości do ładowania określonej jednostki.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> obiekt, który reprezentuje następnej strony powiązanych jednostek można załadować z usługą danych.</param>
        <summary>Ładuje następnej strony powiązanych jednostek z usługą danych przy użyciu obiektu kontynuacji podana kwerenda ogólnego.</summary>
        <returns>Odpowiedź, która zawiera następnej strony danych powiązanej jednostki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Unchanged> lub <xref:System.Data.Services.Client.EntityStates.Modified> stanu powiązanych jednostek są ładowane jako obiekty w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu z łączami również w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu.  
  
 Gdy `entity` znajduje się w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu powiązanych jednostek są ładowane jako obiekty w <xref:System.Data.Services.Client.EntityStates.Unchanged> stanu z łącza, które znajdują się w <xref:System.Data.Services.Client.EntityStates.Deleted> stanu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Added" /> stanu.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::MergeOption MergeOption { System::Data::Services::Client::MergeOption get(); void set(System::Data::Services::Client::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Services.Client.MergeOption with get, set" Usage="System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcję synchronizacji dla jednostek odbierania z usługi danych.</summary>
        <value>Jeden z elementów członkowskich <see cref="T:System.Data.Services.Client.MergeOption" /> wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest odczytywany przez składnik deserializacji klienta przed materializowania obiektów. Tę właściwość można ustawić opcji odpowiednich materialization przed wykonaniem zapytania ani aktualizacji do usługi danych. Wartość domyślna to <xref:System.Data.Services.Client.MergeOption.AppendOnly>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ ReadingEntity;" />
      <MemberSignature Language="F#" Value="member this.ReadingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.ReadingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy dane jednostki całkowicie odczytane do obiektu jednostki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.ReadingEntity> Zdarzenie po danych jednostki całkowicie odczytane do obiektu docelowego, wraz z wszystkich zagnieżdżonych jednostek. Jeśli śledzenie jest cokolwiek innego niż <xref:System.Data.Services.Client.MergeOption.NoTracking>, obiekt jest dołączony przed wystąpieniem zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; ResolveName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; ResolveName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveName As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ ResolveName { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveName : Func&lt;Type, string&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia funkcję, aby zastąpić domyślny strategię rozpoznawania typu, używany przez bibliotekę klienta podczas wysyłania do usługi danych jednostki.</summary>
        <value>Zwraca ciąg zawierający nazwę <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia zastąpienie domyślnego rozwiązania typ używany przez bibliotekę klienta. Ustaw tą właściwość na delegata, który identyfikuje funkcję, która jest używana do rozpoznawania typu w aplikacji klienta, aby nazwa typu kwalifikowana przestrzeni nazw. Dzięki temu klient może wykonywać niestandardowe mapowanie między podana nazwa typu w odpowiedzi od serwera i typu na kliencie.  
  
> [!NOTE]
>  Ta metoda umożliwia zastąpienie nazwa jednostki, która jest serializowany reprezentacji docelowego, takich jak Atom lub JSON, dla określonego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public Func&lt;string,Type&gt; ResolveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, class System.Type&gt; ResolveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveType As Func(Of String, Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Type ^&gt; ^ ResolveType { Func&lt;System::String ^, Type ^&gt; ^ get(); void set(Func&lt;System::String ^, Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveType : Func&lt;string, Type&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia funkcję, która służy do zastępowania opcję rozpoznawania typu domyślną jest używany przez bibliotekę klienta podczas odbierania jednostek z usługi danych.</summary>
        <value>Delegat funkcji, który identyfikuje funkcji zastąpienia, która jest używana do zastąpienia opcję rozpoznawania typu domyślną jest używany przez bibliotekę klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia zastąpienie strategię rozpoznawania typu domyślny, który jest używany przez bibliotekę klienta. Ustaw tą właściwość na delegata, który identyfikuje funkcji, który jest rozpoznawany jako nazwa typu kwalifikowana przestrzeni nazw typu w aplikacji klienta. Dzięki temu klienta niestandardowe mapowanie między podana nazwa typu w odpowiedzi od serwera i typu na kliencie.  
  
 Zastępowanie rozpoznawania typu umożliwia także wstawianie strategii niestandardowe mapowanie między typami oraz nazwę typu. Nie dotyczy to, jak odpowiedź jest zmaterializowany typowi zidentyfikowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje zmiany <see cref="T:System.Data.Services.Client.DataServiceContext" /> służy do śledzenia do magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.Services.Client.DataServiceResponse> zawierający stan, nagłówki i błędy wynikające z wywołania <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany, które <see cref="T:System.Data.Services.Client.DataServiceContext" /> służy do śledzenia do magazynu.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> zawierający stan, nagłówki i błędy wynikające z wywołania <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (options As SaveChangesOptions) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges(System::Data::Services::Client::SaveChangesOptions options);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Data.Services.Client.SaveChangesOptions -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
      </Parameters>
      <Docs>
        <param name="options">Członek <see cref="T:System.Data.Services.Client.MergeOption" /> wyliczenie określającą opcję materialization.</param>
        <summary>Zapisuje zmiany, które <see cref="T:System.Data.Services.Client.DataServiceContext" /> służy do śledzenia do magazynu.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> zawierający stan, nagłówki i błędy wynikające z wywołania <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacje są wysyłane do usługi danych w następującej kolejności  
  
1.  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  
  
2.  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  
  
3.  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  
  
4.  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  
  
5.  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> i <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesDefaultOptions">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveChangesDefaultOptions As SaveChangesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::SaveChangesOptions SaveChangesDefaultOptions { System::Data::Services::Client::SaveChangesOptions get(); void set(System::Data::Services::Client::SaveChangesOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SaveChangesDefaultOptions : System.Data.Services.Client.SaveChangesOptions with get, set" Usage="System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.SaveChangesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Services.Client.SaveChangesOptions" /> wartości, które są używane przez <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> metody.</summary>
        <value>Dla aktualnych opcji zapisywania zmian operacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest udostępniana, aby umożliwić opcje, takie jak semantyki scalania i Zamień ustawiana tylko raz dla <xref:System.Data.Services.Client.DataServiceContext> , a następnie zastąpić zgodnie z potrzebami, wywołując jedną z <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> przeciążenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingRequest">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.SendingRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::SendingRequestEventArgs ^&gt; ^ SendingRequest;" />
      <MemberSignature Language="F#" Value="member this.SendingRequest : EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " Usage="member this.SendingRequest : System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy nowy <see cref="T:System.Net.HttpWebRequest" /> został utworzony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SendingRequest> Zdarzenie przed wartości wymaganej właściwości są ustawiane w obiekcie. gwarancje  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLink">
      <MemberSignature Language="C#" Value="public void SetLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.SetLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.SetLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt źródłowy dla nowego łącza.</param>
        <param name="sourceProperty">Właściwości w obiekcie źródłowym identyfikujący obiektu docelowego nowy link.</param>
        <param name="target">Obiekt podrzędny objętego nowy link, który ma być inicjowany przez wywołanie tej metody. Obiekt docelowy musi być podtypem typu identyfikowane przez <c>sourceProperty</c> parametru. Jeśli <c>docelowej</c> ma wartość null, wywołanie reprezentuje łącze operację usuwania.</param>
        <summary>Powiadamia <see cref="T:System.Data.Services.Client.DataServiceContext" /> nowe łącze istnieje między obiekty określone i łącze reprezentowanym przez określone przez właściwość <paramref name="sourceProperty" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy link jest tworzony w <xref:System.Data.Services.Client.EntityStates.Added> stanu. <xref:System.Data.Services.Client.DataServiceContext> Dodaje ten nowy link do zestawu nowo utworzonego łącza do wysłania do usługi data na następne wywołanie <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Jeśli argument docelowego ma wartość null, usunięte lub usunąć łącza reprezentowany przez właściwość sourceProperty (łącze zostanie przeniesiony do <xref:System.Data.Services.Client.EntityStates.Deleted> stanu).  
  
 Jednokierunkowe relacje są łącza. Jeśli wskazujące skojarzenie dwukierunkowej wskaźnik Wstecz, ta metoda powinna być wywoływana ponownie powiadomiono <xref:System.Data.Services.Client.DataServiceContext> drugi łącza  
  
 Ta metoda obsługuje tylko dodanie łącza do relacje z liczebnością = 1 (właściwość Źródło jest odwołanie do obiektu). Na przykład, jeśli klasa `Person` jest powiązany z innym `Person` przez `Friend` właściwości tego wywołania można użyć do powiązania `Person` do `Person`. Tej metody spowoduje zgłoszenie wyjątku, jeśli `sourceProperty` reprezentowany ma relację Kardynalność więcej niż jeden.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> i <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> metody tworzenia łączy definiowania relacji. W tym przykładzie właściwości nawigacji na `Order_Details` obiektu są również jawnie ustawione.  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" />, <paramref name="sourceProperty" /> lub <paramref name="target" /> mają wartość null.</exception>
        <exception cref="T:System.InvalidOperationException">Jeśli określone łącze już istnieje.  - lub - jeśli obiekty podana jako <paramref name="source" /> lub <paramref name="target" /> w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> lub <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> stanu.  - lub - gdy <paramref name="sourceProperty" /> nie jest właściwością nawigacji, który definiuje odwołanie do jednego obiektu pokrewnego.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSaveStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia nowego strumienia danych jako właściwości binarnej jednostki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * System.Data.Services.Client.DataServiceRequestArgs -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwość binarną, do którego ma zostać przypisany strumienia danych.</param>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> z której mają być odczytywane dane binarne.</param>
        <param name="closeStream">A <see cref="T:System.Boolean" /> wartość, która określa, czy strumień danych jest zamknięty kiedy <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> metody zostało zakończone.</param>
        <param name="args">Wystąpienie <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> klasy, który zawiera ustawienia dla komunikatu żądania HTTP.</param>
        <summary>Ustawia nowego strumienia danych jako właściwości binarnej jednostki z określonymi ustawieniami w komunikacie żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> Metoda ustawia strumień binarny, który jest skojarzony z zasobem multimediów `entity`, nazywanym wpisu Media Link Entry.  
  
 Wywoływanie <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> metoda oznacza jednostki jako wpisu Media Link Entry. Także ustawienia stanu jednostki <xref:System.Data.Services.Client.EntityStates.Modified> tak, aby strumień będą wysyłane do usługi danych podczas kolejnego <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metoda jest wywoływana.  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> Metoda odczytuje <xref:System.IO.Stream> za pośrednictwem na końcu. A <xref:System.IO.Stream.Seek%2A> operacji nie jest zainstalowane <xref:System.IO.Stream>.  
  
 Gdy `closeStream` jest `true`, <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metody zamyka strumienia przed zwróceniem. Strumień jest zamknięty, nawet wtedy, gdy wystąpi błąd i strumień jest nie do odczytu.  
  
 Gdy `entity` ma <xref:System.Data.Services.Client.MediaEntryAttribute> zastosowaniu zasób nośnika nie może być strumienia danych. Usuń ten atrybut, zanim spróbujesz ustawić strumieniu danych `entity`.  
  
 Weryfikacja nie jest przeprowadzana na nagłówkach, które są ustawiane w `args`. W związku z tym nie należy zmieniać nagłówka HTTP w taki sposób, który znaczenia żądania zmiany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wszystkie parametry dostarczony do metody są <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie jest śledzony przez to <see cref="T:System.Data.Services.Client.DataServiceContext" /> wystąpienia.  - lub - <paramref name="entity" /> ma <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> zastosowane.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, string contentType, string slug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::String ^ contentType, System::String ^ slug);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * string * string -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, contentType, slug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="slug" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostka, która ma właściwość binarną, do którego ma zostać przypisany strumienia danych.</param>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> z której mają być odczytywane dane binarne.</param>
        <param name="closeStream">A <see cref="T:System.Boolean" /> wartość, która określa, czy strumień danych jest zamknięty kiedy <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> metody zostało zakończone.</param>
        <param name="contentType">Wartość nagłówka Content-Type dla komunikatu żądania.</param>
        <param name="slug">Nagłówek sluga wartość dla komunikatu żądania.</param>
        <summary>Ustawia nowego strumienia danych jako właściwości binarnej jednostki. Określony nagłówki typu zawartości i informacji o pracy znajdują się w komunikacie żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> Metoda ustawia strumień binarny, który jest skojarzony z zasobem multimediów `entity`, nazywanym wpisu Media Link Entry.  
  
 Wywoływanie <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> metoda oznacza jednostki jako wpisu Media Link Entry. Także ustawienia stanu jednostki <xref:System.Data.Services.Client.EntityStates.Modified> tak, aby strumień będą wysyłane do usługi danych podczas kolejnego <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metoda jest wywoływana.  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> Metoda odczytuje <xref:System.IO.Stream> za pośrednictwem na końcu. A <xref:System.IO.Stream.Seek%2A> operacji nie jest zainstalowane <xref:System.IO.Stream>.  
  
 Gdy `closeStream` jest `true`, <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metody zamyka strumienia przed zwróceniem. Strumień jest zamknięty, nawet wtedy, gdy wystąpi błąd i strumień jest nie do odczytu.  
  
 Gdy `entity` ma <xref:System.Data.Services.Client.MediaEntryAttribute> zastosowaniu zasób nośnika nie może być strumienia danych. Usuń ten atrybut, zanim spróbujesz ustawić strumieniu danych `entity`.  
  
 Weryfikacja nie jest przeprowadzana na nagłówkach, które są ustawiane w `contentType` i `slug`. W związku z tym nie należy zmieniać tych nagłówków HTTP w taki sposób, który znaczenia żądania zmiany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wszystkie parametry dostarczony do metody są <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> Nie jest śledzony przez to <see cref="T:System.Data.Services.Client.DataServiceContext" /> wystąpienia.  - lub - <see langword="entity" /> ma <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> zastosowane.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcję limitu czasu, która służy do realizacji źródłowego żądania HTTP do usługi danych.</summary>
        <value>Liczba całkowita, która określa przedział czasu przed limit czasu żądania usługi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest przekazywana do <xref:System.Net.HttpWebRequest.Timeout> właściwości podstawowych <xref:System.Net.HttpWebRequest> obiektu. Wartość trzeba ustawić przed wykonywanie żadnych operacji zapytania lub aktualizacji przed usługę obiektu docelowego dane mogą mieć wpływ na żądanie. Wartość może zmienić między żądaniami usługą danych i nowa wartość zostanie pobrana przy następnym żądaniu usługi danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetEntity&lt;TEntity&gt; (Uri identity, out TEntity entity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntity&lt;class TEntity&gt;(class System.Uri identity, [out] !!TEntity&amp; entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity(Of TEntity As Class) (identity As Uri, ByRef entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class bool TryGetEntity(Uri ^ identity, [Runtime::InteropServices::Out] TEntity % entity);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : Uri *  -&gt; bool (requires 'Entity : null)" Usage="dataServiceContext.TryGetEntity (identity, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.Uri" />
        <Parameter Name="entity" Type="TEntity&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Typ jednostki.</typeparam>
        <param name="identity">Identyfikator URI śledzonych jednostki do pobrania.</param>
        <param name="entity">Jednostki, które mają zostać pobrane.</param>
        <summary>Testowanie pobierania jednostki śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> przez odwołanie do identyfikatora URI jednostki.</summary>
        <returns>Jeśli jednostka zostanie znaleziony w <paramref name="resourceUri" />, obiekt jest zwracany w parametrze wyjściowym <paramref name="entity" /> i jest zwracana wartość PRAWDA. Jeśli nie odnaleziono, jest zwracana wartość FAŁSZ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli jednostka jest w <xref:System.Data.Services.Client.EntityStates.Detached> lub <xref:System.Data.Services.Client.EntityStates.Added> stanu go nie ma identyfikatora URI i nie można pobrać za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="identity" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUri">
      <MemberSignature Language="C#" Value="public bool TryGetUri (object entity, out Uri identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUri(object entity, [out] class System.Uri&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUri (entity As Object, ByRef identity As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUri(System::Object ^ entity, [Runtime::InteropServices::Out] Uri ^ % identity);" />
      <MemberSignature Language="F#" Value="member this.TryGetUri : obj *  -&gt; bool" Usage="dataServiceContext.TryGetUri (entity, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="identity" Type="System.Uri&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Jednostki identyfikowanej za <c>tożsamości</c>.</param>
        <param name="identity">Identyfikator URI jednostki.</param>
        <summary>Pobiera canonical identyfikator URI skojarzony z określonej jednostki, jeśli jest dostępna.</summary>
        <returns>Zwraca wartość PRAWDA, jeśli canonical identyfikatora URI jest zwracany w parametrze wyjściowym. Jeśli określonej jednostki nie jest śledzony przez <see cref="T:System.Data.Services.Client.DataServiceContext" /> lub jest w stanie dodany, URI nie jest dostępny i jest zwracana wartość FAŁSZ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekty w <xref:System.Data.Services.Client.EntityStates.Added> stan nie ma jeszcze identyfikatora URI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeScheme">
      <MemberSignature Language="C#" Value="public Uri TypeScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TypeScheme" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeScheme As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TypeScheme { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeScheme : Uri with get, set" Usage="System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI, służy do określania, jakie typ schematu jest używany przez usługę.</summary>
        <value>A <see cref="T:System.Uri" /> obiekt, który zawiera typ schematu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ładunku ATOM wartość zwracana będzie atrybut schematu elementu kategorii umożliwiający określenie typu jednostki. Wartość domyślna to `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="public void UpdateObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.UpdateObject : obj -&gt; unit" Usage="dataServiceContext.UpdateObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Śledzonych jednostki do przypisania do <see cref="F:System.Data.Services.Client.EntityStates.Modified" /> stanu.</param>
        <summary>Zmienia stan określonego obiektu w <see cref="T:System.Data.Services.Client.DataServiceContext" /> do <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera i modyfikuje istniejącego obiektu, a następnie wywołuje <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> metoda <xref:System.Data.Services.Client.DataServiceContext> zaznaczania elementu w ramach aktualizacji. Wysyła komunikat HTTP SCALANIE danych usługi, gdy <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> jest wywoływana. W tym przykładzie użyto <xref:System.Data.Services.Client.DataServiceContext> wygenerowany przez narzędzie Dodaj odwołanie do usługi na podstawie usługi danych Northwind, który jest tworzony po zakończeniu [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#modifycustomer)]
 [!code-vb[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#modifycustomer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="entity" /> w <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> stanu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePostTunneling">
      <MemberSignature Language="C#" Value="public bool UsePostTunneling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePostTunneling" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePostTunneling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePostTunneling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePostTunneling : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość Boolean wskazującą, czy do użycia tunelowania post.</summary>
        <value>Wartość logiczna, która wskazuje, czy do użycia tunelowania post.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy utworzone formantów, update i delete żądań wysyłanych do usługi data użyje post, funkcję protokołu tunelowania, czy nie. Jeśli równa PRAWDA, tunelowania jest używany. Gdy są używane ustawioną na false, standardowych metod HTTP.  
  
 Wartość domyślna tej właściwości to false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.WritingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ WritingEntity;" />
      <MemberSignature Language="F#" Value="member this.WritingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.WritingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jednostka ma zostały całkowicie zserializowane do XML w komunikacie żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> zdarzeń umożliwia zmianę kodu XML w żądanie przed wysłaniem.  
  
 <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> Zdarzenie może występować w innym wątku po wywołaniu <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29> bez uwzględniania <xref:System.Data.Services.Client.SaveChangesOptions.Batch> w podane <xref:System.Data.Services.Client.SaveChangesOptions> wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>