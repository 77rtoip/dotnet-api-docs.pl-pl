<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c48cdb271ef6d95c0cb4245b49c3d81c36d9cccb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69285361" /></Metadata><TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje zestaw reguł autoryzacji użytkownika, z uwzględnieniem zestawu oświadczeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interfejsu w celu dodania lub zamapowania jednego zestawu oświadczeń na inny. Zasady autoryzacji badają zestaw oświadczeń i dodaje dodatkowe oświadczenia oparte na bieżącym zestawie. Na przykład zasady autoryzacji mogą oszacować zgłoszenie zawierające datę urodzenia i dodać zastrzeżenie, które potwierdza, że użytkownik jest ponad 21 lat i dodaje do <xref:System.IdentityModel.Policy.EvaluationContext>usługi Over21.  
  
 Klasy implementujące <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interfejs nie autoryzują użytkowników, ale umożliwiają wykonanie tej <xref:System.ServiceModel.ServiceAuthorizationManager> klasy. <xref:System.ServiceModel.ServiceAuthorizationManager> Wywołujemetodę<xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> dla poszczególnych zasad autoryzacji. <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> Metoda określa, czy dla użytkownika mają być dodawane dodatkowe oświadczenia w oparciu o bieżący kontekst. <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> Metoda zasad autoryzacji może być wywoływana wiele razy, ponieważ oświadczenia są dodawane <xref:System.IdentityModel.Policy.EvaluationContext> do innych zasad autoryzacji. Po zakończeniu <xref:System.ServiceModel.ServiceAuthorizationManager> wszystkich zasad autoryzacji Klasa podejmuje decyzje dotyczące autoryzacji w oparciu o końcowy zestaw oświadczeń. Następnie <xref:System.ServiceModel.ServiceAuthorizationManager> Klasa <xref:System.IdentityModel.Policy.AuthorizationContext> tworzy, która zawiera niezmienny zestaw oświadczeń, które odzwierciedlają te decyzje dotyczące autoryzacji.  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0">Przykład zasad autoryzacji</related>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext *  -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" />
        <Parameter Name="state" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="evaluationContext"><see cref="T:System.IdentityModel.Policy.EvaluationContext" /> Zawiera zestaw, który jest obliczany przez zasady autoryzacji.</param>
        <param name="state">A <see cref="T:System.Object" />, zakończone przez odwołanie, które reprezentuje stan niestandardowy dla tych zasad autoryzacji.</param>
        <summary>Określa, czy użytkownik spełnia wymagania dotyczące tych zasad autoryzacji.</summary>
        <returns><see langword="false" />Jeśli metoda dla tych zasad autoryzacji musi zostać wywołana, jeśli dodatkowe oświadczenia są dodawane przez inne zasady autoryzacji do <paramref name="evaluationContext" />programu; w <see langword="true" /> przeciwnym razie, aby nie było wymagane żadne dodatkowe szacowanie przez te zasady autoryzacji. <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Implementujący <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> interfejs powinien oczekiwać, że metoda ma być wywoływana wiele razy przez różne wątki. <xref:System.IdentityModel.Policy.IAuthorizationPolicy>  
  
 Implementujący `state` <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> interfejs może użyć parametru, aby śledzić stan między wywołaniami metody. <xref:System.IdentityModel.Policy.IAuthorizationPolicy> Jeśli obiekt stanu jest ustawiony wewnątrz danego wywołania <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> metody, to to samo wystąpienie obiektu jest przekazywane do każdego i każdego kolejnego wywołania <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> metody w bieżącym procesie oceny.  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw roszczeń reprezentujący wystawcę zasad autoryzacji.</summary>
        <value><see cref="T:System.IdentityModel.Claims.ClaimSet" /> Reprezentujący wystawcę zasad autoryzacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
