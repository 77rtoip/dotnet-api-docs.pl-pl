<Type Name="LayoutEngine" FullName="System.Windows.Forms.Layout.LayoutEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7a758776e4c1e2d813bdf058c0eed075a30122e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39963693" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LayoutEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.LayoutEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutEngine" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEngine abstract" />
  <TypeSignature Language="F#" Value="type LayoutEngine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a9ef-101">Udostępnia klasę bazową dla implementacji silniki układu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a9ef-101">Provides the base class for implementing layout engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a9ef-102">Użyj <xref:System.Windows.Forms.Layout.LayoutEngine> klasy, gdy chcesz utworzyć niestandardowe układy zachowanie w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-102">Use the <xref:System.Windows.Forms.Layout.LayoutEngine> class when you want to create custom layout behavior at run time.</span></span> <span data-ttu-id="0a9ef-103">Pochodną klasy z <xref:System.Windows.Forms.Layout.LayoutEngine> klasy, a także Przesłoń <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> metodę, aby zdefiniować swoje zachowanie układu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-103">Derive your own class from the <xref:System.Windows.Forms.Layout.LayoutEngine> class and override the <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> method to define your custom layout behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a9ef-104">Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.Layout.LayoutEngine> klasę, aby wdrożyć niestandardowy układ zachowanie.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-104">The following code example demonstrates the use of the <xref:System.Windows.Forms.Layout.LayoutEngine> class to implement custom layout behavior.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#1)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#1)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a9ef-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-105">Initializes a new instance of the <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a9ef-106">
            <para>Zachowanie układu powinna być taka sama, dla każdego wystąpienia klasy skojarzony kontener aparatu układu. Z tego powodu należy rozważyć deklarowanie Konstruktor aparatu układu <see langword="protected" /> lub <see langword="private" />i wdrażanie usługi aparatu układu jako klasa pojedyncza.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-106">
              <para>Layout behavior should be the same for any instance of your layout engine's associated container class. For this reason, consider declaring your layout engine's constructor <see langword="protected" /> or <see langword="private" />, and implementing your layout engine as a singleton class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitLayout(object child, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitLayout (child As Object, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitLayout(System::Object ^ child, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="layoutEngine.InitLayout (child, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="0a9ef-107">Kontener, na którym będzie działać aparat układu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-107">The container on which the layout engine will operate.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="0a9ef-108">Granice definiujący rozmiar i położenie kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-108">The bounds defining the container's size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a9ef-109">Inicjuje aparat układu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-109">Initializes the layout engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a9ef-110">Opcjonalnie wprowadź logiki inicjowania w <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-110">Optionally provide initialization logic in the <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0a9ef-111">
            <paramref name="child" /> nie jest typem, na którym <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> mogą wykonywać układu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-111">
              <paramref name="child" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a9ef-112">
            <para>Zastąp <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /> metody, aby udostępnić swoje zachowanie niestandardową inicjalizację.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-112">
              <para>Override the <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /> method to provide your custom initialization behavior.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Layout(object container, class System.Windows.Forms.LayoutEventArgs layoutEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Layout(System::Object ^ container, System::Windows::Forms::LayoutEventArgs ^ layoutEventArgs);" />
      <MemberSignature Language="F#" Value="abstract member Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool&#xA;override this.Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool" Usage="layoutEngine.Layout (container, layoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="layoutEventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="0a9ef-113">Kontener, na którym będzie działać aparat układu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-113">The container on which the layout engine will operate.</span>
          </span>
        </param>
        <param name="layoutEventArgs">
          <span data-ttu-id="0a9ef-114">Argument zdarzenia z <see cref="E:System.Windows.Forms.Control.Layout" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-114">An event argument from a <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a9ef-115">Żądania, aparatu układu wykonania operacji układu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-115">Requests that the layout engine perform a layout operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a9ef-116">
            <see langword="true" /> Jeśli układ powinna być wykonywana ponownie przez nadrzędne z <paramref name="container" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-116">
              <see langword="true" /> if layout should be performed again by the parent of <paramref name="container" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a9ef-117">Ta metoda jest wywoływana, gdy aparat układu jest można wykonać operacji układu na `container` parametru.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-117">This method is called when the layout engine is to perform a layout operation on the `container` parameter.</span></span> <span data-ttu-id="0a9ef-118">Możesz sprawdzić wartość <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>, i <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> właściwości `layoutEventArgs` zdecydować, jeśli konieczne jest użycie operacji układu.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-118">You can check the value of the <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>, and <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> properties on `layoutEventArgs` to decide if a layout operation is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a9ef-119">Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> metodę, aby zaimplementować zachowanie układu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-119">The following code example demonstrates the use of the <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> method to implement custom layout behavior.</span></span> <span data-ttu-id="0a9ef-120">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Windows.Forms.Layout.LayoutEngine> klasy.</span><span class="sxs-lookup"><span data-stu-id="0a9ef-120">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Layout.LayoutEngine> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#4)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#4)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0a9ef-121">
            <paramref name="container" /> nie jest typem, na którym <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> mogą wykonywać układu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-121">
              <paramref name="container" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a9ef-122">
            <para>Zastąp <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> metody, aby udostępnić swoje zachowanie układu niestandardowego.  Podczas rozmieszczania zawartości <paramref name="container" /> parametrów, należy koniecznie sprawdzić <see cref="P:System.Windows.Forms.Control.Visible" /> właściwości każdej kontrolki podrzędne.  Zwróć <see langword="true" /> Jeśli logika aparatu układu określa ten układ powinna być wykonywana ponownie przez nadrzędne kontenera. Taka sytuacja może wystąpić, na przykład, gdy aparat układu zmienia rozmiar kontrolek podrzędnych i określa, że kontener musi być zwiększony rozmiar, aby pomieścić nowy układ.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a9ef-122">
              <para>Override the <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> method to provide your custom layout behavior.  When laying out the contents of the <paramref name="container" /> parameter, be sure to check the <see cref="P:System.Windows.Forms.Control.Visible" /> property of each child control.  Return <see langword="true" /> if your layout engine logic determines that layout should be performed again by the parent of the container. This might occur, for example, when the layout engine resizes child controls and determines that the container must be increased in size to accommodate the new layout.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.LayoutEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>