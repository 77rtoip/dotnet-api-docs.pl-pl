<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f16c2b1e76c9b648c236812e7491d0fd55179e0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37595521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje dodatkowe funkcje zarządzania dla aplikacji i wyodrębniania stanu personalizacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oprócz używania `Personalizable` atrybut właściwości formantu, formant można też wdrożyć <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> dla dodatkowe funkcje zarządzania dla aplikacji i wyodrębniania stanu personalizacji. Na przykład kontrolek, które muszą zarządzać informacje o stanie prywatny powinny implementować ten interfejs. Formanty uzyskujących dostęp do spersonalizowanej danych za pomocą mechanizmów złożonych, takie jak rozwiązania niestandardowe pamięci podręcznej, trwałość danych do komputerów mainframe lub usług sieci Web XML, powinny również implementować ten interfejs.  
  
> [!IMPORTANT]
>  Nie należy dodać typy, oparte na klas zdefiniowanych w katalogu App_Code i następnie zależą od domyślnego mechanizmu serializacji binarnej. Na podstawie App_Code artefakty nie są spójnie pliku binarnego do serializacji z faktu, że mogą mieć ich nazwy zestawu zmienione w losowo wybranym momencie w czasie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfejsu. Przykład zawiera strony .aspx, który odwołuje się do formant Web Part o nazwie `UrlListWebPart`. Poniższy kod jest plik .aspx, na przykład.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Poniższy kod jest źródło dla niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli. Ten plik powinien być umieszczone w katalogu App_Code.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Ładowanie strony w przeglądarce. Wpisz nazwę, aby reprezentować adresu URL, a następnie dodaj rzeczywisty adres URL rozpoczynający się `http://`i kliknij przycisk **Dodaj** przycisk, aby dodać adres URL.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy niestandardowe dane, które zarządza kontrolki została zmieniona.</summary>
        <value>
          <see langword="true" /> Jeśli dane niestandardowe zarządzanych za pomocą <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> interfejs został zmieniony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zmianie danych zarządzanych przez kontrolkę, formant jest uznawany za "zanieczyszczony". Formant powinien zwrócić `true` Jeśli danych niestandardowych jej zarządza za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfejs został zmieniony. Gdy formant zwraca `true` z tej właściwości, formant <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> implementację metody interfejsu jest wywoływana podczas wyodrębniania wartości właściwości.  
  
> [!NOTE]
>  Ta właściwość jest sprawdzana automatycznie przez infrastrukturę personalizacji fazach ostatniego przetwarzania żądania POST. Jednak dla żądań GET, wartość zwracana z <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> właściwość nie jest zaznaczona. Niektóre inne zdarzenie został spowodowany przez rozszerzenie formantu zostały uznane za "zanieczyszczony", dla dowolnego stanu kontrolki — nie tylko danych zarządzanych przez <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>— do zapisania. Jeśli formant można oznaczyć sama jako "zakłóconych" podczas żądania GET lub infrastruktury personalizacji w ramach niektórych bardzo szczegółowych warunków ograniczających uwzględnia formantu "zakłóconych" podczas żądania GET, następnie <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> będzie zawsze wywoływany.  
  
 Formant może odwoływać się związanych z nią <xref:System.Web.UI.WebControls.WebParts.WebPartManager> sterowania i sprawdź <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> właściwości w celu określenia bieżącego zakresu. Stan "zanieczyszczony" Kontrolki niestandardowe dane powinny być odpowiednie dla bieżącego zakresu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> właściwości. Pierwsza część przykładu to strona sieci Web, która hostuje <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Druga część przykładu jest kod niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPart> formant nazywany `UrlListWebPart`. Ten plik będzie umieszczona w katalogu App_Code, aby uruchomić przykład. Należy zauważyć, że kod źródłowy implementuje <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> właściwości.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Ładowanie strony w przeglądarce. Wpisz nazwę, aby reprezentować adresu URL, a następnie dodaj rzeczywisty adres URL rozpoczynający się `http://`i kliknij przycisk **Dodaj** przycisk, aby dodać adres URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Element <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> zawierający niestandardowe dane o określonym zakresie, który został załadowany z magazynu danych.</param>
        <summary>Ładuje dane niestandardowe w formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana w kontrolce, aby zezwalała na ładowanie danych niestandardowych do tego samego. Może również zwracać wartość, która wskazuje, czy stan niestandardowe kontrolki musi można zapisać zwrotnie w podstawowym magazynie danych, niezależnie od tego, czy zmienił się innych danych personalizacji na stronie. Kontrolki można ustawić własne niestandardowe właściwości i przeprowadzania dodatkowej logiki wewnętrznej na podstawie wartości zawartych w słowniku personalizacji. Ta metoda jest wywoływana przez formant Web Part zestawu podczas stosowania danych personalizacji z kontrolką.  
  
 Należy także pamiętać o zachowanie scalania <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-o określonym zakresie w porównaniu z <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-właściwości zawarte w zakresie <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> obiektu. `state` Parametr zawiera scalone reprezentacja danych niestandardowych, który został załadowany z magazynu danych. W <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> zakres wartości, które zostały wcześniej dodane, gdy sama strona był w <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> zakresu będą dostępne. W <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> zakresu, jeśli wartość jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> zakres personalizacji miał jedną wartość dodane po stronie w <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> zakresu, a inną wartość, gdy strona był w <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> zakresu, a następnie będzie infrastruktury personalizacji Uwzględnij tylko <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>— zakres wartości (w przeciwieństwie do <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> zakres wartości) w ramach `state` parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metody w niestandardowym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz części przykładu w <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> klasa — Przegląd.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Element <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> zawierający niestandardowe dane o określonym zakresie, który został załadowany z magazynu danych.</param>
        <summary>Zapisuje informacje o stanie wewnętrzny i właściwości niestandardowe w formancie <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant serwera mogą przechowywać swoje własne właściwości niestandardowych i informacje o stanie wewnętrznego <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> określonych w `state` parametru. Informacje są przechowywane w postaci serii par nazwa/wartość. Jest odpowiedzialny za kontrolki używanej pary nazwa/wartość, które może rozpoznawać podczas kolejnych wywołań do formantu za pomocą <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metody.  
  
 Formant może odwoływać się związanych z nią <xref:System.Web.UI.WebControls.WebParts.WebPartManager> sterowania i sprawdź <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> obiektu w celu ustalenia bieżącego zakresu. Informacje o stanie niestandardowe powinny być odpowiednie dla bieżącego zakresu. Należy pamiętać, że każdy <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> wartość, która jest dodawana do <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> obiekt powinien być skojarzone z odpowiednim rozwiązaniem, ponieważ infrastruktury personalizacji zależy, to podczas scalania <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> i <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-o określonym zakresie niestandardowych danych przed przekazaniem go do <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metody.  
  
 Korzystając z standardowej implementacji platformy ASP.NET w części sieci Web, kontrolek upewnij się, że obiekty umieszczone w słowniku stanu może być serializowany przez platformę ASP.NET <xref:System.Web.UI.ObjectStateFormatter> klasy. W praktyce oznacza to, że:  
  
-   Pierwotnych typów programu .NET Framework, ciągi i korzystający z kolekcji typów programu .NET Framework, takich jak tablice, listy macierzy, tabel skrótów i słowniki hybrydowe są automatycznie serializacji.  
  
-   Niestandardowe typy, które dostarczają własne <xref:System.ComponentModel.TypeConverter> klasy serializacji do i deserializacji z ciągów są traktowane jako możliwy do serializacji.  
  
-   Niestandardowe typy, które może być serializowany przez <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> klasy są traktowane jako możliwy do serializacji.  
  
> [!IMPORTANT]
>  Nie należy dodać typy, oparte na klas zdefiniowanych w katalogu App_Code i następnie zależą od domyślnego mechanizmu serializacji binarnej. Na podstawie App_Code artefakty nie są spójnie pliku binarnego do serializacji z faktu, że mogą mieć ich nazwy zestawu zmienione w losowo wybranym momencie w czasie.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano Implementowanie <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> metody w niestandardowym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz części przykładu w <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> klasa — Przegląd.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>