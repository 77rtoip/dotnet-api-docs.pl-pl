<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9762519573962218a7aa1fc2c8df4ccce38aea70" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395368" /></Metadata><TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje dodatkowe możliwości zarządzania dla aplikacji i wyodrębniania stanu personalizacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oprócz używania `Personalizable` atrybutu właściwości kontrolki, można również zaimplementować <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> kontrolkę w celu uzyskania dodatkowych możliwości zarządzania dla aplikacji i wyodrębnienia stanu personalizacji. Na przykład kontrolki, które muszą zarządzać informacjami o stanie prywatnym, powinny implementować ten interfejs. Formanty, które uzyskują dostęp do spersonalizowanych danych za poorednictwem złożonych mechanizmów, takich jak niestandardowe rozwiązania pamięci podręcznej, trwałość danych do komputerów mainframe lub usług sieci Web XML, powinny również implementować ten interfejs.  
  
> [!IMPORTANT]
>  Nie należy dodawać typów na podstawie klas zdefiniowanych w katalogu App_Code, a następnie zależeć od domyślnego mechanizmu serializacji binarnej. Artefakty oparte na App_Code nie są spójne z możliwością serializacji danych binarnych ze względu na fakt, że ich nazwy zestawów zmieniają się w losowych punktach w czasie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> jak używać interfejsu. Przykład składa się ze strony. aspx, która odwołuje się do kontrolki składnika Web Part o nazwie `UrlListWebPart`. Poniższy kod jest plikiem. aspx dla przykładu.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Poniższy kod jest źródłem kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> . Ten plik powinien być umieszczony w katalogu App_Code.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Załaduj stronę w przeglądarce. Wpisz nazwę reprezentującą adres URL, a następnie Dodaj rzeczywisty adres URL zaczynający się `http://`od, a następnie kliknij przycisk **Dodaj** , aby dodać adres URL.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane niestandardowe zarządzane przez kontrolkę zostały zmienione.</summary>
        <value><see langword="true" />Jeśli dane niestandardowe zarządzane przy użyciu <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> interfejsu uległy zmianie; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy dane zarządzane przez formant uległy zmianie, formant jest traktowany jako "zanieczyszczony". Kontrolka powinna zostać `true` zwrócona, jeśli dane niestandardowe zarządzane <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> przez interfejs zostały zmienione. Jeśli kontrolka zwraca `true` z tej właściwości, implementacja metody <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> interfejsu kontrolki jest wywoływana podczas wyodrębniania wartości właściwości.  
  
> [!NOTE]
>  Ta właściwość jest sprawdzana automatycznie przez infrastrukturę personalizacji podczas ostatniej fazy przetwarzania żądania POST. Jednak w przypadku żądań GET wartość zwrócona przez <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> właściwość nie jest zaznaczona. Inne zdarzenie musi być uznawane za "zanieczyszczone" dla dowolnego stanu kontroli — nie tylko dane zarządzane przez <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--do zapisania. Jeśli kontrolka może oznaczyć siebie jako "zanieczyszczony" w trakcie żądania GET lub jeśli infrastruktura personalizacji pod pewnymi warunkami granicznymi traktuje formant "zanieczyszczony" podczas żądania GET, <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> zawsze będzie wywoływana.  
  
 Kontrolka może odwoływać się <xref:System.Web.UI.WebControls.WebParts.WebPartManager> do powiązanej kontrolki i <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> sprawdzać jej właściwość w celu określenia bieżącego zakresu. Stan "zanieczyszczony" danych niestandardowych formantu powinien być odpowiedni dla bieżącego zakresu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> właściwości. Pierwszą częścią przykładu jest strona sieci Web, która hostuje <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Druga częścią przykładu jest kod dla kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> o nazwie. `UrlListWebPart` Ten plik powinien być umieszczony w katalogu App_Code, aby można było uruchomić przykład. Należy zauważyć, że kod źródłowy implementuje <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> właściwość.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Załaduj stronę w przeglądarce. Wpisz nazwę reprezentującą adres URL, a następnie Dodaj rzeczywisty adres URL zaczynający się `http://`od, a następnie kliknij przycisk **Dodaj** , aby dodać adres URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> Zawierający dane z zakresu niestandardowego, które zostały załadowane z bazowego magazynu danych.</param>
        <summary>Ładuje dane niestandardowe do kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana na kontrolce, aby umożliwić jej załadowanie niestandardowych danych do siebie. Może również zwrócić wartość wskazującą, czy stan niestandardowy kontrolki musi być zapisana z powrotem do bazowego magazynu danych, niezależnie od tego, czy wszystkie inne dane personalizacji na stronie zostały zmienione. Kontrolka może ustawić własne właściwości niestandardowe i wykonać dodatkową logikę wewnętrzną na podstawie wartości zawartych w słowniku personalizacji. Ta metoda jest wywoływana przez zestaw kontrolny składniki Web Part podczas stosowania danych personalizacji do kontrolki.  
  
 Należy również pamiętać o zachowaniu <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>scalania właściwości w zakresie poza zakresem zawartym w <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> obiekcie. `state` Parametr zawiera scaloną reprezentację danych niestandardowych, które zostały załadowane z bazowego magazynu danych. W <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> zakresie wszystkie wartości, które zostały wcześniej dodane, gdy sama strona była w <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> zasięgu, byłyby dostępne. W <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> zakresie, jeśli wartość skojarzona z <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> zakresem personalizacji ma jedną wartość dodaną, gdy <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> Strona znajdowała się w zakresie, a inna wartość, gdy <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> strona była w zasięgu, infrastruktura personalizacji byłaby w `state` parametrze <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>należy uwzględnić wartość-Scope (w przeciwieństwie <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> do wartości zakresu).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje implementację <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metody w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.WebPart> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję przykład w <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> temacie Omówienie klasy.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> Zawierający dane z zakresu niestandardowego, które zostały załadowane z bazowego magazynu danych.</param>
        <summary>Zapisuje właściwości niestandardowe i informacje o stanie wewnętrznym w <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> obiekcie formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka serwerowa może przechowywać własne właściwości niestandardowe i informacje o <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> stanie wewnętrznym określone `state` w parametrze. Informacje są przechowywane jako serie par nazwa/wartość. Zadaniem kontroli jest użycie par nazwa/wartość, które mogą być rozpoznawane podczas kolejnych wywołań kontrolki za pomocą <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metody.  
  
 Kontrolka może odwoływać się <xref:System.Web.UI.WebControls.WebParts.WebPartManager> do powiązanej kontrolki i <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> sprawdzać, czy obiekt w celu określenia bieżącego zakresu. Informacje o stanie niestandardowym powinny być odpowiednie dla bieżącego zakresu. Należy zauważyć, <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> że każda wartość dodana <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> do obiektu powinna być skojarzona z odpowiednią wartością zakresu, ponieważ infrastruktura personalizacji zależy od tego podczas scalania <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> danych niestandardowych i <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>zakresu. przed przekazaniem go do <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metody.  
  
 W przypadku korzystania ze standardowej implementacji ASP.NET składniki Web Part, formanty muszą zapewnić, że obiekty umieszczane w słowniku stanu mogą być serializowane <xref:System.Web.UI.ObjectStateFormatter> przez klasę ASP.NET. W tej metodzie oznacza to następujące kwestie:  
  
-   Typy pierwotne .NET Framework, ciągi i typy .NET Framework, takie jak tablice, listy tablic, tabele skrótów i słowniki hybrydowe, są automatycznie serializowane.  
  
-   Typy niestandardowe, które dostarczają własne <xref:System.ComponentModel.TypeConverter> klasy służące do serializacji do i deserializacji z ciągów są traktowane jako możliwe do serializacji.  
  
-   Typy niestandardowe, które mogą być serializowane <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> przez klasę, są traktowane jako możliwe do serializacji.  
  
> [!IMPORTANT]
>  Nie należy dodawać typów na podstawie klas zdefiniowanych w katalogu App_Code, a następnie zależeć od domyślnego mechanizmu serializacji binarnej. Artefakty oparte na App_Code nie są spójne z możliwością serializacji danych binarnych ze względu na fakt, że ich nazwy zestawów zmieniają się w losowych punktach w czasie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje implementację <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> metody w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.WebPart> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję przykład w <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> temacie Omówienie klasy.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
