<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ff0f354eeb6d650ffc9029857af048cc336cf00" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36385802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia deweloperom deklarować statycznych połączenia w zawartości strony, gdy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant został zadeklarowany w zawartości strony skojarzone strony wzorcowej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Formant istnieje dla konkretnej scenariusz deklarowanie połączenia statyczne w zawartości strony, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant został już zadeklarowany w strony wzorcowej.  
  
 Zgodnie z projektem strony sieci Web, która używa kontrolki części sieci Web musi zawierać jeden (i tylko jeden) <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant, który zarządza wszystkie formanty składników Web Part na stronie. Gdy aplikacja części sieci Web używa strony wzorcowe, jest często można umieścić <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować na stronie głównej, ponieważ wszystkie strony z zawartością są łączone ze stroną wzorcową w czasie wykonywania i jednego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant będzie zarządzać wszystkie formanty części sieci Web ze wszystkich stron zawartości. Jednak gdy deweloperzy chcą deklarować statycznych połączeń na stronach zawartości takiej aplikacji, ich mogą wydawać się na rzecz to ograniczenie. Połączenie statycznej części sieci Web mogą być deklarowane tylko przez dodanie <`asp:webpartconnection>` element jako element podrzędny `<staticconnections>` elementów, które musi być elementem podrzędnym elementu `<asp:webpartmanager>` elementu. Ale ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki została już zadeklarowana w strony wzorcowej i jest to dozwolone <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli, deweloperzy nie można zadeklarować dodatkowe <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantów strony zawartości można dodać połączenia statyczne.  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Formantu ma miejsce z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu w tym scenariuszu. Deweloperzy zadeklarować `<asp:proxywebpartmanager>` elementu zamiast `<asp:webpartmanager>` element w strony zawartości i może następnie zadeklarować połączenia statyczne jako podrzędne elementy. Połączenia w czasie wykonywania <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formantu po prostu są dodawane do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Kolekcja <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli oraz traktowanie ich jak inne połączenie.  
  
 Ponieważ <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formant jest używany tylko w tym scenariuszu rozwoju, ograniczył więcej funkcji niż <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy. W rzeczywistości chociaż <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> kontroli działa jako serwer proxy zawiera połączenia statyczne dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli w strony z zawartością, nie dziedziczy z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Dziedziczy on bezpośrednio z <xref:System.Web.UI.Control> klasy i zastępuje tylko kilka elementów członkowskich podstawowej. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>, I <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> przesłonięcia i przypisane wartości, które uniemożliwiają używane właściwości. Inne właściwości dziedziczone są zastępowane dostosowanie ich zachowania w czasie projektowania, ale w przeciwnym razie mają takie samo zachowanie jako podstawowych właściwości. Obejmują one <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> i <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A> właściwości. Na koniec <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> klasa ma jedną właściwość z systemem innym niż dziedziczone. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> Właściwość zwraca swoją własną kolekcję połączenia statyczne ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> obiektu).  
  
 Podobnie jak w przypadku metod <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> klasa podobnie zastępuje tylko kilka metod, przede wszystkim do ograniczenia ich użycia. Dziedziczonego <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> — metoda dokonuje bezużyteczne zgłoszeniu wyjątku, gdy wywołana. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> Metoda zawsze zwraca kolekcję pusty kontroli, co ma wpływ uniemożliwia mogą zawierać kolekcji formantów. Na koniec <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> — metoda wywołuje metodę podstawową, a następnie przypisuje kolekcji połączenia odwołuje się <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Ma to wpływu rzutowanie połączenia statyczne zadeklarowane na wszystkich stronach zawartości i udostępnia je częścią kolekcji połączeń utrzymywane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie głównej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> klasę, aby zadeklarować połączenia statyczne na stronach zawartości w aplikacji, która używa strony wzorcowej. Przykład zawiera pięć części:  
  
-   Formant użytkownika, który umożliwia zmianę części sieci Web trybu wyświetlania na stronie.  
  
-   Źródła kodu interfejsu i dwa <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje działania jako dostawcy i klienta dla połączenia.  
  
-   Główny strony sieci Web obsługującym kontrolki użytkownika strony z zawartością, oraz <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli aplikacji.  
  
-   Zawartości strony sieci Web, który jest hostem <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> sterowania, niestandardowe dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i statyczne połączenia dwóch formantów.  
  
-   Wyjaśnienie sposobu uruchamiania przykładową stronę.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Zapisz poniższy kod źródłowy plik .ascx nadanie mu nazwy pliku, który jest przypisany do `Src` atrybutu `Register` dyrektywy dla tego formantu użytkownika, który jest w górnej części strony wzorcowej hostingu. Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Druga część przykładowy kod jest kodu źródłowego dla interfejsu i kontrolek. Plik źródłowy zawiera prosty interfejs o nazwie `IZipCode`. Istnieje również <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy o nazwie `ZipCodeWebPart` który implementuje interfejs i działa jako kontrolka dostawcy. Jego `ProvideIZipCode` metoda to metoda wywołania zwrotnego, który implementuje element członkowski tylko. Metoda zwraca po prostu wystąpienia interfejsu. Należy pamiętać, że metoda jest oznaczona atrybutem `ConnectionProvider` atrybutu w metadanych. Jest to mechanizm identyfikację metodę jako metoda wywołania zwrotnego dla punktu połączenia dostawcy. Druga <xref:System.Web.UI.WebControls.WebParts.WebPart> nosi nazwę klasy `WeatherWebPart`, i pełni rolę użytkownika dla połączenia. Ta klasa ma metodę o nazwie `GetZipCode` który pobiera wystąpienie elementu `IZipCode` interfejsu z formantu dostawcy. Należy pamiętać, że ta metoda jest oznaczona jako metoda punkt połączenia klienta z `ConnectionConsumer` atrybutu w metadanych.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 Trzeci część przykładowy kod jest strony wzorcowej. Należy wykonać następujący kod źródłowy i zapisać go w pliku, nazw MasterPageCS.master lub MasterPageVB.master (w zależności od języka, w którym jest używany). Należy pamiętać, że zawiera strony wzorcowej `Register` dyrektywy rejestracji kontrolki użytkownika i jego odwołuje się do samej siebie w treści strony kontrolki użytkownika. Strony wzorcowej deklaruje element pojedynczą `<asp:webpartmanager>` element używany dla tej strony i wszystkich powiązanych strony z zawartością. Na koniec strony wzorcowej ma `<asp: contentplaceholder>` element, który deklaruje punktu na stronie, gdy zawartość jest wstawiana.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 Czwarty część przykładowy kod jest strony zawartość. Należy skopiuj następujący kod źródłowy i zapisać ją w pliku z rozszerzeniem .aspx. Zwróć uwagę, że jego `Page` dyrektywa zawiera `MasterFile` atrybut do odwoływania się do strony wzorcowej. Ponadto ta strona zawiera `Register` dyrektywy, aby zarejestrować plik w folderze App_Code, który zawiera niestandardowy dynamicznie skompilowanej <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które uczestniczą w połączeniu. W ramach `<asp:content>` tagi strony, brak <`asp:proxywebpartmanager>` element z elementem podrzędnym `<staticconnections>` element, który z kolei ma element podrzędny `<asp:webpartconnection>` element, aby zadeklarować szczegóły połączenia. W ramach `<script>` znaczników na stronie `Button1_Click` metoda dodaje niektórych kod, który uzyskuje dostęp do głównego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie głównej i <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> kontrolki na stronie zawartości i zapisuje niektóre z ich szczegóły na stronie.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 Po załadowaniu strony w przeglądarce, kliknij przycisk **informacji WebPartManager** przycisk i sprawdź informacje o <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie głównej i <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> kontrolki na stronie zawartości. Na przykład Uwaga mogą mieć tej samej liczby ich odpowiednich właściwości, które śledzą połączenia statyczne ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> właściwości). Należy zauważyć, że chociaż <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant ma <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwość, która śledzi liczbę <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów zarządzanych <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formant nie ma takich właściwości, jak jej jedynym celem jest zawierają połączenia statyczne.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator formantu Kod znaczników HTML, który jest generowany przez platformę ASP.NET.</summary>
        <value>Identyfikator formantu Kod znaczników HTML, który jest generowany przez platformę ASP.NET.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.ControlCollection" /> obiekt, który reprezentuje formantów podrzędnych formantu określonego serwera w hierarchii interfejsu użytkownika.</summary>
        <value>Kolekcja formantów podrzędnych formantu określonego serwera.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastępuje właściwość podstawowej, aby zapobiec <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> formantu zawierającego kontrolki.</summary>
        <returns>Zawsze zwraca <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> Metoda zastępuje metodę podstawową, aby zapobiec <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formantu z zawierających i zwracanie kolekcji formantów. Jej jedynym celem jest umożliwienie połączenia statyczne deklaruje się w zawartości strony w aplikacji, która używa strony wzorcowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje właściwość podstawowej można uniemożliwić motywów.</summary>
        <value>Zawsze zwraca <see langword="false" />, aby uniemożliwić motywów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> Właściwość zastępuje właściwość podstawowej, aby uniemożliwiać korzystanie z motywów <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formantu. Pozwala to zapobiec jego wchodzących w konflikcie z dowolnym motywami używany z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie głównej (jego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType> właściwość zawsze zwraca `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Obiekt wywołujący spróbuje przypisać wartości do tej właściwości.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastępuje metodę podstawową, aby zapobiec wywoływana metoda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> Metoda zastępuje metodę podstawową i zgłasza wyjątek, jeśli wszystkie wywołującego podejmuje próbę wywołania metody. Jest to spowodowane dziedziczonego <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> metoda jest przeznaczona dla formantów z interfejsem użytkownika (UI), ale <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formant ma bez interfejsu użytkownika i dlatego ma nie trzeba ustawić fokus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Obiekt wywołujący próbuje wywołać tę metodę.</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzeń i inicjuje formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> Metoda wywołuje metodę podstawową, a następnie wykonuje zadania można zainicjować <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formantu. Ważnym zadaniem tej metody jest przypisanie kolekcji połączenia odwołuje się <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Kontrolki na stronie głównej skojarzone <see langword="null" />.</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje właściwość podstawowej aby zapobiec przypisywane przez wartość.</summary>
        <value>Zawsze zwraca ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> Zastąpienia właściwości podstawowej właściwość aby zapobiec przypisywane do niego, wartość, która ma wpływ zapobieganie skórki z aktualnie używaną <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formantu. Można to zrobić, ponieważ kontrolka nie są nigdy ujawniane interfejsu użytkownika (UI) na stronie. Takie samo zachowanie jest implementowany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli do jego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Obiekt wywołujący spróbuje przypisać wartości do tej właściwości.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję połączenia statyczne zadeklarowana wewnątrz <see langword="&lt;asp:proxywebpartmanager&gt;" /> elementu na stronie zawartości.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> zawierający wszystkie statyczne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> obiektów zadeklarowana wewnątrz <see langword="&lt;asp:proxywebpartmanager&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> Odwołuje się do właściwości kolekcji <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> obiektów zadeklarowany w `<asp:proxywebpartmanager>` elementu. Połączenia zawartych w tej kolekcji są dodawane do połączenia statyczne z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantów (przywoływany przez jego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> kolekcji) i traktowany tak samo jak inne połączenia skojarzone z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli.  
  
 Element deklaratywne, który odpowiada <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> jest właściwość `<staticconnections>` elementu. W aplikacji, która używa strony wzorcowe `<staticconnections>` element zostanie dodany jako element podrzędny `<asp:proxywebpartmanager>` elementu na stronie zawartości i `<asp:webpartconnection>` element z kolei zostanie dodany jako element podrzędny `<staticconnections>` elementu. Wiele `<asp:webpartconnection>` elementy mogą zostać dodane do jednego `<staticconnections>` elementu i wiele stron zawartości mogą zadeklarować połączenia statyczne jako część aplikacji stron wzorcowych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> klasy. Ten przykładowy kod przedstawia tylko odpowiednich części kodu ze strony zawartość, która deklaruje <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> połączenia statyczne i kontroli. Dla innych stron wymaganych do uruchomienia przykładu kodu i opis sposobu konfigurowania tych funkcji, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Przegląd klasy.  
  
 Następujący kod jest strony zawartości, który deklaruje `<staticconnections>` element jako element podrzędny `<asp:proxywebpartmanager>` elementu. Należy również zauważyć, że `Button1_Click` metoda sprawdza liczbę <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> kontroli i zapisuje go do strony.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 Po załadowaniu strony w przeglądarce, kliknij przycisk **informacji WebPartManager** przycisk i sprawdź informacje o <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie głównej i <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> kontrolki na stronie zawartości. Na przykład Uwaga mogą mieć tej samej liczby ich odpowiednich właściwości, które śledzą połączenia statyczne ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> właściwości).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje właściwość podstawowej aby zapobiec przypisywane przez wartość.</summary>
        <value>Zawsze zwraca <see langword="false" />, aby zapobiec formantu są widoczne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> Właściwość zastępuje właściwość podstawowej, aby zapobiec <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> formantu z kiedykolwiek są widoczne. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Sterować tak samo, jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager> sterować, nie ma interfejsu użytkownika (UI) i nigdy nie jest wyświetlana użytkownikowi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Obiekt wywołujący spróbuje przypisać wartości do tej właściwości.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>